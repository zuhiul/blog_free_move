{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/draw_pic/Educational_Codeforces_Round_63.tex","path":"draw_pic/Educational_Codeforces_Round_63.tex","modified":1,"renderable":0},{"_id":"source/img/404.jpg","path":"img/404.jpg","modified":1,"renderable":0},{"_id":"source/img/background012.jpg","path":"img/background012.jpg","modified":1,"renderable":0},{"_id":"source/img/background013.jpg","path":"img/background013.jpg","modified":1,"renderable":0},{"_id":"source/img/cf_1153_b_2.png","path":"img/cf_1153_b_2.png","modified":1,"renderable":0},{"_id":"source/img/cf_1153_d_1.png","path":"img/cf_1153_d_1.png","modified":1,"renderable":0},{"_id":"source/img/cf_1153_d_2.png","path":"img/cf_1153_d_2.png","modified":1,"renderable":0},{"_id":"source/img/cf_1153_d_3.png","path":"img/cf_1153_d_3.png","modified":1,"renderable":0},{"_id":"source/img/cf_1153_d_4.png","path":"img/cf_1153_d_4.png","modified":1,"renderable":0},{"_id":"source/img/cf_1153_e_1.png","path":"img/cf_1153_e_1.png","modified":1,"renderable":0},{"_id":"source/img/cf_1153_e_2.png","path":"img/cf_1153_e_2.png","modified":1,"renderable":0},{"_id":"source/img/cf_1153_e_4.png","path":"img/cf_1153_e_4.png","modified":1,"renderable":0},{"_id":"source/img/cf_1153_e_3.png","path":"img/cf_1153_e_3.png","modified":1,"renderable":0},{"_id":"source/img/cf_1153_e_5.png","path":"img/cf_1153_e_5.png","modified":1,"renderable":0},{"_id":"source/img/cf_1153_e_6.png","path":"img/cf_1153_e_6.png","modified":1,"renderable":0},{"_id":"source/img/cf_1153_e_7.png","path":"img/cf_1153_e_7.png","modified":1,"renderable":0},{"_id":"source/img/cf_1153_e_8.png","path":"img/cf_1153_e_8.png","modified":1,"renderable":0},{"_id":"source/img/cf_1153_e_9.png","path":"img/cf_1153_e_9.png","modified":1,"renderable":0},{"_id":"source/img/cf_1155_f_1.png","path":"img/cf_1155_f_1.png","modified":1,"renderable":0},{"_id":"source/img/cf_1155_f_2.png","path":"img/cf_1155_f_2.png","modified":1,"renderable":0},{"_id":"source/img/cf_1155_f_3.png","path":"img/cf_1155_f_3.png","modified":1,"renderable":0},{"_id":"source/img/haskell_1_1.png","path":"img/haskell_1_1.png","modified":1,"renderable":0},{"_id":"source/img/haskell_1_2.png","path":"img/haskell_1_2.png","modified":1,"renderable":0},{"_id":"source/img/haskell_1_3.png","path":"img/haskell_1_3.png","modified":1,"renderable":0},{"_id":"source/img/haskell_1_4.png","path":"img/haskell_1_4.png","modified":1,"renderable":0},{"_id":"source/img/main_image.jpg","path":"img/main_image.jpg","modified":1,"renderable":0},{"_id":"source/img/qq.jpg","path":"img/qq.jpg","modified":1,"renderable":0},{"_id":"source/img/wx.jpg","path":"img/wx.jpg","modified":1,"renderable":0},{"_id":"source/img/background010.jpg","path":"img/background010.jpg","modified":1,"renderable":0},{"_id":"source/img/background011.jpg","path":"img/background011.jpg","modified":1,"renderable":0},{"_id":"source/img/cf_1153_b_1.png","path":"img/cf_1153_b_1.png","modified":1,"renderable":0},{"_id":"source/img/reward_wx.png","path":"img/reward_wx.png","modified":1,"renderable":0},{"_id":"source/img/something.jpg","path":"img/something.jpg","modified":1,"renderable":0},{"_id":"source/img/edu_cf_63_f_1.png","path":"img/edu_cf_63_f_1.png","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"source/img/reward_zfb.jpg","path":"img/reward_zfb.jpg","modified":1,"renderable":0},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"source/img/background004.jpg","path":"img/background004.jpg","modified":1,"renderable":0},{"_id":"source/img/background014.jpg","path":"img/background014.jpg","modified":1,"renderable":0},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"source/img/background005.jpg","path":"img/background005.jpg","modified":1,"renderable":0},{"_id":"source/img/background009.jpg","path":"img/background009.jpg","modified":1,"renderable":0},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"source/img/background001.jpg","path":"img/background001.jpg","modified":1,"renderable":0},{"_id":"source/img/background006.jpg","path":"img/background006.jpg","modified":1,"renderable":0},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"source/img/background007.jpg","path":"img/background007.jpg","modified":1,"renderable":0},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"source/img/background003.jpg","path":"img/background003.jpg","modified":1,"renderable":0},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"source/img/background002.jpg","path":"img/background002.jpg","modified":1,"renderable":0},{"_id":"source/img/chepter1.jpg","path":"img/chepter1.jpg","modified":1,"renderable":0},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"source/img/background008.jpg","path":"img/background008.jpg","modified":1,"renderable":0}],"Cache":[{"_id":"source/.DS_Store","hash":"290827df12dafbaa0a129f634e59ab0ae7b86b44","modified":1557375901497},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1546867754000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1546867754000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1546867754000},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1546867754000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1546867754000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1546867754000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1546867754000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1546867754000},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1546867754000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1546867754000},{"_id":"themes/next/README.cn.md","hash":"2c766b3369ed477bce134a5450dab45bef161504","modified":1546867754000},{"_id":"themes/next/README.md","hash":"8ce60ce578963eb4e1eb5e33e1efc2fc4779af9c","modified":1546867754000},{"_id":"themes/next/_config.yml","hash":"c75e92a98e2db46875159976e8b74a3efa965c94","modified":1570269601819},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1546867754000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1546867754000},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1546867754000},{"_id":"source/404/index.md","hash":"4339c3c2e335dfd7c4eb1f100bfe160c03a2e920","modified":1573448962229},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1564385904077},{"_id":"source/_posts/factorio.md","hash":"ce15776362ba302ac6f58b566155a000126af734","modified":1558607368234},{"_id":"source/about/index-1.md","hash":"a29b6c9181c101d2b4b4a54b4aa982b9b05a134e","modified":1557036751762},{"_id":"source/about/index.md","hash":"0a3fb3d55ec26d0671a5f8a747bc0db414bbef2d","modified":1573902727963},{"_id":"source/categories/index.md","hash":"16ef33899332bebd1966c7e95f0aa0b163f9bda8","modified":1546866738000},{"_id":"source/draw_pic/Educational_Codeforces_Round_63.tex","hash":"93097161bb499c6f8507e26c02fdbe69bbfa6572","modified":1556520496380},{"_id":"source/tags/index.md","hash":"5aa122ec88c265bd61d43f6c013860a9adbf7479","modified":1546872378000},{"_id":"source/img/404.jpg","hash":"f03a003b0b2d77561f9d0785ff46ac9537bce349","modified":1564911534732},{"_id":"source/img/background012.jpg","hash":"355908f2dc8b7537539a1ee3e278fd965ca07a66","modified":1558882061270},{"_id":"source/img/background013.jpg","hash":"73b8af2c2068d386238d818a757bf5a0a1d079bd","modified":1558882094188},{"_id":"source/img/cf_1153_b_2.png","hash":"914199df892c5a958a1e5b6d3e09451202b69911","modified":1555226568014},{"_id":"source/img/cf_1153_d_1.png","hash":"6884262d2e588ada4ee6067fca32d733cac3b837","modified":1555232023851},{"_id":"source/img/cf_1153_d_2.png","hash":"08c4c30045b19c4b886a155fa3c14cfc8bbca7bc","modified":1555232039530},{"_id":"source/img/cf_1153_d_3.png","hash":"36bb15bc6549d0949e55893e5fdf2dcfbedbc1f9","modified":1555232051199},{"_id":"source/img/cf_1153_d_4.png","hash":"64456cda80d712bd447630756ef0795d84c865e7","modified":1555232067225},{"_id":"source/img/cf_1153_e_1.png","hash":"eca168316ca3c80f8e4678177a76675c94a7ac04","modified":1555234373175},{"_id":"source/img/cf_1153_e_2.png","hash":"3274216a837735dba638cd4e0bef0ac1084e7b08","modified":1555234387861},{"_id":"source/img/cf_1153_e_4.png","hash":"3bc095a59816dc672838a55ce8eb82d8d230b1a3","modified":1555234411767},{"_id":"source/img/cf_1153_e_3.png","hash":"63436713540defa199b554d152e75ca9cbdeea16","modified":1555234402381},{"_id":"source/img/cf_1153_e_5.png","hash":"ca4c9cffc9a63a447299e2776548770416e23f44","modified":1555234426380},{"_id":"source/img/cf_1153_e_6.png","hash":"ad3739e53556c4f7d8a4d4e1187d21a44c26af59","modified":1555234437972},{"_id":"source/img/cf_1153_e_7.png","hash":"b3c318c826b19db5e656243ea8691ee39b978c72","modified":1555234450193},{"_id":"source/img/cf_1153_e_8.png","hash":"550fc290cbda0e9a983b214bb6e03956914edff0","modified":1555234460810},{"_id":"source/img/cf_1153_e_9.png","hash":"c644626c1b0ccffcfca000769c917ddbaa36ee60","modified":1555234470540},{"_id":"source/img/cf_1155_f_1.png","hash":"870a3539cf335d0b7cf86a0c5d0c1c76d3014d55","modified":1556456065349},{"_id":"source/img/cf_1155_f_2.png","hash":"a90a0adf3343609a3fe94070de33f1a17b7b87de","modified":1556456103607},{"_id":"source/img/cf_1155_f_3.png","hash":"be344d71ddb955e282c8b55f2270a5686faec77c","modified":1556456119237},{"_id":"source/img/haskell_1_1.png","hash":"34ac26c71dab6ed7e774a25a535b9e02a1a1f60a","modified":1558322790552},{"_id":"source/img/haskell_1_2.png","hash":"4e31a5b482a7fe6b75fdbc5b27efa06e7eb11d2e","modified":1558323292343},{"_id":"source/img/haskell_1_3.png","hash":"a4054483ae239e9bede9e79dcff88c4cf84f75b4","modified":1558323319958},{"_id":"source/img/haskell_1_4.png","hash":"111b15283973fc131e431d0d02942cb8463c666a","modified":1558323330709},{"_id":"source/img/main_image.jpg","hash":"5917ff1ec7f11d54d2d53f8392267ef9321f7491","modified":1558688979416},{"_id":"source/img/qq.jpg","hash":"d612066fea8f74b0b844bb85b71859529ed15cc0","modified":1558607237234},{"_id":"source/img/wx.jpg","hash":"eff247fc4d9bb3372bf1cada18a253ada663f860","modified":1558608278123},{"_id":"themes/next/.git/COMMIT_EDITMSG","hash":"26926045586734a1396af795529e3cb703c9a0ae","modified":1570269616216},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1546867754000},{"_id":"themes/next/.git/config","hash":"91b6a53b2a7f929b698734717a38d4ac169f0c1f","modified":1546867754000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1546867727000},{"_id":"themes/next/.git/index","hash":"bea3144ba4f4812d924d8b5ae4eb57bf0eea34b4","modified":1570269616213},{"_id":"themes/next/.git/packed-refs","hash":"69237944e31c16fe545d1f47b0b1e5b1d99660da","modified":1546867754000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1546867754000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"50d48c47162817a3810a9d9ad51104e83947419a","modified":1546867754000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1546867754000},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1546867754000},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1546867754000},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1546867754000},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1546867754000},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1546867754000},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1546867754000},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1546867754000},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1546867754000},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1546867754000},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1546867754000},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1546867754000},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1546867754000},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1546867754000},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1546867754000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1546867754000},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1546867754000},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1546867754000},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1546867754000},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1546867754000},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1546867754000},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1546867754000},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1546867754000},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1555590605896},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1546867754000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1546867754000},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1546867754000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1546867754000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1546867754000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1546867754000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1546867754000},{"_id":"source/_posts/story.md","hash":"f6f75ddda41bf593b37c4122c218b0f36b1207f6","modified":1572330897140},{"_id":"source/img/background010.jpg","hash":"9ff191837f1c51389e4d1855d41292f53f96318c","modified":1558881901137},{"_id":"source/img/background011.jpg","hash":"b82ce22dd4c2e3d99e474ad43a1464cb81668a6a","modified":1558881933231},{"_id":"source/img/cf_1153_b_1.png","hash":"a14f5f5c6a9ffdb2563131449fdd46cfb30b2635","modified":1555226550825},{"_id":"source/img/reward_wx.png","hash":"152402b3668b0e1dbce95f477bdde071fa8e3acc","modified":1555592509581},{"_id":"source/img/something.jpg","hash":"001d62d79ee88ea5dbafc3493c2b0149585f0e92","modified":1570368438190},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546867754000},{"_id":"source/_posts/PE/PE143.md","hash":"80ab91635b6a1b4eba299dd5ec2b4fe1d973fa48","modified":1561552105369},{"_id":"source/_posts/PE/PE122.md","hash":"d46516f8e86ffbb2882f1c9a4546406d6cfeb630","modified":1555230447678},{"_id":"source/_posts/PE/PE222.md","hash":"75ce250db15442572a9791b2c75a69284ec9e07a","modified":1555230552064},{"_id":"source/_posts/PE/PE276.md","hash":"ea675fd3d5ecb894e877e6bba2cdc315ea7e9966","modified":1555230560624},{"_id":"source/_posts/PE/PE288.md","hash":"f80ad63237f1bedfde3b58548398106adba531d2","modified":1555230569896},{"_id":"source/_posts/PE/PE294.md","hash":"a844e9d20b27d894bc37bf33e84a8f497fafee33","modified":1555230455803},{"_id":"source/_posts/PE/PE303.md","hash":"75f18c232ab4e9903b6fe8a984ebb7fd640b402e","modified":1555230494151},{"_id":"source/_posts/PE/PE368.md","hash":"82ad257285691d3ecfc3caab183c555b46470f46","modified":1555230577975},{"_id":"source/_posts/PE/PE463.md","hash":"0cad620d77e571dde71bc3414bc282eef43db7f8","modified":1555230587077},{"_id":"source/_posts/PE/PE492.md","hash":"6d0898d42b247fcf4377b3bd61d081d89308c8e2","modified":1556671405248},{"_id":"source/_posts/PE/PE643.md","hash":"1057d7c733f141b86ae3c2f167861cd69f6d53f3","modified":1559568205798},{"_id":"source/_posts/CF/CF_1187_E.md","hash":"dd990a948afe07ad36961c9262d39ead09b19708","modified":1568962654909},{"_id":"source/_posts/CF/CF_1215_E.md","hash":"46f4e2784e18cfb2737e55ccc517630b5bc8e05d","modified":1568627589691},{"_id":"source/_posts/CF/CF_226_B.md","hash":"cb8bbd8be9576f8200e6c57ff09fe0445f8e73cf","modified":1570342424304},{"_id":"source/_posts/CF/CF_761_E.md","hash":"3be316af57eaa6b4ea977c8f172f0213b716b6fc","modified":1568626395732},{"_id":"source/_posts/CF/CF_847_I.md","hash":"4b8ff8628a908e4a6ac647c1c9635a8fbf76bd3a","modified":1569581336814},{"_id":"source/_posts/CF/Codeforces_Round_551.md","hash":"747efc18b12ded5f59f34e30483642ce80becf62","modified":1563789537206},{"_id":"source/_posts/CF/Codeforces_Round_552.md","hash":"1009a4ff4d6edfa0f95b0279bd59418ecc25d35f","modified":1563789536440},{"_id":"source/_posts/CF/Codeforces_Round_553.md","hash":"dda8abf989041af6f74f309f3ea530e51704f5a7","modified":1555671076175},{"_id":"source/_posts/CF/Educational Codeforces Round 63.md","hash":"65fcce70a482cb74f5a60380c8a275bbe03bc1f5","modified":1556519823889},{"_id":"source/_posts/CF/nouse.cpp","hash":"aac1012acdb7abca650ffcdd66b81cd3e78ed88a","modified":1569465092062},{"_id":"source/_posts/skill/mac_keyboard_monitor.md","hash":"377090655e4acf4fe7ed309168d66b377bcd6b21","modified":1564907971249},{"_id":"source/_posts/skill/program_beat.md","hash":"ce04b452b74c460edbb0defafc657444886aac56","modified":1559568157677},{"_id":"source/_posts/knowledge/BigInt.md","hash":"6f4db574a1519c019071057ba4825bbca3d9e1f8","modified":1573902624656},{"_id":"source/_posts/knowledge/IC_chepter1.md","hash":"5e1ace5e051d29057eaeb55c6d1a7809ca28cb7b","modified":1563766788541},{"_id":"source/_posts/knowledge/IC_chepter2.md","hash":"09dc472ac7ac2776bc3ca3e7e89dd5b66d139790","modified":1555230530217},{"_id":"source/_posts/knowledge/Mathematical_Formula.md","hash":"dd24f89c0dac59f5e852c1465dc799db61c92695","modified":1557400927904},{"_id":"source/_posts/knowledge/Set Theory.md","hash":"41129e244e2f49865377ea39edd7df1b4a2b8c4f","modified":1564392140544},{"_id":"source/_posts/knowledge/The_Curse_of_Knowledge.md","hash":"6496a0e4e79ae5dfe2b10541369f067dbdcf6bec","modified":1563789165543},{"_id":"source/_posts/knowledge/matlab.md","hash":"feda5391981248952d8f42c7516c7f2122410e4d","modified":1557024047791},{"_id":"source/_posts/other_oj/BZOJ3829.md","hash":"3a12b779b7004bb6a5faeeae4a68321c8048e0fe","modified":1555230434867},{"_id":"source/_posts/other_oj/UPCOJ9999.md","hash":"0f94eccfe157d66d2cef4d1ac6d82b550449ccae","modified":1562920183667},{"_id":"source/_posts/other_oj/UPCOJ9805.md","hash":"d25c6bd78191779bfe091d5cd807cfc7b8b3a44d","modified":1563766781529},{"_id":"source/_posts/gluten/gluten_tt.md","hash":"de92d8ca3ed19240a6990a5f4fe73e19daed293b","modified":1555230730608},{"_id":"source/img/edu_cf_63_f_1.png","hash":"159ddc664f8c4a821c31ec9b7a1fedbb730989e3","modified":1556518728205},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1546867727000},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1546867727000},{"_id":"themes/next/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1546867727000},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1546867727000},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1546867727000},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1546867727000},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1546867727000},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1546867727000},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1546867727000},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1546867727000},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1546867727000},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1546867727000},{"_id":"themes/next/.git/logs/HEAD","hash":"cc569810c539d538f74b2334af389ca1a443b9dc","modified":1570269616218},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1546867754000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1546867754000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1546867754000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1546867754000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1546867754000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1546867754000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1546867754000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"cf0ed0c59130fe3cef1ccfdc6148584e44145495","modified":1555592174434},{"_id":"themes/next/layout/_partials/comments.swig","hash":"5a9b69528c9e1beab3181a0a7e155092ba9c76d8","modified":1557022743977},{"_id":"themes/next/layout/_macro/post.swig","hash":"54d87ef68cda8059d09a2e160ef98eea84ea3c15","modified":1556704879639},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1546867754000},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1546867754000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1546867754000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1546867754000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1546867754000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1546867754000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1546867754000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1546867754000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1546867754000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1546867754000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1546867754000},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1546867754000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1546867754000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1546867754000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1546867754000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1546867754000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1546867754000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1546867754000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1546867754000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1546867754000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1546867754000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1546867754000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1546867754000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1546867754000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1546867754000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1546867754000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"b27b4230eb66607670be3e5b19ec75c0a91900d4","modified":1557466016620},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"cbc470e610aca193d8563d94b8dcbfaba4c2abbf","modified":1557466071287},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1546867754000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1546867754000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1546867754000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1546867754000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1546867754000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1546867754000},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1546867754000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1546867754000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1546867754000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1546867754000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1546867754000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1546867754000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1546867754000},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1546867754000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1546867754000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546867754000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546867754000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546867754000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546867754000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546867754000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546867754000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546867754000},{"_id":"source/img/reward_zfb.jpg","hash":"3f79096c139cf12766780bc1e98120c12ca32595","modified":1555591865415},{"_id":"themes/next/.git/objects/01/2c0b8eb4717435db308b7f453c36a102e2d80e","hash":"fd027dda61b2357ef02d4a433c1f56c01a8039cc","modified":1564387122816},{"_id":"themes/next/.git/objects/04/700f41a24e70489e37c13bd1d64e39fbeba594","hash":"1fa19d917953b6dd82a9a18dd3d179b4a47bdd70","modified":1564387122814},{"_id":"themes/next/.git/objects/10/e2d6947ae2301374974f483967624d5abf0b02","hash":"bc39638d3e88ff425f717050591aaf22347276db","modified":1564387128431},{"_id":"themes/next/.git/objects/13/ea66eb89a28b24c6b1976e051530c6f3b81003","hash":"31ce687e90dcb65f1d2dd45ed6b3c48eb47a0b10","modified":1564387122818},{"_id":"themes/next/.git/objects/15/2f3fa9e49be6ab0a101b8032f2f4357f3a56ef","hash":"fd578309a7a84a499d0818b064ac976432bd0cbc","modified":1564387122811},{"_id":"themes/next/.git/objects/15/cbd6a606b0d23244e2ffe31fcc4d2fe8ec3ed2","hash":"54e8a4e58b49e78d428a83070da473b7ed096f9a","modified":1568896373762},{"_id":"themes/next/.git/objects/19/2b111d31a4388885759a5f32dab8666320b155","hash":"aac8bb4038bfb75a5e169731ce35e5abe5f1fa93","modified":1564387122821},{"_id":"themes/next/.git/objects/23/9ba66a11ae86ac9c091685df035449417ecd2a","hash":"1fb2853ed4f17e28a3c6221934c6dd4917d0fb53","modified":1564387128424},{"_id":"themes/next/.git/objects/37/aa0d01ebea072b7db2adc1a9de82e82f4309fe","hash":"d0746d0d92995f0e0244ad0db8e9b26a74e030eb","modified":1564387122819},{"_id":"themes/next/.git/objects/3a/964d3e51677f8504ab06867b09551c2ce85d89","hash":"0743076239d5d17ca622ce05c00d3b5268932a82","modified":1568896365820},{"_id":"themes/next/.git/objects/42/7191c8620f1b104468b1f6cec1733fea441c35","hash":"a1451b081f1ae65d90f72a514fe186297da2a3d9","modified":1564387128429},{"_id":"themes/next/.git/objects/47/b38759e5ff8d4d218583d3899f52025f8c666c","hash":"3c0ee29944abff4dfd2b2779615eae7b09c69c25","modified":1564387128437},{"_id":"themes/next/.git/objects/49/8cc445cab1131da9689de36974a6b3aa494b5c","hash":"85956657287d8fee76b36d0aa71177fb91fcd0d4","modified":1568896373754},{"_id":"themes/next/.git/objects/49/ec9d4ff38bf7a8017033801089784f3b183168","hash":"9194bc398a6fa375fc760c6619f41d1371486bfa","modified":1564387122822},{"_id":"themes/next/.git/objects/5a/ae84e0228debd3df49511c895a867c30364679","hash":"b6415331f2a2616853644ed3d897ab4bafaf1947","modified":1564387122810},{"_id":"themes/next/.git/objects/5d/eb488007b66dff3beb311c505c20170cc25a51","hash":"4b67c4267f19dd6c1bfde0abd57cac813673c042","modified":1564387122820},{"_id":"themes/next/.git/objects/5f/860ab28ab75cecb0656056380cda5ac6628a44","hash":"19be46ccc228e5d0034e245fd9e6c2924de0dcef","modified":1564387122815},{"_id":"themes/next/.git/objects/61/77b6b325f1c2d7331201a81ccbd189479e4f03","hash":"0c5ef1b1a7985fc25f725cd3d2ac9cb7ecec45b3","modified":1564387128426},{"_id":"themes/next/.git/objects/62/197f235b7536c79f62430bb38a5e6fd46c39da","hash":"2bc61941f56e95fc3316f25772d9bfe2cc9b4003","modified":1564387122813},{"_id":"themes/next/.git/objects/62/a2f8707a8d3850c27a4bf3613b2a614243427c","hash":"e58927d29e1732f115da2f5b2182553f0bad106d","modified":1564387128440},{"_id":"themes/next/.git/objects/64/fb4b5864bd7d165fde38bac6458dca720a0bbf","hash":"38cbdf1a98114133468385ef435090ad035fdf8e","modified":1568896373757},{"_id":"themes/next/.git/objects/69/ff76ef11f6260175a1b629f001b72f2168d9fd","hash":"40cbe5d928609fe9e05a846fb3b6ee9421648209","modified":1564387128436},{"_id":"themes/next/.git/objects/73/ed90883b0749c228a3f8fd92ddd980dc9d0795","hash":"66a2e9d949b642d89fbec8038b5fe5dd501deaf7","modified":1564387128435},{"_id":"themes/next/.git/objects/7a/bafd92da19ef28731727eff933c26c89f015b2","hash":"221c220eabe968b58775d2854507eccc2cad06c8","modified":1564387128428},{"_id":"themes/next/.git/objects/7f/6644882e15f0491268c1eb58443bcd30b4ebef","hash":"721789a34f169a2285a316ef63f7681ce64b8db2","modified":1564387128427},{"_id":"themes/next/.git/objects/87/f1303e5354289fea6e202a292010e23d230798","hash":"4ddfb6279c3c703dbee66ed0f32b8bb936f290d6","modified":1564387128434},{"_id":"themes/next/.git/objects/8a/3ffa21dd71a7b589f59751bea45e80ac9be15c","hash":"908a9482320f6373cb481a542af5f37ec0c883ca","modified":1564387122820},{"_id":"themes/next/.git/objects/8a/5e14634eea43a1afd3ad6248ae65255be605b9","hash":"492391869241b7184926a9e4c15c5c29e96acfed","modified":1564387122814},{"_id":"themes/next/.git/objects/8b/c1a1636921835301c385eb1ff991bc935f1e97","hash":"abf12e2334ae431e4d915acaaa358432199afd00","modified":1564387128430},{"_id":"themes/next/.git/objects/8d/1097d25f2e9a99fbe124c3bf7662b3fff5959c","hash":"df25e02b6148343515eaa471405e2976fa7cc259","modified":1564387128438},{"_id":"themes/next/.git/objects/8d/f7ca54e2e2fd39dac220210ee07b1c70fd7d67","hash":"b94ebca1050f49b68eaab436ae3c13c892838273","modified":1564387122812},{"_id":"themes/next/.git/objects/8e/1c4ef9e29ed2210a409201c9120235aae02cca","hash":"b40cd7ae8d35747e1e4e761769db01a09bb063ec","modified":1564387128431},{"_id":"themes/next/.git/objects/91/7161ac503814b4e7c19e00d3957b78c3cccb9a","hash":"a29003503f7625c2f82227ca9b1903ae0c42da69","modified":1564387128422},{"_id":"themes/next/.git/objects/88/1fb01f1dfe287e738b366e5c6e22bc4c47f075","hash":"a66f07b3157afd0b0421588bc13e179f4065b2aa","modified":1570269616211},{"_id":"themes/next/.git/objects/92/8c23d30a270826d574e864638f6eb5f1a504b3","hash":"5a33bd8ce475683474f607ce334d61e6c84c3fc8","modified":1564387128425},{"_id":"themes/next/.git/objects/93/7f7e3c1ec61c402feedcd99f2679afad68cad9","hash":"5291a5223b3da544eeb659f3bb4d5778fd1ad2de","modified":1564387122812},{"_id":"themes/next/.git/objects/9b/8a4079d00db406d4fd37e464636cae1ee49be1","hash":"23fd9ce4b111317228b202fd2c6e6cb77593df3c","modified":1564387122809},{"_id":"themes/next/.git/objects/ae/405ac1be2b7657397a2621a31b03dcd85b5107","hash":"1d2a93afb91e1ee3d72121dc89f6832a8a8fd32e","modified":1564387122811},{"_id":"themes/next/.git/objects/b8/7a430df7f4a75eb30f9d6e8bc6e8bb6d1d5fc7","hash":"e022fc066456733589cb3577ab3dfc90b20468ea","modified":1568896373755},{"_id":"themes/next/.git/objects/c7/092c0738419b2ad04d2a67d7af5da2317dbbb0","hash":"df6877a41a4268a615a8749110f486df6658be52","modified":1564387128432},{"_id":"themes/next/.git/objects/c8/d3092a06141c2d2b06d1ff731a0435d13ef84b","hash":"50ead2450ea8b61c6ac49be3f6770e1d7e2c400d","modified":1570269611969},{"_id":"themes/next/.git/objects/cb/2f649d51ecbc648bca466422bc48db43af078f","hash":"e05ed37169f0c759aeb7ce29bf5cd7a1b5ad7898","modified":1564387128435},{"_id":"themes/next/.git/objects/d2/525b31ca4a95c7db4735beba89063cb7cbce5b","hash":"61bfeea23d0a55a2a7ffb01e6892e434bcce499e","modified":1564387122817},{"_id":"themes/next/.git/objects/e8/09f9b01a690531e3e5af9164690d8e04396f93","hash":"fedcc8a9c66948af5f2c6ec9e613155654eea4ce","modified":1564387122815},{"_id":"themes/next/.git/objects/f1/c23774cd534492a5a78b6d248cbf3bc51f7396","hash":"34c0c387f3179877f1994c7e921318bf5dd4aba8","modified":1568896373756},{"_id":"themes/next/.git/objects/f4/deb8c23cc189098fd294ae633c6855a64dc532","hash":"14dc39d025501588065e25e698b5b582651ed5f3","modified":1564387128438},{"_id":"themes/next/.git/objects/f5/353486a52afa1af2c42b6c634bbb9e5844b386","hash":"90278892e038f9292c5c89328997ec20ee1aa4ce","modified":1564387128428},{"_id":"themes/next/.git/objects/f8/3aa1f688e5a055d88e621c898a38690c563fb2","hash":"3d26c9c8021f73625ea149e0454fcc934f938327","modified":1564387128425},{"_id":"themes/next/.git/objects/fb/1b0903c4fa511bee1bf146591e7873b152eb47","hash":"eb3dc7483ae6adfc2838071563477f716f8b9fb2","modified":1570269616216},{"_id":"themes/next/.git/refs/heads/master","hash":"cda93dbc2584b5c90af80f1b892a8bb1fd101010","modified":1570269616218},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1546867754000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1546867754000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1546867754000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1546867754000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1546867754000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1546867754000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1546867754000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1546867754000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1546867754000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1546867754000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1546867754000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1546867754000},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1546867754000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1546867754000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1546867754000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1546867754000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1546867754000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1546867754000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1546867754000},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1546867754000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1546867754000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1546867754000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1546867754000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1546867754000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1546867754000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1546867754000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1546867754000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1546867754000},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"fb5434c74de552d2885e3a78aea99004a3595556","modified":1557021907103},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1546867754000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1546867754000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"08338cba394ebef11bd9473675237fbb8ba06f04","modified":1557022775167},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1546867754000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1546867754000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1546867754000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1546867754000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1546867754000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1546867754000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1546867754000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"c3874e1ccf4ee874be72629bfb1d22c661ec2af7","modified":1568896362841},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1546867754000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1546867754000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1546867754000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1546867754000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1546867754000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"b4393c6874d924d980be8d40589fbc98682685fa","modified":1547730287000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1546867754000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1546867754000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1546867754000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1546867754000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1546867754000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1546867754000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1546867754000},{"_id":"themes/next/source/js/src/motion.js","hash":"73e6c35e33bd975df82618797317a2e210af64b2","modified":1546871299000},{"_id":"themes/next/source/js/src/post-details.js","hash":"32e0dd365dc147a89dfa2c8fece3503922a4700f","modified":1546871373000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1546867754000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1546867754000},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1546867754000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1546867754000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1546867754000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1546867754000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1546867754000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1546867754000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1546867754000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1546867754000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1546867754000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1546867754000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1546867754000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1546867754000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1546867754000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1546867754000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1546867754000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1546867754000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1546867754000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1546867754000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1546867754000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1546867754000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1546867754000},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1546867754000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1546867754000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1546867754000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1546867754000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1546867754000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1546867754000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1546867754000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1546867754000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1546867754000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1546867754000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1546867754000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1546867754000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1546867754000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1546867754000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1546867754000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1546867754000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1546867754000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1546867754000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1546867754000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1546867754000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1546867754000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1546867754000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1546867754000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1546867754000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1546867754000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1546867754000},{"_id":"source/img/background004.jpg","hash":"68478e9790741dff3f67c5fcbea9d793589ec9aa","modified":1558881799371},{"_id":"source/img/background014.jpg","hash":"d08375c53ee8b79f5f15eee47f713b144f3fd6d2","modified":1558923050009},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1546867754000},{"_id":"source/_posts/diary/2019/06/20190626.md","hash":"05937153ece0c4f31a14ee34b1cc298d1816a76e","modified":1567661224879},{"_id":"source/_posts/diary/2019/07/20190714.md","hash":"9836c49c1b0da33b77c38984a2d5b4a024cde660","modified":1563070199073},{"_id":"source/_posts/diary/2019/07/20190702.md","hash":"778a8d7efdbcc9cb72821b0bc01586de90c8c408","modified":1562044600100},{"_id":"source/_posts/diary/2019/08/20190802.md","hash":"7d70947f811d3579fe0060156d9e1021e2c87ca5","modified":1564847149728},{"_id":"source/_posts/diary/2019/08/20190803.md","hash":"d0065f3510ae8e16d25a0519674f2ff0bbf447c4","modified":1564847054848},{"_id":"source/_posts/diary/2019/08/20190807.md","hash":"2240ff14a94870d905ddc0ab141c859c92c8e24c","modified":1565188897215},{"_id":"source/_posts/diary/2019/08/20190812.md","hash":"6a79c3b274872af6882a1e75c7f56d0209c5986f","modified":1565622158929},{"_id":"source/_posts/diary/2019/08/20190816.md","hash":"cb8a62531ef737628e79f6a38fa4b08ea73dfc6c","modified":1565924770309},{"_id":"source/_posts/diary/2019/08/20190825.md","hash":"4a97935da2535516f0f5dd88bb95072a19b3614c","modified":1566717076223},{"_id":"source/_posts/diary/2019/10/20191010.md","hash":"f587f71bd6753d8ee5e01329e8635daab4c4f4d3","modified":1570764340889},{"_id":"source/_posts/diary/2019/10/20191011.md","hash":"e83644cc187c913bd22abfb2774e3c4db4e6fb21","modified":1570764861703},{"_id":"source/_posts/diary/2019/10/20191017.md","hash":"a7763d06dc090cbe27466053a6fb90a6fee064df","modified":1571286382406},{"_id":"source/_posts/diary/2019/10/20191024.md","hash":"27c38c149a0202a634612c0f71aa889324990881","modified":1571924103599},{"_id":"source/_posts/diary/2019/10/20191031.md","hash":"8440eb14337c3b817be16f6af1b97eaf532cc139","modified":1572532454430},{"_id":"source/_posts/diary/2019/09/20190905.md","hash":"7c7bb08f31c45561a00cd4106820a5265df17f29","modified":1567662741633},{"_id":"source/_posts/diary/2019/09/20190909.md","hash":"d5c5337ce19eedd2c38c72ae92dba8d308fb59ee","modified":1568041956700},{"_id":"source/_posts/diary/2019/09/20190901.md","hash":"b431d2112b54fb2253bf5648ade8c2c925891310","modified":1567397678785},{"_id":"source/_posts/diary/2019/09/20190915.md","hash":"080db2610735aaf22232cf842788833c690d86e7","modified":1568554787101},{"_id":"source/_posts/diary/2019/09/20190919.md","hash":"119eb2198142d6239b3e4be2613066f3f90aca45","modified":1568864262016},{"_id":"source/_posts/diary/2019/09/20190923.md","hash":"f9e85d6a981a1356f36e3d57bae43c2aab70a233","modified":1569209400414},{"_id":"source/_posts/diary/2019/09/20190926.md","hash":"344c249bf916b28aac331eb0682ea597f27098b1","modified":1569474675164},{"_id":"source/_posts/diary/2019/11/20191128.md","hash":"a512483558fc767eaab3f608e34d115eb454aa1a","modified":1574946431707},{"_id":"source/_posts/diary/2019/09/20190925.md","hash":"9ce95084a1e8cb2e80bb74cf91accec33a95b0a0","modified":1569394234726},{"_id":"source/img/background005.jpg","hash":"4bdfe2bca1c650e899aa559a816ca8e20c9d6d52","modified":1558881809882},{"_id":"source/img/background009.jpg","hash":"3f866f0165a4d215eaf3d6d5e5909c4824682e3b","modified":1558881856578},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"cc569810c539d538f74b2334af389ca1a443b9dc","modified":1570269616218},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1546867754000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1546867754000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1546867754000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1546867754000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1546867754000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1546867754000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1546867754000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1546867754000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1546867754000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1546867754000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"a513cdbd293a3549597e7e75271bf8e348e37562","modified":1547730332000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1546867754000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1546867754000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1546867754000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1546867754000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1546867754000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1546867754000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1546867754000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1546867754000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1546867754000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1546867754000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1546867754000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1546867754000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1546867754000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"4e029fdd3b09796e6f33a21c8971486872354e31","modified":1547729219000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1546867754000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1546867754000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"f2e9278ece543e0a903b022d94187eb3d2c485d8","modified":1547730386000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1546867754000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1546867754000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1546867754000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1546867754000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1546867754000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1546867754000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1546867754000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1546867754000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1546867754000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1546867754000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1546867754000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1546867754000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1546867754000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1546867754000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1546867754000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1546867754000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1546867754000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1546867754000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1546867754000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1546867754000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1546867754000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1546867754000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1546867754000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1546867754000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1546867754000},{"_id":"source/img/background001.jpg","hash":"8443b84c909befefd3f62154db57c27d46ba037c","modified":1555657159740},{"_id":"source/img/background006.jpg","hash":"d8cdd065b84dda4966a7f9520e785f4bc4d0530b","modified":1558881820738},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"7837412bec943c2d7dd07608126f2a37f2c49b75","modified":1547729144000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"40b5e5391548a9c7211ab489c75ce5d7e70346c1","modified":1547723830000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"e6d4bdee6183fba28264d34b976dad9a92d8dfba","modified":1557022094124},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1546867754000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"7affad24c9d927a2c660fc6d0800772cab299793","modified":1557022924205},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1546867754000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1546867754000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1546867754000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1546867754000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1546867754000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1546867754000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1546867754000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1546867754000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1546867754000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1546867754000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1546867754000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1546867754000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1546867754000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1546867754000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1546867754000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1546867754000},{"_id":"source/img/background007.jpg","hash":"5f5e32353053f0b800f90351ce732e36597d7ad5","modified":1558881835368},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"211a0ad11e0e1dc70c92b11e3da3bfc663832259","modified":1546867754000},{"_id":"themes/next/.git/objects/pack/pack-e78a63f3a09865e7250207b0905ffdead8aa9427.idx","hash":"65b50d2dffe1c5cf0a1417c27529d6a6ba27c485","modified":1546867753000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1546867754000},{"_id":"source/img/background003.jpg","hash":"8d7e7f1f1ec1d9cae90489e7aecf3ec2ff5bb253","modified":1558881783936},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1546867754000},{"_id":"source/img/background002.jpg","hash":"7ad4a5bbdd1f04c3eaa56a3b1ae3d5d76e3b5af2","modified":1558881744367},{"_id":"source/img/chepter1.jpg","hash":"674b4f4bbf5ba9677056fd69767f76e21a350412","modified":1554022409169},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1546867754000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1546867754000},{"_id":"source/img/background008.jpg","hash":"b4a0cac7872ec50f68130c214dc9e407d3481fbc","modified":1558881845758},{"_id":"themes/next/.git/objects/pack/pack-e78a63f3a09865e7250207b0905ffdead8aa9427.pack","hash":"06e88ac0b8a52ad03a9c234eec5462741115eaa8","modified":1546867753000}],"Category":[],"Data":[],"Page":[{"title":"404","date":"2019-08-04T08:44:06.000Z","_content":"\n<html xml:lang=\"en\">\n<head>\n\t<meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n\t<title>一个忧伤的故事</title>\n</head>\n<body>\n\t<p><font size=\"7\"><center> 404 girl friend not found </center> </font> </p>\n\t<img src=\"https://raw.githubusercontent.com/zuhiul/zuhiul.github.io/master/img/404.jpg\" alt=\"404\" />\n\t<a href=\"https://zuhiul.github.io/about/\"><center>或许你可以给我介绍对象？</center></a>\n\t<center>&uarr;</center>\n\t<center>点一下呗，万一成了呢？</center>\n</body>\n</html>\n\n\n","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2019-08-04 16:44:06\npermalink: /404\n---\n\n<html xml:lang=\"en\">\n<head>\n\t<meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n\t<title>一个忧伤的故事</title>\n</head>\n<body>\n\t<p><font size=\"7\"><center> 404 girl friend not found </center> </font> </p>\n\t<img src=\"https://raw.githubusercontent.com/zuhiul/zuhiul.github.io/master/img/404.jpg\" alt=\"404\" />\n\t<a href=\"https://zuhiul.github.io/about/\"><center>或许你可以给我介绍对象？</center></a>\n\t<center>&uarr;</center>\n\t<center>点一下呗，万一成了呢？</center>\n</body>\n</html>\n\n\n","updated":"2019-11-11T05:09:22.229Z","path":"/404.html","comments":1,"layout":"page","_id":"ck3iqj1ak0000a613lxw7kan7","content":"<html xml:lang=\"en\"><br><head><meta name=\"generator\" content=\"Hexo 3.8.0\"><br>    <meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"><br>    <title>一个忧伤的故事</title><br></head><br><body><br>    <p><font size=\"7\"><center> 404 girl friend not found </center> </font> </p><br>    <img src=\"https://raw.githubusercontent.com/zuhiul/zuhiul.github.io/master/img/404.jpg\" alt=\"404\"><br>    <a href=\"https://zuhiul.github.io/about/\"><center>或许你可以给我介绍对象？</center></a><br>    <center>&uarr;</center><br>    <center>点一下呗，万一成了呢？</center><br></body><br></html>\n\n\n","site":{"data":{}},"excerpt":"","more":"<html xml:lang=\"en\"><br><head><meta name=\"generator\" content=\"Hexo 3.8.0\"><br>    <meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"><br>    <title>一个忧伤的故事</title><br></head><br><body><br>    <p><font size=\"7\"><center> 404 girl friend not found </center> </font> </p><br>    <img src=\"https://raw.githubusercontent.com/zuhiul/zuhiul.github.io/master/img/404.jpg\" alt=\"404\"><br>    <a href=\"https://zuhiul.github.io/about/\"><center>或许你可以给我介绍对象？</center></a><br>    <center>&uarr;</center><br>    <center>点一下呗，万一成了呢？</center><br></body><br></html>\n\n\n"},{"title":"about","date":"2019-05-05T06:10:34.000Z","_content":"","source":"about/index-1.md","raw":"---\ntitle: about\ndate: 2019-05-05 14:10:34\n---\n","updated":"2019-05-05T06:12:31.762Z","path":"about/index-1.html","comments":1,"layout":"page","_id":"ck3iqj1ey0004a613hgy344jh","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2019-01-07T13:12:07.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2019-01-07 21:12:07\ntype: \"tags\"\n---\n","updated":"2019-01-07T14:46:18.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ck3iqj1ey0005a613yjlryz79","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2019-01-07T13:12:18.000Z","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2019-01-07 21:12:18\n---\n","updated":"2019-01-07T13:12:18.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ck3iqj1f00006a6136gkxhcdg","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2019-01-07T13:12:24.000Z","_content":"~~这个人很懒，什么都没有留下~~\n这个人很懒，但是想留下一些东西。\n\n目前大四在读，字节跳动搬砖，保研无望，喜欢一个菇凉。\n\n热爱学习，更爱和她一起玩乐。\n\n喜欢瞎搞，古灵精怪，水平不够，yy来凑。\n\n学习不好，喜欢看书，爱好自由，喜欢阳光。\n\n就酱紫。\n\n偷偷挂个联系方式？\n\n![](../img/qq.jpg)\n\n![](../img/wx.jpg)\n\n喜欢我就加我吧，mua~~\n\n最后的最后，如果想来头条的，可以直接找我要内推鸭！\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2019-01-07 21:12:24\n---\n~~这个人很懒，什么都没有留下~~\n这个人很懒，但是想留下一些东西。\n\n目前大四在读，字节跳动搬砖，保研无望，喜欢一个菇凉。\n\n热爱学习，更爱和她一起玩乐。\n\n喜欢瞎搞，古灵精怪，水平不够，yy来凑。\n\n学习不好，喜欢看书，爱好自由，喜欢阳光。\n\n就酱紫。\n\n偷偷挂个联系方式？\n\n![](../img/qq.jpg)\n\n![](../img/wx.jpg)\n\n喜欢我就加我吧，mua~~\n\n最后的最后，如果想来头条的，可以直接找我要内推鸭！\n","updated":"2019-11-16T11:12:07.963Z","path":"about/index.html","comments":1,"layout":"page","_id":"ck3iqj1f10007a6139luorhxh","content":"<p><del>这个人很懒，什么都没有留下</del><br>这个人很懒，但是想留下一些东西。</p>\n<p>目前大四在读，字节跳动搬砖，保研无望，喜欢一个菇凉。</p>\n<p>热爱学习，更爱和她一起玩乐。</p>\n<p>喜欢瞎搞，古灵精怪，水平不够，yy来凑。</p>\n<p>学习不好，喜欢看书，爱好自由，喜欢阳光。</p>\n<p>就酱紫。</p>\n<p>偷偷挂个联系方式？</p>\n<p><img src=\"../img/qq.jpg\" alt=\"\"></p>\n<p><img src=\"../img/wx.jpg\" alt=\"\"></p>\n<p>喜欢我就加我吧，mua~~</p>\n<p>最后的最后，如果想来头条的，可以直接找我要内推鸭！</p>\n","site":{"data":{}},"excerpt":"","more":"<p><del>这个人很懒，什么都没有留下</del><br>这个人很懒，但是想留下一些东西。</p>\n<p>目前大四在读，字节跳动搬砖，保研无望，喜欢一个菇凉。</p>\n<p>热爱学习，更爱和她一起玩乐。</p>\n<p>喜欢瞎搞，古灵精怪，水平不够，yy来凑。</p>\n<p>学习不好，喜欢看书，爱好自由，喜欢阳光。</p>\n<p>就酱紫。</p>\n<p>偷偷挂个联系方式？</p>\n<p><img src=\"../img/qq.jpg\" alt=\"\"></p>\n<p><img src=\"../img/wx.jpg\" alt=\"\"></p>\n<p>喜欢我就加我吧，mua~~</p>\n<p>最后的最后，如果想来头条的，可以直接找我要内推鸭！</p>\n"}],"Post":[{"title":"factorio","date":"2019-03-30T16:00:00.000Z","author":"zuhiul","_content":"\n### level 1\n<!-- more -->\n\n![](../img/chepter1.jpg)\n","source":"_posts/factorio.md","raw":"---\ntitle:      factorio\ndate:       2019-03-31\nauthor:     \"zuhiul\"\ntags:\n  - factorio\n---\n\n### level 1\n<!-- more -->\n\n![](../img/chepter1.jpg)\n","slug":"factorio","published":1,"updated":"2019-05-23T10:29:28.234Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1am0001a6130bvvbspl","content":"<h3 id=\"level-1\"><a href=\"#level-1\" class=\"headerlink\" title=\"level 1\"></a>level 1</h3><a id=\"more\"></a>\n<p><img src=\"../img/chepter1.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"level-1\"><a href=\"#level-1\" class=\"headerlink\" title=\"level 1\"></a>level 1</h3>","more":"<p><img src=\"../img/chepter1.jpg\" alt=\"\"></p>"},{"title":"Project Euler 143 Investigating the Torricelli point of a triangle","date":"2018-12-27T16:00:00.000Z","author":"zuhiul","_content":"\n\n[开启传送门](https://projecteuler.net/problem=143)\n\n### 题目描述\n<!-- more -->\n\nLet ABC be a triangle with all interior angles being less than $120$ degrees. Let $X$ be any point inside the triangle and let $XA = p, XC = q$, and $XB = r$.\n\nFermat challenged Torricelli to find the position of X such that $p + q + r$ was minimised.\n\nTorricelli was able to prove that if equilateral triangles AOB, BNC and AMC are constructed on each side of triangle ABC, the circumscribed circles of AOB, BNC, and AMC will intersect at a single point, T, inside the triangle. Moreover he proved that T, called the Torricelli/Fermat point, minimises $p + q + r$. Even more remarkable, it can be shown that when the sum is minimised, $AN = BM = CO = p + q + r$ and that AN, BM and CO also intersect at T.\n\n![avatar](https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/PE143.gif)\n\nIf the sum is minimised and a, b, c, p, q and r are all positive integers we shall call triangle ABC a Torricelli triangle. For example, $a = 399, b = 455, c = 511$ is an example of a Torricelli triangle, with $p + q + r = 784$.\n\nFind the sum of all distinct values of $p + q + r ≤ 120000$ for Torricelli triangles.\n\n## 题意\n\n就是三个角都小于120度的三角形存在费马点,然后让你找到所有这样的三角形,使得图上对应的六条边都是整数,其中$T$就是费马点.然后你要找到所有$p+q+r$不同的所有三角形,然后把$p+q+r$求和.\n\n## 分析\n\n对于每一个圆来说,因为里面的三角形是对边三角形,然后因为$T$在园上,于是有$T$对应的角大小一定是$180-60 = 120$度,然后同理可得,三个角都是$120$度,然后我们运用余弦定理可以得到$p^2+q^2+pq=b^2$,因为我们只要$p+q+r$不同的解,所以我们不妨设$p>=q>=r$,因为三个角都是$120$度,所以余弦定理都成立,所以我们可以得到\n\n\\begin{eqnarray}\nq^2+r^2+qr &= a^2\\\\\\\np^2+q^2+pq &= b^2\\\\\\\np^2+r^2+pr &= c^2\\\\\\\np>=q>=r\\\\\\\n\\end{eqnarray}\n\n然后我们对于每对关系,可以显然发现都应该是类似的,然后我们可以存下来每个关系,然后暴搜就行了,emmmmmm$\\dots$\n\n## 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int upper = 1.2e5;\nset<int> to[upper+10];\nbool ans[upper<<2];\nint main(){\n\tfor(long long i = 1;i<=upper;i++){\n\t\tfor(long long j = min(upper-i,i);j>=1;j--){\n\t\t\tlong long x = i*i+j*j+i*j;\n\t\t\tlong long y = sqrt(x);\n\t\t\tif(y*y==x) to[i].insert(j);\n\t\t}\n\t\tif(i%10==0) cout<<i<<'\\n';\n\t}\n\tfor(int i = 1;i<=upper;i++){\n\t\tfor(int j:to[i]){\n\t\t\tfor(int k:to[j]){\n\t\t\t\tif(i+j+k>upper) continue;\n\t\t\t\tif(to[i].count(k)){\n\t\t\t\t\tans[i+j+k] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint rans = 0;\n\tfor(int i = 1;i<=upper;i++) if(ans[i]) rans+=i;\n\tcout<<rans<<endl;\n\treturn 0;\n}\n```\n\n","source":"_posts/PE/PE143.md","raw":"---\ntitle: Project Euler 143 Investigating the Torricelli point of a triangle\ndate:       2018-12-28\nauthor:     \"zuhiul\"\ntags:\n  - 数学\n  - PE\n---\n\n\n[开启传送门](https://projecteuler.net/problem=143)\n\n### 题目描述\n<!-- more -->\n\nLet ABC be a triangle with all interior angles being less than $120$ degrees. Let $X$ be any point inside the triangle and let $XA = p, XC = q$, and $XB = r$.\n\nFermat challenged Torricelli to find the position of X such that $p + q + r$ was minimised.\n\nTorricelli was able to prove that if equilateral triangles AOB, BNC and AMC are constructed on each side of triangle ABC, the circumscribed circles of AOB, BNC, and AMC will intersect at a single point, T, inside the triangle. Moreover he proved that T, called the Torricelli/Fermat point, minimises $p + q + r$. Even more remarkable, it can be shown that when the sum is minimised, $AN = BM = CO = p + q + r$ and that AN, BM and CO also intersect at T.\n\n![avatar](https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/PE143.gif)\n\nIf the sum is minimised and a, b, c, p, q and r are all positive integers we shall call triangle ABC a Torricelli triangle. For example, $a = 399, b = 455, c = 511$ is an example of a Torricelli triangle, with $p + q + r = 784$.\n\nFind the sum of all distinct values of $p + q + r ≤ 120000$ for Torricelli triangles.\n\n## 题意\n\n就是三个角都小于120度的三角形存在费马点,然后让你找到所有这样的三角形,使得图上对应的六条边都是整数,其中$T$就是费马点.然后你要找到所有$p+q+r$不同的所有三角形,然后把$p+q+r$求和.\n\n## 分析\n\n对于每一个圆来说,因为里面的三角形是对边三角形,然后因为$T$在园上,于是有$T$对应的角大小一定是$180-60 = 120$度,然后同理可得,三个角都是$120$度,然后我们运用余弦定理可以得到$p^2+q^2+pq=b^2$,因为我们只要$p+q+r$不同的解,所以我们不妨设$p>=q>=r$,因为三个角都是$120$度,所以余弦定理都成立,所以我们可以得到\n\n\\begin{eqnarray}\nq^2+r^2+qr &= a^2\\\\\\\np^2+q^2+pq &= b^2\\\\\\\np^2+r^2+pr &= c^2\\\\\\\np>=q>=r\\\\\\\n\\end{eqnarray}\n\n然后我们对于每对关系,可以显然发现都应该是类似的,然后我们可以存下来每个关系,然后暴搜就行了,emmmmmm$\\dots$\n\n## 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int upper = 1.2e5;\nset<int> to[upper+10];\nbool ans[upper<<2];\nint main(){\n\tfor(long long i = 1;i<=upper;i++){\n\t\tfor(long long j = min(upper-i,i);j>=1;j--){\n\t\t\tlong long x = i*i+j*j+i*j;\n\t\t\tlong long y = sqrt(x);\n\t\t\tif(y*y==x) to[i].insert(j);\n\t\t}\n\t\tif(i%10==0) cout<<i<<'\\n';\n\t}\n\tfor(int i = 1;i<=upper;i++){\n\t\tfor(int j:to[i]){\n\t\t\tfor(int k:to[j]){\n\t\t\t\tif(i+j+k>upper) continue;\n\t\t\t\tif(to[i].count(k)){\n\t\t\t\t\tans[i+j+k] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint rans = 0;\n\tfor(int i = 1;i<=upper;i++) if(ans[i]) rans+=i;\n\tcout<<rans<<endl;\n\treturn 0;\n}\n```\n\n","slug":"PE/PE143","published":1,"updated":"2019-06-26T12:28:25.369Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1g00008a613sn8t4051","content":"<p><a href=\"https://projecteuler.net/problem=143\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><a id=\"more\"></a>\n<p>Let ABC be a triangle with all interior angles being less than $120$ degrees. Let $X$ be any point inside the triangle and let $XA = p, XC = q$, and $XB = r$.</p>\n<p>Fermat challenged Torricelli to find the position of X such that $p + q + r$ was minimised.</p>\n<p>Torricelli was able to prove that if equilateral triangles AOB, BNC and AMC are constructed on each side of triangle ABC, the circumscribed circles of AOB, BNC, and AMC will intersect at a single point, T, inside the triangle. Moreover he proved that T, called the Torricelli/Fermat point, minimises $p + q + r$. Even more remarkable, it can be shown that when the sum is minimised, $AN = BM = CO = p + q + r$ and that AN, BM and CO also intersect at T.</p>\n<p><img src=\"https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/PE143.gif\" alt=\"avatar\"></p>\n<p>If the sum is minimised and a, b, c, p, q and r are all positive integers we shall call triangle ABC a Torricelli triangle. For example, $a = 399, b = 455, c = 511$ is an example of a Torricelli triangle, with $p + q + r = 784$.</p>\n<p>Find the sum of all distinct values of $p + q + r ≤ 120000$ for Torricelli triangles.</p>\n<h2 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h2><p>就是三个角都小于120度的三角形存在费马点,然后让你找到所有这样的三角形,使得图上对应的六条边都是整数,其中$T$就是费马点.然后你要找到所有$p+q+r$不同的所有三角形,然后把$p+q+r$求和.</p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>对于每一个圆来说,因为里面的三角形是对边三角形,然后因为$T$在园上,于是有$T$对应的角大小一定是$180-60 = 120$度,然后同理可得,三个角都是$120$度,然后我们运用余弦定理可以得到$p^2+q^2+pq=b^2$,因为我们只要$p+q+r$不同的解,所以我们不妨设$p&gt;=q&gt;=r$,因为三个角都是$120$度,所以余弦定理都成立,所以我们可以得到</p>\n<p>\\begin{eqnarray}<br>q^2+r^2+qr &amp;= a^2\\\\<br>p^2+q^2+pq &amp;= b^2\\\\<br>p^2+r^2+pr &amp;= c^2\\\\<br>p&gt;=q&gt;=r\\\\<br>\\end{eqnarray}</p>\n<p>然后我们对于每对关系,可以显然发现都应该是类似的,然后我们可以存下来每个关系,然后暴搜就行了,emmmmmm$\\dots$</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> upper = <span class=\"number\">1.2e5</span>;</span><br><span class=\"line\"><span class=\"built_in\">set</span>&lt;<span class=\"keyword\">int</span>&gt; to[upper+<span class=\"number\">10</span>];</span><br><span class=\"line\"><span class=\"keyword\">bool</span> ans[upper&lt;&lt;<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> i = <span class=\"number\">1</span>;i&lt;=upper;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> j = min(upper-i,i);j&gt;=<span class=\"number\">1</span>;j--)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> x = i*i+j*j+i*j;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> y = <span class=\"built_in\">sqrt</span>(x);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(y*y==x) to[i].insert(j);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i%<span class=\"number\">10</span>==<span class=\"number\">0</span>) <span class=\"built_in\">cout</span>&lt;&lt;i&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=upper;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j:to[i])&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k:to[j])&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(i+j+k&gt;upper) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(to[i].count(k))&#123;</span><br><span class=\"line\">\t\t\t\t\tans[i+j+k] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> rans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=upper;i++) <span class=\"keyword\">if</span>(ans[i]) rans+=i;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;rans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://projecteuler.net/problem=143\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3>","more":"<p>Let ABC be a triangle with all interior angles being less than $120$ degrees. Let $X$ be any point inside the triangle and let $XA = p, XC = q$, and $XB = r$.</p>\n<p>Fermat challenged Torricelli to find the position of X such that $p + q + r$ was minimised.</p>\n<p>Torricelli was able to prove that if equilateral triangles AOB, BNC and AMC are constructed on each side of triangle ABC, the circumscribed circles of AOB, BNC, and AMC will intersect at a single point, T, inside the triangle. Moreover he proved that T, called the Torricelli/Fermat point, minimises $p + q + r$. Even more remarkable, it can be shown that when the sum is minimised, $AN = BM = CO = p + q + r$ and that AN, BM and CO also intersect at T.</p>\n<p><img src=\"https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/PE143.gif\" alt=\"avatar\"></p>\n<p>If the sum is minimised and a, b, c, p, q and r are all positive integers we shall call triangle ABC a Torricelli triangle. For example, $a = 399, b = 455, c = 511$ is an example of a Torricelli triangle, with $p + q + r = 784$.</p>\n<p>Find the sum of all distinct values of $p + q + r ≤ 120000$ for Torricelli triangles.</p>\n<h2 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h2><p>就是三个角都小于120度的三角形存在费马点,然后让你找到所有这样的三角形,使得图上对应的六条边都是整数,其中$T$就是费马点.然后你要找到所有$p+q+r$不同的所有三角形,然后把$p+q+r$求和.</p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>对于每一个圆来说,因为里面的三角形是对边三角形,然后因为$T$在园上,于是有$T$对应的角大小一定是$180-60 = 120$度,然后同理可得,三个角都是$120$度,然后我们运用余弦定理可以得到$p^2+q^2+pq=b^2$,因为我们只要$p+q+r$不同的解,所以我们不妨设$p&gt;=q&gt;=r$,因为三个角都是$120$度,所以余弦定理都成立,所以我们可以得到</p>\n<p>\\begin{eqnarray}<br>q^2+r^2+qr &amp;= a^2\\\\<br>p^2+q^2+pq &amp;= b^2\\\\<br>p^2+r^2+pr &amp;= c^2\\\\<br>p&gt;=q&gt;=r\\\\<br>\\end{eqnarray}</p>\n<p>然后我们对于每对关系,可以显然发现都应该是类似的,然后我们可以存下来每个关系,然后暴搜就行了,emmmmmm$\\dots$</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> upper = <span class=\"number\">1.2e5</span>;</span><br><span class=\"line\"><span class=\"built_in\">set</span>&lt;<span class=\"keyword\">int</span>&gt; to[upper+<span class=\"number\">10</span>];</span><br><span class=\"line\"><span class=\"keyword\">bool</span> ans[upper&lt;&lt;<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> i = <span class=\"number\">1</span>;i&lt;=upper;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> j = min(upper-i,i);j&gt;=<span class=\"number\">1</span>;j--)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> x = i*i+j*j+i*j;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> y = <span class=\"built_in\">sqrt</span>(x);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(y*y==x) to[i].insert(j);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i%<span class=\"number\">10</span>==<span class=\"number\">0</span>) <span class=\"built_in\">cout</span>&lt;&lt;i&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=upper;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j:to[i])&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k:to[j])&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(i+j+k&gt;upper) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(to[i].count(k))&#123;</span><br><span class=\"line\">\t\t\t\t\tans[i+j+k] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> rans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=upper;i++) <span class=\"keyword\">if</span>(ans[i]) rans+=i;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;rans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Project Euler 122 Efficient exponentiation","date":"2019-01-01T16:00:00.000Z","author":"zuhiul","_content":"\n\n[开启传送门](https://projecteuler.net/problem=122)\n\n### 题目描述\n<!-- more -->\n\nThe most naive way of computing $n^{15}$ requires fourteen multiplications:\n\n$n \\times n \\times \\dots \\times n = n^{15}$\n\nBut using a \"binary\" method you can compute it in six multiplications:\n\n\\begin{eqnarray}\nn \\times n &= n^2\\\\\\\nn^2 \\times n^2 &= n^4\\\\\\\nn^4 \\times n^4 &= n^8\\\\\\\nn^8 \\times n^4 &= n^{12}\\\\\\\nn^{12} \\times n^2 &= n^{14}\\\\\\\nn^{14} \\times n &= n^{15}\\\\\\\n\\end{eqnarray}\n\nHowever it is yet possible to compute it in only five multiplications:\n\n\\begin{eqnarray}\nn \\times n &= n^2\\\\\\\nn^2 \\times n &= n^3\\\\\\\nn^3 \\times n^3 &= n^6\\\\\\\nn^6 \\times n^6 &= n^{12}\\\\\\\nn^{12} \\times n^3 &= n^{15}\\\\\\\n\\end{eqnarray}\n\nWe shall define $m(k)$ to be the minimum number of multiplications to compute $n^k$; for example $m(15) = 5$.\n\nFor $1 \\leq k \\leq 200$, find $\\sum m(k)$.\n\n## 题意\n\n我们知道快速计算一个数的幂次有各种不同的方法,快速幂只是其中一种而且不是最快的,然后问你对于1~200的幂次来说,最少需要几次乘法操作.\n\n## 分析\n\n有一个[wiki](https://en.wikipedia.org/wiki/Addition_chain)讲的就是这个问题,可以看一看....\n\n我们可以发现,对于所有幂次来说,我们按照最后一步操作的数来构成他的前驱,然后我们会发现他是一棵树,然后我们直接构造出这颗树出来,就是最优答案.....\n\n## 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nset<int> s[222];\nvoid cal(int a){\n\tint now = 1e8,ind = 0;\n\tfor(int i = 1;i<=a;i++){//枚举每一个比他小的数,看是否可以作为他的前驱\n\t\tif(s[i].size()+1>=now) continue;//如果不能优化解就不继续搜索\n\t\tfor(int x:s[i])//枚举每一个前驱的子元素\n\t\t\tif(s[i].find(a-x)!=s[i].end()){//如果能构成a\n\t\t\t\tnow = s[i].size()+1;//更新解\n\t\t\t\tind = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t}\n\tfor(int i:s[ind]) s[a].insert(i);//保存路径\n\ts[a].insert(a);\n}\nint main(){\n\ts[1].insert(1);\n\tfor(int i = 2;i<=200;i++) cal(i);\n\tint ans = 0;\n\tfor(int i = 1;i<=200;i++) ans+=s[i].size()-1;//要把里面的1剪掉,因为合成1不要代价\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n\n","source":"_posts/PE/PE122.md","raw":"---\ntitle: Project Euler 122 Efficient exponentiation\ndate:       2019-01-02\nauthor:     \"zuhiul\"\ntags:\n  - 数学\n  - PE\n---\n\n\n[开启传送门](https://projecteuler.net/problem=122)\n\n### 题目描述\n<!-- more -->\n\nThe most naive way of computing $n^{15}$ requires fourteen multiplications:\n\n$n \\times n \\times \\dots \\times n = n^{15}$\n\nBut using a \"binary\" method you can compute it in six multiplications:\n\n\\begin{eqnarray}\nn \\times n &= n^2\\\\\\\nn^2 \\times n^2 &= n^4\\\\\\\nn^4 \\times n^4 &= n^8\\\\\\\nn^8 \\times n^4 &= n^{12}\\\\\\\nn^{12} \\times n^2 &= n^{14}\\\\\\\nn^{14} \\times n &= n^{15}\\\\\\\n\\end{eqnarray}\n\nHowever it is yet possible to compute it in only five multiplications:\n\n\\begin{eqnarray}\nn \\times n &= n^2\\\\\\\nn^2 \\times n &= n^3\\\\\\\nn^3 \\times n^3 &= n^6\\\\\\\nn^6 \\times n^6 &= n^{12}\\\\\\\nn^{12} \\times n^3 &= n^{15}\\\\\\\n\\end{eqnarray}\n\nWe shall define $m(k)$ to be the minimum number of multiplications to compute $n^k$; for example $m(15) = 5$.\n\nFor $1 \\leq k \\leq 200$, find $\\sum m(k)$.\n\n## 题意\n\n我们知道快速计算一个数的幂次有各种不同的方法,快速幂只是其中一种而且不是最快的,然后问你对于1~200的幂次来说,最少需要几次乘法操作.\n\n## 分析\n\n有一个[wiki](https://en.wikipedia.org/wiki/Addition_chain)讲的就是这个问题,可以看一看....\n\n我们可以发现,对于所有幂次来说,我们按照最后一步操作的数来构成他的前驱,然后我们会发现他是一棵树,然后我们直接构造出这颗树出来,就是最优答案.....\n\n## 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nset<int> s[222];\nvoid cal(int a){\n\tint now = 1e8,ind = 0;\n\tfor(int i = 1;i<=a;i++){//枚举每一个比他小的数,看是否可以作为他的前驱\n\t\tif(s[i].size()+1>=now) continue;//如果不能优化解就不继续搜索\n\t\tfor(int x:s[i])//枚举每一个前驱的子元素\n\t\t\tif(s[i].find(a-x)!=s[i].end()){//如果能构成a\n\t\t\t\tnow = s[i].size()+1;//更新解\n\t\t\t\tind = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t}\n\tfor(int i:s[ind]) s[a].insert(i);//保存路径\n\ts[a].insert(a);\n}\nint main(){\n\ts[1].insert(1);\n\tfor(int i = 2;i<=200;i++) cal(i);\n\tint ans = 0;\n\tfor(int i = 1;i<=200;i++) ans+=s[i].size()-1;//要把里面的1剪掉,因为合成1不要代价\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n\n","slug":"PE/PE122","published":1,"updated":"2019-04-14T08:27:27.678Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1g20009a613fvaprcbr","content":"<p><a href=\"https://projecteuler.net/problem=122\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><a id=\"more\"></a>\n<p>The most naive way of computing $n^{15}$ requires fourteen multiplications:</p>\n<p>$n \\times n \\times \\dots \\times n = n^{15}$</p>\n<p>But using a “binary” method you can compute it in six multiplications:</p>\n<p>\\begin{eqnarray}<br>n \\times n &amp;= n^2\\\\<br>n^2 \\times n^2 &amp;= n^4\\\\<br>n^4 \\times n^4 &amp;= n^8\\\\<br>n^8 \\times n^4 &amp;= n^{12}\\\\<br>n^{12} \\times n^2 &amp;= n^{14}\\\\<br>n^{14} \\times n &amp;= n^{15}\\\\<br>\\end{eqnarray}</p>\n<p>However it is yet possible to compute it in only five multiplications:</p>\n<p>\\begin{eqnarray}<br>n \\times n &amp;= n^2\\\\<br>n^2 \\times n &amp;= n^3\\\\<br>n^3 \\times n^3 &amp;= n^6\\\\<br>n^6 \\times n^6 &amp;= n^{12}\\\\<br>n^{12} \\times n^3 &amp;= n^{15}\\\\<br>\\end{eqnarray}</p>\n<p>We shall define $m(k)$ to be the minimum number of multiplications to compute $n^k$; for example $m(15) = 5$.</p>\n<p>For $1 \\leq k \\leq 200$, find $\\sum m(k)$.</p>\n<h2 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h2><p>我们知道快速计算一个数的幂次有各种不同的方法,快速幂只是其中一种而且不是最快的,然后问你对于1~200的幂次来说,最少需要几次乘法操作.</p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>有一个<a href=\"https://en.wikipedia.org/wiki/Addition_chain\" target=\"_blank\" rel=\"noopener\">wiki</a>讲的就是这个问题,可以看一看….</p>\n<p>我们可以发现,对于所有幂次来说,我们按照最后一步操作的数来构成他的前驱,然后我们会发现他是一棵树,然后我们直接构造出这颗树出来,就是最优答案…..</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"built_in\">set</span>&lt;<span class=\"keyword\">int</span>&gt; s[<span class=\"number\">222</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">cal</span><span class=\"params\">(<span class=\"keyword\">int</span> a)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> now = <span class=\"number\">1e8</span>,ind = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=a;i++)&#123;<span class=\"comment\">//枚举每一个比他小的数,看是否可以作为他的前驱</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(s[i].size()+<span class=\"number\">1</span>&gt;=now) <span class=\"keyword\">continue</span>;<span class=\"comment\">//如果不能优化解就不继续搜索</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> x:s[i])<span class=\"comment\">//枚举每一个前驱的子元素</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(s[i].find(a-x)!=s[i].end())&#123;<span class=\"comment\">//如果能构成a</span></span><br><span class=\"line\">\t\t\t\tnow = s[i].size()+<span class=\"number\">1</span>;<span class=\"comment\">//更新解</span></span><br><span class=\"line\">\t\t\t\tind = i;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i:s[ind]) s[a].insert(i);<span class=\"comment\">//保存路径</span></span><br><span class=\"line\">\ts[a].insert(a);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\ts[<span class=\"number\">1</span>].insert(<span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>;i&lt;=<span class=\"number\">200</span>;i++) cal(i);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=<span class=\"number\">200</span>;i++) ans+=s[i].size()<span class=\"number\">-1</span>;<span class=\"comment\">//要把里面的1剪掉,因为合成1不要代价</span></span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://projecteuler.net/problem=122\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3>","more":"<p>The most naive way of computing $n^{15}$ requires fourteen multiplications:</p>\n<p>$n \\times n \\times \\dots \\times n = n^{15}$</p>\n<p>But using a “binary” method you can compute it in six multiplications:</p>\n<p>\\begin{eqnarray}<br>n \\times n &amp;= n^2\\\\<br>n^2 \\times n^2 &amp;= n^4\\\\<br>n^4 \\times n^4 &amp;= n^8\\\\<br>n^8 \\times n^4 &amp;= n^{12}\\\\<br>n^{12} \\times n^2 &amp;= n^{14}\\\\<br>n^{14} \\times n &amp;= n^{15}\\\\<br>\\end{eqnarray}</p>\n<p>However it is yet possible to compute it in only five multiplications:</p>\n<p>\\begin{eqnarray}<br>n \\times n &amp;= n^2\\\\<br>n^2 \\times n &amp;= n^3\\\\<br>n^3 \\times n^3 &amp;= n^6\\\\<br>n^6 \\times n^6 &amp;= n^{12}\\\\<br>n^{12} \\times n^3 &amp;= n^{15}\\\\<br>\\end{eqnarray}</p>\n<p>We shall define $m(k)$ to be the minimum number of multiplications to compute $n^k$; for example $m(15) = 5$.</p>\n<p>For $1 \\leq k \\leq 200$, find $\\sum m(k)$.</p>\n<h2 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h2><p>我们知道快速计算一个数的幂次有各种不同的方法,快速幂只是其中一种而且不是最快的,然后问你对于1~200的幂次来说,最少需要几次乘法操作.</p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>有一个<a href=\"https://en.wikipedia.org/wiki/Addition_chain\" target=\"_blank\" rel=\"noopener\">wiki</a>讲的就是这个问题,可以看一看….</p>\n<p>我们可以发现,对于所有幂次来说,我们按照最后一步操作的数来构成他的前驱,然后我们会发现他是一棵树,然后我们直接构造出这颗树出来,就是最优答案…..</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"built_in\">set</span>&lt;<span class=\"keyword\">int</span>&gt; s[<span class=\"number\">222</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">cal</span><span class=\"params\">(<span class=\"keyword\">int</span> a)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> now = <span class=\"number\">1e8</span>,ind = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=a;i++)&#123;<span class=\"comment\">//枚举每一个比他小的数,看是否可以作为他的前驱</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(s[i].size()+<span class=\"number\">1</span>&gt;=now) <span class=\"keyword\">continue</span>;<span class=\"comment\">//如果不能优化解就不继续搜索</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> x:s[i])<span class=\"comment\">//枚举每一个前驱的子元素</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(s[i].find(a-x)!=s[i].end())&#123;<span class=\"comment\">//如果能构成a</span></span><br><span class=\"line\">\t\t\t\tnow = s[i].size()+<span class=\"number\">1</span>;<span class=\"comment\">//更新解</span></span><br><span class=\"line\">\t\t\t\tind = i;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i:s[ind]) s[a].insert(i);<span class=\"comment\">//保存路径</span></span><br><span class=\"line\">\ts[a].insert(a);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\ts[<span class=\"number\">1</span>].insert(<span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>;i&lt;=<span class=\"number\">200</span>;i++) cal(i);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=<span class=\"number\">200</span>;i++) ans+=s[i].size()<span class=\"number\">-1</span>;<span class=\"comment\">//要把里面的1剪掉,因为合成1不要代价</span></span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Project Euler 222 Sphere Packing","date":"2019-01-03T16:00:00.000Z","author":"zuhiul","_content":"\n\n[开启传送门](https://projecteuler.net/problem=222)\n\n### 题目描述\n<!-- more -->\n\nWhat is the length of the shortest pipe, of internal radius $50$mm, that can fully contain $21$ balls of radii $30$mm, $31$mm, ..., $50$mm?\n\nGive your answer in micrometres ($10^{-6}$ m) rounded to the nearest integer.\n\n## 题意\n\n让你在一个内径$50$的圆管里塞$21$个内径分别为$31-50$的小球,问你圆管最短是多少\n\n## 分析\n\n比较显然是dp\n\n考虑dp状态:dp[i][j]表示选择小球对应的集合为j,并且用第i个小球结尾,然后我们转移的时候就直接添加一个小球,对于剩余的小球枚举一个结尾,取最优解就行了\n\n## 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxm = 21;\ndouble ans[maxm][1<<maxm];\nint num[maxm+10];\ndouble cal(int a,int b){//得到两个小球的距离\n\tint t = a+b+60;\n\treturn 10*sqrt(t*2-100);\n}\nint main(){\n\tfor(int i = 0;i<maxm;i++) for(int j = 0;j<(1<<maxm);j++) ans[i][j] = 1e8;\n\tfor(int s = 0;s<(1<<maxm);s++) for(int i = 0;i<maxm;i++){\n\t\tif(s==0){//初值条件\n\t\t\tans[i][1<<i] = i+30;\n\t\t\tcontinue;\n\t\t}\n\t\tif((s >> i & 1)==1) continue;\n\t\tint t = s|(1<<i);//用S来扩展t\n\t\tfor(int j = 0;j<maxm;j++) if(s>>j&1) ans[i][t] = min(ans[i][t],ans[j][s]+cal(i,j));\n\t}\n\tdouble rans = 1e8;\n\tfor(int i = 0;i<maxm;i++) rans = min(rans,ans[i][(1<<maxm)-1]+i+30);\n\tprintf(\"%.0f\\n\",rans*1000);\n\treturn 0;\n}\n```\n\n","source":"_posts/PE/PE222.md","raw":"---\ntitle: Project Euler 222 Sphere Packing\ndate:       2019-01-04\nauthor:     \"zuhiul\"\ntags:\n  - DP\n  - PE\n---\n\n\n[开启传送门](https://projecteuler.net/problem=222)\n\n### 题目描述\n<!-- more -->\n\nWhat is the length of the shortest pipe, of internal radius $50$mm, that can fully contain $21$ balls of radii $30$mm, $31$mm, ..., $50$mm?\n\nGive your answer in micrometres ($10^{-6}$ m) rounded to the nearest integer.\n\n## 题意\n\n让你在一个内径$50$的圆管里塞$21$个内径分别为$31-50$的小球,问你圆管最短是多少\n\n## 分析\n\n比较显然是dp\n\n考虑dp状态:dp[i][j]表示选择小球对应的集合为j,并且用第i个小球结尾,然后我们转移的时候就直接添加一个小球,对于剩余的小球枚举一个结尾,取最优解就行了\n\n## 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxm = 21;\ndouble ans[maxm][1<<maxm];\nint num[maxm+10];\ndouble cal(int a,int b){//得到两个小球的距离\n\tint t = a+b+60;\n\treturn 10*sqrt(t*2-100);\n}\nint main(){\n\tfor(int i = 0;i<maxm;i++) for(int j = 0;j<(1<<maxm);j++) ans[i][j] = 1e8;\n\tfor(int s = 0;s<(1<<maxm);s++) for(int i = 0;i<maxm;i++){\n\t\tif(s==0){//初值条件\n\t\t\tans[i][1<<i] = i+30;\n\t\t\tcontinue;\n\t\t}\n\t\tif((s >> i & 1)==1) continue;\n\t\tint t = s|(1<<i);//用S来扩展t\n\t\tfor(int j = 0;j<maxm;j++) if(s>>j&1) ans[i][t] = min(ans[i][t],ans[j][s]+cal(i,j));\n\t}\n\tdouble rans = 1e8;\n\tfor(int i = 0;i<maxm;i++) rans = min(rans,ans[i][(1<<maxm)-1]+i+30);\n\tprintf(\"%.0f\\n\",rans*1000);\n\treturn 0;\n}\n```\n\n","slug":"PE/PE222","published":1,"updated":"2019-04-14T08:29:12.064Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1g2000ba6132tm9ak5n","content":"<p><a href=\"https://projecteuler.net/problem=222\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><a id=\"more\"></a>\n<p>What is the length of the shortest pipe, of internal radius $50$mm, that can fully contain $21$ balls of radii $30$mm, $31$mm, …, $50$mm?</p>\n<p>Give your answer in micrometres ($10^{-6}$ m) rounded to the nearest integer.</p>\n<h2 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h2><p>让你在一个内径$50$的圆管里塞$21$个内径分别为$31-50$的小球,问你圆管最短是多少</p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>比较显然是dp</p>\n<p>考虑dp状态:dp[i][j]表示选择小球对应的集合为j,并且用第i个小球结尾,然后我们转移的时候就直接添加一个小球,对于剩余的小球枚举一个结尾,取最优解就行了</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">21</span>;</span><br><span class=\"line\"><span class=\"keyword\">double</span> ans[maxm][<span class=\"number\">1</span>&lt;&lt;maxm];</span><br><span class=\"line\"><span class=\"keyword\">int</span> num[maxm+<span class=\"number\">10</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">cal</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;<span class=\"comment\">//得到两个小球的距离</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> t = a+b+<span class=\"number\">60</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">10</span>*<span class=\"built_in\">sqrt</span>(t*<span class=\"number\">2</span><span class=\"number\">-100</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;maxm;i++) <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j&lt;(<span class=\"number\">1</span>&lt;&lt;maxm);j++) ans[i][j] = <span class=\"number\">1e8</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> s = <span class=\"number\">0</span>;s&lt;(<span class=\"number\">1</span>&lt;&lt;maxm);s++) <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;maxm;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(s==<span class=\"number\">0</span>)&#123;<span class=\"comment\">//初值条件</span></span><br><span class=\"line\">\t\t\tans[i][<span class=\"number\">1</span>&lt;&lt;i] = i+<span class=\"number\">30</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>((s &gt;&gt; i &amp; <span class=\"number\">1</span>)==<span class=\"number\">1</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> t = s|(<span class=\"number\">1</span>&lt;&lt;i);<span class=\"comment\">//用S来扩展t</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j&lt;maxm;j++) <span class=\"keyword\">if</span>(s&gt;&gt;j&amp;<span class=\"number\">1</span>) ans[i][t] = min(ans[i][t],ans[j][s]+cal(i,j));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">double</span> rans = <span class=\"number\">1e8</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;maxm;i++) rans = min(rans,ans[i][(<span class=\"number\">1</span>&lt;&lt;maxm)<span class=\"number\">-1</span>]+i+<span class=\"number\">30</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%.0f\\n\"</span>,rans*<span class=\"number\">1000</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://projecteuler.net/problem=222\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3>","more":"<p>What is the length of the shortest pipe, of internal radius $50$mm, that can fully contain $21$ balls of radii $30$mm, $31$mm, …, $50$mm?</p>\n<p>Give your answer in micrometres ($10^{-6}$ m) rounded to the nearest integer.</p>\n<h2 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h2><p>让你在一个内径$50$的圆管里塞$21$个内径分别为$31-50$的小球,问你圆管最短是多少</p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>比较显然是dp</p>\n<p>考虑dp状态:dp[i][j]表示选择小球对应的集合为j,并且用第i个小球结尾,然后我们转移的时候就直接添加一个小球,对于剩余的小球枚举一个结尾,取最优解就行了</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">21</span>;</span><br><span class=\"line\"><span class=\"keyword\">double</span> ans[maxm][<span class=\"number\">1</span>&lt;&lt;maxm];</span><br><span class=\"line\"><span class=\"keyword\">int</span> num[maxm+<span class=\"number\">10</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">cal</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;<span class=\"comment\">//得到两个小球的距离</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> t = a+b+<span class=\"number\">60</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">10</span>*<span class=\"built_in\">sqrt</span>(t*<span class=\"number\">2</span><span class=\"number\">-100</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;maxm;i++) <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j&lt;(<span class=\"number\">1</span>&lt;&lt;maxm);j++) ans[i][j] = <span class=\"number\">1e8</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> s = <span class=\"number\">0</span>;s&lt;(<span class=\"number\">1</span>&lt;&lt;maxm);s++) <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;maxm;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(s==<span class=\"number\">0</span>)&#123;<span class=\"comment\">//初值条件</span></span><br><span class=\"line\">\t\t\tans[i][<span class=\"number\">1</span>&lt;&lt;i] = i+<span class=\"number\">30</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>((s &gt;&gt; i &amp; <span class=\"number\">1</span>)==<span class=\"number\">1</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> t = s|(<span class=\"number\">1</span>&lt;&lt;i);<span class=\"comment\">//用S来扩展t</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j&lt;maxm;j++) <span class=\"keyword\">if</span>(s&gt;&gt;j&amp;<span class=\"number\">1</span>) ans[i][t] = min(ans[i][t],ans[j][s]+cal(i,j));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">double</span> rans = <span class=\"number\">1e8</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;maxm;i++) rans = min(rans,ans[i][(<span class=\"number\">1</span>&lt;&lt;maxm)<span class=\"number\">-1</span>]+i+<span class=\"number\">30</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%.0f\\n\"</span>,rans*<span class=\"number\">1000</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Project Euler 294 Sum of digits-experience","date":"2018-12-08T16:00:00.000Z","author":"zuhiul","_content":"\n\n[开启传送门](https://projecteuler.net/problem=294)\n\n### 题目描述\n<!-- more -->\n\nFor a positive integer $k$, define $d(k)$ as the sum of the digits of $k$ in its usual decimal representation. Thus $d(42) = 4+2 = 6$.\n\nFor a positive integer $n$, define $S(n)$ as the number of positive integers $k < 10^n$ with the following properties :\n\n - $k$ is divisible by $23$ and\n - $d(k) = 23$. \n\nYou are given that $S(9) = 263626$ and $S(42) = 6377168878570056$.\n\nFind $S(11^{12})$ and give your answer mod $10^9$.\n\n## 题意\n\n你要找到一个所有满足一下三个条件的数字数量\n\n假设这个数是$k$\n - $k$ $<$ $10^{11^{12}}$  \n - $k\\%23$ = 0\n - $k$每个十进制位求和为$23$\n\n## 分析\n\n这个题目困扰了我两天,我一度以为自己读错题了,主要是数据范围太大了,大的人一点想法都没有$\\dots$\n\n下面说正解\n\n虽然数据范围很大,但是我们可以从小数据入手\n\n先看第二个条件$k%23==0$,是否感觉出了一丝丝猫腻?\n\n于是我大胆写了一下,比较好想的就是一定存在一个$n$使得$10^n%23==1$,也就是说存在膜数存在循环,而且显然有循环节是$O(23)$的\n\n于是大胆暴力,找到了,循环节长度为$22$\n\n这也就是说,在十进制下,位数最多有$11^{12}$个,而且这些里面,可以拆分成$22$份,每一份里面,你不管把数字安排到哪里,都是同膜的\n\n于是我们可以简单的把$11^{12}$近似的均分成了$22$份.而且每一份可以单独统计答案\n\n然后问题就转化成了以下两个子问题:\n\n - 找到$a_1,a_2\\dots a_{22}$使得$a_1+a_2+\\dots +a_{22} = 23$\n - 对于每一份就成了一个$a_i$个相同的球放入近似$11^{12}$个盒子里,每个盒子最多放$9$个球,问你方案数\n\n对于第一个子问题,我们显然可以动态规划搞一搞\n\n定义$dp(i,j,k)$表示$a_1+a_2+\\dots +a_i == j$并且当前膜数为$k$的方案数\n\n然后暴力转移就行了\n\n关键是第二个子问题不好想,因为盒子数量太大了,必须要有一个$log$的做法\n\n然后就枚举算法~~(毕竟会的算法不多)~~\n\n然后就想到了分治,但是能不能分治呢,并不知道,写一发就知道了,然后跑的挺快的~~(然后就过了)~~\n\n并不会算分治的~~玄学~~复杂度\n\n## 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n```cpp\n\n#include<bits/stdc++.h>\nusing namespace std;\nconst int mod = 1e9;\nint add(int a,int b){return (a+b)%mod;}\nint mul(int a,int b){return 1ll*a*b%mod;}\nlong long n,m;\nvoid init(){\n\tm = 23;\n\tn = 1;\n    for(int i = 1;i<=12;i++) n*=11;\n}\nmap<pair<long long,int>,int>mp;\nint solve(long long a,int b){///b ball,a boxes\n\tif(a==1) return b<=9;\n\tif(a==0) return b==0;\n\tpair<long long,int> now = make_pair(a,b);\n\tif(mp[now]) return mp[now];\n\tint ret = 0;\n\tlong long l = a/2,r = a-l;\n\tfor(int i = 0;i<=b;i++) ret = add(ret,mul(solve(l,i),solve(r,b-i)));\n\treturn mp[now] = ret;\n}\nlong long dp[30][30][30];\nint main(){\n\tinit();\n\tdp[0][0][0] = 1;\n\tint w = 1;\n\tfor(int i = 0;i<m;i++){\n\t\tlong long has = n/(m-1) + (i<n%22);\n\t\tfor(int j = 0;j<=m;j++){\n\t\t\tfor(int k = 0;k<m;k++){\n\t\t\t\tfor(int t = 0;j+t<=m;t++){\n\t\t\t\t\tdp[i+1][j+t][(k+w*t)%m] = add(dp[i+1][j+t][(k+w*t)%m],mul(dp[i][j][k],solve(has,t)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tw = w*10%m;\n\t}\n\tcout<<dp[m-1][m][0]<<endl;\n\treturn 0;\n}\n```\n\n\n","source":"_posts/PE/PE294.md","raw":"---\ntitle: Project Euler 294 Sum of digits-experience #23\ndate:       2018-12-09\nauthor:     \"zuhiul\"\ntags:\n  - 数学\n---\n\n\n[开启传送门](https://projecteuler.net/problem=294)\n\n### 题目描述\n<!-- more -->\n\nFor a positive integer $k$, define $d(k)$ as the sum of the digits of $k$ in its usual decimal representation. Thus $d(42) = 4+2 = 6$.\n\nFor a positive integer $n$, define $S(n)$ as the number of positive integers $k < 10^n$ with the following properties :\n\n - $k$ is divisible by $23$ and\n - $d(k) = 23$. \n\nYou are given that $S(9) = 263626$ and $S(42) = 6377168878570056$.\n\nFind $S(11^{12})$ and give your answer mod $10^9$.\n\n## 题意\n\n你要找到一个所有满足一下三个条件的数字数量\n\n假设这个数是$k$\n - $k$ $<$ $10^{11^{12}}$  \n - $k\\%23$ = 0\n - $k$每个十进制位求和为$23$\n\n## 分析\n\n这个题目困扰了我两天,我一度以为自己读错题了,主要是数据范围太大了,大的人一点想法都没有$\\dots$\n\n下面说正解\n\n虽然数据范围很大,但是我们可以从小数据入手\n\n先看第二个条件$k%23==0$,是否感觉出了一丝丝猫腻?\n\n于是我大胆写了一下,比较好想的就是一定存在一个$n$使得$10^n%23==1$,也就是说存在膜数存在循环,而且显然有循环节是$O(23)$的\n\n于是大胆暴力,找到了,循环节长度为$22$\n\n这也就是说,在十进制下,位数最多有$11^{12}$个,而且这些里面,可以拆分成$22$份,每一份里面,你不管把数字安排到哪里,都是同膜的\n\n于是我们可以简单的把$11^{12}$近似的均分成了$22$份.而且每一份可以单独统计答案\n\n然后问题就转化成了以下两个子问题:\n\n - 找到$a_1,a_2\\dots a_{22}$使得$a_1+a_2+\\dots +a_{22} = 23$\n - 对于每一份就成了一个$a_i$个相同的球放入近似$11^{12}$个盒子里,每个盒子最多放$9$个球,问你方案数\n\n对于第一个子问题,我们显然可以动态规划搞一搞\n\n定义$dp(i,j,k)$表示$a_1+a_2+\\dots +a_i == j$并且当前膜数为$k$的方案数\n\n然后暴力转移就行了\n\n关键是第二个子问题不好想,因为盒子数量太大了,必须要有一个$log$的做法\n\n然后就枚举算法~~(毕竟会的算法不多)~~\n\n然后就想到了分治,但是能不能分治呢,并不知道,写一发就知道了,然后跑的挺快的~~(然后就过了)~~\n\n并不会算分治的~~玄学~~复杂度\n\n## 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n```cpp\n\n#include<bits/stdc++.h>\nusing namespace std;\nconst int mod = 1e9;\nint add(int a,int b){return (a+b)%mod;}\nint mul(int a,int b){return 1ll*a*b%mod;}\nlong long n,m;\nvoid init(){\n\tm = 23;\n\tn = 1;\n    for(int i = 1;i<=12;i++) n*=11;\n}\nmap<pair<long long,int>,int>mp;\nint solve(long long a,int b){///b ball,a boxes\n\tif(a==1) return b<=9;\n\tif(a==0) return b==0;\n\tpair<long long,int> now = make_pair(a,b);\n\tif(mp[now]) return mp[now];\n\tint ret = 0;\n\tlong long l = a/2,r = a-l;\n\tfor(int i = 0;i<=b;i++) ret = add(ret,mul(solve(l,i),solve(r,b-i)));\n\treturn mp[now] = ret;\n}\nlong long dp[30][30][30];\nint main(){\n\tinit();\n\tdp[0][0][0] = 1;\n\tint w = 1;\n\tfor(int i = 0;i<m;i++){\n\t\tlong long has = n/(m-1) + (i<n%22);\n\t\tfor(int j = 0;j<=m;j++){\n\t\t\tfor(int k = 0;k<m;k++){\n\t\t\t\tfor(int t = 0;j+t<=m;t++){\n\t\t\t\t\tdp[i+1][j+t][(k+w*t)%m] = add(dp[i+1][j+t][(k+w*t)%m],mul(dp[i][j][k],solve(has,t)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tw = w*10%m;\n\t}\n\tcout<<dp[m-1][m][0]<<endl;\n\treturn 0;\n}\n```\n\n\n","slug":"PE/PE294","published":1,"updated":"2019-04-14T08:27:35.803Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1g3000ca613gvqbppxr","content":"<p><a href=\"https://projecteuler.net/problem=294\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><a id=\"more\"></a>\n<p>For a positive integer $k$, define $d(k)$ as the sum of the digits of $k$ in its usual decimal representation. Thus $d(42) = 4+2 = 6$.</p>\n<p>For a positive integer $n$, define $S(n)$ as the number of positive integers $k &lt; 10^n$ with the following properties :</p>\n<ul>\n<li>$k$ is divisible by $23$ and</li>\n<li>$d(k) = 23$. </li>\n</ul>\n<p>You are given that $S(9) = 263626$ and $S(42) = 6377168878570056$.</p>\n<p>Find $S(11^{12})$ and give your answer mod $10^9$.</p>\n<h2 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h2><p>你要找到一个所有满足一下三个条件的数字数量</p>\n<p>假设这个数是$k$</p>\n<ul>\n<li>$k$ $&lt;$ $10^{11^{12}}$  </li>\n<li>$k\\%23$ = 0</li>\n<li>$k$每个十进制位求和为$23$</li>\n</ul>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>这个题目困扰了我两天,我一度以为自己读错题了,主要是数据范围太大了,大的人一点想法都没有$\\dots$</p>\n<p>下面说正解</p>\n<p>虽然数据范围很大,但是我们可以从小数据入手</p>\n<p>先看第二个条件$k%23==0$,是否感觉出了一丝丝猫腻?</p>\n<p>于是我大胆写了一下,比较好想的就是一定存在一个$n$使得$10^n%23==1$,也就是说存在膜数存在循环,而且显然有循环节是$O(23)$的</p>\n<p>于是大胆暴力,找到了,循环节长度为$22$</p>\n<p>这也就是说,在十进制下,位数最多有$11^{12}$个,而且这些里面,可以拆分成$22$份,每一份里面,你不管把数字安排到哪里,都是同膜的</p>\n<p>于是我们可以简单的把$11^{12}$近似的均分成了$22$份.而且每一份可以单独统计答案</p>\n<p>然后问题就转化成了以下两个子问题:</p>\n<ul>\n<li>找到$a_1,a_2\\dots a_{22}$使得$a_1+a_2+\\dots +a_{22} = 23$</li>\n<li>对于每一份就成了一个$a_i$个相同的球放入近似$11^{12}$个盒子里,每个盒子最多放$9$个球,问你方案数</li>\n</ul>\n<p>对于第一个子问题,我们显然可以动态规划搞一搞</p>\n<p>定义$dp(i,j,k)$表示$a_1+a_2+\\dots +a_i == j$并且当前膜数为$k$的方案数</p>\n<p>然后暴力转移就行了</p>\n<p>关键是第二个子问题不好想,因为盒子数量太大了,必须要有一个$log$的做法</p>\n<p>然后就枚举算法<del>(毕竟会的算法不多)</del></p>\n<p>然后就想到了分治,但是能不能分治呢,并不知道,写一发就知道了,然后跑的挺快的<del>(然后就过了)</del></p>\n<p>并不会算分治的<del>玄学</del>复杂度</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> mod = <span class=\"number\">1e9</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;<span class=\"keyword\">return</span> (a+b)%mod;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">mul</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;<span class=\"keyword\">return</span> <span class=\"number\">1l</span>l*a*b%mod;&#125;</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> n,m;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tm = <span class=\"number\">23</span>;</span><br><span class=\"line\">\tn = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=<span class=\"number\">12</span>;i++) n*=<span class=\"number\">11</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">map</span>&lt;pair&lt;<span class=\"keyword\">long</span> <span class=\"keyword\">long</span>,<span class=\"keyword\">int</span>&gt;,<span class=\"keyword\">int</span>&gt;mp;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">solve</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;<span class=\"comment\">///b ball,a boxes</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a==<span class=\"number\">1</span>) <span class=\"keyword\">return</span> b&lt;=<span class=\"number\">9</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a==<span class=\"number\">0</span>) <span class=\"keyword\">return</span> b==<span class=\"number\">0</span>;</span><br><span class=\"line\">\tpair&lt;<span class=\"keyword\">long</span> <span class=\"keyword\">long</span>,<span class=\"keyword\">int</span>&gt; now = make_pair(a,b);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(mp[now]) <span class=\"keyword\">return</span> mp[now];</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ret = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> l = a/<span class=\"number\">2</span>,r = a-l;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;=b;i++) ret = add(ret,mul(solve(l,i),solve(r,b-i)));</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> mp[now] = ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> dp[<span class=\"number\">30</span>][<span class=\"number\">30</span>][<span class=\"number\">30</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tinit();</span><br><span class=\"line\">\tdp[<span class=\"number\">0</span>][<span class=\"number\">0</span>][<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> w = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;m;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> has = n/(m<span class=\"number\">-1</span>) + (i&lt;n%<span class=\"number\">22</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j&lt;=m;j++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>;k&lt;m;k++)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> t = <span class=\"number\">0</span>;j+t&lt;=m;t++)&#123;</span><br><span class=\"line\">\t\t\t\t\tdp[i+<span class=\"number\">1</span>][j+t][(k+w*t)%m] = add(dp[i+<span class=\"number\">1</span>][j+t][(k+w*t)%m],mul(dp[i][j][k],solve(has,t)));</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tw = w*<span class=\"number\">10</span>%m;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;dp[m<span class=\"number\">-1</span>][m][<span class=\"number\">0</span>]&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://projecteuler.net/problem=294\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3>","more":"<p>For a positive integer $k$, define $d(k)$ as the sum of the digits of $k$ in its usual decimal representation. Thus $d(42) = 4+2 = 6$.</p>\n<p>For a positive integer $n$, define $S(n)$ as the number of positive integers $k &lt; 10^n$ with the following properties :</p>\n<ul>\n<li>$k$ is divisible by $23$ and</li>\n<li>$d(k) = 23$. </li>\n</ul>\n<p>You are given that $S(9) = 263626$ and $S(42) = 6377168878570056$.</p>\n<p>Find $S(11^{12})$ and give your answer mod $10^9$.</p>\n<h2 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h2><p>你要找到一个所有满足一下三个条件的数字数量</p>\n<p>假设这个数是$k$</p>\n<ul>\n<li>$k$ $&lt;$ $10^{11^{12}}$  </li>\n<li>$k\\%23$ = 0</li>\n<li>$k$每个十进制位求和为$23$</li>\n</ul>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>这个题目困扰了我两天,我一度以为自己读错题了,主要是数据范围太大了,大的人一点想法都没有$\\dots$</p>\n<p>下面说正解</p>\n<p>虽然数据范围很大,但是我们可以从小数据入手</p>\n<p>先看第二个条件$k%23==0$,是否感觉出了一丝丝猫腻?</p>\n<p>于是我大胆写了一下,比较好想的就是一定存在一个$n$使得$10^n%23==1$,也就是说存在膜数存在循环,而且显然有循环节是$O(23)$的</p>\n<p>于是大胆暴力,找到了,循环节长度为$22$</p>\n<p>这也就是说,在十进制下,位数最多有$11^{12}$个,而且这些里面,可以拆分成$22$份,每一份里面,你不管把数字安排到哪里,都是同膜的</p>\n<p>于是我们可以简单的把$11^{12}$近似的均分成了$22$份.而且每一份可以单独统计答案</p>\n<p>然后问题就转化成了以下两个子问题:</p>\n<ul>\n<li>找到$a_1,a_2\\dots a_{22}$使得$a_1+a_2+\\dots +a_{22} = 23$</li>\n<li>对于每一份就成了一个$a_i$个相同的球放入近似$11^{12}$个盒子里,每个盒子最多放$9$个球,问你方案数</li>\n</ul>\n<p>对于第一个子问题,我们显然可以动态规划搞一搞</p>\n<p>定义$dp(i,j,k)$表示$a_1+a_2+\\dots +a_i == j$并且当前膜数为$k$的方案数</p>\n<p>然后暴力转移就行了</p>\n<p>关键是第二个子问题不好想,因为盒子数量太大了,必须要有一个$log$的做法</p>\n<p>然后就枚举算法<del>(毕竟会的算法不多)</del></p>\n<p>然后就想到了分治,但是能不能分治呢,并不知道,写一发就知道了,然后跑的挺快的<del>(然后就过了)</del></p>\n<p>并不会算分治的<del>玄学</del>复杂度</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> mod = <span class=\"number\">1e9</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;<span class=\"keyword\">return</span> (a+b)%mod;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">mul</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;<span class=\"keyword\">return</span> <span class=\"number\">1l</span>l*a*b%mod;&#125;</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> n,m;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tm = <span class=\"number\">23</span>;</span><br><span class=\"line\">\tn = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=<span class=\"number\">12</span>;i++) n*=<span class=\"number\">11</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">map</span>&lt;pair&lt;<span class=\"keyword\">long</span> <span class=\"keyword\">long</span>,<span class=\"keyword\">int</span>&gt;,<span class=\"keyword\">int</span>&gt;mp;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">solve</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;<span class=\"comment\">///b ball,a boxes</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a==<span class=\"number\">1</span>) <span class=\"keyword\">return</span> b&lt;=<span class=\"number\">9</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a==<span class=\"number\">0</span>) <span class=\"keyword\">return</span> b==<span class=\"number\">0</span>;</span><br><span class=\"line\">\tpair&lt;<span class=\"keyword\">long</span> <span class=\"keyword\">long</span>,<span class=\"keyword\">int</span>&gt; now = make_pair(a,b);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(mp[now]) <span class=\"keyword\">return</span> mp[now];</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ret = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> l = a/<span class=\"number\">2</span>,r = a-l;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;=b;i++) ret = add(ret,mul(solve(l,i),solve(r,b-i)));</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> mp[now] = ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> dp[<span class=\"number\">30</span>][<span class=\"number\">30</span>][<span class=\"number\">30</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tinit();</span><br><span class=\"line\">\tdp[<span class=\"number\">0</span>][<span class=\"number\">0</span>][<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> w = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;m;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> has = n/(m<span class=\"number\">-1</span>) + (i&lt;n%<span class=\"number\">22</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j&lt;=m;j++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>;k&lt;m;k++)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> t = <span class=\"number\">0</span>;j+t&lt;=m;t++)&#123;</span><br><span class=\"line\">\t\t\t\t\tdp[i+<span class=\"number\">1</span>][j+t][(k+w*t)%m] = add(dp[i+<span class=\"number\">1</span>][j+t][(k+w*t)%m],mul(dp[i][j][k],solve(has,t)));</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tw = w*<span class=\"number\">10</span>%m;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;dp[m<span class=\"number\">-1</span>][m][<span class=\"number\">0</span>]&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"Project Euler 276 Primitive Triangles","date":"2019-01-16T16:00:00.000Z","author":"zuhiul","_content":"\n\n[开启传送门](https://projecteuler.net/problem=276)\n\n### 题目描述\n<!-- more -->\n\nConsider the triangles with integer sides $a, b$ and $c$ with $a \\leq b \\leq c$.\nAn integer sided triangle $(a,b,c)$ is called primitive if $gcd(a,b,c)=1$.\nHow many primitive integer sided triangles exist with a perimeter not exceeding $10,000,000$?\n\n## 题意\n\n问你存在多少个边长是整数的三角形,并且满足三边长的gcd为1,周长不超过$1e7$.\n\n## 分析\n\n有一个比较奇奇怪怪的[结论](http://mathworld.wolfram.com/IntegerTriangle.html)\n\n我直接把结论搬过来$\\dots$\n\n\\begin{eqnarray}\n\tF(n) = \n\t\\begin{cases}\n\t\\lfloor\\frac{(n+3)^2+24}{48}\\rfloor\\ \\ \\ \\ &n\\ \\ is\\ \\ odd\\\\\\\n\t\\lfloor\\frac{n^2+24}{48}\\rfloor\\ \\ \\ \\ &n\\ \\ is\\ \\ even\\\\\n\t\\end{cases}\n\\end{eqnarray}\n\n这个结论说的是,周长为$n$的边长都是整数的三角形的数量.然后我们可以预处理出所有的周长为$n$的数量出来,然后我们怎么保证gcd呢,比较好想的就是容斥,我们容斥掉所有gcd不是1的就行了,也就是说我们用周长为$2\\cdot n,3\\cdot n,\\dots$的减去周长为$n$的就行啦啦啦\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxm = 1e7+1;\nlong long num[maxm];\nlong long get(long long a){\n\tif(a&1) return ((a+3)*(a+3)+24)/48;\n\treturn (a*a+24)/48;\n}\nvoid init(){//预处理出每个周长对应的三角形数量,容斥得到正确的数量\n\tfor(int i = 1;i<maxm;i++) num[i] = get(i);\n\tfor(int i = 1;i<maxm;i++) for(int j = i<<1;j<maxm;j+=i) num[j]-=num[i];\n}\nint main(){\n\tinit();\n\tlong long ans = 0;\n\tfor(int i = 1;i<maxm;i++) ans+=num[i];\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n","source":"_posts/PE/PE276.md","raw":"---\ntitle: Project Euler 276 Primitive Triangles\ndate:       2019-01-17\nauthor:     \"zuhiul\"\ntags:\n  - 数学\n  - PE\n---\n\n\n[开启传送门](https://projecteuler.net/problem=276)\n\n### 题目描述\n<!-- more -->\n\nConsider the triangles with integer sides $a, b$ and $c$ with $a \\leq b \\leq c$.\nAn integer sided triangle $(a,b,c)$ is called primitive if $gcd(a,b,c)=1$.\nHow many primitive integer sided triangles exist with a perimeter not exceeding $10,000,000$?\n\n## 题意\n\n问你存在多少个边长是整数的三角形,并且满足三边长的gcd为1,周长不超过$1e7$.\n\n## 分析\n\n有一个比较奇奇怪怪的[结论](http://mathworld.wolfram.com/IntegerTriangle.html)\n\n我直接把结论搬过来$\\dots$\n\n\\begin{eqnarray}\n\tF(n) = \n\t\\begin{cases}\n\t\\lfloor\\frac{(n+3)^2+24}{48}\\rfloor\\ \\ \\ \\ &n\\ \\ is\\ \\ odd\\\\\\\n\t\\lfloor\\frac{n^2+24}{48}\\rfloor\\ \\ \\ \\ &n\\ \\ is\\ \\ even\\\\\n\t\\end{cases}\n\\end{eqnarray}\n\n这个结论说的是,周长为$n$的边长都是整数的三角形的数量.然后我们可以预处理出所有的周长为$n$的数量出来,然后我们怎么保证gcd呢,比较好想的就是容斥,我们容斥掉所有gcd不是1的就行了,也就是说我们用周长为$2\\cdot n,3\\cdot n,\\dots$的减去周长为$n$的就行啦啦啦\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxm = 1e7+1;\nlong long num[maxm];\nlong long get(long long a){\n\tif(a&1) return ((a+3)*(a+3)+24)/48;\n\treturn (a*a+24)/48;\n}\nvoid init(){//预处理出每个周长对应的三角形数量,容斥得到正确的数量\n\tfor(int i = 1;i<maxm;i++) num[i] = get(i);\n\tfor(int i = 1;i<maxm;i++) for(int j = i<<1;j<maxm;j+=i) num[j]-=num[i];\n}\nint main(){\n\tinit();\n\tlong long ans = 0;\n\tfor(int i = 1;i<maxm;i++) ans+=num[i];\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n","slug":"PE/PE276","published":1,"updated":"2019-04-14T08:29:20.624Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1g4000da613895x5r3e","content":"<p><a href=\"https://projecteuler.net/problem=276\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><a id=\"more\"></a>\n<p>Consider the triangles with integer sides $a, b$ and $c$ with $a \\leq b \\leq c$.<br>An integer sided triangle $(a,b,c)$ is called primitive if $gcd(a,b,c)=1$.<br>How many primitive integer sided triangles exist with a perimeter not exceeding $10,000,000$?</p>\n<h2 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h2><p>问你存在多少个边长是整数的三角形,并且满足三边长的gcd为1,周长不超过$1e7$.</p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>有一个比较奇奇怪怪的<a href=\"http://mathworld.wolfram.com/IntegerTriangle.html\" target=\"_blank\" rel=\"noopener\">结论</a></p>\n<p>我直接把结论搬过来$\\dots$</p>\n<p>\\begin{eqnarray}<br>    F(n) =<br>    \\begin{cases}<br>    \\lfloor\\frac{(n+3)^2+24}{48}\\rfloor\\ \\ \\ \\ &amp;n\\ \\ is\\ \\ odd\\\\<br>    \\lfloor\\frac{n^2+24}{48}\\rfloor\\ \\ \\ \\ &amp;n\\ \\ is\\ \\ even\\<br>    \\end{cases}<br>\\end{eqnarray}</p>\n<p>这个结论说的是,周长为$n$的边长都是整数的三角形的数量.然后我们可以预处理出所有的周长为$n$的数量出来,然后我们怎么保证gcd呢,比较好想的就是容斥,我们容斥掉所有gcd不是1的就行了,也就是说我们用周长为$2\\cdot n,3\\cdot n,\\dots$的减去周长为$n$的就行啦啦啦</p>\n<p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">1e7</span>+<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> num[maxm];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">get</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a&amp;<span class=\"number\">1</span>) <span class=\"keyword\">return</span> ((a+<span class=\"number\">3</span>)*(a+<span class=\"number\">3</span>)+<span class=\"number\">24</span>)/<span class=\"number\">48</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> (a*a+<span class=\"number\">24</span>)/<span class=\"number\">48</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;<span class=\"comment\">//预处理出每个周长对应的三角形数量,容斥得到正确的数量</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;maxm;i++) num[i] = get(i);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;maxm;i++) <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = i&lt;&lt;<span class=\"number\">1</span>;j&lt;maxm;j+=i) num[j]-=num[i];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tinit();</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;maxm;i++) ans+=num[i];</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://projecteuler.net/problem=276\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3>","more":"<p>Consider the triangles with integer sides $a, b$ and $c$ with $a \\leq b \\leq c$.<br>An integer sided triangle $(a,b,c)$ is called primitive if $gcd(a,b,c)=1$.<br>How many primitive integer sided triangles exist with a perimeter not exceeding $10,000,000$?</p>\n<h2 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h2><p>问你存在多少个边长是整数的三角形,并且满足三边长的gcd为1,周长不超过$1e7$.</p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>有一个比较奇奇怪怪的<a href=\"http://mathworld.wolfram.com/IntegerTriangle.html\" target=\"_blank\" rel=\"noopener\">结论</a></p>\n<p>我直接把结论搬过来$\\dots$</p>\n<p>\\begin{eqnarray}<br>    F(n) =<br>    \\begin{cases}<br>    \\lfloor\\frac{(n+3)^2+24}{48}\\rfloor\\ \\ \\ \\ &amp;n\\ \\ is\\ \\ odd\\\\<br>    \\lfloor\\frac{n^2+24}{48}\\rfloor\\ \\ \\ \\ &amp;n\\ \\ is\\ \\ even\\<br>    \\end{cases}<br>\\end{eqnarray}</p>\n<p>这个结论说的是,周长为$n$的边长都是整数的三角形的数量.然后我们可以预处理出所有的周长为$n$的数量出来,然后我们怎么保证gcd呢,比较好想的就是容斥,我们容斥掉所有gcd不是1的就行了,也就是说我们用周长为$2\\cdot n,3\\cdot n,\\dots$的减去周长为$n$的就行啦啦啦</p>\n<p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">1e7</span>+<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> num[maxm];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">get</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a&amp;<span class=\"number\">1</span>) <span class=\"keyword\">return</span> ((a+<span class=\"number\">3</span>)*(a+<span class=\"number\">3</span>)+<span class=\"number\">24</span>)/<span class=\"number\">48</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> (a*a+<span class=\"number\">24</span>)/<span class=\"number\">48</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;<span class=\"comment\">//预处理出每个周长对应的三角形数量,容斥得到正确的数量</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;maxm;i++) num[i] = get(i);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;maxm;i++) <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = i&lt;&lt;<span class=\"number\">1</span>;j&lt;maxm;j+=i) num[j]-=num[i];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tinit();</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;maxm;i++) ans+=num[i];</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Project Euler 303 Multiples with small digits","date":"2018-12-07T16:00:00.000Z","author":"zuhiul","_content":"\n[开启传送门](https://projecteuler.net/problem=303)\n\n### 题目描述\n<!-- more -->\n\nFor a positive integer $n$, define $f(n)$ as the least positive multiple of $n$ that, written in base $10$, uses only digits $≤ 2$.\n\nThus $f(2)=2, f(3)=12, f(7)=21, f(42)=210, f(89)=1121222$.\n\nAlso,$ \\sum_{n=1}^{100} \\frac{f(n)}{n} = 11363107 $\n\nFind $ \\sum_{n=1}^{10000} \\frac{f(n)}{n}.  $\n\n### 题意\n\n问你对于每个数字来说，找到他的一个最小整数倍，使得最小整数倍在十进制下每位都小于3\n\n### 分析\n\n很显然，考的是搜索，如何高效搜索．\n\n最简单的想法就是枚举倍数，然后逐个判断是否合法，然后你会发现所有$999$的倍数都Ｔ飞了\n\n然后考虑剪枝，因为可以显然得到，有些倍数一定无效，比如：\n\n$5来说，5\\ast 1 = 5,5\\ast 11 = 55,5\\ast 21 = 105 \\dots$\n\n可以显然发现，对于$5$来说，以$1$结尾的倍数显然都不合理，因为他们的最后一位一定是$5$，可以直接判断掉．\n\n然后你就就基本可以过掉大部分数据，但是还是有一个比较头疼，那就是$9999$.\n\n因为他对应的答案贼大，暴力搜索基本都GG．然后我们换一个思路．\n\n那就是我们直接暴力枚举所有的那些看起来长的像$3$进制的十进制数．\n\n然后我们就直接存储所有的这样的数字，然后枚举？\n\n那么显然内存不够，那怎么办呢？\n\ndfs?\n\n还是Ｔ飞，所以我们还要在此基础上剪枝．\n\n首先我们可以构造出一种做法就是，每次搜索的时候得到的都是之前没出现过的最小的这类数字．\n\n然后我们维护一个mod数组，表示当前这个mod正确的情况下，最小的这类数字是多少\n\n然后答案显然就是mod[0]啦.......\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\n#define ll unsigned long long\nusing namespace std;\nll vis[10000+100];\nll cal(int a){\n\tqueue<ll> que;\n\tque.push(1),que.push(2);\n\tmemset(vis,0,sizeof vis);\n\tvis[1] = 1; vis[2] = 2;\n\twhile(true){\n\t\tll now = que.front(); que.pop();\n\t\tif(now%a==0) return now/a;\n\t\tfor(int i = 0;i<3;i++){\n\t\t\tll buf = now*10+i;\n\t\t\tll buff = buf%a;\n\t\t\tif(vis[buff]) continue;\n\t\t\tvis[buff] = buf;\n\t\t\tque.push(buf);\n\t\t}\n\t}\n}\nint main(){\n\tll ans = 0;\n\tfor(int i = 1;i<=10000;i++) ans+=cal(i);\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n","source":"_posts/PE/PE303.md","raw":"---\ntitle: Project Euler 303 Multiples with small digits \ndate:\t2018-12-08\nauthor:\t\"zuhiul\"\ntags:\n  - 搜索\n  - PE\n---\n\n[开启传送门](https://projecteuler.net/problem=303)\n\n### 题目描述\n<!-- more -->\n\nFor a positive integer $n$, define $f(n)$ as the least positive multiple of $n$ that, written in base $10$, uses only digits $≤ 2$.\n\nThus $f(2)=2, f(3)=12, f(7)=21, f(42)=210, f(89)=1121222$.\n\nAlso,$ \\sum_{n=1}^{100} \\frac{f(n)}{n} = 11363107 $\n\nFind $ \\sum_{n=1}^{10000} \\frac{f(n)}{n}.  $\n\n### 题意\n\n问你对于每个数字来说，找到他的一个最小整数倍，使得最小整数倍在十进制下每位都小于3\n\n### 分析\n\n很显然，考的是搜索，如何高效搜索．\n\n最简单的想法就是枚举倍数，然后逐个判断是否合法，然后你会发现所有$999$的倍数都Ｔ飞了\n\n然后考虑剪枝，因为可以显然得到，有些倍数一定无效，比如：\n\n$5来说，5\\ast 1 = 5,5\\ast 11 = 55,5\\ast 21 = 105 \\dots$\n\n可以显然发现，对于$5$来说，以$1$结尾的倍数显然都不合理，因为他们的最后一位一定是$5$，可以直接判断掉．\n\n然后你就就基本可以过掉大部分数据，但是还是有一个比较头疼，那就是$9999$.\n\n因为他对应的答案贼大，暴力搜索基本都GG．然后我们换一个思路．\n\n那就是我们直接暴力枚举所有的那些看起来长的像$3$进制的十进制数．\n\n然后我们就直接存储所有的这样的数字，然后枚举？\n\n那么显然内存不够，那怎么办呢？\n\ndfs?\n\n还是Ｔ飞，所以我们还要在此基础上剪枝．\n\n首先我们可以构造出一种做法就是，每次搜索的时候得到的都是之前没出现过的最小的这类数字．\n\n然后我们维护一个mod数组，表示当前这个mod正确的情况下，最小的这类数字是多少\n\n然后答案显然就是mod[0]啦.......\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\n#define ll unsigned long long\nusing namespace std;\nll vis[10000+100];\nll cal(int a){\n\tqueue<ll> que;\n\tque.push(1),que.push(2);\n\tmemset(vis,0,sizeof vis);\n\tvis[1] = 1; vis[2] = 2;\n\twhile(true){\n\t\tll now = que.front(); que.pop();\n\t\tif(now%a==0) return now/a;\n\t\tfor(int i = 0;i<3;i++){\n\t\t\tll buf = now*10+i;\n\t\t\tll buff = buf%a;\n\t\t\tif(vis[buff]) continue;\n\t\t\tvis[buff] = buf;\n\t\t\tque.push(buf);\n\t\t}\n\t}\n}\nint main(){\n\tll ans = 0;\n\tfor(int i = 1;i<=10000;i++) ans+=cal(i);\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n","slug":"PE/PE303","published":1,"updated":"2019-04-14T08:28:14.151Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1g6000ga613gjr2ok12","content":"<p><a href=\"https://projecteuler.net/problem=303\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><a id=\"more\"></a>\n<p>For a positive integer $n$, define $f(n)$ as the least positive multiple of $n$ that, written in base $10$, uses only digits $≤ 2$.</p>\n<p>Thus $f(2)=2, f(3)=12, f(7)=21, f(42)=210, f(89)=1121222$.</p>\n<p>Also,$ \\sum_{n=1}^{100} \\frac{f(n)}{n} = 11363107 $</p>\n<p>Find $ \\sum_{n=1}^{10000} \\frac{f(n)}{n}.  $</p>\n<h3 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>问你对于每个数字来说，找到他的一个最小整数倍，使得最小整数倍在十进制下每位都小于3</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>很显然，考的是搜索，如何高效搜索．</p>\n<p>最简单的想法就是枚举倍数，然后逐个判断是否合法，然后你会发现所有$999$的倍数都Ｔ飞了</p>\n<p>然后考虑剪枝，因为可以显然得到，有些倍数一定无效，比如：</p>\n<p>$5来说，5\\ast 1 = 5,5\\ast 11 = 55,5\\ast 21 = 105 \\dots$</p>\n<p>可以显然发现，对于$5$来说，以$1$结尾的倍数显然都不合理，因为他们的最后一位一定是$5$，可以直接判断掉．</p>\n<p>然后你就就基本可以过掉大部分数据，但是还是有一个比较头疼，那就是$9999$.</p>\n<p>因为他对应的答案贼大，暴力搜索基本都GG．然后我们换一个思路．</p>\n<p>那就是我们直接暴力枚举所有的那些看起来长的像$3$进制的十进制数．</p>\n<p>然后我们就直接存储所有的这样的数字，然后枚举？</p>\n<p>那么显然内存不够，那怎么办呢？</p>\n<p>dfs?</p>\n<p>还是Ｔ飞，所以我们还要在此基础上剪枝．</p>\n<p>首先我们可以构造出一种做法就是，每次搜索的时候得到的都是之前没出现过的最小的这类数字．</p>\n<p>然后我们维护一个mod数组，表示当前这个mod正确的情况下，最小的这类数字是多少</p>\n<p>然后答案显然就是mod[0]啦…….</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ll unsigned long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\">ll vis[<span class=\"number\">10000</span>+<span class=\"number\">100</span>];</span><br><span class=\"line\"><span class=\"function\">ll <span class=\"title\">cal</span><span class=\"params\">(<span class=\"keyword\">int</span> a)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">queue</span>&lt;ll&gt; que;</span><br><span class=\"line\">\tque.push(<span class=\"number\">1</span>),que.push(<span class=\"number\">2</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(vis,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span> vis);</span><br><span class=\"line\">\tvis[<span class=\"number\">1</span>] = <span class=\"number\">1</span>; vis[<span class=\"number\">2</span>] = <span class=\"number\">2</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">\t\tll now = que.front(); que.pop();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(now%a==<span class=\"number\">0</span>) <span class=\"keyword\">return</span> now/a;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;<span class=\"number\">3</span>;i++)&#123;</span><br><span class=\"line\">\t\t\tll buf = now*<span class=\"number\">10</span>+i;</span><br><span class=\"line\">\t\t\tll buff = buf%a;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(vis[buff]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\tvis[buff] = buf;</span><br><span class=\"line\">\t\t\tque.push(buf);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tll ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=<span class=\"number\">10000</span>;i++) ans+=cal(i);</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://projecteuler.net/problem=303\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3>","more":"<p>For a positive integer $n$, define $f(n)$ as the least positive multiple of $n$ that, written in base $10$, uses only digits $≤ 2$.</p>\n<p>Thus $f(2)=2, f(3)=12, f(7)=21, f(42)=210, f(89)=1121222$.</p>\n<p>Also,$ \\sum_{n=1}^{100} \\frac{f(n)}{n} = 11363107 $</p>\n<p>Find $ \\sum_{n=1}^{10000} \\frac{f(n)}{n}.  $</p>\n<h3 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>问你对于每个数字来说，找到他的一个最小整数倍，使得最小整数倍在十进制下每位都小于3</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>很显然，考的是搜索，如何高效搜索．</p>\n<p>最简单的想法就是枚举倍数，然后逐个判断是否合法，然后你会发现所有$999$的倍数都Ｔ飞了</p>\n<p>然后考虑剪枝，因为可以显然得到，有些倍数一定无效，比如：</p>\n<p>$5来说，5\\ast 1 = 5,5\\ast 11 = 55,5\\ast 21 = 105 \\dots$</p>\n<p>可以显然发现，对于$5$来说，以$1$结尾的倍数显然都不合理，因为他们的最后一位一定是$5$，可以直接判断掉．</p>\n<p>然后你就就基本可以过掉大部分数据，但是还是有一个比较头疼，那就是$9999$.</p>\n<p>因为他对应的答案贼大，暴力搜索基本都GG．然后我们换一个思路．</p>\n<p>那就是我们直接暴力枚举所有的那些看起来长的像$3$进制的十进制数．</p>\n<p>然后我们就直接存储所有的这样的数字，然后枚举？</p>\n<p>那么显然内存不够，那怎么办呢？</p>\n<p>dfs?</p>\n<p>还是Ｔ飞，所以我们还要在此基础上剪枝．</p>\n<p>首先我们可以构造出一种做法就是，每次搜索的时候得到的都是之前没出现过的最小的这类数字．</p>\n<p>然后我们维护一个mod数组，表示当前这个mod正确的情况下，最小的这类数字是多少</p>\n<p>然后答案显然就是mod[0]啦…….</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ll unsigned long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\">ll vis[<span class=\"number\">10000</span>+<span class=\"number\">100</span>];</span><br><span class=\"line\"><span class=\"function\">ll <span class=\"title\">cal</span><span class=\"params\">(<span class=\"keyword\">int</span> a)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">queue</span>&lt;ll&gt; que;</span><br><span class=\"line\">\tque.push(<span class=\"number\">1</span>),que.push(<span class=\"number\">2</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(vis,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span> vis);</span><br><span class=\"line\">\tvis[<span class=\"number\">1</span>] = <span class=\"number\">1</span>; vis[<span class=\"number\">2</span>] = <span class=\"number\">2</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">\t\tll now = que.front(); que.pop();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(now%a==<span class=\"number\">0</span>) <span class=\"keyword\">return</span> now/a;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;<span class=\"number\">3</span>;i++)&#123;</span><br><span class=\"line\">\t\t\tll buf = now*<span class=\"number\">10</span>+i;</span><br><span class=\"line\">\t\t\tll buff = buf%a;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(vis[buff]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\tvis[buff] = buf;</span><br><span class=\"line\">\t\t\tque.push(buf);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tll ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=<span class=\"number\">10000</span>;i++) ans+=cal(i);</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Project Euler 368 A Kempner-like series","date":"2018-12-20T16:00:00.000Z","author":"zuhiul","_content":"\n\n[开启传送门](https://projecteuler.net/problem=368)\n\n### 题目描述\n<!-- more -->\n\nThe **harmonic** series $1+\\frac{1}{2}+\\frac{1}{3}+\\frac{1}{4}+\\dots$ is well known to be divergent.\n\nIf we however omit from this series every term where the denominator has a $9$ in it, the series remarkably enough converges to approximately $22.9206766193$.\n\nThis modified harmonic series is called the **Kempner** series.\n\nLet us now consider another modified harmonic series by omitting from the harmonic series every term where the denominator has $3$ or more equal consecutive digits. One can verify that out of the first $1200$ terms of the harmonic series, only $20$ terms will be omitted.\nThese $20$ omitted terms are:\n\n$$\\frac{1}{111},\\frac{1}{222},\\frac{1}{333},\\frac{1}{444},\\frac{1}{555},\\frac{1}{666},\\frac{1}{777},\\frac{1}{888},\\frac{1}{999},\\frac{1}{1000},\\frac{1}{1110}, \\frac{1}{1111},\\frac{1}{1112},\\frac{1}{1113},\\frac{1}{1114},\\frac{1}{1115},\\frac{1}{1116},\\frac{1}{1117},\\frac{1}{1118},\\frac{1}{1119}$$\n\nThis series converges as well.\n\nFind the value the series converges to.\nGive your answer rounded to $10$ digits behind the decimal point.\n\n## 题意\n\n就是,调和级数不是发散的嘛,然后让你删掉那些分母含有连续三个相同数字的,然后可以证明剩下的级数是收敛的,然后问你收敛于多少.\n\n## 分析\n\n做法比较巧妙,下面一点点分析.\n\n首先我们令$S_1(n,d)$表示一个包含所有这样的$n$位数的集合,集合中所有的$n$位数最后一位是$n$,并且倒数第二位不是$n$.\n\n$S_2(n,d)$表示一个包含所有这样的$n$位数的集合,集合中所有的$n$位数最后两位是$n$,并且倒数第三位不是$n$.\n\n然后我们令\n\n$f_1(n,d,j)$ = $\\sum_{x\\in S_1(n,d)} \\frac{1}{x^j}$\n\n$f_2(n,d,j)$ = $\\sum_{x\\in S_2(n,d)} \\frac{1}{x^j}$\n\n然后答案显然就是\n\n$\\sum_{i=1}^{99} \\frac{1}{i}+\\sum_{n=3}^{\\infty } \\sum_{d=0}^{9} [f_1(n,d,1)+f_2(n,d,1)]$\n\n关键是我们怎么算$f_1(n,d,j)$和$f_2(n,d,j)$\n\n二者分析方法一样,这里给出$f_2(n,d,j)$怎么推出来的.\n\n首先根据定义我们有\n\n$f_2(n,d,j)$ = $\\sum_{x\\in S_2(n,d)} \\frac{1}{x^j}$\n\n我们不妨枚举每一个$x$,然后累加就是答案,所以子问题就是如何快速计算$\\frac{1}{x^j} where x \\in S_2(n,d)$\n\n因为最后一位是$d$,所以我们不妨设$x$ = $y\\ast 100+d\\ast 10+d$\n\n然后可以得到\n\n$$\n(\\frac{1}{x\\ast 100+d\\ast 10+d})^j=\\frac{1}{10^j} \\cdot \\frac{1}{(x\\ast 10+d)^j} \\cdot (\\frac{1}{1+\\frac{d}{x\\ast 100+d\\ast 10}})^j\n$$\n\n然后我们将第三个分式化简.\n\n考虑到\n\n$(1+a)^{-b} = \\sum_{i=0}^{\\infty } C_{b+i-1}^i \\cdot (-a)^b$\n\n所以上式可以化简为\n\n\\begin{eqnarray}\n(\\frac{1}{x\\ast 100+d\\ast 10+d})^j\n&=& \\frac{1}{10^j} \\cdot \\frac{1}{(x\\ast 10+d)^j} \\cdot \\sum_{i=0}^{\\infty } C_{j+i-1}^{i}(\\frac{-d}{x\\ast 100+d\\ast 10})^i\\\\\\\n&=& \\frac{1}{10^j} \\cdot \\frac{1}{(x\\ast 10+d)^j} \\cdot \\sum_{i=0}^{\\infty } C_{j+i-1}^{i}(\\frac{-d}{10})^i\\cdot(\\frac{1}{x\\ast 10+d})^i\\\\\\\n&=& \\frac{1}{10^j} \\sum_{i=0}^{\\infty } C_{j+i-1}^{i} \\cdot (\\frac{-d}{10})^i \\cdot (\\frac{1}{x\\ast 10+d})^{i+j}\\\\\\\n\\end{eqnarray}\n\n然后我们考虑累加所有的$x$也就是原来的$f_2(n,d,j)$\n\n可以得到\n\n$$f_2(n,d,j) = \\frac{1}{10^j} \\sum_{i=0}^{\\infty } (\\frac{-d}{10})^i \\cdot C_{j+i-1}^{i} \\cdot f_1(n-1,d,i+j)$$\n\n同理可以推得 $f_1(n,d,j)$\n\n然后就是代码如下啦啦啦$\\dots$\n\n## 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxm = 40;\ndouble C[maxm*3][maxm*3];\ndouble f1[2][10][maxm+1];\ndouble f2[2][10][maxm+1];\ndouble ans = 0;\nvoid init(){//预处理出组合数和前99项的答案\n\tfor(int i = 0;i<maxm*3;i++) for(int j = 0;j<=i;j++){\n\t\tif(j==0) C[i][j] = 1;\n\t\telse C[i][j] = C[i-1][j-1]+C[i-1][j];\n\t}\n\tfor(int i = 1;i<100;i++) ans+=1.0/i;\n}\nint main(){\n\tinit();\n\tfor(int d = 0;d<=9;d++){//预处理出n = 3的情况\n\t\tfor(int j = 1;j<=maxm;j++){\n\t\t\tfor(int pre = 10;pre<100;pre++){\n\t\t\t\tint fir = pre/10;\n\t\t\t\tint sec = pre%10;\n\t\t\t\tif(fir==sec&&sec==d) continue;\n\t\t\t\tif(sec==d) f2[1][d][j]+=1.0/pow(pre*10+d,j);\n\t\t\t\telse f1[1][d][j]+=1.0/pow(pre*10+d,j);\n\t\t\t}\n\t\t}\n\t\tans+=f1[1][d][1]+f2[1][d][1];\n\t}\n\tfor(int nouse = 4;nouse<=10000;nouse++){//滚动的算n>=4的时候\n\t\tint now = nouse&1;\n\t\tint las = now^1;\n\t\tfor(int d = 0;d<=9;d++){\n\t\t\tfor(int j = 1;j<=maxm;j++){\n\t\t\t\tf1[now][d][j] = f2[now][d][j] = 0;//别忘了初始化\n\t\t\t\tdouble pre = 1.0/pow(10.0,j);\n\t\t\t\tfor(int i = 0;i<=maxm;i++){\n\t\t\t\t\tif(i+j<=maxm) f2[now][d][j]+=pre*C[j+i-1][i]*f1[las][d][i+j];\n\t\t\t\t\tfor(int x = 0;x<10;x++){\n\t\t\t\t\t\tif(x==d) continue;\n\t\t\t\t\t\tif(i+j<=maxm) f1[now][d][j]+=pre*C[j+i-1][i]*(f1[las][x][i+j]+f2[las][x][i+j]);\n\t\t\t\t\t}\n\t\t\t\t\tpre*=-d/10.0;\n\t\t\t\t}\t\t\t\n\t\t\t}\n\t\t\tans+=f1[now][d][1]+f2[now][d][1];\n\t\t}\n\t\tprintf(\"%.10f\\n\",ans);\n\t}\n\treturn 0;\n}\n\n```\n\n","source":"_posts/PE/PE368.md","raw":"---\ntitle: Project Euler 368 A Kempner-like series\ndate:       2018-12-21\nauthor:     \"zuhiul\"\ntags:\n  - 数学\n  - PE\n---\n\n\n[开启传送门](https://projecteuler.net/problem=368)\n\n### 题目描述\n<!-- more -->\n\nThe **harmonic** series $1+\\frac{1}{2}+\\frac{1}{3}+\\frac{1}{4}+\\dots$ is well known to be divergent.\n\nIf we however omit from this series every term where the denominator has a $9$ in it, the series remarkably enough converges to approximately $22.9206766193$.\n\nThis modified harmonic series is called the **Kempner** series.\n\nLet us now consider another modified harmonic series by omitting from the harmonic series every term where the denominator has $3$ or more equal consecutive digits. One can verify that out of the first $1200$ terms of the harmonic series, only $20$ terms will be omitted.\nThese $20$ omitted terms are:\n\n$$\\frac{1}{111},\\frac{1}{222},\\frac{1}{333},\\frac{1}{444},\\frac{1}{555},\\frac{1}{666},\\frac{1}{777},\\frac{1}{888},\\frac{1}{999},\\frac{1}{1000},\\frac{1}{1110}, \\frac{1}{1111},\\frac{1}{1112},\\frac{1}{1113},\\frac{1}{1114},\\frac{1}{1115},\\frac{1}{1116},\\frac{1}{1117},\\frac{1}{1118},\\frac{1}{1119}$$\n\nThis series converges as well.\n\nFind the value the series converges to.\nGive your answer rounded to $10$ digits behind the decimal point.\n\n## 题意\n\n就是,调和级数不是发散的嘛,然后让你删掉那些分母含有连续三个相同数字的,然后可以证明剩下的级数是收敛的,然后问你收敛于多少.\n\n## 分析\n\n做法比较巧妙,下面一点点分析.\n\n首先我们令$S_1(n,d)$表示一个包含所有这样的$n$位数的集合,集合中所有的$n$位数最后一位是$n$,并且倒数第二位不是$n$.\n\n$S_2(n,d)$表示一个包含所有这样的$n$位数的集合,集合中所有的$n$位数最后两位是$n$,并且倒数第三位不是$n$.\n\n然后我们令\n\n$f_1(n,d,j)$ = $\\sum_{x\\in S_1(n,d)} \\frac{1}{x^j}$\n\n$f_2(n,d,j)$ = $\\sum_{x\\in S_2(n,d)} \\frac{1}{x^j}$\n\n然后答案显然就是\n\n$\\sum_{i=1}^{99} \\frac{1}{i}+\\sum_{n=3}^{\\infty } \\sum_{d=0}^{9} [f_1(n,d,1)+f_2(n,d,1)]$\n\n关键是我们怎么算$f_1(n,d,j)$和$f_2(n,d,j)$\n\n二者分析方法一样,这里给出$f_2(n,d,j)$怎么推出来的.\n\n首先根据定义我们有\n\n$f_2(n,d,j)$ = $\\sum_{x\\in S_2(n,d)} \\frac{1}{x^j}$\n\n我们不妨枚举每一个$x$,然后累加就是答案,所以子问题就是如何快速计算$\\frac{1}{x^j} where x \\in S_2(n,d)$\n\n因为最后一位是$d$,所以我们不妨设$x$ = $y\\ast 100+d\\ast 10+d$\n\n然后可以得到\n\n$$\n(\\frac{1}{x\\ast 100+d\\ast 10+d})^j=\\frac{1}{10^j} \\cdot \\frac{1}{(x\\ast 10+d)^j} \\cdot (\\frac{1}{1+\\frac{d}{x\\ast 100+d\\ast 10}})^j\n$$\n\n然后我们将第三个分式化简.\n\n考虑到\n\n$(1+a)^{-b} = \\sum_{i=0}^{\\infty } C_{b+i-1}^i \\cdot (-a)^b$\n\n所以上式可以化简为\n\n\\begin{eqnarray}\n(\\frac{1}{x\\ast 100+d\\ast 10+d})^j\n&=& \\frac{1}{10^j} \\cdot \\frac{1}{(x\\ast 10+d)^j} \\cdot \\sum_{i=0}^{\\infty } C_{j+i-1}^{i}(\\frac{-d}{x\\ast 100+d\\ast 10})^i\\\\\\\n&=& \\frac{1}{10^j} \\cdot \\frac{1}{(x\\ast 10+d)^j} \\cdot \\sum_{i=0}^{\\infty } C_{j+i-1}^{i}(\\frac{-d}{10})^i\\cdot(\\frac{1}{x\\ast 10+d})^i\\\\\\\n&=& \\frac{1}{10^j} \\sum_{i=0}^{\\infty } C_{j+i-1}^{i} \\cdot (\\frac{-d}{10})^i \\cdot (\\frac{1}{x\\ast 10+d})^{i+j}\\\\\\\n\\end{eqnarray}\n\n然后我们考虑累加所有的$x$也就是原来的$f_2(n,d,j)$\n\n可以得到\n\n$$f_2(n,d,j) = \\frac{1}{10^j} \\sum_{i=0}^{\\infty } (\\frac{-d}{10})^i \\cdot C_{j+i-1}^{i} \\cdot f_1(n-1,d,i+j)$$\n\n同理可以推得 $f_1(n,d,j)$\n\n然后就是代码如下啦啦啦$\\dots$\n\n## 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxm = 40;\ndouble C[maxm*3][maxm*3];\ndouble f1[2][10][maxm+1];\ndouble f2[2][10][maxm+1];\ndouble ans = 0;\nvoid init(){//预处理出组合数和前99项的答案\n\tfor(int i = 0;i<maxm*3;i++) for(int j = 0;j<=i;j++){\n\t\tif(j==0) C[i][j] = 1;\n\t\telse C[i][j] = C[i-1][j-1]+C[i-1][j];\n\t}\n\tfor(int i = 1;i<100;i++) ans+=1.0/i;\n}\nint main(){\n\tinit();\n\tfor(int d = 0;d<=9;d++){//预处理出n = 3的情况\n\t\tfor(int j = 1;j<=maxm;j++){\n\t\t\tfor(int pre = 10;pre<100;pre++){\n\t\t\t\tint fir = pre/10;\n\t\t\t\tint sec = pre%10;\n\t\t\t\tif(fir==sec&&sec==d) continue;\n\t\t\t\tif(sec==d) f2[1][d][j]+=1.0/pow(pre*10+d,j);\n\t\t\t\telse f1[1][d][j]+=1.0/pow(pre*10+d,j);\n\t\t\t}\n\t\t}\n\t\tans+=f1[1][d][1]+f2[1][d][1];\n\t}\n\tfor(int nouse = 4;nouse<=10000;nouse++){//滚动的算n>=4的时候\n\t\tint now = nouse&1;\n\t\tint las = now^1;\n\t\tfor(int d = 0;d<=9;d++){\n\t\t\tfor(int j = 1;j<=maxm;j++){\n\t\t\t\tf1[now][d][j] = f2[now][d][j] = 0;//别忘了初始化\n\t\t\t\tdouble pre = 1.0/pow(10.0,j);\n\t\t\t\tfor(int i = 0;i<=maxm;i++){\n\t\t\t\t\tif(i+j<=maxm) f2[now][d][j]+=pre*C[j+i-1][i]*f1[las][d][i+j];\n\t\t\t\t\tfor(int x = 0;x<10;x++){\n\t\t\t\t\t\tif(x==d) continue;\n\t\t\t\t\t\tif(i+j<=maxm) f1[now][d][j]+=pre*C[j+i-1][i]*(f1[las][x][i+j]+f2[las][x][i+j]);\n\t\t\t\t\t}\n\t\t\t\t\tpre*=-d/10.0;\n\t\t\t\t}\t\t\t\n\t\t\t}\n\t\t\tans+=f1[now][d][1]+f2[now][d][1];\n\t\t}\n\t\tprintf(\"%.10f\\n\",ans);\n\t}\n\treturn 0;\n}\n\n```\n\n","slug":"PE/PE368","published":1,"updated":"2019-04-14T08:29:37.975Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1g6000ha613t46xg75d","content":"<p><a href=\"https://projecteuler.net/problem=368\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><a id=\"more\"></a>\n<p>The <strong>harmonic</strong> series $1+\\frac{1}{2}+\\frac{1}{3}+\\frac{1}{4}+\\dots$ is well known to be divergent.</p>\n<p>If we however omit from this series every term where the denominator has a $9$ in it, the series remarkably enough converges to approximately $22.9206766193$.</p>\n<p>This modified harmonic series is called the <strong>Kempner</strong> series.</p>\n<p>Let us now consider another modified harmonic series by omitting from the harmonic series every term where the denominator has $3$ or more equal consecutive digits. One can verify that out of the first $1200$ terms of the harmonic series, only $20$ terms will be omitted.<br>These $20$ omitted terms are:</p>\n<p>$$\\frac{1}{111},\\frac{1}{222},\\frac{1}{333},\\frac{1}{444},\\frac{1}{555},\\frac{1}{666},\\frac{1}{777},\\frac{1}{888},\\frac{1}{999},\\frac{1}{1000},\\frac{1}{1110}, \\frac{1}{1111},\\frac{1}{1112},\\frac{1}{1113},\\frac{1}{1114},\\frac{1}{1115},\\frac{1}{1116},\\frac{1}{1117},\\frac{1}{1118},\\frac{1}{1119}$$</p>\n<p>This series converges as well.</p>\n<p>Find the value the series converges to.<br>Give your answer rounded to $10$ digits behind the decimal point.</p>\n<h2 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h2><p>就是,调和级数不是发散的嘛,然后让你删掉那些分母含有连续三个相同数字的,然后可以证明剩下的级数是收敛的,然后问你收敛于多少.</p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>做法比较巧妙,下面一点点分析.</p>\n<p>首先我们令$S_1(n,d)$表示一个包含所有这样的$n$位数的集合,集合中所有的$n$位数最后一位是$n$,并且倒数第二位不是$n$.</p>\n<p>$S_2(n,d)$表示一个包含所有这样的$n$位数的集合,集合中所有的$n$位数最后两位是$n$,并且倒数第三位不是$n$.</p>\n<p>然后我们令</p>\n<p>$f_1(n,d,j)$ = $\\sum_{x\\in S_1(n,d)} \\frac{1}{x^j}$</p>\n<p>$f_2(n,d,j)$ = $\\sum_{x\\in S_2(n,d)} \\frac{1}{x^j}$</p>\n<p>然后答案显然就是</p>\n<p>$\\sum_{i=1}^{99} \\frac{1}{i}+\\sum_{n=3}^{\\infty } \\sum_{d=0}^{9} [f_1(n,d,1)+f_2(n,d,1)]$</p>\n<p>关键是我们怎么算$f_1(n,d,j)$和$f_2(n,d,j)$</p>\n<p>二者分析方法一样,这里给出$f_2(n,d,j)$怎么推出来的.</p>\n<p>首先根据定义我们有</p>\n<p>$f_2(n,d,j)$ = $\\sum_{x\\in S_2(n,d)} \\frac{1}{x^j}$</p>\n<p>我们不妨枚举每一个$x$,然后累加就是答案,所以子问题就是如何快速计算$\\frac{1}{x^j} where x \\in S_2(n,d)$</p>\n<p>因为最后一位是$d$,所以我们不妨设$x$ = $y\\ast 100+d\\ast 10+d$</p>\n<p>然后可以得到</p>\n<p>$$<br>(\\frac{1}{x\\ast 100+d\\ast 10+d})^j=\\frac{1}{10^j} \\cdot \\frac{1}{(x\\ast 10+d)^j} \\cdot (\\frac{1}{1+\\frac{d}{x\\ast 100+d\\ast 10}})^j<br>$$</p>\n<p>然后我们将第三个分式化简.</p>\n<p>考虑到</p>\n<p>$(1+a)^{-b} = \\sum_{i=0}^{\\infty } C_{b+i-1}^i \\cdot (-a)^b$</p>\n<p>所以上式可以化简为</p>\n<p>\\begin{eqnarray}<br>(\\frac{1}{x\\ast 100+d\\ast 10+d})^j<br>&amp;=&amp; \\frac{1}{10^j} \\cdot \\frac{1}{(x\\ast 10+d)^j} \\cdot \\sum_{i=0}^{\\infty } C_{j+i-1}^{i}(\\frac{-d}{x\\ast 100+d\\ast 10})^i\\\\<br>&amp;=&amp; \\frac{1}{10^j} \\cdot \\frac{1}{(x\\ast 10+d)^j} \\cdot \\sum_{i=0}^{\\infty } C_{j+i-1}^{i}(\\frac{-d}{10})^i\\cdot(\\frac{1}{x\\ast 10+d})^i\\\\<br>&amp;=&amp; \\frac{1}{10^j} \\sum_{i=0}^{\\infty } C_{j+i-1}^{i} \\cdot (\\frac{-d}{10})^i \\cdot (\\frac{1}{x\\ast 10+d})^{i+j}\\\\<br>\\end{eqnarray}</p>\n<p>然后我们考虑累加所有的$x$也就是原来的$f_2(n,d,j)$</p>\n<p>可以得到</p>\n<p>$$f_2(n,d,j) = \\frac{1}{10^j} \\sum_{i=0}^{\\infty } (\\frac{-d}{10})^i \\cdot C_{j+i-1}^{i} \\cdot f_1(n-1,d,i+j)$$</p>\n<p>同理可以推得 $f_1(n,d,j)$</p>\n<p>然后就是代码如下啦啦啦$\\dots$</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">40</span>;</span><br><span class=\"line\"><span class=\"keyword\">double</span> C[maxm*<span class=\"number\">3</span>][maxm*<span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">double</span> f1[<span class=\"number\">2</span>][<span class=\"number\">10</span>][maxm+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">double</span> f2[<span class=\"number\">2</span>][<span class=\"number\">10</span>][maxm+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">double</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;<span class=\"comment\">//预处理出组合数和前99项的答案</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;maxm*<span class=\"number\">3</span>;i++) <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j&lt;=i;j++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(j==<span class=\"number\">0</span>) C[i][j] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> C[i][j] = C[i<span class=\"number\">-1</span>][j<span class=\"number\">-1</span>]+C[i<span class=\"number\">-1</span>][j];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;<span class=\"number\">100</span>;i++) ans+=<span class=\"number\">1.0</span>/i;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tinit();</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> d = <span class=\"number\">0</span>;d&lt;=<span class=\"number\">9</span>;d++)&#123;<span class=\"comment\">//预处理出n = 3的情况</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>;j&lt;=maxm;j++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> pre = <span class=\"number\">10</span>;pre&lt;<span class=\"number\">100</span>;pre++)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">int</span> fir = pre/<span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">int</span> sec = pre%<span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(fir==sec&amp;&amp;sec==d) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(sec==d) f2[<span class=\"number\">1</span>][d][j]+=<span class=\"number\">1.0</span>/<span class=\"built_in\">pow</span>(pre*<span class=\"number\">10</span>+d,j);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> f1[<span class=\"number\">1</span>][d][j]+=<span class=\"number\">1.0</span>/<span class=\"built_in\">pow</span>(pre*<span class=\"number\">10</span>+d,j);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tans+=f1[<span class=\"number\">1</span>][d][<span class=\"number\">1</span>]+f2[<span class=\"number\">1</span>][d][<span class=\"number\">1</span>];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> nouse = <span class=\"number\">4</span>;nouse&lt;=<span class=\"number\">10000</span>;nouse++)&#123;<span class=\"comment\">//滚动的算n&gt;=4的时候</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> now = nouse&amp;<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> las = now^<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> d = <span class=\"number\">0</span>;d&lt;=<span class=\"number\">9</span>;d++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>;j&lt;=maxm;j++)&#123;</span><br><span class=\"line\">\t\t\t\tf1[now][d][j] = f2[now][d][j] = <span class=\"number\">0</span>;<span class=\"comment\">//别忘了初始化</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">double</span> pre = <span class=\"number\">1.0</span>/<span class=\"built_in\">pow</span>(<span class=\"number\">10.0</span>,j);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;=maxm;i++)&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(i+j&lt;=maxm) f2[now][d][j]+=pre*C[j+i<span class=\"number\">-1</span>][i]*f1[las][d][i+j];</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> x = <span class=\"number\">0</span>;x&lt;<span class=\"number\">10</span>;x++)&#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span>(x==d) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span>(i+j&lt;=maxm) f1[now][d][j]+=pre*C[j+i<span class=\"number\">-1</span>][i]*(f1[las][x][i+j]+f2[las][x][i+j]);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\tpre*=-d/<span class=\"number\">10.0</span>;</span><br><span class=\"line\">\t\t\t\t&#125;\t\t\t</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tans+=f1[now][d][<span class=\"number\">1</span>]+f2[now][d][<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%.10f\\n\"</span>,ans);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://projecteuler.net/problem=368\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3>","more":"<p>The <strong>harmonic</strong> series $1+\\frac{1}{2}+\\frac{1}{3}+\\frac{1}{4}+\\dots$ is well known to be divergent.</p>\n<p>If we however omit from this series every term where the denominator has a $9$ in it, the series remarkably enough converges to approximately $22.9206766193$.</p>\n<p>This modified harmonic series is called the <strong>Kempner</strong> series.</p>\n<p>Let us now consider another modified harmonic series by omitting from the harmonic series every term where the denominator has $3$ or more equal consecutive digits. One can verify that out of the first $1200$ terms of the harmonic series, only $20$ terms will be omitted.<br>These $20$ omitted terms are:</p>\n<p>$$\\frac{1}{111},\\frac{1}{222},\\frac{1}{333},\\frac{1}{444},\\frac{1}{555},\\frac{1}{666},\\frac{1}{777},\\frac{1}{888},\\frac{1}{999},\\frac{1}{1000},\\frac{1}{1110}, \\frac{1}{1111},\\frac{1}{1112},\\frac{1}{1113},\\frac{1}{1114},\\frac{1}{1115},\\frac{1}{1116},\\frac{1}{1117},\\frac{1}{1118},\\frac{1}{1119}$$</p>\n<p>This series converges as well.</p>\n<p>Find the value the series converges to.<br>Give your answer rounded to $10$ digits behind the decimal point.</p>\n<h2 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h2><p>就是,调和级数不是发散的嘛,然后让你删掉那些分母含有连续三个相同数字的,然后可以证明剩下的级数是收敛的,然后问你收敛于多少.</p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>做法比较巧妙,下面一点点分析.</p>\n<p>首先我们令$S_1(n,d)$表示一个包含所有这样的$n$位数的集合,集合中所有的$n$位数最后一位是$n$,并且倒数第二位不是$n$.</p>\n<p>$S_2(n,d)$表示一个包含所有这样的$n$位数的集合,集合中所有的$n$位数最后两位是$n$,并且倒数第三位不是$n$.</p>\n<p>然后我们令</p>\n<p>$f_1(n,d,j)$ = $\\sum_{x\\in S_1(n,d)} \\frac{1}{x^j}$</p>\n<p>$f_2(n,d,j)$ = $\\sum_{x\\in S_2(n,d)} \\frac{1}{x^j}$</p>\n<p>然后答案显然就是</p>\n<p>$\\sum_{i=1}^{99} \\frac{1}{i}+\\sum_{n=3}^{\\infty } \\sum_{d=0}^{9} [f_1(n,d,1)+f_2(n,d,1)]$</p>\n<p>关键是我们怎么算$f_1(n,d,j)$和$f_2(n,d,j)$</p>\n<p>二者分析方法一样,这里给出$f_2(n,d,j)$怎么推出来的.</p>\n<p>首先根据定义我们有</p>\n<p>$f_2(n,d,j)$ = $\\sum_{x\\in S_2(n,d)} \\frac{1}{x^j}$</p>\n<p>我们不妨枚举每一个$x$,然后累加就是答案,所以子问题就是如何快速计算$\\frac{1}{x^j} where x \\in S_2(n,d)$</p>\n<p>因为最后一位是$d$,所以我们不妨设$x$ = $y\\ast 100+d\\ast 10+d$</p>\n<p>然后可以得到</p>\n<p>$$<br>(\\frac{1}{x\\ast 100+d\\ast 10+d})^j=\\frac{1}{10^j} \\cdot \\frac{1}{(x\\ast 10+d)^j} \\cdot (\\frac{1}{1+\\frac{d}{x\\ast 100+d\\ast 10}})^j<br>$$</p>\n<p>然后我们将第三个分式化简.</p>\n<p>考虑到</p>\n<p>$(1+a)^{-b} = \\sum_{i=0}^{\\infty } C_{b+i-1}^i \\cdot (-a)^b$</p>\n<p>所以上式可以化简为</p>\n<p>\\begin{eqnarray}<br>(\\frac{1}{x\\ast 100+d\\ast 10+d})^j<br>&amp;=&amp; \\frac{1}{10^j} \\cdot \\frac{1}{(x\\ast 10+d)^j} \\cdot \\sum_{i=0}^{\\infty } C_{j+i-1}^{i}(\\frac{-d}{x\\ast 100+d\\ast 10})^i\\\\<br>&amp;=&amp; \\frac{1}{10^j} \\cdot \\frac{1}{(x\\ast 10+d)^j} \\cdot \\sum_{i=0}^{\\infty } C_{j+i-1}^{i}(\\frac{-d}{10})^i\\cdot(\\frac{1}{x\\ast 10+d})^i\\\\<br>&amp;=&amp; \\frac{1}{10^j} \\sum_{i=0}^{\\infty } C_{j+i-1}^{i} \\cdot (\\frac{-d}{10})^i \\cdot (\\frac{1}{x\\ast 10+d})^{i+j}\\\\<br>\\end{eqnarray}</p>\n<p>然后我们考虑累加所有的$x$也就是原来的$f_2(n,d,j)$</p>\n<p>可以得到</p>\n<p>$$f_2(n,d,j) = \\frac{1}{10^j} \\sum_{i=0}^{\\infty } (\\frac{-d}{10})^i \\cdot C_{j+i-1}^{i} \\cdot f_1(n-1,d,i+j)$$</p>\n<p>同理可以推得 $f_1(n,d,j)$</p>\n<p>然后就是代码如下啦啦啦$\\dots$</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">40</span>;</span><br><span class=\"line\"><span class=\"keyword\">double</span> C[maxm*<span class=\"number\">3</span>][maxm*<span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">double</span> f1[<span class=\"number\">2</span>][<span class=\"number\">10</span>][maxm+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">double</span> f2[<span class=\"number\">2</span>][<span class=\"number\">10</span>][maxm+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">double</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;<span class=\"comment\">//预处理出组合数和前99项的答案</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;maxm*<span class=\"number\">3</span>;i++) <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j&lt;=i;j++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(j==<span class=\"number\">0</span>) C[i][j] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> C[i][j] = C[i<span class=\"number\">-1</span>][j<span class=\"number\">-1</span>]+C[i<span class=\"number\">-1</span>][j];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;<span class=\"number\">100</span>;i++) ans+=<span class=\"number\">1.0</span>/i;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tinit();</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> d = <span class=\"number\">0</span>;d&lt;=<span class=\"number\">9</span>;d++)&#123;<span class=\"comment\">//预处理出n = 3的情况</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>;j&lt;=maxm;j++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> pre = <span class=\"number\">10</span>;pre&lt;<span class=\"number\">100</span>;pre++)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">int</span> fir = pre/<span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">int</span> sec = pre%<span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(fir==sec&amp;&amp;sec==d) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(sec==d) f2[<span class=\"number\">1</span>][d][j]+=<span class=\"number\">1.0</span>/<span class=\"built_in\">pow</span>(pre*<span class=\"number\">10</span>+d,j);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> f1[<span class=\"number\">1</span>][d][j]+=<span class=\"number\">1.0</span>/<span class=\"built_in\">pow</span>(pre*<span class=\"number\">10</span>+d,j);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tans+=f1[<span class=\"number\">1</span>][d][<span class=\"number\">1</span>]+f2[<span class=\"number\">1</span>][d][<span class=\"number\">1</span>];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> nouse = <span class=\"number\">4</span>;nouse&lt;=<span class=\"number\">10000</span>;nouse++)&#123;<span class=\"comment\">//滚动的算n&gt;=4的时候</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> now = nouse&amp;<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> las = now^<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> d = <span class=\"number\">0</span>;d&lt;=<span class=\"number\">9</span>;d++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>;j&lt;=maxm;j++)&#123;</span><br><span class=\"line\">\t\t\t\tf1[now][d][j] = f2[now][d][j] = <span class=\"number\">0</span>;<span class=\"comment\">//别忘了初始化</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">double</span> pre = <span class=\"number\">1.0</span>/<span class=\"built_in\">pow</span>(<span class=\"number\">10.0</span>,j);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;=maxm;i++)&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(i+j&lt;=maxm) f2[now][d][j]+=pre*C[j+i<span class=\"number\">-1</span>][i]*f1[las][d][i+j];</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> x = <span class=\"number\">0</span>;x&lt;<span class=\"number\">10</span>;x++)&#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span>(x==d) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span>(i+j&lt;=maxm) f1[now][d][j]+=pre*C[j+i<span class=\"number\">-1</span>][i]*(f1[las][x][i+j]+f2[las][x][i+j]);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\tpre*=-d/<span class=\"number\">10.0</span>;</span><br><span class=\"line\">\t\t\t\t&#125;\t\t\t</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tans+=f1[now][d][<span class=\"number\">1</span>]+f2[now][d][<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%.10f\\n\"</span>,ans);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"Project Euler 463 A weird recurrence relation","date":"2018-12-22T16:00:00.000Z","author":"zuhiul","_content":"\n\n[开启传送门](https://projecteuler.net/problem=463)\n\n### 题目描述\n<!-- more -->\n\nThe function $f$ is defined for all positive integers as follows:\n\n$f(1)$ = $1$\n\n$f(3)$ = $3$\n\n$f(2n)$ = $f(n)$\n\n$f(4n+1)$ = $2\\cdot f(2n+1)-f(n)$\n\n$f(4n+3)$ = $3\\cdot f(2n+1)-2\\cdot f(n)$\n\nThe function $S(n)$ is defined as $\\sum_{i=1}^{n} f(i)$.\n\n$S(8)=22$ and $S(100)=3604$.\n\nFind $S(3^{37})$. Give the last $9$ digits of your answer.\n\n## 题意\n\n就是给你一个序列,问你这个序列的前缀和是多少\n\n## 分析\n\n显然是推公式嘛.\n\n根据题意我们显然可以得到\n\n$f(4n)+f(4n+1)+f(4n+2)+f(4n+3) = 6\\cdot f(2n+1) - 2\\cdot f(n)$ for $n\\geq 1$\n\n然后我们每四项加一下就可以得到下面这个公式\n\n\\begin{eqnarray}\nS(4n+3) &=& \\sum_{i=1}^{4i+3} f(i)\\\\\\\n\t\t&=& 5 + \\sum_{i=4}^{4i+3} f(i)\\\\\\\n\t\t&=& 5 + \\sum_{i=1}^{n} (6\\cdot f(2i+1) - 2\\cdot f(i))\\\\\\\n\t\t&=& 5 + 6\\sum_{i=1}^{n} (f(2i+1)+f(2i)) - 8\\sum_{i=1}^{n} f(i)\\\\\\\n\t\t&=& 5 + 6\\sum_{i=2}^{2n+1} f(i) - 8\\sum_{i=1}^{n} f(i)\\\\\\\n\t\t&=& 5 - 6 + 6\\sum{i=1}{2n+1} f(i) - 8\\sum_{i=1}^{n} f(i)\\\\\\\n\t\t&=& -1 + 6\\sum{i=1}{2n+1} f(i) -8\\sum_{i=1}^{n} f(i)\\\\\\\n\\end{eqnarray}\n\n然后瞎搞就行了$\\dots$\n\n## 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxm = 1e7+10;\nconst int mod = 1e9;\ninline int add(long long a,long long b){return (a+b)%mod;}\ninline int mul(long long a,long long b){return a*b%mod;}\nint num[maxm];\nint sum[maxm];\nlong long f(long long a){\n\tif(a<maxm&&num[a]) return num[a];\n\tif(a==0) return 0;\n\tif(a==1) return 1;\n\tif(a==3) return 3;\n\tif((a&1)^1) return f(a>>1);\n\telse if((a&3)==3) return add(mul(3,f(a>>1)),mod-(f(a>>2)<<1));\n\telse return add((f(a>>1|1)<<1),mod-f(a>>2));\n}\nlong long S(long long a){\n    if(a<maxm) return sum[a];\n\tlong long ret = 0;\n\tif(a%4==3){\n\t\tret = add(ret,mul(6,S(a>>1)));\n\t\tret = add(ret,mod-mul(8,S(a>>2)));\n\t\tret = add(ret,mod-1);\n\t}else{\n\t\twhile(a%4!=3) ret = add(ret,mod-f(++a));\n\t\tret = add(ret,S(a));\n\t}\n\treturn ret;\n}\nint main(){\n\tfor(int i = 1;i<maxm;i++) num[i] = f(i),sum[i] = add(sum[i-1],num[i]);\n\tlong long nouse = 1;\n\tfor(int i = 1;i<=37;i++){\n\t\tnouse = (nouse<<2)-nouse;\n\t}\n    cout<<S(nouse)<<endl;\n\treturn 0;\n}\n```\n\n","source":"_posts/PE/PE463.md","raw":"---\ntitle: Project Euler 463 A weird recurrence relation\ndate:       2018-12-23\nauthor:     \"zuhiul\"\ntags:\n  - 数学\n  - PE\n---\n\n\n[开启传送门](https://projecteuler.net/problem=463)\n\n### 题目描述\n<!-- more -->\n\nThe function $f$ is defined for all positive integers as follows:\n\n$f(1)$ = $1$\n\n$f(3)$ = $3$\n\n$f(2n)$ = $f(n)$\n\n$f(4n+1)$ = $2\\cdot f(2n+1)-f(n)$\n\n$f(4n+3)$ = $3\\cdot f(2n+1)-2\\cdot f(n)$\n\nThe function $S(n)$ is defined as $\\sum_{i=1}^{n} f(i)$.\n\n$S(8)=22$ and $S(100)=3604$.\n\nFind $S(3^{37})$. Give the last $9$ digits of your answer.\n\n## 题意\n\n就是给你一个序列,问你这个序列的前缀和是多少\n\n## 分析\n\n显然是推公式嘛.\n\n根据题意我们显然可以得到\n\n$f(4n)+f(4n+1)+f(4n+2)+f(4n+3) = 6\\cdot f(2n+1) - 2\\cdot f(n)$ for $n\\geq 1$\n\n然后我们每四项加一下就可以得到下面这个公式\n\n\\begin{eqnarray}\nS(4n+3) &=& \\sum_{i=1}^{4i+3} f(i)\\\\\\\n\t\t&=& 5 + \\sum_{i=4}^{4i+3} f(i)\\\\\\\n\t\t&=& 5 + \\sum_{i=1}^{n} (6\\cdot f(2i+1) - 2\\cdot f(i))\\\\\\\n\t\t&=& 5 + 6\\sum_{i=1}^{n} (f(2i+1)+f(2i)) - 8\\sum_{i=1}^{n} f(i)\\\\\\\n\t\t&=& 5 + 6\\sum_{i=2}^{2n+1} f(i) - 8\\sum_{i=1}^{n} f(i)\\\\\\\n\t\t&=& 5 - 6 + 6\\sum{i=1}{2n+1} f(i) - 8\\sum_{i=1}^{n} f(i)\\\\\\\n\t\t&=& -1 + 6\\sum{i=1}{2n+1} f(i) -8\\sum_{i=1}^{n} f(i)\\\\\\\n\\end{eqnarray}\n\n然后瞎搞就行了$\\dots$\n\n## 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxm = 1e7+10;\nconst int mod = 1e9;\ninline int add(long long a,long long b){return (a+b)%mod;}\ninline int mul(long long a,long long b){return a*b%mod;}\nint num[maxm];\nint sum[maxm];\nlong long f(long long a){\n\tif(a<maxm&&num[a]) return num[a];\n\tif(a==0) return 0;\n\tif(a==1) return 1;\n\tif(a==3) return 3;\n\tif((a&1)^1) return f(a>>1);\n\telse if((a&3)==3) return add(mul(3,f(a>>1)),mod-(f(a>>2)<<1));\n\telse return add((f(a>>1|1)<<1),mod-f(a>>2));\n}\nlong long S(long long a){\n    if(a<maxm) return sum[a];\n\tlong long ret = 0;\n\tif(a%4==3){\n\t\tret = add(ret,mul(6,S(a>>1)));\n\t\tret = add(ret,mod-mul(8,S(a>>2)));\n\t\tret = add(ret,mod-1);\n\t}else{\n\t\twhile(a%4!=3) ret = add(ret,mod-f(++a));\n\t\tret = add(ret,S(a));\n\t}\n\treturn ret;\n}\nint main(){\n\tfor(int i = 1;i<maxm;i++) num[i] = f(i),sum[i] = add(sum[i-1],num[i]);\n\tlong long nouse = 1;\n\tfor(int i = 1;i<=37;i++){\n\t\tnouse = (nouse<<2)-nouse;\n\t}\n    cout<<S(nouse)<<endl;\n\treturn 0;\n}\n```\n\n","slug":"PE/PE463","published":1,"updated":"2019-04-14T08:29:47.077Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1g9000ja6136exrrwkq","content":"<p><a href=\"https://projecteuler.net/problem=463\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><a id=\"more\"></a>\n<p>The function $f$ is defined for all positive integers as follows:</p>\n<p>$f(1)$ = $1$</p>\n<p>$f(3)$ = $3$</p>\n<p>$f(2n)$ = $f(n)$</p>\n<p>$f(4n+1)$ = $2\\cdot f(2n+1)-f(n)$</p>\n<p>$f(4n+3)$ = $3\\cdot f(2n+1)-2\\cdot f(n)$</p>\n<p>The function $S(n)$ is defined as $\\sum_{i=1}^{n} f(i)$.</p>\n<p>$S(8)=22$ and $S(100)=3604$.</p>\n<p>Find $S(3^{37})$. Give the last $9$ digits of your answer.</p>\n<h2 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h2><p>就是给你一个序列,问你这个序列的前缀和是多少</p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>显然是推公式嘛.</p>\n<p>根据题意我们显然可以得到</p>\n<p>$f(4n)+f(4n+1)+f(4n+2)+f(4n+3) = 6\\cdot f(2n+1) - 2\\cdot f(n)$ for $n\\geq 1$</p>\n<p>然后我们每四项加一下就可以得到下面这个公式</p>\n<p>\\begin{eqnarray}<br>S(4n+3) &amp;=&amp; \\sum_{i=1}^{4i+3} f(i)\\\\<br>        &amp;=&amp; 5 + \\sum_{i=4}^{4i+3} f(i)\\\\<br>        &amp;=&amp; 5 + \\sum_{i=1}^{n} (6\\cdot f(2i+1) - 2\\cdot f(i))\\\\<br>        &amp;=&amp; 5 + 6\\sum_{i=1}^{n} (f(2i+1)+f(2i)) - 8\\sum_{i=1}^{n} f(i)\\\\<br>        &amp;=&amp; 5 + 6\\sum_{i=2}^{2n+1} f(i) - 8\\sum_{i=1}^{n} f(i)\\\\<br>        &amp;=&amp; 5 - 6 + 6\\sum{i=1}{2n+1} f(i) - 8\\sum_{i=1}^{n} f(i)\\\\<br>        &amp;=&amp; -1 + 6\\sum{i=1}{2n+1} f(i) -8\\sum_{i=1}^{n} f(i)\\\\<br>\\end{eqnarray}</p>\n<p>然后瞎搞就行了$\\dots$</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">1e7</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> mod = <span class=\"number\">1e9</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> b)</span></span>&#123;<span class=\"keyword\">return</span> (a+b)%mod;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">mul</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> b)</span></span>&#123;<span class=\"keyword\">return</span> a*b%mod;&#125;</span><br><span class=\"line\"><span class=\"keyword\">int</span> num[maxm];</span><br><span class=\"line\"><span class=\"keyword\">int</span> sum[maxm];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">f</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a&lt;maxm&amp;&amp;num[a]) <span class=\"keyword\">return</span> num[a];</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a==<span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a==<span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a==<span class=\"number\">3</span>) <span class=\"keyword\">return</span> <span class=\"number\">3</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>((a&amp;<span class=\"number\">1</span>)^<span class=\"number\">1</span>) <span class=\"keyword\">return</span> f(a&gt;&gt;<span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>((a&amp;<span class=\"number\">3</span>)==<span class=\"number\">3</span>) <span class=\"keyword\">return</span> add(mul(<span class=\"number\">3</span>,f(a&gt;&gt;<span class=\"number\">1</span>)),mod-(f(a&gt;&gt;<span class=\"number\">2</span>)&lt;&lt;<span class=\"number\">1</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">return</span> add((f(a&gt;&gt;<span class=\"number\">1</span>|<span class=\"number\">1</span>)&lt;&lt;<span class=\"number\">1</span>),mod-f(a&gt;&gt;<span class=\"number\">2</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">S</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a&lt;maxm) <span class=\"keyword\">return</span> sum[a];</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ret = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a%<span class=\"number\">4</span>==<span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">\t\tret = add(ret,mul(<span class=\"number\">6</span>,S(a&gt;&gt;<span class=\"number\">1</span>)));</span><br><span class=\"line\">\t\tret = add(ret,mod-mul(<span class=\"number\">8</span>,S(a&gt;&gt;<span class=\"number\">2</span>)));</span><br><span class=\"line\">\t\tret = add(ret,mod<span class=\"number\">-1</span>);</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(a%<span class=\"number\">4</span>!=<span class=\"number\">3</span>) ret = add(ret,mod-f(++a));</span><br><span class=\"line\">\t\tret = add(ret,S(a));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;maxm;i++) num[i] = f(i),sum[i] = add(sum[i<span class=\"number\">-1</span>],num[i]);</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> nouse = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=<span class=\"number\">37</span>;i++)&#123;</span><br><span class=\"line\">\t\tnouse = (nouse&lt;&lt;<span class=\"number\">2</span>)-nouse;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;S(nouse)&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://projecteuler.net/problem=463\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3>","more":"<p>The function $f$ is defined for all positive integers as follows:</p>\n<p>$f(1)$ = $1$</p>\n<p>$f(3)$ = $3$</p>\n<p>$f(2n)$ = $f(n)$</p>\n<p>$f(4n+1)$ = $2\\cdot f(2n+1)-f(n)$</p>\n<p>$f(4n+3)$ = $3\\cdot f(2n+1)-2\\cdot f(n)$</p>\n<p>The function $S(n)$ is defined as $\\sum_{i=1}^{n} f(i)$.</p>\n<p>$S(8)=22$ and $S(100)=3604$.</p>\n<p>Find $S(3^{37})$. Give the last $9$ digits of your answer.</p>\n<h2 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h2><p>就是给你一个序列,问你这个序列的前缀和是多少</p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>显然是推公式嘛.</p>\n<p>根据题意我们显然可以得到</p>\n<p>$f(4n)+f(4n+1)+f(4n+2)+f(4n+3) = 6\\cdot f(2n+1) - 2\\cdot f(n)$ for $n\\geq 1$</p>\n<p>然后我们每四项加一下就可以得到下面这个公式</p>\n<p>\\begin{eqnarray}<br>S(4n+3) &amp;=&amp; \\sum_{i=1}^{4i+3} f(i)\\\\<br>        &amp;=&amp; 5 + \\sum_{i=4}^{4i+3} f(i)\\\\<br>        &amp;=&amp; 5 + \\sum_{i=1}^{n} (6\\cdot f(2i+1) - 2\\cdot f(i))\\\\<br>        &amp;=&amp; 5 + 6\\sum_{i=1}^{n} (f(2i+1)+f(2i)) - 8\\sum_{i=1}^{n} f(i)\\\\<br>        &amp;=&amp; 5 + 6\\sum_{i=2}^{2n+1} f(i) - 8\\sum_{i=1}^{n} f(i)\\\\<br>        &amp;=&amp; 5 - 6 + 6\\sum{i=1}{2n+1} f(i) - 8\\sum_{i=1}^{n} f(i)\\\\<br>        &amp;=&amp; -1 + 6\\sum{i=1}{2n+1} f(i) -8\\sum_{i=1}^{n} f(i)\\\\<br>\\end{eqnarray}</p>\n<p>然后瞎搞就行了$\\dots$</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">1e7</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> mod = <span class=\"number\">1e9</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> b)</span></span>&#123;<span class=\"keyword\">return</span> (a+b)%mod;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">mul</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> b)</span></span>&#123;<span class=\"keyword\">return</span> a*b%mod;&#125;</span><br><span class=\"line\"><span class=\"keyword\">int</span> num[maxm];</span><br><span class=\"line\"><span class=\"keyword\">int</span> sum[maxm];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">f</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a&lt;maxm&amp;&amp;num[a]) <span class=\"keyword\">return</span> num[a];</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a==<span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a==<span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a==<span class=\"number\">3</span>) <span class=\"keyword\">return</span> <span class=\"number\">3</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>((a&amp;<span class=\"number\">1</span>)^<span class=\"number\">1</span>) <span class=\"keyword\">return</span> f(a&gt;&gt;<span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>((a&amp;<span class=\"number\">3</span>)==<span class=\"number\">3</span>) <span class=\"keyword\">return</span> add(mul(<span class=\"number\">3</span>,f(a&gt;&gt;<span class=\"number\">1</span>)),mod-(f(a&gt;&gt;<span class=\"number\">2</span>)&lt;&lt;<span class=\"number\">1</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">return</span> add((f(a&gt;&gt;<span class=\"number\">1</span>|<span class=\"number\">1</span>)&lt;&lt;<span class=\"number\">1</span>),mod-f(a&gt;&gt;<span class=\"number\">2</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">S</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a&lt;maxm) <span class=\"keyword\">return</span> sum[a];</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ret = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a%<span class=\"number\">4</span>==<span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">\t\tret = add(ret,mul(<span class=\"number\">6</span>,S(a&gt;&gt;<span class=\"number\">1</span>)));</span><br><span class=\"line\">\t\tret = add(ret,mod-mul(<span class=\"number\">8</span>,S(a&gt;&gt;<span class=\"number\">2</span>)));</span><br><span class=\"line\">\t\tret = add(ret,mod<span class=\"number\">-1</span>);</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(a%<span class=\"number\">4</span>!=<span class=\"number\">3</span>) ret = add(ret,mod-f(++a));</span><br><span class=\"line\">\t\tret = add(ret,S(a));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;maxm;i++) num[i] = f(i),sum[i] = add(sum[i<span class=\"number\">-1</span>],num[i]);</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> nouse = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=<span class=\"number\">37</span>;i++)&#123;</span><br><span class=\"line\">\t\tnouse = (nouse&lt;&lt;<span class=\"number\">2</span>)-nouse;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;S(nouse)&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"Project Euler 643 2-Friendly","date":"2019-01-08T16:00:00.000Z","author":"zuhiul","_content":"\n[开启传送门](https://projecteuler.net/problem=643)\n\n### 题目描述\n<!-- more -->\n\nTwo positive integers $a$ and $b$ are *2-friendly* when $gcd(a,b)=2^t,t>0$. For example, $24$ and $40$ are *2-friendly* because $gcd(24,40)=8=2^3$ while $24$ and $36$ are not because $gcd(24,36)=12=2^2\\cdot 3$ not a power of $2$.\n\nLet $f(n)$ be the number of pairs, $(p,q)$, of positive integers with $1\\leq p<q\\leq n$ such that $p$ and $q$ are *2-friendly*. You are given $f(10^2)=1031$ and $f(10^6)=321418433$ modulo $1000000007$ .\n\nFind $f(10^{11})$ modulo $1000000007$.\n\n### 题意\n\n问你所有满足$1\\leq p<q\\leq 1e11$,并且$gcd(p,q)==2^t$的对数\n\n### 分析\n\n显然可以对于每个$2^t$单独考虑,不妨设$2^t = x$,可以得到\n\n$$\nans = \\sum_{i=1}^{upper/x} \\varphi(i)\n$$\n\n然后显然是各种筛法搞一下,我这里用的杜教筛,然后稍微推一推就可以得到\n\n$$\ns(m) = \\frac{m\\ast (m+1)}{2} - \\sum_{d=2}^{m} s(\\lfloor \\frac{m}{d} \\rfloor)\n$$\n\n然后分块一下,递归搞下去就行了$\\dots$\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst long long upper = 1e11;\nconst int maxm = 2e7+10;\nconst int mod = 1e9+7;\nint add(int a,int b){return (a+b)%mod;}\nint mul(long long a,long long b){return (a%mod)*(b%mod)%mod;}\nint inv(long long a){ return a==1?1:mul(mod-mod/a,inv(mod%a)); }\nint inv2 = inv(2);\nbool p[maxm];\nint pri[maxm];//质数\nint phi[maxm];//欧拉函数前缀和\nvoid init(){\n\tphi[1] = 1;\n\tfor(int i =2;i<maxm;i++){\n\t\tif(!p[i]){\n\t\t\tpri[++pri[0]] = i;\n\t\t\tphi[i] = i-1;\n\t\t}\n\t\tfor(int j = 1;j<=pri[0]&&i*pri[j]<maxm;j++){\n\t\t\tp[i*pri[j]] = true;\n\t\t\tif(i%pri[j]) phi[i*pri[j]] = phi[i]*(pri[j]-1);\n\t\t\telse{\n\t\t\t\tphi[i*pri[j]] = phi[i]*pri[j];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = 2;i<maxm;i++) phi[i] = add(phi[i],phi[i-1]);//因为只会用到前缀和,所以我们直接预处理成前缀和\n}\nmap<long long,int> mp;\nint solve(long long m){\n\tif(m<maxm) return phi[m];//查表\n\tif(mp[m]) return mp[m];//记忆化\n\tint ret = mul(m,mul(m+1,inv2));\n\tfor(long long l = 2,r;l<=m;l = r+1) {//分块\n\t\tr = m/(m/l);\n\t\tret = add(ret,mod-mul(solve(m/l),r-l+1));\n\t}\t\n\treturn mp[m] = ret;\n}\nint main(){\n\tinit();\n\tint ans = 0;\n\tfor(long long x = 2;x<=upper;x<<=1) {//单独统计每一个2的幂\n\t\tcout<<x<<endl;\n\t\tans = add(ans,solve(upper/x));\n\t\tans = add(ans,mod-1);\n\t}\t\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n","source":"_posts/PE/PE643.md","raw":"---\ntitle: Project Euler 643 2-Friendly\ndate:\t2019-01-09\nauthor:\t\"zuhiul\"\ntags:\n  - 数学\n  - PE\n---\n\n[开启传送门](https://projecteuler.net/problem=643)\n\n### 题目描述\n<!-- more -->\n\nTwo positive integers $a$ and $b$ are *2-friendly* when $gcd(a,b)=2^t,t>0$. For example, $24$ and $40$ are *2-friendly* because $gcd(24,40)=8=2^3$ while $24$ and $36$ are not because $gcd(24,36)=12=2^2\\cdot 3$ not a power of $2$.\n\nLet $f(n)$ be the number of pairs, $(p,q)$, of positive integers with $1\\leq p<q\\leq n$ such that $p$ and $q$ are *2-friendly*. You are given $f(10^2)=1031$ and $f(10^6)=321418433$ modulo $1000000007$ .\n\nFind $f(10^{11})$ modulo $1000000007$.\n\n### 题意\n\n问你所有满足$1\\leq p<q\\leq 1e11$,并且$gcd(p,q)==2^t$的对数\n\n### 分析\n\n显然可以对于每个$2^t$单独考虑,不妨设$2^t = x$,可以得到\n\n$$\nans = \\sum_{i=1}^{upper/x} \\varphi(i)\n$$\n\n然后显然是各种筛法搞一下,我这里用的杜教筛,然后稍微推一推就可以得到\n\n$$\ns(m) = \\frac{m\\ast (m+1)}{2} - \\sum_{d=2}^{m} s(\\lfloor \\frac{m}{d} \\rfloor)\n$$\n\n然后分块一下,递归搞下去就行了$\\dots$\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst long long upper = 1e11;\nconst int maxm = 2e7+10;\nconst int mod = 1e9+7;\nint add(int a,int b){return (a+b)%mod;}\nint mul(long long a,long long b){return (a%mod)*(b%mod)%mod;}\nint inv(long long a){ return a==1?1:mul(mod-mod/a,inv(mod%a)); }\nint inv2 = inv(2);\nbool p[maxm];\nint pri[maxm];//质数\nint phi[maxm];//欧拉函数前缀和\nvoid init(){\n\tphi[1] = 1;\n\tfor(int i =2;i<maxm;i++){\n\t\tif(!p[i]){\n\t\t\tpri[++pri[0]] = i;\n\t\t\tphi[i] = i-1;\n\t\t}\n\t\tfor(int j = 1;j<=pri[0]&&i*pri[j]<maxm;j++){\n\t\t\tp[i*pri[j]] = true;\n\t\t\tif(i%pri[j]) phi[i*pri[j]] = phi[i]*(pri[j]-1);\n\t\t\telse{\n\t\t\t\tphi[i*pri[j]] = phi[i]*pri[j];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = 2;i<maxm;i++) phi[i] = add(phi[i],phi[i-1]);//因为只会用到前缀和,所以我们直接预处理成前缀和\n}\nmap<long long,int> mp;\nint solve(long long m){\n\tif(m<maxm) return phi[m];//查表\n\tif(mp[m]) return mp[m];//记忆化\n\tint ret = mul(m,mul(m+1,inv2));\n\tfor(long long l = 2,r;l<=m;l = r+1) {//分块\n\t\tr = m/(m/l);\n\t\tret = add(ret,mod-mul(solve(m/l),r-l+1));\n\t}\t\n\treturn mp[m] = ret;\n}\nint main(){\n\tinit();\n\tint ans = 0;\n\tfor(long long x = 2;x<=upper;x<<=1) {//单独统计每一个2的幂\n\t\tcout<<x<<endl;\n\t\tans = add(ans,solve(upper/x));\n\t\tans = add(ans,mod-1);\n\t}\t\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n","slug":"PE/PE643","published":1,"updated":"2019-06-03T13:23:25.798Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1ga000la613o8y8yu0h","content":"<p><a href=\"https://projecteuler.net/problem=643\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><a id=\"more\"></a>\n<p>Two positive integers $a$ and $b$ are <em>2-friendly</em> when $gcd(a,b)=2^t,t&gt;0$. For example, $24$ and $40$ are <em>2-friendly</em> because $gcd(24,40)=8=2^3$ while $24$ and $36$ are not because $gcd(24,36)=12=2^2\\cdot 3$ not a power of $2$.</p>\n<p>Let $f(n)$ be the number of pairs, $(p,q)$, of positive integers with $1\\leq p&lt;q\\leq n$ such that $p$ and $q$ are <em>2-friendly</em>. You are given $f(10^2)=1031$ and $f(10^6)=321418433$ modulo $1000000007$ .</p>\n<p>Find $f(10^{11})$ modulo $1000000007$.</p>\n<h3 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>问你所有满足$1\\leq p&lt;q\\leq 1e11$,并且$gcd(p,q)==2^t$的对数</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>显然可以对于每个$2^t$单独考虑,不妨设$2^t = x$,可以得到</p>\n<p>$$<br>ans = \\sum_{i=1}^{upper/x} \\varphi(i)<br>$$</p>\n<p>然后显然是各种筛法搞一下,我这里用的杜教筛,然后稍微推一推就可以得到</p>\n<p>$$<br>s(m) = \\frac{m\\ast (m+1)}{2} - \\sum_{d=2}^{m} s(\\lfloor \\frac{m}{d} \\rfloor)<br>$$</p>\n<p>然后分块一下,递归搞下去就行了$\\dots$</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> upper = <span class=\"number\">1e11</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">2e7</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> mod = <span class=\"number\">1e9</span>+<span class=\"number\">7</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;<span class=\"keyword\">return</span> (a+b)%mod;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">mul</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> b)</span></span>&#123;<span class=\"keyword\">return</span> (a%mod)*(b%mod)%mod;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">inv</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a)</span></span>&#123; <span class=\"keyword\">return</span> a==<span class=\"number\">1</span>?<span class=\"number\">1</span>:mul(mod-mod/a,inv(mod%a)); &#125;</span><br><span class=\"line\"><span class=\"keyword\">int</span> inv2 = inv(<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">bool</span> p[maxm];</span><br><span class=\"line\"><span class=\"keyword\">int</span> pri[maxm];<span class=\"comment\">//质数</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> phi[maxm];<span class=\"comment\">//欧拉函数前缀和</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tphi[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i =<span class=\"number\">2</span>;i&lt;maxm;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!p[i])&#123;</span><br><span class=\"line\">\t\t\tpri[++pri[<span class=\"number\">0</span>]] = i;</span><br><span class=\"line\">\t\t\tphi[i] = i<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>;j&lt;=pri[<span class=\"number\">0</span>]&amp;&amp;i*pri[j]&lt;maxm;j++)&#123;</span><br><span class=\"line\">\t\t\tp[i*pri[j]] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(i%pri[j]) phi[i*pri[j]] = phi[i]*(pri[j]<span class=\"number\">-1</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t\tphi[i*pri[j]] = phi[i]*pri[j];</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>;i&lt;maxm;i++) phi[i] = add(phi[i],phi[i<span class=\"number\">-1</span>]);<span class=\"comment\">//因为只会用到前缀和,所以我们直接预处理成前缀和</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">map</span>&lt;<span class=\"keyword\">long</span> <span class=\"keyword\">long</span>,<span class=\"keyword\">int</span>&gt; mp;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">solve</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> m)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(m&lt;maxm) <span class=\"keyword\">return</span> phi[m];<span class=\"comment\">//查表</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(mp[m]) <span class=\"keyword\">return</span> mp[m];<span class=\"comment\">//记忆化</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ret = mul(m,mul(m+<span class=\"number\">1</span>,inv2));</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> l = <span class=\"number\">2</span>,r;l&lt;=m;l = r+<span class=\"number\">1</span>) &#123;<span class=\"comment\">//分块</span></span><br><span class=\"line\">\t\tr = m/(m/l);</span><br><span class=\"line\">\t\tret = add(ret,mod-mul(solve(m/l),r-l+<span class=\"number\">1</span>));</span><br><span class=\"line\">\t&#125;\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> mp[m] = ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tinit();</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> x = <span class=\"number\">2</span>;x&lt;=upper;x&lt;&lt;=<span class=\"number\">1</span>) &#123;<span class=\"comment\">//单独统计每一个2的幂</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;x&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\tans = add(ans,solve(upper/x));</span><br><span class=\"line\">\t\tans = add(ans,mod<span class=\"number\">-1</span>);</span><br><span class=\"line\">\t&#125;\t</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://projecteuler.net/problem=643\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3>","more":"<p>Two positive integers $a$ and $b$ are <em>2-friendly</em> when $gcd(a,b)=2^t,t&gt;0$. For example, $24$ and $40$ are <em>2-friendly</em> because $gcd(24,40)=8=2^3$ while $24$ and $36$ are not because $gcd(24,36)=12=2^2\\cdot 3$ not a power of $2$.</p>\n<p>Let $f(n)$ be the number of pairs, $(p,q)$, of positive integers with $1\\leq p&lt;q\\leq n$ such that $p$ and $q$ are <em>2-friendly</em>. You are given $f(10^2)=1031$ and $f(10^6)=321418433$ modulo $1000000007$ .</p>\n<p>Find $f(10^{11})$ modulo $1000000007$.</p>\n<h3 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>问你所有满足$1\\leq p&lt;q\\leq 1e11$,并且$gcd(p,q)==2^t$的对数</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>显然可以对于每个$2^t$单独考虑,不妨设$2^t = x$,可以得到</p>\n<p>$$<br>ans = \\sum_{i=1}^{upper/x} \\varphi(i)<br>$$</p>\n<p>然后显然是各种筛法搞一下,我这里用的杜教筛,然后稍微推一推就可以得到</p>\n<p>$$<br>s(m) = \\frac{m\\ast (m+1)}{2} - \\sum_{d=2}^{m} s(\\lfloor \\frac{m}{d} \\rfloor)<br>$$</p>\n<p>然后分块一下,递归搞下去就行了$\\dots$</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> upper = <span class=\"number\">1e11</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">2e7</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> mod = <span class=\"number\">1e9</span>+<span class=\"number\">7</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;<span class=\"keyword\">return</span> (a+b)%mod;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">mul</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> b)</span></span>&#123;<span class=\"keyword\">return</span> (a%mod)*(b%mod)%mod;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">inv</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a)</span></span>&#123; <span class=\"keyword\">return</span> a==<span class=\"number\">1</span>?<span class=\"number\">1</span>:mul(mod-mod/a,inv(mod%a)); &#125;</span><br><span class=\"line\"><span class=\"keyword\">int</span> inv2 = inv(<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">bool</span> p[maxm];</span><br><span class=\"line\"><span class=\"keyword\">int</span> pri[maxm];<span class=\"comment\">//质数</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> phi[maxm];<span class=\"comment\">//欧拉函数前缀和</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tphi[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i =<span class=\"number\">2</span>;i&lt;maxm;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!p[i])&#123;</span><br><span class=\"line\">\t\t\tpri[++pri[<span class=\"number\">0</span>]] = i;</span><br><span class=\"line\">\t\t\tphi[i] = i<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>;j&lt;=pri[<span class=\"number\">0</span>]&amp;&amp;i*pri[j]&lt;maxm;j++)&#123;</span><br><span class=\"line\">\t\t\tp[i*pri[j]] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(i%pri[j]) phi[i*pri[j]] = phi[i]*(pri[j]<span class=\"number\">-1</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t\tphi[i*pri[j]] = phi[i]*pri[j];</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>;i&lt;maxm;i++) phi[i] = add(phi[i],phi[i<span class=\"number\">-1</span>]);<span class=\"comment\">//因为只会用到前缀和,所以我们直接预处理成前缀和</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">map</span>&lt;<span class=\"keyword\">long</span> <span class=\"keyword\">long</span>,<span class=\"keyword\">int</span>&gt; mp;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">solve</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> m)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(m&lt;maxm) <span class=\"keyword\">return</span> phi[m];<span class=\"comment\">//查表</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(mp[m]) <span class=\"keyword\">return</span> mp[m];<span class=\"comment\">//记忆化</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ret = mul(m,mul(m+<span class=\"number\">1</span>,inv2));</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> l = <span class=\"number\">2</span>,r;l&lt;=m;l = r+<span class=\"number\">1</span>) &#123;<span class=\"comment\">//分块</span></span><br><span class=\"line\">\t\tr = m/(m/l);</span><br><span class=\"line\">\t\tret = add(ret,mod-mul(solve(m/l),r-l+<span class=\"number\">1</span>));</span><br><span class=\"line\">\t&#125;\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> mp[m] = ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tinit();</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> x = <span class=\"number\">2</span>;x&lt;=upper;x&lt;&lt;=<span class=\"number\">1</span>) &#123;<span class=\"comment\">//单独统计每一个2的幂</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;x&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\tans = add(ans,solve(upper/x));</span><br><span class=\"line\">\t\tans = add(ans,mod<span class=\"number\">-1</span>);</span><br><span class=\"line\">\t&#125;\t</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Project Euler 492 Exploding sequence","date":"2018-12-11T16:00:00.000Z","author":"zuhiul","_content":"\n[开启传送门](https://projecteuler.net/problem=492)\n\n### 题目描述\n<!-- more -->\n\nDefine the sequence $a_1, a_2, a_3,\\dots$ as:\n\n - $a_1 $=$ 1$\n - $a_{n+1} = 6a_n^2 + 10a_n + 3$ for $n \\geq 1$.\n\nExamples:\n\n$a_3 $=$ 2359$\n\n$a_6 $=$ 269221280981320216750489044576319$\n\n$a_6 mod 1000000007 $=$ 203064689$\n\n$a_{100} mod 1000000007 $=$ 456482974$\n\nDefine $B(x,y,n)$ as $\\sum (a_n mod $ $p)$ for every prime $p$ such that $x \\leq p \\leq x+y$.\n\nExamples:\n\n$B(10^9, 10^3, 10^3)$ = $23674718882$\n\n$B(10^9, 10^3, 10^{15})$ = $20731563854$\n\nFind $B(10^9, 10^7, 10^{15})$.\n\n### 题意\n\n给你一个二次递推序列,问你这个数列的第$10^{15}$项膜上一堆质数之后求和是多少.\n\n### 分析\n\n看了[大佬](https://blog.csdn.net/ACdreamers/article/details/44997467)的题解之后才做出来的,还是太菜了$\\dots$\n\n下面是分析.\n\n首先我们令$b_n = 6a_n+5$\n\n于是有\n\n$b_1$ = $11$\n\n$b_{n+1} $=$ b_n^2-2$\n\n然后我们令　$ x + \\frac{1}{x}$ = $11$\n\n可以显然发现　$b_n$ = $x^{2^{n-1}} + \\frac{1}{x^{2^{n-1}}}$\n\n于是不妨设　$x$ = $\\frac{11+\\sqrt{117}}{2}$\n\n$\\therefore b_n$ = $(\\frac{11+\\sqrt{117}}{2})^{2^{n-1}} + (\\frac{11-\\sqrt{117}}{2})^{2^{n-1}}$\n\n然后我们可以直接算就行了\n\n我们搞出递推式，然后用矩阵乘法的做法来做\n\n我们考虑一个更一般的问题，\n\n令$f_n = (\\frac{11+\\sqrt{117}}{2})^n + (\\frac{11-\\sqrt{117}}{2})^n$\n\n然后我们考虑$f_n$如何求解\n\n首先我们假设$f_n = x\\ast f_{n-1}+y\\ast f_{n-2}$\n\n$$令 (\\frac{11+\\sqrt{117}}{2})^{n-2} = a$$\n\n$$令 (\\frac{11-\\sqrt{117}}{2})^{n-2} = b$$\n\n则有\n\\begin{cases}\n\\begin{eqnarray}\nf_n &=& a\\ast (\\frac{11+\\sqrt{117}}{2})^2+b\\ast (\\frac{11-\\sqrt{117}}{2})^2\\\\\\\n&=& a\\ast (\\frac{238+22\\sqrt{117}}{4})+b\\ast (\\frac{238-22\\sqrt{117}}{4})\\\\\\\nf_{n-1}&=&a\\ast (\\frac{11+\\sqrt{117}}{2})+b\\ast (\\frac{11-\\sqrt{117}}{2})\\\\\\\nf_{n-2}&=&a+b \\\\\\\n\\end{eqnarray}\n\\end{cases}\n\n\\begin{eqnarray}\n&\\therefore& a\\ast (\\frac{238+22\\sqrt{117}}{4})+b\\ast (\\frac{238-22\\sqrt{117}}{4})\\\\\\\n&=& x\\ast a\\ast (\\frac{11+\\sqrt{117}}{2})+x\\ast b\\ast (\\frac{11-\\sqrt{117}}{2}) + y\\ast (a+b)\\\\\\\n\\end{eqnarray}\n\n将非根号项提出来，可以得到\n\n$\\therefore a\\ast \\frac{119}{2}+b\\ast \\frac{119}{2}$=$xa\\ast \\frac{11}{2}+xb\\ast \\frac{11}{2}+y(a+b) $\n\n同理将根号项提出可以得到\n\n$a\\ast \\frac{11}{2}+b\\ast \\frac{-11}{2}$=$xa\\ast \\frac{1}{2}+xb\\ast \\frac{-1}{2} $\n\n然后可以解得\n\n\\begin{cases}\nx = 11\\\\\\\ny = -1 \n\\end{cases}\n\n也就是说$f_n$ = $11\\ast f_{n-1} - f_{n-2}$\n\n好了，我们得到了$f_n$的递推式，然后考虑原问题，也就是说\n\n$$\n\\left(\n    \\begin{matrix}\n        b_{n+1}\\\\\\\n        b_n\n    \\end{matrix}\n\\right)\n=\\left(\n    \\begin{matrix}\n        11 & -1\\\\\\\n        1 & 0\n    \\end{matrix}\n\\right)^{2^{n-1}-1}\n\\left(\n    \\begin{matrix}\n        b_2\\\\\\\n        b_1\n    \\end{matrix}\n\\right)\n=\\left(\n    \\begin{matrix}\n        11 & -1\\\\\\\n        1 & 0\n    \\end{matrix}\n\\right)^{2^{n-1}-1}\n\\left(\n    \\begin{matrix}\n        119\\\\\\\n        11\n    \\end{matrix}\n\\right)\n$$\n\n$\\because n$ 很大($10^{15}$)\n\n$\\therefore 2^{n-1}-1$很大,以至于我们不能方便的计算\n\n然后我们考虑降低指数\n\n具体分析看[大佬](https://blog.csdn.net/ACdreamers/article/details/44997467)的分析,可以得到循环节可以是$(p+1)(p-1)$\n\n这个值我们可以接受,然后直接裸的矩阵ksm就行了$\\dots$\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst long long n = 1e15;\nconst long long l = 1e9;\nconst long long r = l+1e7;\nlong long add(long long a,long long b,long long mod){ return (a+b)%mod; }\nlong long mul(long long a,long long b,long long mod){\n\ta = add(a,mod,mod);\n\tb = add(b,mod,mod);\n\tlong long ret = 0;\n\twhile(b){\n\t\tif(b&1) ret = add(ret,a,mod);\n\t\ta = add(a,a,mod);\n\t\tb>>=1;\n\t}\n\treturn ret;\n}\nlong long qpow(long long a,long long b,long long mod){\n\tlong long ret = 1;\n\twhile(b){\n\t\tif(b&1) ret = mul(ret,a,mod);\n\t\ta = mul(a,a,mod);\n\t\tb>>=1;\n\t}\n\treturn ret;\n}\nbool is_prime(int a){\n\tif(a&1){\n\t\tfor(int i = 3;i*i<=a;i++) if(a%i==0) return false;\n\t\treturn true;\n\t}\n\treturn false;\n}\nstruct p{\n\tint mat[2][2];\n\tvoid show(){\n\t\tfor(int i = 0;i<2;i++){\n\t\t\tfor(int j = 0;j<2;j++) cout<<mat[i][j]<<' ';\n\t\t\tcout<<endl;\n\t\t}\n\t}\n};\np mul(p a,p b,long long mod){\n\tp ret;\n\tmemset(ret.mat,0,sizeof ret.mat);\n\tfor(int i = 0;i<2;i++){\n\t\tfor(int j  =0;j<2;j++){\n\t\t\tfor(int k = 0;k<2;k++){\n\t\t\t\tret.mat[i][j] = add(ret.mat[i][j],mul(a.mat[i][k],b.mat[k][j],mod),mod);\n\t\t\t}\n\t\t}\n\t}\n\treturn ret;\n}\np qpow(p a,long long b,long long mod){\n\tp ret;\n\tfor(int i = 0;i<2;i++) for(int j = 0;j<2;j++) {\n\t\tif(i==j) ret.mat[i][j]=1;\n\t\telse ret.mat[i][j]=0;\n\t}\n\twhile(b){\n\t\tif(b&1) ret = mul(ret,a,mod);\n\t\ta = mul(a,a,mod);\n\t\tb>>=1;\n\t}\n\treturn ret;\n}\nlong long solve(long long prime){\n\tconst long long MOD = prime*prime-1;\n\n\tlong long zhi = qpow(2,n-1,MOD);\n\tzhi = add(zhi,MOD-1,MOD);\n\n\tp base;\n\tbase.mat[0][0]=11,base.mat[0][1]=-1;\n\tbase.mat[1][0]=1 ,base.mat[1][1]=0;\n\t\n\tbase = qpow(base,zhi,prime);\n\tlong long ret1 = mul(base.mat[1][0],119,prime);\n\tlong long ret2 = mul(base.mat[1][1],11,prime);\n\treturn add(ret1,ret2,prime);\n}\nlong long inv(long long a,long long mod){\n\tif(a==1) return 1;\n\treturn mul(mod-mod/a,inv(mod%a,mod),mod);\n}\nint main(){\n\tlong long ans = 0;\n\tfor(int i = l;i<=r;i++){\n\t\tif(is_prime(i)){\n\t\t\tlong long bn = solve(i);\n\t\t\tlong long now1 = add(bn,i-5,i);\n\t\t\tlong long an = mul(now1,inv(6,i),i);\n\t\t\tans+=an;\n\t\t}\n\t\tif(i%100000==0) cout<<i<<endl;\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n\n```\n","source":"_posts/PE/PE492.md","raw":"---\ntitle: Project Euler 492 Exploding sequence\ndate:\t2018-12-12\nauthor:\t\"zuhiul\"\ntags:\n  - 数学\n  - PE\n---\n\n[开启传送门](https://projecteuler.net/problem=492)\n\n### 题目描述\n<!-- more -->\n\nDefine the sequence $a_1, a_2, a_3,\\dots$ as:\n\n - $a_1 $=$ 1$\n - $a_{n+1} = 6a_n^2 + 10a_n + 3$ for $n \\geq 1$.\n\nExamples:\n\n$a_3 $=$ 2359$\n\n$a_6 $=$ 269221280981320216750489044576319$\n\n$a_6 mod 1000000007 $=$ 203064689$\n\n$a_{100} mod 1000000007 $=$ 456482974$\n\nDefine $B(x,y,n)$ as $\\sum (a_n mod $ $p)$ for every prime $p$ such that $x \\leq p \\leq x+y$.\n\nExamples:\n\n$B(10^9, 10^3, 10^3)$ = $23674718882$\n\n$B(10^9, 10^3, 10^{15})$ = $20731563854$\n\nFind $B(10^9, 10^7, 10^{15})$.\n\n### 题意\n\n给你一个二次递推序列,问你这个数列的第$10^{15}$项膜上一堆质数之后求和是多少.\n\n### 分析\n\n看了[大佬](https://blog.csdn.net/ACdreamers/article/details/44997467)的题解之后才做出来的,还是太菜了$\\dots$\n\n下面是分析.\n\n首先我们令$b_n = 6a_n+5$\n\n于是有\n\n$b_1$ = $11$\n\n$b_{n+1} $=$ b_n^2-2$\n\n然后我们令　$ x + \\frac{1}{x}$ = $11$\n\n可以显然发现　$b_n$ = $x^{2^{n-1}} + \\frac{1}{x^{2^{n-1}}}$\n\n于是不妨设　$x$ = $\\frac{11+\\sqrt{117}}{2}$\n\n$\\therefore b_n$ = $(\\frac{11+\\sqrt{117}}{2})^{2^{n-1}} + (\\frac{11-\\sqrt{117}}{2})^{2^{n-1}}$\n\n然后我们可以直接算就行了\n\n我们搞出递推式，然后用矩阵乘法的做法来做\n\n我们考虑一个更一般的问题，\n\n令$f_n = (\\frac{11+\\sqrt{117}}{2})^n + (\\frac{11-\\sqrt{117}}{2})^n$\n\n然后我们考虑$f_n$如何求解\n\n首先我们假设$f_n = x\\ast f_{n-1}+y\\ast f_{n-2}$\n\n$$令 (\\frac{11+\\sqrt{117}}{2})^{n-2} = a$$\n\n$$令 (\\frac{11-\\sqrt{117}}{2})^{n-2} = b$$\n\n则有\n\\begin{cases}\n\\begin{eqnarray}\nf_n &=& a\\ast (\\frac{11+\\sqrt{117}}{2})^2+b\\ast (\\frac{11-\\sqrt{117}}{2})^2\\\\\\\n&=& a\\ast (\\frac{238+22\\sqrt{117}}{4})+b\\ast (\\frac{238-22\\sqrt{117}}{4})\\\\\\\nf_{n-1}&=&a\\ast (\\frac{11+\\sqrt{117}}{2})+b\\ast (\\frac{11-\\sqrt{117}}{2})\\\\\\\nf_{n-2}&=&a+b \\\\\\\n\\end{eqnarray}\n\\end{cases}\n\n\\begin{eqnarray}\n&\\therefore& a\\ast (\\frac{238+22\\sqrt{117}}{4})+b\\ast (\\frac{238-22\\sqrt{117}}{4})\\\\\\\n&=& x\\ast a\\ast (\\frac{11+\\sqrt{117}}{2})+x\\ast b\\ast (\\frac{11-\\sqrt{117}}{2}) + y\\ast (a+b)\\\\\\\n\\end{eqnarray}\n\n将非根号项提出来，可以得到\n\n$\\therefore a\\ast \\frac{119}{2}+b\\ast \\frac{119}{2}$=$xa\\ast \\frac{11}{2}+xb\\ast \\frac{11}{2}+y(a+b) $\n\n同理将根号项提出可以得到\n\n$a\\ast \\frac{11}{2}+b\\ast \\frac{-11}{2}$=$xa\\ast \\frac{1}{2}+xb\\ast \\frac{-1}{2} $\n\n然后可以解得\n\n\\begin{cases}\nx = 11\\\\\\\ny = -1 \n\\end{cases}\n\n也就是说$f_n$ = $11\\ast f_{n-1} - f_{n-2}$\n\n好了，我们得到了$f_n$的递推式，然后考虑原问题，也就是说\n\n$$\n\\left(\n    \\begin{matrix}\n        b_{n+1}\\\\\\\n        b_n\n    \\end{matrix}\n\\right)\n=\\left(\n    \\begin{matrix}\n        11 & -1\\\\\\\n        1 & 0\n    \\end{matrix}\n\\right)^{2^{n-1}-1}\n\\left(\n    \\begin{matrix}\n        b_2\\\\\\\n        b_1\n    \\end{matrix}\n\\right)\n=\\left(\n    \\begin{matrix}\n        11 & -1\\\\\\\n        1 & 0\n    \\end{matrix}\n\\right)^{2^{n-1}-1}\n\\left(\n    \\begin{matrix}\n        119\\\\\\\n        11\n    \\end{matrix}\n\\right)\n$$\n\n$\\because n$ 很大($10^{15}$)\n\n$\\therefore 2^{n-1}-1$很大,以至于我们不能方便的计算\n\n然后我们考虑降低指数\n\n具体分析看[大佬](https://blog.csdn.net/ACdreamers/article/details/44997467)的分析,可以得到循环节可以是$(p+1)(p-1)$\n\n这个值我们可以接受,然后直接裸的矩阵ksm就行了$\\dots$\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst long long n = 1e15;\nconst long long l = 1e9;\nconst long long r = l+1e7;\nlong long add(long long a,long long b,long long mod){ return (a+b)%mod; }\nlong long mul(long long a,long long b,long long mod){\n\ta = add(a,mod,mod);\n\tb = add(b,mod,mod);\n\tlong long ret = 0;\n\twhile(b){\n\t\tif(b&1) ret = add(ret,a,mod);\n\t\ta = add(a,a,mod);\n\t\tb>>=1;\n\t}\n\treturn ret;\n}\nlong long qpow(long long a,long long b,long long mod){\n\tlong long ret = 1;\n\twhile(b){\n\t\tif(b&1) ret = mul(ret,a,mod);\n\t\ta = mul(a,a,mod);\n\t\tb>>=1;\n\t}\n\treturn ret;\n}\nbool is_prime(int a){\n\tif(a&1){\n\t\tfor(int i = 3;i*i<=a;i++) if(a%i==0) return false;\n\t\treturn true;\n\t}\n\treturn false;\n}\nstruct p{\n\tint mat[2][2];\n\tvoid show(){\n\t\tfor(int i = 0;i<2;i++){\n\t\t\tfor(int j = 0;j<2;j++) cout<<mat[i][j]<<' ';\n\t\t\tcout<<endl;\n\t\t}\n\t}\n};\np mul(p a,p b,long long mod){\n\tp ret;\n\tmemset(ret.mat,0,sizeof ret.mat);\n\tfor(int i = 0;i<2;i++){\n\t\tfor(int j  =0;j<2;j++){\n\t\t\tfor(int k = 0;k<2;k++){\n\t\t\t\tret.mat[i][j] = add(ret.mat[i][j],mul(a.mat[i][k],b.mat[k][j],mod),mod);\n\t\t\t}\n\t\t}\n\t}\n\treturn ret;\n}\np qpow(p a,long long b,long long mod){\n\tp ret;\n\tfor(int i = 0;i<2;i++) for(int j = 0;j<2;j++) {\n\t\tif(i==j) ret.mat[i][j]=1;\n\t\telse ret.mat[i][j]=0;\n\t}\n\twhile(b){\n\t\tif(b&1) ret = mul(ret,a,mod);\n\t\ta = mul(a,a,mod);\n\t\tb>>=1;\n\t}\n\treturn ret;\n}\nlong long solve(long long prime){\n\tconst long long MOD = prime*prime-1;\n\n\tlong long zhi = qpow(2,n-1,MOD);\n\tzhi = add(zhi,MOD-1,MOD);\n\n\tp base;\n\tbase.mat[0][0]=11,base.mat[0][1]=-1;\n\tbase.mat[1][0]=1 ,base.mat[1][1]=0;\n\t\n\tbase = qpow(base,zhi,prime);\n\tlong long ret1 = mul(base.mat[1][0],119,prime);\n\tlong long ret2 = mul(base.mat[1][1],11,prime);\n\treturn add(ret1,ret2,prime);\n}\nlong long inv(long long a,long long mod){\n\tif(a==1) return 1;\n\treturn mul(mod-mod/a,inv(mod%a,mod),mod);\n}\nint main(){\n\tlong long ans = 0;\n\tfor(int i = l;i<=r;i++){\n\t\tif(is_prime(i)){\n\t\t\tlong long bn = solve(i);\n\t\t\tlong long now1 = add(bn,i-5,i);\n\t\t\tlong long an = mul(now1,inv(6,i),i);\n\t\t\tans+=an;\n\t\t}\n\t\tif(i%100000==0) cout<<i<<endl;\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n\n```\n","slug":"PE/PE492","published":1,"updated":"2019-05-01T00:43:25.248Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1gh000oa6133icjmhiy","content":"<p><a href=\"https://projecteuler.net/problem=492\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><a id=\"more\"></a>\n<p>Define the sequence $a_1, a_2, a_3,\\dots$ as:</p>\n<ul>\n<li>$a_1 $=$ 1$</li>\n<li>$a_{n+1} = 6a_n^2 + 10a_n + 3$ for $n \\geq 1$.</li>\n</ul>\n<p>Examples:</p>\n<p>$a_3 $=$ 2359$</p>\n<p>$a_6 $=$ 269221280981320216750489044576319$</p>\n<p>$a_6 mod 1000000007 $=$ 203064689$</p>\n<p>$a_{100} mod 1000000007 $=$ 456482974$</p>\n<p>Define $B(x,y,n)$ as $\\sum (a_n mod $ $p)$ for every prime $p$ such that $x \\leq p \\leq x+y$.</p>\n<p>Examples:</p>\n<p>$B(10^9, 10^3, 10^3)$ = $23674718882$</p>\n<p>$B(10^9, 10^3, 10^{15})$ = $20731563854$</p>\n<p>Find $B(10^9, 10^7, 10^{15})$.</p>\n<h3 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>给你一个二次递推序列,问你这个数列的第$10^{15}$项膜上一堆质数之后求和是多少.</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>看了<a href=\"https://blog.csdn.net/ACdreamers/article/details/44997467\" target=\"_blank\" rel=\"noopener\">大佬</a>的题解之后才做出来的,还是太菜了$\\dots$</p>\n<p>下面是分析.</p>\n<p>首先我们令$b_n = 6a_n+5$</p>\n<p>于是有</p>\n<p>$b_1$ = $11$</p>\n<p>$b_{n+1} $=$ b_n^2-2$</p>\n<p>然后我们令　$ x + \\frac{1}{x}$ = $11$</p>\n<p>可以显然发现　$b_n$ = $x^{2^{n-1}} + \\frac{1}{x^{2^{n-1}}}$</p>\n<p>于是不妨设　$x$ = $\\frac{11+\\sqrt{117}}{2}$</p>\n<p>$\\therefore b_n$ = $(\\frac{11+\\sqrt{117}}{2})^{2^{n-1}} + (\\frac{11-\\sqrt{117}}{2})^{2^{n-1}}$</p>\n<p>然后我们可以直接算就行了</p>\n<p>我们搞出递推式，然后用矩阵乘法的做法来做</p>\n<p>我们考虑一个更一般的问题，</p>\n<p>令$f_n = (\\frac{11+\\sqrt{117}}{2})^n + (\\frac{11-\\sqrt{117}}{2})^n$</p>\n<p>然后我们考虑$f_n$如何求解</p>\n<p>首先我们假设$f_n = x\\ast f_{n-1}+y\\ast f_{n-2}$</p>\n<p>$$令 (\\frac{11+\\sqrt{117}}{2})^{n-2} = a$$</p>\n<p>$$令 (\\frac{11-\\sqrt{117}}{2})^{n-2} = b$$</p>\n<p>则有<br>\\begin{cases}<br>\\begin{eqnarray}<br>f_n &amp;=&amp; a\\ast (\\frac{11+\\sqrt{117}}{2})^2+b\\ast (\\frac{11-\\sqrt{117}}{2})^2\\\\<br>&amp;=&amp; a\\ast (\\frac{238+22\\sqrt{117}}{4})+b\\ast (\\frac{238-22\\sqrt{117}}{4})\\\\<br>f_{n-1}&amp;=&amp;a\\ast (\\frac{11+\\sqrt{117}}{2})+b\\ast (\\frac{11-\\sqrt{117}}{2})\\\\<br>f_{n-2}&amp;=&amp;a+b \\\\<br>\\end{eqnarray}<br>\\end{cases}</p>\n<p>\\begin{eqnarray}<br>&amp;\\therefore&amp; a\\ast (\\frac{238+22\\sqrt{117}}{4})+b\\ast (\\frac{238-22\\sqrt{117}}{4})\\\\<br>&amp;=&amp; x\\ast a\\ast (\\frac{11+\\sqrt{117}}{2})+x\\ast b\\ast (\\frac{11-\\sqrt{117}}{2}) + y\\ast (a+b)\\\\<br>\\end{eqnarray}</p>\n<p>将非根号项提出来，可以得到</p>\n<p>$\\therefore a\\ast \\frac{119}{2}+b\\ast \\frac{119}{2}$=$xa\\ast \\frac{11}{2}+xb\\ast \\frac{11}{2}+y(a+b) $</p>\n<p>同理将根号项提出可以得到</p>\n<p>$a\\ast \\frac{11}{2}+b\\ast \\frac{-11}{2}$=$xa\\ast \\frac{1}{2}+xb\\ast \\frac{-1}{2} $</p>\n<p>然后可以解得</p>\n<p>\\begin{cases}<br>x = 11\\\\<br>y = -1<br>\\end{cases}</p>\n<p>也就是说$f_n$ = $11\\ast f_{n-1} - f_{n-2}$</p>\n<p>好了，我们得到了$f_n$的递推式，然后考虑原问题，也就是说</p>\n<p>$$<br>\\left(<br>    \\begin{matrix}<br>        b_{n+1}\\\\<br>        b_n<br>    \\end{matrix}<br>\\right)<br>=\\left(<br>    \\begin{matrix}<br>        11 &amp; -1\\\\<br>        1 &amp; 0<br>    \\end{matrix}<br>\\right)^{2^{n-1}-1}<br>\\left(<br>    \\begin{matrix}<br>        b_2\\\\<br>        b_1<br>    \\end{matrix}<br>\\right)<br>=\\left(<br>    \\begin{matrix}<br>        11 &amp; -1\\\\<br>        1 &amp; 0<br>    \\end{matrix}<br>\\right)^{2^{n-1}-1}<br>\\left(<br>    \\begin{matrix}<br>        119\\\\<br>        11<br>    \\end{matrix}<br>\\right)<br>$$</p>\n<p>$\\because n$ 很大($10^{15}$)</p>\n<p>$\\therefore 2^{n-1}-1$很大,以至于我们不能方便的计算</p>\n<p>然后我们考虑降低指数</p>\n<p>具体分析看<a href=\"https://blog.csdn.net/ACdreamers/article/details/44997467\" target=\"_blank\" rel=\"noopener\">大佬</a>的分析,可以得到循环节可以是$(p+1)(p-1)$</p>\n<p>这个值我们可以接受,然后直接裸的矩阵ksm就行了$\\dots$</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> n = <span class=\"number\">1e15</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> l = <span class=\"number\">1e9</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> r = l+<span class=\"number\">1e7</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> b,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> mod)</span></span>&#123; <span class=\"keyword\">return</span> (a+b)%mod; &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">mul</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> b,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> mod)</span></span>&#123;</span><br><span class=\"line\">\ta = add(a,mod,mod);</span><br><span class=\"line\">\tb = add(b,mod,mod);</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ret = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(b)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(b&amp;<span class=\"number\">1</span>) ret = add(ret,a,mod);</span><br><span class=\"line\">\t\ta = add(a,a,mod);</span><br><span class=\"line\">\t\tb&gt;&gt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">qpow</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> b,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> mod)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ret = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(b)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(b&amp;<span class=\"number\">1</span>) ret = mul(ret,a,mod);</span><br><span class=\"line\">\t\ta = mul(a,a,mod);</span><br><span class=\"line\">\t\tb&gt;&gt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">is_prime</span><span class=\"params\">(<span class=\"keyword\">int</span> a)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a&amp;<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">3</span>;i*i&lt;=a;i++) <span class=\"keyword\">if</span>(a%i==<span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">p</span>&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> mat[<span class=\"number\">2</span>][<span class=\"number\">2</span>];</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;<span class=\"number\">2</span>;i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j&lt;<span class=\"number\">2</span>;j++) <span class=\"built_in\">cout</span>&lt;&lt;mat[i][j]&lt;&lt;<span class=\"string\">' '</span>;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"function\">p <span class=\"title\">mul</span><span class=\"params\">(p a,p b,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> mod)</span></span>&#123;</span><br><span class=\"line\">\tp ret;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(ret.mat,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span> ret.mat);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;<span class=\"number\">2</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j  =<span class=\"number\">0</span>;j&lt;<span class=\"number\">2</span>;j++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>;k&lt;<span class=\"number\">2</span>;k++)&#123;</span><br><span class=\"line\">\t\t\t\tret.mat[i][j] = add(ret.mat[i][j],mul(a.mat[i][k],b.mat[k][j],mod),mod);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">p <span class=\"title\">qpow</span><span class=\"params\">(p a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> b,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> mod)</span></span>&#123;</span><br><span class=\"line\">\tp ret;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;<span class=\"number\">2</span>;i++) <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j&lt;<span class=\"number\">2</span>;j++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i==j) ret.mat[i][j]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> ret.mat[i][j]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(b)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(b&amp;<span class=\"number\">1</span>) ret = mul(ret,a,mod);</span><br><span class=\"line\">\t\ta = mul(a,a,mod);</span><br><span class=\"line\">\t\tb&gt;&gt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">solve</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> prime)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> MOD = prime*prime<span class=\"number\">-1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> zhi = qpow(<span class=\"number\">2</span>,n<span class=\"number\">-1</span>,MOD);</span><br><span class=\"line\">\tzhi = add(zhi,MOD<span class=\"number\">-1</span>,MOD);</span><br><span class=\"line\"></span><br><span class=\"line\">\tp base;</span><br><span class=\"line\">\tbase.mat[<span class=\"number\">0</span>][<span class=\"number\">0</span>]=<span class=\"number\">11</span>,base.mat[<span class=\"number\">0</span>][<span class=\"number\">1</span>]=<span class=\"number\">-1</span>;</span><br><span class=\"line\">\tbase.mat[<span class=\"number\">1</span>][<span class=\"number\">0</span>]=<span class=\"number\">1</span> ,base.mat[<span class=\"number\">1</span>][<span class=\"number\">1</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tbase = qpow(base,zhi,prime);</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ret1 = mul(base.mat[<span class=\"number\">1</span>][<span class=\"number\">0</span>],<span class=\"number\">119</span>,prime);</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ret2 = mul(base.mat[<span class=\"number\">1</span>][<span class=\"number\">1</span>],<span class=\"number\">11</span>,prime);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> add(ret1,ret2,prime);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">inv</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> mod)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a==<span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> mul(mod-mod/a,inv(mod%a,mod),mod);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = l;i&lt;=r;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(is_prime(i))&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> bn = solve(i);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> now1 = add(bn,i<span class=\"number\">-5</span>,i);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> an = mul(now1,inv(<span class=\"number\">6</span>,i),i);</span><br><span class=\"line\">\t\t\tans+=an;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i%<span class=\"number\">100000</span>==<span class=\"number\">0</span>) <span class=\"built_in\">cout</span>&lt;&lt;i&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://projecteuler.net/problem=492\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3>","more":"<p>Define the sequence $a_1, a_2, a_3,\\dots$ as:</p>\n<ul>\n<li>$a_1 $=$ 1$</li>\n<li>$a_{n+1} = 6a_n^2 + 10a_n + 3$ for $n \\geq 1$.</li>\n</ul>\n<p>Examples:</p>\n<p>$a_3 $=$ 2359$</p>\n<p>$a_6 $=$ 269221280981320216750489044576319$</p>\n<p>$a_6 mod 1000000007 $=$ 203064689$</p>\n<p>$a_{100} mod 1000000007 $=$ 456482974$</p>\n<p>Define $B(x,y,n)$ as $\\sum (a_n mod $ $p)$ for every prime $p$ such that $x \\leq p \\leq x+y$.</p>\n<p>Examples:</p>\n<p>$B(10^9, 10^3, 10^3)$ = $23674718882$</p>\n<p>$B(10^9, 10^3, 10^{15})$ = $20731563854$</p>\n<p>Find $B(10^9, 10^7, 10^{15})$.</p>\n<h3 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>给你一个二次递推序列,问你这个数列的第$10^{15}$项膜上一堆质数之后求和是多少.</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>看了<a href=\"https://blog.csdn.net/ACdreamers/article/details/44997467\" target=\"_blank\" rel=\"noopener\">大佬</a>的题解之后才做出来的,还是太菜了$\\dots$</p>\n<p>下面是分析.</p>\n<p>首先我们令$b_n = 6a_n+5$</p>\n<p>于是有</p>\n<p>$b_1$ = $11$</p>\n<p>$b_{n+1} $=$ b_n^2-2$</p>\n<p>然后我们令　$ x + \\frac{1}{x}$ = $11$</p>\n<p>可以显然发现　$b_n$ = $x^{2^{n-1}} + \\frac{1}{x^{2^{n-1}}}$</p>\n<p>于是不妨设　$x$ = $\\frac{11+\\sqrt{117}}{2}$</p>\n<p>$\\therefore b_n$ = $(\\frac{11+\\sqrt{117}}{2})^{2^{n-1}} + (\\frac{11-\\sqrt{117}}{2})^{2^{n-1}}$</p>\n<p>然后我们可以直接算就行了</p>\n<p>我们搞出递推式，然后用矩阵乘法的做法来做</p>\n<p>我们考虑一个更一般的问题，</p>\n<p>令$f_n = (\\frac{11+\\sqrt{117}}{2})^n + (\\frac{11-\\sqrt{117}}{2})^n$</p>\n<p>然后我们考虑$f_n$如何求解</p>\n<p>首先我们假设$f_n = x\\ast f_{n-1}+y\\ast f_{n-2}$</p>\n<p>$$令 (\\frac{11+\\sqrt{117}}{2})^{n-2} = a$$</p>\n<p>$$令 (\\frac{11-\\sqrt{117}}{2})^{n-2} = b$$</p>\n<p>则有<br>\\begin{cases}<br>\\begin{eqnarray}<br>f_n &amp;=&amp; a\\ast (\\frac{11+\\sqrt{117}}{2})^2+b\\ast (\\frac{11-\\sqrt{117}}{2})^2\\\\<br>&amp;=&amp; a\\ast (\\frac{238+22\\sqrt{117}}{4})+b\\ast (\\frac{238-22\\sqrt{117}}{4})\\\\<br>f_{n-1}&amp;=&amp;a\\ast (\\frac{11+\\sqrt{117}}{2})+b\\ast (\\frac{11-\\sqrt{117}}{2})\\\\<br>f_{n-2}&amp;=&amp;a+b \\\\<br>\\end{eqnarray}<br>\\end{cases}</p>\n<p>\\begin{eqnarray}<br>&amp;\\therefore&amp; a\\ast (\\frac{238+22\\sqrt{117}}{4})+b\\ast (\\frac{238-22\\sqrt{117}}{4})\\\\<br>&amp;=&amp; x\\ast a\\ast (\\frac{11+\\sqrt{117}}{2})+x\\ast b\\ast (\\frac{11-\\sqrt{117}}{2}) + y\\ast (a+b)\\\\<br>\\end{eqnarray}</p>\n<p>将非根号项提出来，可以得到</p>\n<p>$\\therefore a\\ast \\frac{119}{2}+b\\ast \\frac{119}{2}$=$xa\\ast \\frac{11}{2}+xb\\ast \\frac{11}{2}+y(a+b) $</p>\n<p>同理将根号项提出可以得到</p>\n<p>$a\\ast \\frac{11}{2}+b\\ast \\frac{-11}{2}$=$xa\\ast \\frac{1}{2}+xb\\ast \\frac{-1}{2} $</p>\n<p>然后可以解得</p>\n<p>\\begin{cases}<br>x = 11\\\\<br>y = -1<br>\\end{cases}</p>\n<p>也就是说$f_n$ = $11\\ast f_{n-1} - f_{n-2}$</p>\n<p>好了，我们得到了$f_n$的递推式，然后考虑原问题，也就是说</p>\n<p>$$<br>\\left(<br>    \\begin{matrix}<br>        b_{n+1}\\\\<br>        b_n<br>    \\end{matrix}<br>\\right)<br>=\\left(<br>    \\begin{matrix}<br>        11 &amp; -1\\\\<br>        1 &amp; 0<br>    \\end{matrix}<br>\\right)^{2^{n-1}-1}<br>\\left(<br>    \\begin{matrix}<br>        b_2\\\\<br>        b_1<br>    \\end{matrix}<br>\\right)<br>=\\left(<br>    \\begin{matrix}<br>        11 &amp; -1\\\\<br>        1 &amp; 0<br>    \\end{matrix}<br>\\right)^{2^{n-1}-1}<br>\\left(<br>    \\begin{matrix}<br>        119\\\\<br>        11<br>    \\end{matrix}<br>\\right)<br>$$</p>\n<p>$\\because n$ 很大($10^{15}$)</p>\n<p>$\\therefore 2^{n-1}-1$很大,以至于我们不能方便的计算</p>\n<p>然后我们考虑降低指数</p>\n<p>具体分析看<a href=\"https://blog.csdn.net/ACdreamers/article/details/44997467\" target=\"_blank\" rel=\"noopener\">大佬</a>的分析,可以得到循环节可以是$(p+1)(p-1)$</p>\n<p>这个值我们可以接受,然后直接裸的矩阵ksm就行了$\\dots$</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> n = <span class=\"number\">1e15</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> l = <span class=\"number\">1e9</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> r = l+<span class=\"number\">1e7</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> b,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> mod)</span></span>&#123; <span class=\"keyword\">return</span> (a+b)%mod; &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">mul</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> b,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> mod)</span></span>&#123;</span><br><span class=\"line\">\ta = add(a,mod,mod);</span><br><span class=\"line\">\tb = add(b,mod,mod);</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ret = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(b)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(b&amp;<span class=\"number\">1</span>) ret = add(ret,a,mod);</span><br><span class=\"line\">\t\ta = add(a,a,mod);</span><br><span class=\"line\">\t\tb&gt;&gt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">qpow</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> b,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> mod)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ret = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(b)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(b&amp;<span class=\"number\">1</span>) ret = mul(ret,a,mod);</span><br><span class=\"line\">\t\ta = mul(a,a,mod);</span><br><span class=\"line\">\t\tb&gt;&gt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">is_prime</span><span class=\"params\">(<span class=\"keyword\">int</span> a)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a&amp;<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">3</span>;i*i&lt;=a;i++) <span class=\"keyword\">if</span>(a%i==<span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">p</span>&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> mat[<span class=\"number\">2</span>][<span class=\"number\">2</span>];</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;<span class=\"number\">2</span>;i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j&lt;<span class=\"number\">2</span>;j++) <span class=\"built_in\">cout</span>&lt;&lt;mat[i][j]&lt;&lt;<span class=\"string\">' '</span>;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"function\">p <span class=\"title\">mul</span><span class=\"params\">(p a,p b,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> mod)</span></span>&#123;</span><br><span class=\"line\">\tp ret;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(ret.mat,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span> ret.mat);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;<span class=\"number\">2</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j  =<span class=\"number\">0</span>;j&lt;<span class=\"number\">2</span>;j++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>;k&lt;<span class=\"number\">2</span>;k++)&#123;</span><br><span class=\"line\">\t\t\t\tret.mat[i][j] = add(ret.mat[i][j],mul(a.mat[i][k],b.mat[k][j],mod),mod);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">p <span class=\"title\">qpow</span><span class=\"params\">(p a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> b,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> mod)</span></span>&#123;</span><br><span class=\"line\">\tp ret;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;<span class=\"number\">2</span>;i++) <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j&lt;<span class=\"number\">2</span>;j++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i==j) ret.mat[i][j]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> ret.mat[i][j]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(b)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(b&amp;<span class=\"number\">1</span>) ret = mul(ret,a,mod);</span><br><span class=\"line\">\t\ta = mul(a,a,mod);</span><br><span class=\"line\">\t\tb&gt;&gt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">solve</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> prime)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> MOD = prime*prime<span class=\"number\">-1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> zhi = qpow(<span class=\"number\">2</span>,n<span class=\"number\">-1</span>,MOD);</span><br><span class=\"line\">\tzhi = add(zhi,MOD<span class=\"number\">-1</span>,MOD);</span><br><span class=\"line\"></span><br><span class=\"line\">\tp base;</span><br><span class=\"line\">\tbase.mat[<span class=\"number\">0</span>][<span class=\"number\">0</span>]=<span class=\"number\">11</span>,base.mat[<span class=\"number\">0</span>][<span class=\"number\">1</span>]=<span class=\"number\">-1</span>;</span><br><span class=\"line\">\tbase.mat[<span class=\"number\">1</span>][<span class=\"number\">0</span>]=<span class=\"number\">1</span> ,base.mat[<span class=\"number\">1</span>][<span class=\"number\">1</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tbase = qpow(base,zhi,prime);</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ret1 = mul(base.mat[<span class=\"number\">1</span>][<span class=\"number\">0</span>],<span class=\"number\">119</span>,prime);</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ret2 = mul(base.mat[<span class=\"number\">1</span>][<span class=\"number\">1</span>],<span class=\"number\">11</span>,prime);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> add(ret1,ret2,prime);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">inv</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> mod)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a==<span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> mul(mod-mod/a,inv(mod%a,mod),mod);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = l;i&lt;=r;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(is_prime(i))&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> bn = solve(i);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> now1 = add(bn,i<span class=\"number\">-5</span>,i);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> an = mul(now1,inv(<span class=\"number\">6</span>,i),i);</span><br><span class=\"line\">\t\t\tans+=an;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i%<span class=\"number\">100000</span>==<span class=\"number\">0</span>) <span class=\"built_in\">cout</span>&lt;&lt;i&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Codeforces 1187 E","date":"2019-09-19T16:00:00.000Z","author":"zuhiul","_content":"\n## E. Tree Painting\n\n[开启传送门](http://codeforces.com/problemset/problem/1187/E)\n\n<!-- more -->\n\n### 题目描述\n\nYou are given a tree (an undirected connected acyclic graph) consisting of $n$ vertices. You are playing a game on this tree.\n\nInitially all vertices are white. On the first turn of the game you choose one vertex and paint it black. Then on each turn you choose a white vertex adjacent (connected by an edge) to **any** black vertex and paint it black.\n\nEach time when you choose a vertex (even during the first turn), you gain the number of points equal to the size of the connected component consisting only of white vertices that contains the chosen vertex. The game ends when all vertices are painted black.\n\nLet's see the following example:\n\n![](http://codeforces.com/predownloaded/ad/4f/ad4fad5ce28ee4d1715321cbdee7db39ee67260c.png)\n\nVertices $1$ and $4$ are painted black already. If you choose the vertex $2$, you will gain $4$ points for the connected component consisting of vertices $2,3,5$ and $6$. If you choose the vertex $9$, you will gain $3$ points for the connected component consisting of vertices $7,8$ and $9$.\n\nYour task is to maximize the number of points you gain.\n\n### Input\n\nThe first line contains an integer $n$ — the number of vertices in the tree ($2≤n≤2⋅10^5$).\n\nEach of the next $n−1$ lines describes an edge of the tree. Edge $i$ is denoted by two integers $u_i$ and $v_i$, the indices of vertices it connects ($1≤u_i,v_i≤n$, $u_i\\neq v_i$).\n\nIt is guaranteed that the given edges form a tree.\n\n### Output\n\nPrint one integer — the maximum number of points you gain if you will play optimally.\n\n### Examples\n\n#### input1\n\n9\n\n1 2\n\n2 3\n\n2 5\n\n2 6\n\n1 4\n\n4 9\n\n9 7\n\n9 8\n\n#### output1\n\n36\n\n#### input2\n\n5\n\n1 2\n\n1 3\n\n2 4\n\n2 5\n\n#### output2\n\n14\n\n### Note\n\nThe first example tree is shown in the problem statement.\n\n### 题意\n\nzuhiul认识很多妹子（不超过$2\\cdot 10^5$个），妹子之间是个树形关系。他决定每天聊一个妹子，但是他是个强迫症，第一天他可以随便聊任何一个妹子，但是之后每一天，他只能聊和之前聊过的妹子有关系的妹子。每次聊一个妹子之前，他会数一下这个妹子所在的未聊过的连通块的大小，当然，连通块越大他越开心（连通块为 $n$ ，他会得到 $n$ 开心度），现在问你，他聊完所有妹子后，开心度求和后为多少。\n\n### 分析\n\n如果我们强制第一次聊编号为 $1$ 的妹子， 我们考虑怎么统计答案。\n\n一个很直观的想法是，我们可以一次dfs出所有子树的大小，然后对于每棵子树大小求和就是答案。\n\n那么现在问题就转化成了，如何对于每个根求答案。\n\n显然换根可解，但是如何统计换根后的答案呢？\n\n我们考虑一下，我们以 $1$ 为根的时候怎么算的答案呢？\n\n每棵子树的大小求和。但是我们可以换个角度看问题，我们不看子树的贡献，我们考虑每个节点的贡献，可以显然的发现，每个节点的贡献就是每个节点到 $1$ 的距离。\n\n所以换根就很直观了。我们定义 $ans[i]$ 表示以 $i$ 为根的答案，$cnt[i]$ 表示以 $1$ 为根的时候，$i$ 子树的大小。所以换根相对于当前节点的父亲的代价就是 $i$ 子树深度-1，其他节点深度+1。所以当前节点相对于父亲的答案是，减少了 $cnt[i]$，增加了 $n-cnt[i]$。也即\n\n$$ans[ind] = ans[pre] - cnt[ind] + (n-cnt[ind]) $$\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxm = 2e5+10;\nint n;\nvector<int> mat[maxm];\nlong long size[maxm];\nlong long ans[maxm];\nvoid dfs(int ind = 1, int pre = 0) {\n\tsize[ind] = 1;\n\tfor(auto i:mat[ind]) {\n\t\tif(i==pre) continue;\n\t\tdfs(i, ind);\n\t\tsize[ind] += size[i];\n\t}\n\tans[1] += size[ind];\n}\nvoid dfs2(int ind, int pre) {\n\tans[ind] = ans[pre] - size[ind] + (n-size[ind]);\n\tfor(auto i:mat[ind]) {\n\t\tif(i==pre) continue;\n\t\tdfs2(i, ind);\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i = 1, from, to;i<n;i++) {\n\t\tscanf(\"%d%d\",&from,&to);\n\t\tmat[from].push_back(to);\n\t\tmat[to].push_back(from);\n\t}\n\tdfs();\n\tfor(auto i:mat[1]) dfs2(i, 1);\n\tlong long rans = 0;\n\tfor(int i = 1;i<=n;i++) rans = max(rans, ans[i]);\n\tprintf(\"%lld\\n\", rans);\n\treturn 0;\n}\n```\n\n\n","source":"_posts/CF/CF_1187_E.md","raw":"---\ntitle: \tCodeforces 1187 E\ndate:\t\t2019-09-20\nauthor:\t\"zuhiul\" \ntags:\n  - CF\n---\n\n## E. Tree Painting\n\n[开启传送门](http://codeforces.com/problemset/problem/1187/E)\n\n<!-- more -->\n\n### 题目描述\n\nYou are given a tree (an undirected connected acyclic graph) consisting of $n$ vertices. You are playing a game on this tree.\n\nInitially all vertices are white. On the first turn of the game you choose one vertex and paint it black. Then on each turn you choose a white vertex adjacent (connected by an edge) to **any** black vertex and paint it black.\n\nEach time when you choose a vertex (even during the first turn), you gain the number of points equal to the size of the connected component consisting only of white vertices that contains the chosen vertex. The game ends when all vertices are painted black.\n\nLet's see the following example:\n\n![](http://codeforces.com/predownloaded/ad/4f/ad4fad5ce28ee4d1715321cbdee7db39ee67260c.png)\n\nVertices $1$ and $4$ are painted black already. If you choose the vertex $2$, you will gain $4$ points for the connected component consisting of vertices $2,3,5$ and $6$. If you choose the vertex $9$, you will gain $3$ points for the connected component consisting of vertices $7,8$ and $9$.\n\nYour task is to maximize the number of points you gain.\n\n### Input\n\nThe first line contains an integer $n$ — the number of vertices in the tree ($2≤n≤2⋅10^5$).\n\nEach of the next $n−1$ lines describes an edge of the tree. Edge $i$ is denoted by two integers $u_i$ and $v_i$, the indices of vertices it connects ($1≤u_i,v_i≤n$, $u_i\\neq v_i$).\n\nIt is guaranteed that the given edges form a tree.\n\n### Output\n\nPrint one integer — the maximum number of points you gain if you will play optimally.\n\n### Examples\n\n#### input1\n\n9\n\n1 2\n\n2 3\n\n2 5\n\n2 6\n\n1 4\n\n4 9\n\n9 7\n\n9 8\n\n#### output1\n\n36\n\n#### input2\n\n5\n\n1 2\n\n1 3\n\n2 4\n\n2 5\n\n#### output2\n\n14\n\n### Note\n\nThe first example tree is shown in the problem statement.\n\n### 题意\n\nzuhiul认识很多妹子（不超过$2\\cdot 10^5$个），妹子之间是个树形关系。他决定每天聊一个妹子，但是他是个强迫症，第一天他可以随便聊任何一个妹子，但是之后每一天，他只能聊和之前聊过的妹子有关系的妹子。每次聊一个妹子之前，他会数一下这个妹子所在的未聊过的连通块的大小，当然，连通块越大他越开心（连通块为 $n$ ，他会得到 $n$ 开心度），现在问你，他聊完所有妹子后，开心度求和后为多少。\n\n### 分析\n\n如果我们强制第一次聊编号为 $1$ 的妹子， 我们考虑怎么统计答案。\n\n一个很直观的想法是，我们可以一次dfs出所有子树的大小，然后对于每棵子树大小求和就是答案。\n\n那么现在问题就转化成了，如何对于每个根求答案。\n\n显然换根可解，但是如何统计换根后的答案呢？\n\n我们考虑一下，我们以 $1$ 为根的时候怎么算的答案呢？\n\n每棵子树的大小求和。但是我们可以换个角度看问题，我们不看子树的贡献，我们考虑每个节点的贡献，可以显然的发现，每个节点的贡献就是每个节点到 $1$ 的距离。\n\n所以换根就很直观了。我们定义 $ans[i]$ 表示以 $i$ 为根的答案，$cnt[i]$ 表示以 $1$ 为根的时候，$i$ 子树的大小。所以换根相对于当前节点的父亲的代价就是 $i$ 子树深度-1，其他节点深度+1。所以当前节点相对于父亲的答案是，减少了 $cnt[i]$，增加了 $n-cnt[i]$。也即\n\n$$ans[ind] = ans[pre] - cnt[ind] + (n-cnt[ind]) $$\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxm = 2e5+10;\nint n;\nvector<int> mat[maxm];\nlong long size[maxm];\nlong long ans[maxm];\nvoid dfs(int ind = 1, int pre = 0) {\n\tsize[ind] = 1;\n\tfor(auto i:mat[ind]) {\n\t\tif(i==pre) continue;\n\t\tdfs(i, ind);\n\t\tsize[ind] += size[i];\n\t}\n\tans[1] += size[ind];\n}\nvoid dfs2(int ind, int pre) {\n\tans[ind] = ans[pre] - size[ind] + (n-size[ind]);\n\tfor(auto i:mat[ind]) {\n\t\tif(i==pre) continue;\n\t\tdfs2(i, ind);\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i = 1, from, to;i<n;i++) {\n\t\tscanf(\"%d%d\",&from,&to);\n\t\tmat[from].push_back(to);\n\t\tmat[to].push_back(from);\n\t}\n\tdfs();\n\tfor(auto i:mat[1]) dfs2(i, 1);\n\tlong long rans = 0;\n\tfor(int i = 1;i<=n;i++) rans = max(rans, ans[i]);\n\tprintf(\"%lld\\n\", rans);\n\treturn 0;\n}\n```\n\n\n","slug":"CF/CF_1187_E","published":1,"updated":"2019-09-20T06:57:34.909Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1gi000qa613bg8swpk8","content":"<h2 id=\"E-Tree-Painting\"><a href=\"#E-Tree-Painting\" class=\"headerlink\" title=\"E. Tree Painting\"></a>E. Tree Painting</h2><p><a href=\"http://codeforces.com/problemset/problem/1187/E\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<a id=\"more\"></a>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>You are given a tree (an undirected connected acyclic graph) consisting of $n$ vertices. You are playing a game on this tree.</p>\n<p>Initially all vertices are white. On the first turn of the game you choose one vertex and paint it black. Then on each turn you choose a white vertex adjacent (connected by an edge) to <strong>any</strong> black vertex and paint it black.</p>\n<p>Each time when you choose a vertex (even during the first turn), you gain the number of points equal to the size of the connected component consisting only of white vertices that contains the chosen vertex. The game ends when all vertices are painted black.</p>\n<p>Let’s see the following example:</p>\n<p><img src=\"http://codeforces.com/predownloaded/ad/4f/ad4fad5ce28ee4d1715321cbdee7db39ee67260c.png\" alt=\"\"></p>\n<p>Vertices $1$ and $4$ are painted black already. If you choose the vertex $2$, you will gain $4$ points for the connected component consisting of vertices $2,3,5$ and $6$. If you choose the vertex $9$, you will gain $3$ points for the connected component consisting of vertices $7,8$ and $9$.</p>\n<p>Your task is to maximize the number of points you gain.</p>\n<h3 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h3><p>The first line contains an integer $n$ — the number of vertices in the tree ($2≤n≤2⋅10^5$).</p>\n<p>Each of the next $n−1$ lines describes an edge of the tree. Edge $i$ is denoted by two integers $u_i$ and $v_i$, the indices of vertices it connects ($1≤u_i,v_i≤n$, $u_i\\neq v_i$).</p>\n<p>It is guaranteed that the given edges form a tree.</p>\n<h3 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h3><p>Print one integer — the maximum number of points you gain if you will play optimally.</p>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"input1\"><a href=\"#input1\" class=\"headerlink\" title=\"input1\"></a>input1</h4><p>9</p>\n<p>1 2</p>\n<p>2 3</p>\n<p>2 5</p>\n<p>2 6</p>\n<p>1 4</p>\n<p>4 9</p>\n<p>9 7</p>\n<p>9 8</p>\n<h4 id=\"output1\"><a href=\"#output1\" class=\"headerlink\" title=\"output1\"></a>output1</h4><p>36</p>\n<h4 id=\"input2\"><a href=\"#input2\" class=\"headerlink\" title=\"input2\"></a>input2</h4><p>5</p>\n<p>1 2</p>\n<p>1 3</p>\n<p>2 4</p>\n<p>2 5</p>\n<h4 id=\"output2\"><a href=\"#output2\" class=\"headerlink\" title=\"output2\"></a>output2</h4><p>14</p>\n<h3 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h3><p>The first example tree is shown in the problem statement.</p>\n<h3 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>zuhiul认识很多妹子（不超过$2\\cdot 10^5$个），妹子之间是个树形关系。他决定每天聊一个妹子，但是他是个强迫症，第一天他可以随便聊任何一个妹子，但是之后每一天，他只能聊和之前聊过的妹子有关系的妹子。每次聊一个妹子之前，他会数一下这个妹子所在的未聊过的连通块的大小，当然，连通块越大他越开心（连通块为 $n$ ，他会得到 $n$ 开心度），现在问你，他聊完所有妹子后，开心度求和后为多少。</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>如果我们强制第一次聊编号为 $1$ 的妹子， 我们考虑怎么统计答案。</p>\n<p>一个很直观的想法是，我们可以一次dfs出所有子树的大小，然后对于每棵子树大小求和就是答案。</p>\n<p>那么现在问题就转化成了，如何对于每个根求答案。</p>\n<p>显然换根可解，但是如何统计换根后的答案呢？</p>\n<p>我们考虑一下，我们以 $1$ 为根的时候怎么算的答案呢？</p>\n<p>每棵子树的大小求和。但是我们可以换个角度看问题，我们不看子树的贡献，我们考虑每个节点的贡献，可以显然的发现，每个节点的贡献就是每个节点到 $1$ 的距离。</p>\n<p>所以换根就很直观了。我们定义 $ans[i]$ 表示以 $i$ 为根的答案，$cnt[i]$ 表示以 $1$ 为根的时候，$i$ 子树的大小。所以换根相对于当前节点的父亲的代价就是 $i$ 子树深度-1，其他节点深度+1。所以当前节点相对于父亲的答案是，减少了 $cnt[i]$，增加了 $n-cnt[i]$。也即</p>\n<p>$$ans[ind] = ans[pre] - cnt[ind] + (n-cnt[ind]) $$</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">2e5</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; mat[maxm];</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> size[maxm];</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ans[maxm];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> ind = <span class=\"number\">1</span>, <span class=\"keyword\">int</span> pre = <span class=\"number\">0</span>)</span> </span>&#123;</span><br><span class=\"line\">\tsize[ind] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> i:mat[ind]) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i==pre) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\tdfs(i, ind);</span><br><span class=\"line\">\t\tsize[ind] += size[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tans[<span class=\"number\">1</span>] += size[ind];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs2</span><span class=\"params\">(<span class=\"keyword\">int</span> ind, <span class=\"keyword\">int</span> pre)</span> </span>&#123;</span><br><span class=\"line\">\tans[ind] = ans[pre] - size[ind] + (n-size[ind]);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> i:mat[ind]) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i==pre) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\tdfs2(i, ind);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>, from, to;i&lt;n;i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;from,&amp;to);</span><br><span class=\"line\">\t\tmat[from].push_back(to);</span><br><span class=\"line\">\t\tmat[to].push_back(from);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tdfs();</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> i:mat[<span class=\"number\">1</span>]) dfs2(i, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> rans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=n;i++) rans = max(rans, ans[i]);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>, rans);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"E-Tree-Painting\"><a href=\"#E-Tree-Painting\" class=\"headerlink\" title=\"E. Tree Painting\"></a>E. Tree Painting</h2><p><a href=\"http://codeforces.com/problemset/problem/1187/E\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>","more":"<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>You are given a tree (an undirected connected acyclic graph) consisting of $n$ vertices. You are playing a game on this tree.</p>\n<p>Initially all vertices are white. On the first turn of the game you choose one vertex and paint it black. Then on each turn you choose a white vertex adjacent (connected by an edge) to <strong>any</strong> black vertex and paint it black.</p>\n<p>Each time when you choose a vertex (even during the first turn), you gain the number of points equal to the size of the connected component consisting only of white vertices that contains the chosen vertex. The game ends when all vertices are painted black.</p>\n<p>Let’s see the following example:</p>\n<p><img src=\"http://codeforces.com/predownloaded/ad/4f/ad4fad5ce28ee4d1715321cbdee7db39ee67260c.png\" alt=\"\"></p>\n<p>Vertices $1$ and $4$ are painted black already. If you choose the vertex $2$, you will gain $4$ points for the connected component consisting of vertices $2,3,5$ and $6$. If you choose the vertex $9$, you will gain $3$ points for the connected component consisting of vertices $7,8$ and $9$.</p>\n<p>Your task is to maximize the number of points you gain.</p>\n<h3 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h3><p>The first line contains an integer $n$ — the number of vertices in the tree ($2≤n≤2⋅10^5$).</p>\n<p>Each of the next $n−1$ lines describes an edge of the tree. Edge $i$ is denoted by two integers $u_i$ and $v_i$, the indices of vertices it connects ($1≤u_i,v_i≤n$, $u_i\\neq v_i$).</p>\n<p>It is guaranteed that the given edges form a tree.</p>\n<h3 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h3><p>Print one integer — the maximum number of points you gain if you will play optimally.</p>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"input1\"><a href=\"#input1\" class=\"headerlink\" title=\"input1\"></a>input1</h4><p>9</p>\n<p>1 2</p>\n<p>2 3</p>\n<p>2 5</p>\n<p>2 6</p>\n<p>1 4</p>\n<p>4 9</p>\n<p>9 7</p>\n<p>9 8</p>\n<h4 id=\"output1\"><a href=\"#output1\" class=\"headerlink\" title=\"output1\"></a>output1</h4><p>36</p>\n<h4 id=\"input2\"><a href=\"#input2\" class=\"headerlink\" title=\"input2\"></a>input2</h4><p>5</p>\n<p>1 2</p>\n<p>1 3</p>\n<p>2 4</p>\n<p>2 5</p>\n<h4 id=\"output2\"><a href=\"#output2\" class=\"headerlink\" title=\"output2\"></a>output2</h4><p>14</p>\n<h3 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h3><p>The first example tree is shown in the problem statement.</p>\n<h3 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>zuhiul认识很多妹子（不超过$2\\cdot 10^5$个），妹子之间是个树形关系。他决定每天聊一个妹子，但是他是个强迫症，第一天他可以随便聊任何一个妹子，但是之后每一天，他只能聊和之前聊过的妹子有关系的妹子。每次聊一个妹子之前，他会数一下这个妹子所在的未聊过的连通块的大小，当然，连通块越大他越开心（连通块为 $n$ ，他会得到 $n$ 开心度），现在问你，他聊完所有妹子后，开心度求和后为多少。</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>如果我们强制第一次聊编号为 $1$ 的妹子， 我们考虑怎么统计答案。</p>\n<p>一个很直观的想法是，我们可以一次dfs出所有子树的大小，然后对于每棵子树大小求和就是答案。</p>\n<p>那么现在问题就转化成了，如何对于每个根求答案。</p>\n<p>显然换根可解，但是如何统计换根后的答案呢？</p>\n<p>我们考虑一下，我们以 $1$ 为根的时候怎么算的答案呢？</p>\n<p>每棵子树的大小求和。但是我们可以换个角度看问题，我们不看子树的贡献，我们考虑每个节点的贡献，可以显然的发现，每个节点的贡献就是每个节点到 $1$ 的距离。</p>\n<p>所以换根就很直观了。我们定义 $ans[i]$ 表示以 $i$ 为根的答案，$cnt[i]$ 表示以 $1$ 为根的时候，$i$ 子树的大小。所以换根相对于当前节点的父亲的代价就是 $i$ 子树深度-1，其他节点深度+1。所以当前节点相对于父亲的答案是，减少了 $cnt[i]$，增加了 $n-cnt[i]$。也即</p>\n<p>$$ans[ind] = ans[pre] - cnt[ind] + (n-cnt[ind]) $$</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">2e5</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; mat[maxm];</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> size[maxm];</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ans[maxm];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> ind = <span class=\"number\">1</span>, <span class=\"keyword\">int</span> pre = <span class=\"number\">0</span>)</span> </span>&#123;</span><br><span class=\"line\">\tsize[ind] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> i:mat[ind]) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i==pre) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\tdfs(i, ind);</span><br><span class=\"line\">\t\tsize[ind] += size[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tans[<span class=\"number\">1</span>] += size[ind];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs2</span><span class=\"params\">(<span class=\"keyword\">int</span> ind, <span class=\"keyword\">int</span> pre)</span> </span>&#123;</span><br><span class=\"line\">\tans[ind] = ans[pre] - size[ind] + (n-size[ind]);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> i:mat[ind]) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i==pre) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\tdfs2(i, ind);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>, from, to;i&lt;n;i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;from,&amp;to);</span><br><span class=\"line\">\t\tmat[from].push_back(to);</span><br><span class=\"line\">\t\tmat[to].push_back(from);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tdfs();</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> i:mat[<span class=\"number\">1</span>]) dfs2(i, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> rans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=n;i++) rans = max(rans, ans[i]);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>, rans);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Codeforces 1215 E","date":"2019-09-15T16:00:00.000Z","author":"zuhiul","_content":"\n## E. Marbles\n\n[开启传送门](http://codeforces.com/contest/1215/problem/E)\n\n<!-- more -->\n\n### 题目描述\n\nMonocarp has arranged $n$ colored marbles in a row. The color of the $i$-th marble is $a_i$. Monocarp likes ordered things, so he wants to rearrange marbles in such a way that all marbles of the same color form a contiguos segment (and there is only one such segment for each color).\n\nIn other words, Monocarp wants to rearrange marbles so that, for every color $j$, if the leftmost marble of color $j$ is $l$-th in the row, and the rightmost marble of this color has position $r$ in the row, then every marble from $l$ to $r$ has color $j$.\n\nTo achieve his goal, Monocarp can do the following operation any number of times: choose two neighbouring marbles, and swap them.\n\nYou have to calculate the minimum number of operations Monocarp has to perform to rearrange the marbles. Note that the order of segments of marbles having equal color does not matter, it is only required that, for every color, all the marbles of this color form exactly one contiguous segment.\n\n### Input\n\nThe first line contains one integer $n$ ($2≤n≤4\\cdot10^5$) — the number of marbles.\n\nThe second line contains an integer sequence $a_1, a_2, \\dots, a_n$($1≤a_i≤20$), where $a_i$ is the color of the $i$-th marble.\n\n## Output\n\nPrint the minimum number of operations Monocarp has to perform to achieve his goal.\n\n### Examples\n\n#### input1\n\n7\n\n3 4 2 3 4 2 2\n\n#### output1\n\n3\n\n#### input2\n\n5\n\n20 1 14 10 2\n\n#### output2\n\n0\n\n#### input3\n\n13\n\n5 5 4 4 3 5 7 6 5 4 4 6 \n\n5\n\n#### output3\n\n21\n\n### Note\n\nIn the first example three operations are enough. Firstly, Monocarp should swap the third and the fourth marbles, so the sequence of colors is $[3,4,3,2,4,2,2]$. Then Monocarp should swap the second and the third marbles, so the sequence is $[3,3,4,2,4,2,2]$. And finally, Monocarp should swap the fourth and the fifth marbles, so the sequence is $[3,3,4,4,2,2,2]$.\n\nIn the second example there's no need to perform any operations.\n\n### 题意\n\nzuhiul认识很多妹子，显然不同的妹子有不同的颜值（颜值最高为20，最小为1），有一天他把他认识的所有妹子召集在一起（不超过$4\\cdot 10^5$个），她们站成一排。现在zuhiul想把颜值相同的妹子放在一起，但是妹子们都在玩手机，所以他只能每次叫两个相邻的妹子配合一下交换。现在问你最小交换次数，使得所有颜值相同的妹子坐在一起。\n\n### 分析\n\n当时没做出来，看的题解（orz）， 所以先给官方题解，强烈建议先看官方题解。\n\nThe main fact is that the number of colors is less than $20$, which allows us to use exponential solutions.\n\nFor each pair of colors $(i,j)$, we can calculate $cnt[i][j]$ — the number of swaps required to place all marbles of color $i$ before all marbles of color $j$ (if we consider only marbles of these two colors). We can store a sorted vector for each color, and calculate this information for a fixed pair with two pointers.\n\nThen let's use subset DP to fix the order of colors. Let $d[mask]$ be the minimum number of operations to correctly order all marbles from the $mask$ of colors. Let's iterate on the next color we consider — it should be a position in binary representation of $mask$ with $0$ in it. We will place all marbles of this color after all marbles we already placed. If we fix a new color $i$, let's calculate the $sum$ (the additional number of swaps we have to make) by iterating on the bit $j$ equal to $1$ in the $mask$, and increasing 𝑠𝑢𝑚 by $cnt[j][i]$ for every such bit. The new state of DP can be calculated as $nmask=mask|(1<<i)$. So the transition can be implemented as $d[nmask]=min(d[nmask],d[mask]+sum)$.\n\nThe answer is the minimum number of swaps required to place all the colors, and that is $d[2^{20}-1]$.\n\n因为看的题解，所以没想出第二种解法，用我的话复述一下。\n\n因为不同的颜值数量很少（$<=20$)，所以我们可以在这个方向上下文章。\n\n如果考虑只有两种颜色，我们可以很轻易的知道答案是多少（通过枚举每个不同的位置算贡献）。\n\n于是考虑可以用状压DP来搞，$dp[i]$表示状态为 $i$ 的时候的代价。那么答案显然是$d[2^{20}-1]$.\n\n考虑转移，枚举每个已知答案的子集。我们怎么推算下一个状态的答案呢？\n\n显然是往里面加了一个之前没有的值。我们不妨设当前状态为$mask$，当前新加的是 $i$ ， $i$ 加进来的代价是 $sum$ 。那么新状态显然就是$nmask=mask|(1<<i)$。并且我们有$ans[nmask] = min(ans[nmask], ans[mask]+sum)$。\n\n剩下的就是考虑怎么算 $sum$。 记得我们刚刚说的吗？对于两种颜值我们怎么计算的？利用两种颜值的计算方法，我们可以预处理处一个代价矩阵$cnt[i][j]$,表示只考虑 $i$ 和 $j$ 两种颜值，我们把这两堆人排好序（ $i$ 在前，$j$ 在后）的代价。\n\n然后可以得到 $ sum = \\sum_{j\\in mask}^{} cnt[i][j]$\n\nover.\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<vector>\nusing namespace std;\nint n;\nconst int maxm = 1e6;\nconst long long inf = 1e18;\nvector<long long> mat[22];\nlong long value[22][22];\nlong long ans[1<<21];\nint main(){\n    scanf(\"%d\",&n);\n    for(int i = 0, a;i<n;i++) {\n        scanf(\"%d\",&a);\n        mat[a].push_back(i);\n    }\n    for(int i = 0;i<=20;i++) mat[i].push_back(maxm<<1);\n    for(int i = 1;i<=20;i++) {\n        if(mat[i].size()==0) continue;\n        for(int j = 1;j<=20;j++) {\n            if(mat[j].size()==0||i==j) continue;\n            long long ind1 = 0;\n            for(auto ind : mat[j]) {\n                if(ind > maxm) continue;\n                while(ind > mat[i][ind1]) ind1++;\n                value[i-1][j-1] += ind1;\n            }\n        }\n    }\n    for(int i = 0;i<(1<<20);i++) ans[i] = inf;\n    ans[0] = 0;\n    for(int mask = 0;mask<(1<<20);mask++) {\n        vector<int> has_bit;\n        for(int i = 0;i<20;i++) if(mask&(1<<i)) has_bit.push_back(i);\n        for(int i = 0;i<20;i++){\n            if(mask&(1<<i)) continue;\n            long long sum = 0;\n            for(int j = 0;j<has_bit.size();j++) sum+=value[i][has_bit[j]];\n            int nmask = mask|(1<<i);\n            ans[nmask] = min(ans[nmask], ans[mask]+sum);\n        }\n    }\n    printf(\"%lld\\n\", ans[(1<<20)-1]);\n    return 0;\n}\n```\n\n\n","source":"_posts/CF/CF_1215_E.md","raw":"---\ntitle: \tCodeforces 1215 E\ndate:\t\t2019-09-16\nauthor:\t\"zuhiul\" \ntags:\n  - CF\n---\n\n## E. Marbles\n\n[开启传送门](http://codeforces.com/contest/1215/problem/E)\n\n<!-- more -->\n\n### 题目描述\n\nMonocarp has arranged $n$ colored marbles in a row. The color of the $i$-th marble is $a_i$. Monocarp likes ordered things, so he wants to rearrange marbles in such a way that all marbles of the same color form a contiguos segment (and there is only one such segment for each color).\n\nIn other words, Monocarp wants to rearrange marbles so that, for every color $j$, if the leftmost marble of color $j$ is $l$-th in the row, and the rightmost marble of this color has position $r$ in the row, then every marble from $l$ to $r$ has color $j$.\n\nTo achieve his goal, Monocarp can do the following operation any number of times: choose two neighbouring marbles, and swap them.\n\nYou have to calculate the minimum number of operations Monocarp has to perform to rearrange the marbles. Note that the order of segments of marbles having equal color does not matter, it is only required that, for every color, all the marbles of this color form exactly one contiguous segment.\n\n### Input\n\nThe first line contains one integer $n$ ($2≤n≤4\\cdot10^5$) — the number of marbles.\n\nThe second line contains an integer sequence $a_1, a_2, \\dots, a_n$($1≤a_i≤20$), where $a_i$ is the color of the $i$-th marble.\n\n## Output\n\nPrint the minimum number of operations Monocarp has to perform to achieve his goal.\n\n### Examples\n\n#### input1\n\n7\n\n3 4 2 3 4 2 2\n\n#### output1\n\n3\n\n#### input2\n\n5\n\n20 1 14 10 2\n\n#### output2\n\n0\n\n#### input3\n\n13\n\n5 5 4 4 3 5 7 6 5 4 4 6 \n\n5\n\n#### output3\n\n21\n\n### Note\n\nIn the first example three operations are enough. Firstly, Monocarp should swap the third and the fourth marbles, so the sequence of colors is $[3,4,3,2,4,2,2]$. Then Monocarp should swap the second and the third marbles, so the sequence is $[3,3,4,2,4,2,2]$. And finally, Monocarp should swap the fourth and the fifth marbles, so the sequence is $[3,3,4,4,2,2,2]$.\n\nIn the second example there's no need to perform any operations.\n\n### 题意\n\nzuhiul认识很多妹子，显然不同的妹子有不同的颜值（颜值最高为20，最小为1），有一天他把他认识的所有妹子召集在一起（不超过$4\\cdot 10^5$个），她们站成一排。现在zuhiul想把颜值相同的妹子放在一起，但是妹子们都在玩手机，所以他只能每次叫两个相邻的妹子配合一下交换。现在问你最小交换次数，使得所有颜值相同的妹子坐在一起。\n\n### 分析\n\n当时没做出来，看的题解（orz）， 所以先给官方题解，强烈建议先看官方题解。\n\nThe main fact is that the number of colors is less than $20$, which allows us to use exponential solutions.\n\nFor each pair of colors $(i,j)$, we can calculate $cnt[i][j]$ — the number of swaps required to place all marbles of color $i$ before all marbles of color $j$ (if we consider only marbles of these two colors). We can store a sorted vector for each color, and calculate this information for a fixed pair with two pointers.\n\nThen let's use subset DP to fix the order of colors. Let $d[mask]$ be the minimum number of operations to correctly order all marbles from the $mask$ of colors. Let's iterate on the next color we consider — it should be a position in binary representation of $mask$ with $0$ in it. We will place all marbles of this color after all marbles we already placed. If we fix a new color $i$, let's calculate the $sum$ (the additional number of swaps we have to make) by iterating on the bit $j$ equal to $1$ in the $mask$, and increasing 𝑠𝑢𝑚 by $cnt[j][i]$ for every such bit. The new state of DP can be calculated as $nmask=mask|(1<<i)$. So the transition can be implemented as $d[nmask]=min(d[nmask],d[mask]+sum)$.\n\nThe answer is the minimum number of swaps required to place all the colors, and that is $d[2^{20}-1]$.\n\n因为看的题解，所以没想出第二种解法，用我的话复述一下。\n\n因为不同的颜值数量很少（$<=20$)，所以我们可以在这个方向上下文章。\n\n如果考虑只有两种颜色，我们可以很轻易的知道答案是多少（通过枚举每个不同的位置算贡献）。\n\n于是考虑可以用状压DP来搞，$dp[i]$表示状态为 $i$ 的时候的代价。那么答案显然是$d[2^{20}-1]$.\n\n考虑转移，枚举每个已知答案的子集。我们怎么推算下一个状态的答案呢？\n\n显然是往里面加了一个之前没有的值。我们不妨设当前状态为$mask$，当前新加的是 $i$ ， $i$ 加进来的代价是 $sum$ 。那么新状态显然就是$nmask=mask|(1<<i)$。并且我们有$ans[nmask] = min(ans[nmask], ans[mask]+sum)$。\n\n剩下的就是考虑怎么算 $sum$。 记得我们刚刚说的吗？对于两种颜值我们怎么计算的？利用两种颜值的计算方法，我们可以预处理处一个代价矩阵$cnt[i][j]$,表示只考虑 $i$ 和 $j$ 两种颜值，我们把这两堆人排好序（ $i$ 在前，$j$ 在后）的代价。\n\n然后可以得到 $ sum = \\sum_{j\\in mask}^{} cnt[i][j]$\n\nover.\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<vector>\nusing namespace std;\nint n;\nconst int maxm = 1e6;\nconst long long inf = 1e18;\nvector<long long> mat[22];\nlong long value[22][22];\nlong long ans[1<<21];\nint main(){\n    scanf(\"%d\",&n);\n    for(int i = 0, a;i<n;i++) {\n        scanf(\"%d\",&a);\n        mat[a].push_back(i);\n    }\n    for(int i = 0;i<=20;i++) mat[i].push_back(maxm<<1);\n    for(int i = 1;i<=20;i++) {\n        if(mat[i].size()==0) continue;\n        for(int j = 1;j<=20;j++) {\n            if(mat[j].size()==0||i==j) continue;\n            long long ind1 = 0;\n            for(auto ind : mat[j]) {\n                if(ind > maxm) continue;\n                while(ind > mat[i][ind1]) ind1++;\n                value[i-1][j-1] += ind1;\n            }\n        }\n    }\n    for(int i = 0;i<(1<<20);i++) ans[i] = inf;\n    ans[0] = 0;\n    for(int mask = 0;mask<(1<<20);mask++) {\n        vector<int> has_bit;\n        for(int i = 0;i<20;i++) if(mask&(1<<i)) has_bit.push_back(i);\n        for(int i = 0;i<20;i++){\n            if(mask&(1<<i)) continue;\n            long long sum = 0;\n            for(int j = 0;j<has_bit.size();j++) sum+=value[i][has_bit[j]];\n            int nmask = mask|(1<<i);\n            ans[nmask] = min(ans[nmask], ans[mask]+sum);\n        }\n    }\n    printf(\"%lld\\n\", ans[(1<<20)-1]);\n    return 0;\n}\n```\n\n\n","slug":"CF/CF_1215_E","published":1,"updated":"2019-09-16T09:53:09.691Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1gj000ta613qb00ng88","content":"<h2 id=\"E-Marbles\"><a href=\"#E-Marbles\" class=\"headerlink\" title=\"E. Marbles\"></a>E. Marbles</h2><p><a href=\"http://codeforces.com/contest/1215/problem/E\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<a id=\"more\"></a>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>Monocarp has arranged $n$ colored marbles in a row. The color of the $i$-th marble is $a_i$. Monocarp likes ordered things, so he wants to rearrange marbles in such a way that all marbles of the same color form a contiguos segment (and there is only one such segment for each color).</p>\n<p>In other words, Monocarp wants to rearrange marbles so that, for every color $j$, if the leftmost marble of color $j$ is $l$-th in the row, and the rightmost marble of this color has position $r$ in the row, then every marble from $l$ to $r$ has color $j$.</p>\n<p>To achieve his goal, Monocarp can do the following operation any number of times: choose two neighbouring marbles, and swap them.</p>\n<p>You have to calculate the minimum number of operations Monocarp has to perform to rearrange the marbles. Note that the order of segments of marbles having equal color does not matter, it is only required that, for every color, all the marbles of this color form exactly one contiguous segment.</p>\n<h3 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h3><p>The first line contains one integer $n$ ($2≤n≤4\\cdot10^5$) — the number of marbles.</p>\n<p>The second line contains an integer sequence $a_1, a_2, \\dots, a_n$($1≤a_i≤20$), where $a_i$ is the color of the $i$-th marble.</p>\n<h2 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h2><p>Print the minimum number of operations Monocarp has to perform to achieve his goal.</p>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"input1\"><a href=\"#input1\" class=\"headerlink\" title=\"input1\"></a>input1</h4><p>7</p>\n<p>3 4 2 3 4 2 2</p>\n<h4 id=\"output1\"><a href=\"#output1\" class=\"headerlink\" title=\"output1\"></a>output1</h4><p>3</p>\n<h4 id=\"input2\"><a href=\"#input2\" class=\"headerlink\" title=\"input2\"></a>input2</h4><p>5</p>\n<p>20 1 14 10 2</p>\n<h4 id=\"output2\"><a href=\"#output2\" class=\"headerlink\" title=\"output2\"></a>output2</h4><p>0</p>\n<h4 id=\"input3\"><a href=\"#input3\" class=\"headerlink\" title=\"input3\"></a>input3</h4><p>13</p>\n<p>5 5 4 4 3 5 7 6 5 4 4 6 </p>\n<p>5</p>\n<h4 id=\"output3\"><a href=\"#output3\" class=\"headerlink\" title=\"output3\"></a>output3</h4><p>21</p>\n<h3 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h3><p>In the first example three operations are enough. Firstly, Monocarp should swap the third and the fourth marbles, so the sequence of colors is $[3,4,3,2,4,2,2]$. Then Monocarp should swap the second and the third marbles, so the sequence is $[3,3,4,2,4,2,2]$. And finally, Monocarp should swap the fourth and the fifth marbles, so the sequence is $[3,3,4,4,2,2,2]$.</p>\n<p>In the second example there’s no need to perform any operations.</p>\n<h3 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>zuhiul认识很多妹子，显然不同的妹子有不同的颜值（颜值最高为20，最小为1），有一天他把他认识的所有妹子召集在一起（不超过$4\\cdot 10^5$个），她们站成一排。现在zuhiul想把颜值相同的妹子放在一起，但是妹子们都在玩手机，所以他只能每次叫两个相邻的妹子配合一下交换。现在问你最小交换次数，使得所有颜值相同的妹子坐在一起。</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>当时没做出来，看的题解（orz）， 所以先给官方题解，强烈建议先看官方题解。</p>\n<p>The main fact is that the number of colors is less than $20$, which allows us to use exponential solutions.</p>\n<p>For each pair of colors $(i,j)$, we can calculate $cnt[i][j]$ — the number of swaps required to place all marbles of color $i$ before all marbles of color $j$ (if we consider only marbles of these two colors). We can store a sorted vector for each color, and calculate this information for a fixed pair with two pointers.</p>\n<p>Then let’s use subset DP to fix the order of colors. Let $d[mask]$ be the minimum number of operations to correctly order all marbles from the $mask$ of colors. Let’s iterate on the next color we consider — it should be a position in binary representation of $mask$ with $0$ in it. We will place all marbles of this color after all marbles we already placed. If we fix a new color $i$, let’s calculate the $sum$ (the additional number of swaps we have to make) by iterating on the bit $j$ equal to $1$ in the $mask$, and increasing 𝑠𝑢𝑚 by $cnt[j][i]$ for every such bit. The new state of DP can be calculated as $nmask=mask|(1&lt;&lt;i)$. So the transition can be implemented as $d[nmask]=min(d[nmask],d[mask]+sum)$.</p>\n<p>The answer is the minimum number of swaps required to place all the colors, and that is $d[2^{20}-1]$.</p>\n<p>因为看的题解，所以没想出第二种解法，用我的话复述一下。</p>\n<p>因为不同的颜值数量很少（$&lt;=20$)，所以我们可以在这个方向上下文章。</p>\n<p>如果考虑只有两种颜色，我们可以很轻易的知道答案是多少（通过枚举每个不同的位置算贡献）。</p>\n<p>于是考虑可以用状压DP来搞，$dp[i]$表示状态为 $i$ 的时候的代价。那么答案显然是$d[2^{20}-1]$.</p>\n<p>考虑转移，枚举每个已知答案的子集。我们怎么推算下一个状态的答案呢？</p>\n<p>显然是往里面加了一个之前没有的值。我们不妨设当前状态为$mask$，当前新加的是 $i$ ， $i$ 加进来的代价是 $sum$ 。那么新状态显然就是$nmask=mask|(1&lt;&lt;i)$。并且我们有$ans[nmask] = min(ans[nmask], ans[mask]+sum)$。</p>\n<p>剩下的就是考虑怎么算 $sum$。 记得我们刚刚说的吗？对于两种颜值我们怎么计算的？利用两种颜值的计算方法，我们可以预处理处一个代价矩阵$cnt[i][j]$,表示只考虑 $i$ 和 $j$ 两种颜值，我们把这两堆人排好序（ $i$ 在前，$j$ 在后）的代价。</p>\n<p>然后可以得到 $ sum = \\sum_{j\\in mask}^{} cnt[i][j]$</p>\n<p>over.</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">1e6</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> inf = <span class=\"number\">1e18</span>;</span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">long</span> <span class=\"keyword\">long</span>&gt; mat[<span class=\"number\">22</span>];</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> value[<span class=\"number\">22</span>][<span class=\"number\">22</span>];</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ans[<span class=\"number\">1</span>&lt;&lt;<span class=\"number\">21</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, a;i&lt;n;i++) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;a);</span><br><span class=\"line\">        mat[a].push_back(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;=<span class=\"number\">20</span>;i++) mat[i].push_back(maxm&lt;&lt;<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=<span class=\"number\">20</span>;i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(mat[i].size()==<span class=\"number\">0</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>;j&lt;=<span class=\"number\">20</span>;j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(mat[j].size()==<span class=\"number\">0</span>||i==j) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ind1 = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> ind : mat[j]) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ind &gt; maxm) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                <span class=\"keyword\">while</span>(ind &gt; mat[i][ind1]) ind1++;</span><br><span class=\"line\">                value[i<span class=\"number\">-1</span>][j<span class=\"number\">-1</span>] += ind1;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;(<span class=\"number\">1</span>&lt;&lt;<span class=\"number\">20</span>);i++) ans[i] = inf;</span><br><span class=\"line\">    ans[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> mask = <span class=\"number\">0</span>;mask&lt;(<span class=\"number\">1</span>&lt;&lt;<span class=\"number\">20</span>);mask++) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; has_bit;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;<span class=\"number\">20</span>;i++) <span class=\"keyword\">if</span>(mask&amp;(<span class=\"number\">1</span>&lt;&lt;i)) has_bit.push_back(i);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;<span class=\"number\">20</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(mask&amp;(<span class=\"number\">1</span>&lt;&lt;i)) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j&lt;has_bit.size();j++) sum+=value[i][has_bit[j]];</span><br><span class=\"line\">            <span class=\"keyword\">int</span> nmask = mask|(<span class=\"number\">1</span>&lt;&lt;i);</span><br><span class=\"line\">            ans[nmask] = min(ans[nmask], ans[mask]+sum);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>, ans[(<span class=\"number\">1</span>&lt;&lt;<span class=\"number\">20</span>)<span class=\"number\">-1</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"E-Marbles\"><a href=\"#E-Marbles\" class=\"headerlink\" title=\"E. Marbles\"></a>E. Marbles</h2><p><a href=\"http://codeforces.com/contest/1215/problem/E\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>","more":"<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>Monocarp has arranged $n$ colored marbles in a row. The color of the $i$-th marble is $a_i$. Monocarp likes ordered things, so he wants to rearrange marbles in such a way that all marbles of the same color form a contiguos segment (and there is only one such segment for each color).</p>\n<p>In other words, Monocarp wants to rearrange marbles so that, for every color $j$, if the leftmost marble of color $j$ is $l$-th in the row, and the rightmost marble of this color has position $r$ in the row, then every marble from $l$ to $r$ has color $j$.</p>\n<p>To achieve his goal, Monocarp can do the following operation any number of times: choose two neighbouring marbles, and swap them.</p>\n<p>You have to calculate the minimum number of operations Monocarp has to perform to rearrange the marbles. Note that the order of segments of marbles having equal color does not matter, it is only required that, for every color, all the marbles of this color form exactly one contiguous segment.</p>\n<h3 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h3><p>The first line contains one integer $n$ ($2≤n≤4\\cdot10^5$) — the number of marbles.</p>\n<p>The second line contains an integer sequence $a_1, a_2, \\dots, a_n$($1≤a_i≤20$), where $a_i$ is the color of the $i$-th marble.</p>\n<h2 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h2><p>Print the minimum number of operations Monocarp has to perform to achieve his goal.</p>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"input1\"><a href=\"#input1\" class=\"headerlink\" title=\"input1\"></a>input1</h4><p>7</p>\n<p>3 4 2 3 4 2 2</p>\n<h4 id=\"output1\"><a href=\"#output1\" class=\"headerlink\" title=\"output1\"></a>output1</h4><p>3</p>\n<h4 id=\"input2\"><a href=\"#input2\" class=\"headerlink\" title=\"input2\"></a>input2</h4><p>5</p>\n<p>20 1 14 10 2</p>\n<h4 id=\"output2\"><a href=\"#output2\" class=\"headerlink\" title=\"output2\"></a>output2</h4><p>0</p>\n<h4 id=\"input3\"><a href=\"#input3\" class=\"headerlink\" title=\"input3\"></a>input3</h4><p>13</p>\n<p>5 5 4 4 3 5 7 6 5 4 4 6 </p>\n<p>5</p>\n<h4 id=\"output3\"><a href=\"#output3\" class=\"headerlink\" title=\"output3\"></a>output3</h4><p>21</p>\n<h3 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h3><p>In the first example three operations are enough. Firstly, Monocarp should swap the third and the fourth marbles, so the sequence of colors is $[3,4,3,2,4,2,2]$. Then Monocarp should swap the second and the third marbles, so the sequence is $[3,3,4,2,4,2,2]$. And finally, Monocarp should swap the fourth and the fifth marbles, so the sequence is $[3,3,4,4,2,2,2]$.</p>\n<p>In the second example there’s no need to perform any operations.</p>\n<h3 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>zuhiul认识很多妹子，显然不同的妹子有不同的颜值（颜值最高为20，最小为1），有一天他把他认识的所有妹子召集在一起（不超过$4\\cdot 10^5$个），她们站成一排。现在zuhiul想把颜值相同的妹子放在一起，但是妹子们都在玩手机，所以他只能每次叫两个相邻的妹子配合一下交换。现在问你最小交换次数，使得所有颜值相同的妹子坐在一起。</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>当时没做出来，看的题解（orz）， 所以先给官方题解，强烈建议先看官方题解。</p>\n<p>The main fact is that the number of colors is less than $20$, which allows us to use exponential solutions.</p>\n<p>For each pair of colors $(i,j)$, we can calculate $cnt[i][j]$ — the number of swaps required to place all marbles of color $i$ before all marbles of color $j$ (if we consider only marbles of these two colors). We can store a sorted vector for each color, and calculate this information for a fixed pair with two pointers.</p>\n<p>Then let’s use subset DP to fix the order of colors. Let $d[mask]$ be the minimum number of operations to correctly order all marbles from the $mask$ of colors. Let’s iterate on the next color we consider — it should be a position in binary representation of $mask$ with $0$ in it. We will place all marbles of this color after all marbles we already placed. If we fix a new color $i$, let’s calculate the $sum$ (the additional number of swaps we have to make) by iterating on the bit $j$ equal to $1$ in the $mask$, and increasing 𝑠𝑢𝑚 by $cnt[j][i]$ for every such bit. The new state of DP can be calculated as $nmask=mask|(1&lt;&lt;i)$. So the transition can be implemented as $d[nmask]=min(d[nmask],d[mask]+sum)$.</p>\n<p>The answer is the minimum number of swaps required to place all the colors, and that is $d[2^{20}-1]$.</p>\n<p>因为看的题解，所以没想出第二种解法，用我的话复述一下。</p>\n<p>因为不同的颜值数量很少（$&lt;=20$)，所以我们可以在这个方向上下文章。</p>\n<p>如果考虑只有两种颜色，我们可以很轻易的知道答案是多少（通过枚举每个不同的位置算贡献）。</p>\n<p>于是考虑可以用状压DP来搞，$dp[i]$表示状态为 $i$ 的时候的代价。那么答案显然是$d[2^{20}-1]$.</p>\n<p>考虑转移，枚举每个已知答案的子集。我们怎么推算下一个状态的答案呢？</p>\n<p>显然是往里面加了一个之前没有的值。我们不妨设当前状态为$mask$，当前新加的是 $i$ ， $i$ 加进来的代价是 $sum$ 。那么新状态显然就是$nmask=mask|(1&lt;&lt;i)$。并且我们有$ans[nmask] = min(ans[nmask], ans[mask]+sum)$。</p>\n<p>剩下的就是考虑怎么算 $sum$。 记得我们刚刚说的吗？对于两种颜值我们怎么计算的？利用两种颜值的计算方法，我们可以预处理处一个代价矩阵$cnt[i][j]$,表示只考虑 $i$ 和 $j$ 两种颜值，我们把这两堆人排好序（ $i$ 在前，$j$ 在后）的代价。</p>\n<p>然后可以得到 $ sum = \\sum_{j\\in mask}^{} cnt[i][j]$</p>\n<p>over.</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">1e6</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> inf = <span class=\"number\">1e18</span>;</span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">long</span> <span class=\"keyword\">long</span>&gt; mat[<span class=\"number\">22</span>];</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> value[<span class=\"number\">22</span>][<span class=\"number\">22</span>];</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ans[<span class=\"number\">1</span>&lt;&lt;<span class=\"number\">21</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, a;i&lt;n;i++) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;a);</span><br><span class=\"line\">        mat[a].push_back(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;=<span class=\"number\">20</span>;i++) mat[i].push_back(maxm&lt;&lt;<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=<span class=\"number\">20</span>;i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(mat[i].size()==<span class=\"number\">0</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>;j&lt;=<span class=\"number\">20</span>;j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(mat[j].size()==<span class=\"number\">0</span>||i==j) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ind1 = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> ind : mat[j]) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ind &gt; maxm) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                <span class=\"keyword\">while</span>(ind &gt; mat[i][ind1]) ind1++;</span><br><span class=\"line\">                value[i<span class=\"number\">-1</span>][j<span class=\"number\">-1</span>] += ind1;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;(<span class=\"number\">1</span>&lt;&lt;<span class=\"number\">20</span>);i++) ans[i] = inf;</span><br><span class=\"line\">    ans[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> mask = <span class=\"number\">0</span>;mask&lt;(<span class=\"number\">1</span>&lt;&lt;<span class=\"number\">20</span>);mask++) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; has_bit;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;<span class=\"number\">20</span>;i++) <span class=\"keyword\">if</span>(mask&amp;(<span class=\"number\">1</span>&lt;&lt;i)) has_bit.push_back(i);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;<span class=\"number\">20</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(mask&amp;(<span class=\"number\">1</span>&lt;&lt;i)) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j&lt;has_bit.size();j++) sum+=value[i][has_bit[j]];</span><br><span class=\"line\">            <span class=\"keyword\">int</span> nmask = mask|(<span class=\"number\">1</span>&lt;&lt;i);</span><br><span class=\"line\">            ans[nmask] = min(ans[nmask], ans[mask]+sum);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>, ans[(<span class=\"number\">1</span>&lt;&lt;<span class=\"number\">20</span>)<span class=\"number\">-1</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Codeforces 1187 E","date":"2019-09-19T16:00:00.000Z","author":"zuhiul","_content":"\n## E. Tree Painting\n\n[开启传送门](http://codeforces.com/problemset/problem/1187/E)\n\n<!-- more -->\n\n### 题目描述\n\nThere are $n$ piles of stones of sizes $a_1,a_2,\\dots,a_n$ lying on the table in front of you.\n\nDuring one move you can take one pile and add it to the other. As you add pile $i$ to pile $j$, the size of pile $j$ increases by the current size of pile $i$, and pile $i$ stops existing. The cost of the adding operation equals the size of the added pile.\n\nYour task is to determine the minimum cost at which you can gather all stones in one pile.\n\nTo add some challenge, the stone piles built up conspiracy and decided that each pile will let you add to it not more than $k$ times (after that it can only be added to another pile).\n\nMoreover, the piles decided to puzzle you completely and told you $q$ variants (not necessarily distinct) of what $k$ might equal.\n\nYour task is to find the minimum cost for each of $q$ variants.\n\n### Input\n\nThe first line contains integer $n$ ($1 \\leq n \\leq 10^5$) — the number of stone piles. The second line contains $n$ space-separated integers: $a_1,a_2,\\dots,a_n$ ($1 \\leq a_i \\leq 10^9$) — the initial sizes of the stone piles.\n\nThe third line contains integer $q$ ($1 \\leq q \\leq 10^5$) — the number of queries. The last line contains $q$ space-separated integers $k_1,k_2,\\dots,k_q$ ($1 \\leq k_i \\leq 10^5$) — the values of number $k$ for distinct queries. Note that numbers $k_i$ can repeat.\n\n### Output\n\nPrint $q$ whitespace-separated integers — the answers to the queries in the order, in which the queries are given in the input.\n\nPlease, do not use the $\\%lld$ specifier to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams or the $\\%I64d$ specifier.\n\n### Examples\n\n#### input1\n\n5\n\n2 3 4 1 1\n\n2\n\n2 3\n\n#### output1\n\n9 8 \n\n### Note\n\nIn the first sample one way to get the optimal answer goes like this: we add in turns the $4$-th and the $5$-th piles to the $2$-nd one; then we add the $1$-st pile to the $3$-rd one; we add the $2$-nd pile to the $3$-rd one. The first two operations cost $1$ each; the third one costs $2$, the fourth one costs $5$ (the size of the $2$-nd pile after the first two operations is not $3$, it already is $5$).\n\nIn the second sample you can add the $2$-nd pile to the $3$-rd one (the operations costs $3$); then the $1$-st one to the $3$-th one (the cost is $2$); then the $5$-th one to the $4$-th one (the costs is $1$); and at last, the $4$-th one to the $3$-rd one (the cost is $2$).\n\n### 题意\n\n这有 $n$ 堆石子，每堆分别有 $a_1,a_2,\\dots,a_n$ 个石子放在你面前的桌子上。\n\n在每次移动中，你可以选择一堆石子，并把它合并到其他的堆上。如果你把第 $i$ 堆加到第 $j$ 堆上，那么第 $j$ 堆会增加当前第 $i$ 堆拥有的石子数，并且第 $i$ 堆将不会继续存在。这样操作的代价是第 $i$ 堆的石子数。\n\n你的任务是考虑把这些石子合成一堆的最小代价。\n\n为了增加一些难度，我们规定，合并的石头堆最多被合并 $k$ 次（在这之后，你只能把这一堆合并到其他堆上）。\n\n此外，你将会被询问 $q$ 次，每次给你可能相同的 $k$ 。\n\n你的任务是对于这 $q$ 个询问，给出最小花费。\n\n### 分析\n\n我们首先考虑如果只有一次询问我们怎么做。\n\n假设当前每一堆最多被合并 $k$ 次。\n\n假设当前只有 $k+1$ 堆，我们的做法显然是，排序，把最小的 $k$ 堆合并到最大堆上。\n\n假设当前只有 $k+2$ 堆，那么我们可以得到的是，我们需要合并 $k+1$ 次，所以必然有一堆被合并了两次，除了最大堆之外，其他堆合并了一次。要让代价最小，我们需要让最小堆被合并两次。所以操作是，我们把最小堆合并到除最大堆的某一堆，然后其他堆合并到最大堆。\n\n$\\dots$\n\n假设当前有 $k*k + k + 1$ 堆，我们怎么操作呢？\n\n首先我们可以确定的是，需要合并 $k*k+k$ 次，因为一堆最多被合并 $k$ 次，所以我们可以得到，这 $k*k+k$ 次合并中，必定会有 $k$ 次合并，实际上是将两堆及以上合并到了某一堆中，也即：有 $k*k$ 堆被合并了两次， 有 $k$ 堆被合并了一次。所以一个显而易见的贪心策略就出来了。\n\n每次我们倍增 $k$ 挑出这么多堆出来，合并次数增加。为了保证答案最小，显然是，最后合并的是大堆，也就是合并次数最少。\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxm = 1e5+10;\nint n, q;\nlong long a[maxm];\nvoid input() {\n\tcin>>n;\n\tfor(int i = 0;i<n;i++) cin>>a[i];\n\tsort(a,a+n);\n\treverse(a,a+n);\n\tfor(int i = 1;i<n;i++) a[i] += a[i-1];\n}\nlong long get_ans(int len) {\n\tlong long ans = 0;\n\tlong long rlen = len, cnt = 1;\n\tfor(int i = 1;i<n;) {\n\t\tint r = min(n-1ll,i+rlen-1);\n\t\tans += (a[r] - a[i-1])*cnt;\n\t\tcnt++;\n\t\ti = r+1;\n\t\trlen *= len;\n\t}\n\treturn ans;\n}\nlong long ans[maxm];\nvoid solve() {\n\tcin>>q;\n\twhile(q--) {\n\t\tint len;\n\t\tcin>>len;\n\t\tif(ans[len]) cout<<ans[len]<<' ';\n\t\telse {\n\t\t\tans[len] = get_ans(len);\n\t\t\tcout<<ans[len]<<' ';\n\t\t}\n\t}\n\tcout<<endl;\n}\nint main(){\n\tcin.tie(0);\n\tios::sync_with_stdio(false);\n\tinput();\n\tsolve();\n\treturn 0;\n}\n```\n\n\n","source":"_posts/CF/CF_226_B.md","raw":"---\ntitle: \tCodeforces 1187 E\ndate:\t\t2019-09-20\nauthor:\t\"zuhiul\" \ntags:\n  - CF\n---\n\n## E. Tree Painting\n\n[开启传送门](http://codeforces.com/problemset/problem/1187/E)\n\n<!-- more -->\n\n### 题目描述\n\nThere are $n$ piles of stones of sizes $a_1,a_2,\\dots,a_n$ lying on the table in front of you.\n\nDuring one move you can take one pile and add it to the other. As you add pile $i$ to pile $j$, the size of pile $j$ increases by the current size of pile $i$, and pile $i$ stops existing. The cost of the adding operation equals the size of the added pile.\n\nYour task is to determine the minimum cost at which you can gather all stones in one pile.\n\nTo add some challenge, the stone piles built up conspiracy and decided that each pile will let you add to it not more than $k$ times (after that it can only be added to another pile).\n\nMoreover, the piles decided to puzzle you completely and told you $q$ variants (not necessarily distinct) of what $k$ might equal.\n\nYour task is to find the minimum cost for each of $q$ variants.\n\n### Input\n\nThe first line contains integer $n$ ($1 \\leq n \\leq 10^5$) — the number of stone piles. The second line contains $n$ space-separated integers: $a_1,a_2,\\dots,a_n$ ($1 \\leq a_i \\leq 10^9$) — the initial sizes of the stone piles.\n\nThe third line contains integer $q$ ($1 \\leq q \\leq 10^5$) — the number of queries. The last line contains $q$ space-separated integers $k_1,k_2,\\dots,k_q$ ($1 \\leq k_i \\leq 10^5$) — the values of number $k$ for distinct queries. Note that numbers $k_i$ can repeat.\n\n### Output\n\nPrint $q$ whitespace-separated integers — the answers to the queries in the order, in which the queries are given in the input.\n\nPlease, do not use the $\\%lld$ specifier to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams or the $\\%I64d$ specifier.\n\n### Examples\n\n#### input1\n\n5\n\n2 3 4 1 1\n\n2\n\n2 3\n\n#### output1\n\n9 8 \n\n### Note\n\nIn the first sample one way to get the optimal answer goes like this: we add in turns the $4$-th and the $5$-th piles to the $2$-nd one; then we add the $1$-st pile to the $3$-rd one; we add the $2$-nd pile to the $3$-rd one. The first two operations cost $1$ each; the third one costs $2$, the fourth one costs $5$ (the size of the $2$-nd pile after the first two operations is not $3$, it already is $5$).\n\nIn the second sample you can add the $2$-nd pile to the $3$-rd one (the operations costs $3$); then the $1$-st one to the $3$-th one (the cost is $2$); then the $5$-th one to the $4$-th one (the costs is $1$); and at last, the $4$-th one to the $3$-rd one (the cost is $2$).\n\n### 题意\n\n这有 $n$ 堆石子，每堆分别有 $a_1,a_2,\\dots,a_n$ 个石子放在你面前的桌子上。\n\n在每次移动中，你可以选择一堆石子，并把它合并到其他的堆上。如果你把第 $i$ 堆加到第 $j$ 堆上，那么第 $j$ 堆会增加当前第 $i$ 堆拥有的石子数，并且第 $i$ 堆将不会继续存在。这样操作的代价是第 $i$ 堆的石子数。\n\n你的任务是考虑把这些石子合成一堆的最小代价。\n\n为了增加一些难度，我们规定，合并的石头堆最多被合并 $k$ 次（在这之后，你只能把这一堆合并到其他堆上）。\n\n此外，你将会被询问 $q$ 次，每次给你可能相同的 $k$ 。\n\n你的任务是对于这 $q$ 个询问，给出最小花费。\n\n### 分析\n\n我们首先考虑如果只有一次询问我们怎么做。\n\n假设当前每一堆最多被合并 $k$ 次。\n\n假设当前只有 $k+1$ 堆，我们的做法显然是，排序，把最小的 $k$ 堆合并到最大堆上。\n\n假设当前只有 $k+2$ 堆，那么我们可以得到的是，我们需要合并 $k+1$ 次，所以必然有一堆被合并了两次，除了最大堆之外，其他堆合并了一次。要让代价最小，我们需要让最小堆被合并两次。所以操作是，我们把最小堆合并到除最大堆的某一堆，然后其他堆合并到最大堆。\n\n$\\dots$\n\n假设当前有 $k*k + k + 1$ 堆，我们怎么操作呢？\n\n首先我们可以确定的是，需要合并 $k*k+k$ 次，因为一堆最多被合并 $k$ 次，所以我们可以得到，这 $k*k+k$ 次合并中，必定会有 $k$ 次合并，实际上是将两堆及以上合并到了某一堆中，也即：有 $k*k$ 堆被合并了两次， 有 $k$ 堆被合并了一次。所以一个显而易见的贪心策略就出来了。\n\n每次我们倍增 $k$ 挑出这么多堆出来，合并次数增加。为了保证答案最小，显然是，最后合并的是大堆，也就是合并次数最少。\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxm = 1e5+10;\nint n, q;\nlong long a[maxm];\nvoid input() {\n\tcin>>n;\n\tfor(int i = 0;i<n;i++) cin>>a[i];\n\tsort(a,a+n);\n\treverse(a,a+n);\n\tfor(int i = 1;i<n;i++) a[i] += a[i-1];\n}\nlong long get_ans(int len) {\n\tlong long ans = 0;\n\tlong long rlen = len, cnt = 1;\n\tfor(int i = 1;i<n;) {\n\t\tint r = min(n-1ll,i+rlen-1);\n\t\tans += (a[r] - a[i-1])*cnt;\n\t\tcnt++;\n\t\ti = r+1;\n\t\trlen *= len;\n\t}\n\treturn ans;\n}\nlong long ans[maxm];\nvoid solve() {\n\tcin>>q;\n\twhile(q--) {\n\t\tint len;\n\t\tcin>>len;\n\t\tif(ans[len]) cout<<ans[len]<<' ';\n\t\telse {\n\t\t\tans[len] = get_ans(len);\n\t\t\tcout<<ans[len]<<' ';\n\t\t}\n\t}\n\tcout<<endl;\n}\nint main(){\n\tcin.tie(0);\n\tios::sync_with_stdio(false);\n\tinput();\n\tsolve();\n\treturn 0;\n}\n```\n\n\n","slug":"CF/CF_226_B","published":1,"updated":"2019-10-06T06:13:44.304Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1gj000va6137nko1hva","content":"<h2 id=\"E-Tree-Painting\"><a href=\"#E-Tree-Painting\" class=\"headerlink\" title=\"E. Tree Painting\"></a>E. Tree Painting</h2><p><a href=\"http://codeforces.com/problemset/problem/1187/E\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<a id=\"more\"></a>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>There are $n$ piles of stones of sizes $a_1,a_2,\\dots,a_n$ lying on the table in front of you.</p>\n<p>During one move you can take one pile and add it to the other. As you add pile $i$ to pile $j$, the size of pile $j$ increases by the current size of pile $i$, and pile $i$ stops existing. The cost of the adding operation equals the size of the added pile.</p>\n<p>Your task is to determine the minimum cost at which you can gather all stones in one pile.</p>\n<p>To add some challenge, the stone piles built up conspiracy and decided that each pile will let you add to it not more than $k$ times (after that it can only be added to another pile).</p>\n<p>Moreover, the piles decided to puzzle you completely and told you $q$ variants (not necessarily distinct) of what $k$ might equal.</p>\n<p>Your task is to find the minimum cost for each of $q$ variants.</p>\n<h3 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h3><p>The first line contains integer $n$ ($1 \\leq n \\leq 10^5$) — the number of stone piles. The second line contains $n$ space-separated integers: $a_1,a_2,\\dots,a_n$ ($1 \\leq a_i \\leq 10^9$) — the initial sizes of the stone piles.</p>\n<p>The third line contains integer $q$ ($1 \\leq q \\leq 10^5$) — the number of queries. The last line contains $q$ space-separated integers $k_1,k_2,\\dots,k_q$ ($1 \\leq k_i \\leq 10^5$) — the values of number $k$ for distinct queries. Note that numbers $k_i$ can repeat.</p>\n<h3 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h3><p>Print $q$ whitespace-separated integers — the answers to the queries in the order, in which the queries are given in the input.</p>\n<p>Please, do not use the $\\%lld$ specifier to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams or the $\\%I64d$ specifier.</p>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"input1\"><a href=\"#input1\" class=\"headerlink\" title=\"input1\"></a>input1</h4><p>5</p>\n<p>2 3 4 1 1</p>\n<p>2</p>\n<p>2 3</p>\n<h4 id=\"output1\"><a href=\"#output1\" class=\"headerlink\" title=\"output1\"></a>output1</h4><p>9 8 </p>\n<h3 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h3><p>In the first sample one way to get the optimal answer goes like this: we add in turns the $4$-th and the $5$-th piles to the $2$-nd one; then we add the $1$-st pile to the $3$-rd one; we add the $2$-nd pile to the $3$-rd one. The first two operations cost $1$ each; the third one costs $2$, the fourth one costs $5$ (the size of the $2$-nd pile after the first two operations is not $3$, it already is $5$).</p>\n<p>In the second sample you can add the $2$-nd pile to the $3$-rd one (the operations costs $3$); then the $1$-st one to the $3$-th one (the cost is $2$); then the $5$-th one to the $4$-th one (the costs is $1$); and at last, the $4$-th one to the $3$-rd one (the cost is $2$).</p>\n<h3 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>这有 $n$ 堆石子，每堆分别有 $a_1,a_2,\\dots,a_n$ 个石子放在你面前的桌子上。</p>\n<p>在每次移动中，你可以选择一堆石子，并把它合并到其他的堆上。如果你把第 $i$ 堆加到第 $j$ 堆上，那么第 $j$ 堆会增加当前第 $i$ 堆拥有的石子数，并且第 $i$ 堆将不会继续存在。这样操作的代价是第 $i$ 堆的石子数。</p>\n<p>你的任务是考虑把这些石子合成一堆的最小代价。</p>\n<p>为了增加一些难度，我们规定，合并的石头堆最多被合并 $k$ 次（在这之后，你只能把这一堆合并到其他堆上）。</p>\n<p>此外，你将会被询问 $q$ 次，每次给你可能相同的 $k$ 。</p>\n<p>你的任务是对于这 $q$ 个询问，给出最小花费。</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>我们首先考虑如果只有一次询问我们怎么做。</p>\n<p>假设当前每一堆最多被合并 $k$ 次。</p>\n<p>假设当前只有 $k+1$ 堆，我们的做法显然是，排序，把最小的 $k$ 堆合并到最大堆上。</p>\n<p>假设当前只有 $k+2$ 堆，那么我们可以得到的是，我们需要合并 $k+1$ 次，所以必然有一堆被合并了两次，除了最大堆之外，其他堆合并了一次。要让代价最小，我们需要让最小堆被合并两次。所以操作是，我们把最小堆合并到除最大堆的某一堆，然后其他堆合并到最大堆。</p>\n<p>$\\dots$</p>\n<p>假设当前有 $k*k + k + 1$ 堆，我们怎么操作呢？</p>\n<p>首先我们可以确定的是，需要合并 $k<em>k+k$ 次，因为一堆最多被合并 $k$ 次，所以我们可以得到，这 $k</em>k+k$ 次合并中，必定会有 $k$ 次合并，实际上是将两堆及以上合并到了某一堆中，也即：有 $k*k$ 堆被合并了两次， 有 $k$ 堆被合并了一次。所以一个显而易见的贪心策略就出来了。</p>\n<p>每次我们倍增 $k$ 挑出这么多堆出来，合并次数增加。为了保证答案最小，显然是，最后合并的是大堆，也就是合并次数最少。</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">1e5</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n, q;</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a[maxm];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">input</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;n;i++) <span class=\"built_in\">cin</span>&gt;&gt;a[i];</span><br><span class=\"line\">\tsort(a,a+n);</span><br><span class=\"line\">\treverse(a,a+n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;n;i++) a[i] += a[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">get_ans</span><span class=\"params\">(<span class=\"keyword\">int</span> len)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> rlen = len, cnt = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;n;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> r = min(n<span class=\"number\">-1l</span>l,i+rlen<span class=\"number\">-1</span>);</span><br><span class=\"line\">\t\tans += (a[r] - a[i<span class=\"number\">-1</span>])*cnt;</span><br><span class=\"line\">\t\tcnt++;</span><br><span class=\"line\">\t\ti = r+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\trlen *= len;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ans[maxm];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">solve</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;q;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(q--) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> len;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;len;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(ans[len]) <span class=\"built_in\">cout</span>&lt;&lt;ans[len]&lt;&lt;<span class=\"string\">' '</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tans[len] = get_ans(len);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span>&lt;&lt;ans[len]&lt;&lt;<span class=\"string\">' '</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>.tie(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tios::sync_with_stdio(<span class=\"literal\">false</span>);</span><br><span class=\"line\">\tinput();</span><br><span class=\"line\">\tsolve();</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"E-Tree-Painting\"><a href=\"#E-Tree-Painting\" class=\"headerlink\" title=\"E. Tree Painting\"></a>E. Tree Painting</h2><p><a href=\"http://codeforces.com/problemset/problem/1187/E\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>","more":"<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>There are $n$ piles of stones of sizes $a_1,a_2,\\dots,a_n$ lying on the table in front of you.</p>\n<p>During one move you can take one pile and add it to the other. As you add pile $i$ to pile $j$, the size of pile $j$ increases by the current size of pile $i$, and pile $i$ stops existing. The cost of the adding operation equals the size of the added pile.</p>\n<p>Your task is to determine the minimum cost at which you can gather all stones in one pile.</p>\n<p>To add some challenge, the stone piles built up conspiracy and decided that each pile will let you add to it not more than $k$ times (after that it can only be added to another pile).</p>\n<p>Moreover, the piles decided to puzzle you completely and told you $q$ variants (not necessarily distinct) of what $k$ might equal.</p>\n<p>Your task is to find the minimum cost for each of $q$ variants.</p>\n<h3 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h3><p>The first line contains integer $n$ ($1 \\leq n \\leq 10^5$) — the number of stone piles. The second line contains $n$ space-separated integers: $a_1,a_2,\\dots,a_n$ ($1 \\leq a_i \\leq 10^9$) — the initial sizes of the stone piles.</p>\n<p>The third line contains integer $q$ ($1 \\leq q \\leq 10^5$) — the number of queries. The last line contains $q$ space-separated integers $k_1,k_2,\\dots,k_q$ ($1 \\leq k_i \\leq 10^5$) — the values of number $k$ for distinct queries. Note that numbers $k_i$ can repeat.</p>\n<h3 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h3><p>Print $q$ whitespace-separated integers — the answers to the queries in the order, in which the queries are given in the input.</p>\n<p>Please, do not use the $\\%lld$ specifier to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams or the $\\%I64d$ specifier.</p>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"input1\"><a href=\"#input1\" class=\"headerlink\" title=\"input1\"></a>input1</h4><p>5</p>\n<p>2 3 4 1 1</p>\n<p>2</p>\n<p>2 3</p>\n<h4 id=\"output1\"><a href=\"#output1\" class=\"headerlink\" title=\"output1\"></a>output1</h4><p>9 8 </p>\n<h3 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h3><p>In the first sample one way to get the optimal answer goes like this: we add in turns the $4$-th and the $5$-th piles to the $2$-nd one; then we add the $1$-st pile to the $3$-rd one; we add the $2$-nd pile to the $3$-rd one. The first two operations cost $1$ each; the third one costs $2$, the fourth one costs $5$ (the size of the $2$-nd pile after the first two operations is not $3$, it already is $5$).</p>\n<p>In the second sample you can add the $2$-nd pile to the $3$-rd one (the operations costs $3$); then the $1$-st one to the $3$-th one (the cost is $2$); then the $5$-th one to the $4$-th one (the costs is $1$); and at last, the $4$-th one to the $3$-rd one (the cost is $2$).</p>\n<h3 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>这有 $n$ 堆石子，每堆分别有 $a_1,a_2,\\dots,a_n$ 个石子放在你面前的桌子上。</p>\n<p>在每次移动中，你可以选择一堆石子，并把它合并到其他的堆上。如果你把第 $i$ 堆加到第 $j$ 堆上，那么第 $j$ 堆会增加当前第 $i$ 堆拥有的石子数，并且第 $i$ 堆将不会继续存在。这样操作的代价是第 $i$ 堆的石子数。</p>\n<p>你的任务是考虑把这些石子合成一堆的最小代价。</p>\n<p>为了增加一些难度，我们规定，合并的石头堆最多被合并 $k$ 次（在这之后，你只能把这一堆合并到其他堆上）。</p>\n<p>此外，你将会被询问 $q$ 次，每次给你可能相同的 $k$ 。</p>\n<p>你的任务是对于这 $q$ 个询问，给出最小花费。</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>我们首先考虑如果只有一次询问我们怎么做。</p>\n<p>假设当前每一堆最多被合并 $k$ 次。</p>\n<p>假设当前只有 $k+1$ 堆，我们的做法显然是，排序，把最小的 $k$ 堆合并到最大堆上。</p>\n<p>假设当前只有 $k+2$ 堆，那么我们可以得到的是，我们需要合并 $k+1$ 次，所以必然有一堆被合并了两次，除了最大堆之外，其他堆合并了一次。要让代价最小，我们需要让最小堆被合并两次。所以操作是，我们把最小堆合并到除最大堆的某一堆，然后其他堆合并到最大堆。</p>\n<p>$\\dots$</p>\n<p>假设当前有 $k*k + k + 1$ 堆，我们怎么操作呢？</p>\n<p>首先我们可以确定的是，需要合并 $k<em>k+k$ 次，因为一堆最多被合并 $k$ 次，所以我们可以得到，这 $k</em>k+k$ 次合并中，必定会有 $k$ 次合并，实际上是将两堆及以上合并到了某一堆中，也即：有 $k*k$ 堆被合并了两次， 有 $k$ 堆被合并了一次。所以一个显而易见的贪心策略就出来了。</p>\n<p>每次我们倍增 $k$ 挑出这么多堆出来，合并次数增加。为了保证答案最小，显然是，最后合并的是大堆，也就是合并次数最少。</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">1e5</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n, q;</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a[maxm];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">input</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;n;i++) <span class=\"built_in\">cin</span>&gt;&gt;a[i];</span><br><span class=\"line\">\tsort(a,a+n);</span><br><span class=\"line\">\treverse(a,a+n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;n;i++) a[i] += a[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">get_ans</span><span class=\"params\">(<span class=\"keyword\">int</span> len)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> rlen = len, cnt = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;n;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> r = min(n<span class=\"number\">-1l</span>l,i+rlen<span class=\"number\">-1</span>);</span><br><span class=\"line\">\t\tans += (a[r] - a[i<span class=\"number\">-1</span>])*cnt;</span><br><span class=\"line\">\t\tcnt++;</span><br><span class=\"line\">\t\ti = r+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\trlen *= len;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ans[maxm];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">solve</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;q;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(q--) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> len;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;len;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(ans[len]) <span class=\"built_in\">cout</span>&lt;&lt;ans[len]&lt;&lt;<span class=\"string\">' '</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tans[len] = get_ans(len);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span>&lt;&lt;ans[len]&lt;&lt;<span class=\"string\">' '</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>.tie(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tios::sync_with_stdio(<span class=\"literal\">false</span>);</span><br><span class=\"line\">\tinput();</span><br><span class=\"line\">\tsolve();</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Codeforces 761 E","date":"2019-09-13T16:00:00.000Z","author":"zuhiul","_content":"\n## E. Dasha and Puzzle\n\n[开启传送门](http://codeforces.com/contest/761/problem/E)\n\n<!-- more -->\n\n### 题目描述\n\nDasha decided to have a rest after solving the problem. She had been ready to start her favourite activity — origami, but remembered the puzzle that she could not solve.\n\n![](http://codeforces.com/predownloaded/1d/1a/1d1ae6a6db028195fcbb0bc79ccb8111c2862fdc.png)\n\nThe tree is a non-oriented connected graph without cycles. In particular, there always are $n - 1$ edges in a tree with $n$ vertices.\n\nThe puzzle is to position the vertices at the points of the Cartesian plane with integral coordinates, so that the segments between the vertices connected by edges are parallel to the coordinate axes. Also, the intersection of segments is allowed only at their ends. Distinct vertices should be placed at different points.\n\nHelp Dasha to find any suitable way to position the tree vertices on the plane.\n\nIt is guaranteed that if it is possible to position the tree vertices on the plane without violating the condition which is given above, then you can do it by using points with integral coordinates which don't exceed $10^{18}$ in absolute value.\n\n### Input\n\nThe first line contains single integer $n$ ($1 ≤ n ≤ 30$) — the number of vertices in the tree.\n\nEach of next $n - 1$ lines contains two integers $u_i, v_i$ ($1 ≤ u_i, v_i ≤ n$) that mean that the $i$-th edge of the tree connects vertices $u_i$ and $v_i$.\n\nIt is guaranteed that the described graph is a tree.\n\n### Output\n\nIf the puzzle doesn't have a solution then in the only line print \"NO\".\n\nOtherwise, the first line should contain \"YES\". The next *n* lines should contain the pair of integers $x_i$, $y_i$ (|$x_i$|, |$y_i$| ≤ $10^{18}$) — the coordinates of the point which corresponds to the $i$-th vertex of the tree.\n\nIf there are several solutions, print any of them.\n\n### Examples\n\n#### input1\n\n7\n\n1 2\n\n1 3\n\n2 4\n\n2 5\n\n3 6\n\n3 7\n\n#### output1\n\nYES\n\n0 0\n\n1 0\n\n0 1\n\n2 0\n\n1 -1\n\n-1 1\n\n0 2\n\n#### input2\n\n6\n\n1 2\n\n2 3\n\n2 4\n\n2 5\n\n2 6\n\n#### output2\n\nNO\n\n#### input3\n\n4\n\n1 2\n\n2 3\n\n3 4\n\n#### output3\n\nYES\n\n3 3\n\n4 3\n\n5 3\n\n6 3\n\n### Note\n\nIn the first sample one of the possible positions of tree is:\n\n![](http://codeforces.com/predownloaded/ea/d8/ead8e669677d63668948ddcb9eaca58e76deabba.png)\n\n### 题意\n\nzuhiul认识很多妹子（不超过30个），妹子之间是个树形关系。zuhiul家很大，所以他想把所有妹子放家里，因为zuhiul比较喜欢整点，所以他希望妹子都在整点上，并且有关系的妹子，他们之间的连线平行于坐标轴，并且关系不能相交，也不能重合（贵圈真乱！）。虽然zuhiul很有钱，但是他家也不是无限大，也即：所有妹子的坐标的绝对值不能超过$10^{18}$。\n\n### 分析\n\n显然的构造题。\n\n首先因为妹子的关系不能相交，并且要平行于坐标轴，所以可以得到如果一个妹子和四个以上的妹子有关系，那么显然就不能构造出来。首先处理这种非法情况。\n\n剩下的显然是一个dfs搞一下，因为无根，直接取$1$为根。\n\n然后显然是找一个比较好的展开方式就行了。一个直观的做法就是按层次展开就行了。但是为了保证关系不交。我们考虑用下面两个规则展开。\n\n- 1.每层的距离至多为前一层的$\\frac{1}{2}$。\n- 2.同层的节点的距离不同。\n\n这样可以保证所有的点在四相扩展的时候不交。\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\nvector<int> son[100];\nlong long dirx[] = {1,-1,0,0};\nlong long diry[] = {0,0,1,-1};\nbool has_position[100];\nlong long ansx[100],ansy[100];\nvoid lay(int ind, int pre, long long x,long long y, int dir, int floor) {\n\thas_position[ind] = true;\n\tansx[ind] = x;\n\tansy[ind] = y;\n\tlong long rdis = 1ll<<floor;\n\tint dir_ind = 0;\n\tfor(int i:son[ind]) {\n\t\tif(i==pre) continue;\n\t\tif(dir_ind==(dir^1)) dir_ind++;\n\t\tif(dir_ind>3) {\n\t\t\tprintf(\"NO\");\n\t\t\texit(0);\n\t\t}\n\t\tlay(i, ind, x+dirx[dir_ind]*rdis, y+diry[dir_ind]*rdis, dir_ind, floor-1);\n\t\trdis--;\n\t\tdir_ind ++ ;\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i = 1, from ,to;i<n;i++) {\n\t\tscanf(\"%d%d\",&from,&to);\n\t\tson[from].push_back(to);\n\t\tson[to].push_back(from);\n\t}\n\tlay(1,0,0,0,-1,50);\n\tfor(int i = 1;i<=n;i++) if(!has_position[i]) {\n\t\tprintf(\"NO\\n\");\n\t\treturn 0;\n\t}\n\tprintf(\"YES\\n\");\n\tfor(int i = 1;i<=n;i++) printf(\"%lld %lld\\n\", ansx[i], ansy[i]);\n\treturn 0;\n}\n```\n\n\n","source":"_posts/CF/CF_761_E.md","raw":"---\ntitle: \tCodeforces 761 E\ndate:\t\t2019-09-14\nauthor:\t\"zuhiul\" \ntags:\n  - CF\n---\n\n## E. Dasha and Puzzle\n\n[开启传送门](http://codeforces.com/contest/761/problem/E)\n\n<!-- more -->\n\n### 题目描述\n\nDasha decided to have a rest after solving the problem. She had been ready to start her favourite activity — origami, but remembered the puzzle that she could not solve.\n\n![](http://codeforces.com/predownloaded/1d/1a/1d1ae6a6db028195fcbb0bc79ccb8111c2862fdc.png)\n\nThe tree is a non-oriented connected graph without cycles. In particular, there always are $n - 1$ edges in a tree with $n$ vertices.\n\nThe puzzle is to position the vertices at the points of the Cartesian plane with integral coordinates, so that the segments between the vertices connected by edges are parallel to the coordinate axes. Also, the intersection of segments is allowed only at their ends. Distinct vertices should be placed at different points.\n\nHelp Dasha to find any suitable way to position the tree vertices on the plane.\n\nIt is guaranteed that if it is possible to position the tree vertices on the plane without violating the condition which is given above, then you can do it by using points with integral coordinates which don't exceed $10^{18}$ in absolute value.\n\n### Input\n\nThe first line contains single integer $n$ ($1 ≤ n ≤ 30$) — the number of vertices in the tree.\n\nEach of next $n - 1$ lines contains two integers $u_i, v_i$ ($1 ≤ u_i, v_i ≤ n$) that mean that the $i$-th edge of the tree connects vertices $u_i$ and $v_i$.\n\nIt is guaranteed that the described graph is a tree.\n\n### Output\n\nIf the puzzle doesn't have a solution then in the only line print \"NO\".\n\nOtherwise, the first line should contain \"YES\". The next *n* lines should contain the pair of integers $x_i$, $y_i$ (|$x_i$|, |$y_i$| ≤ $10^{18}$) — the coordinates of the point which corresponds to the $i$-th vertex of the tree.\n\nIf there are several solutions, print any of them.\n\n### Examples\n\n#### input1\n\n7\n\n1 2\n\n1 3\n\n2 4\n\n2 5\n\n3 6\n\n3 7\n\n#### output1\n\nYES\n\n0 0\n\n1 0\n\n0 1\n\n2 0\n\n1 -1\n\n-1 1\n\n0 2\n\n#### input2\n\n6\n\n1 2\n\n2 3\n\n2 4\n\n2 5\n\n2 6\n\n#### output2\n\nNO\n\n#### input3\n\n4\n\n1 2\n\n2 3\n\n3 4\n\n#### output3\n\nYES\n\n3 3\n\n4 3\n\n5 3\n\n6 3\n\n### Note\n\nIn the first sample one of the possible positions of tree is:\n\n![](http://codeforces.com/predownloaded/ea/d8/ead8e669677d63668948ddcb9eaca58e76deabba.png)\n\n### 题意\n\nzuhiul认识很多妹子（不超过30个），妹子之间是个树形关系。zuhiul家很大，所以他想把所有妹子放家里，因为zuhiul比较喜欢整点，所以他希望妹子都在整点上，并且有关系的妹子，他们之间的连线平行于坐标轴，并且关系不能相交，也不能重合（贵圈真乱！）。虽然zuhiul很有钱，但是他家也不是无限大，也即：所有妹子的坐标的绝对值不能超过$10^{18}$。\n\n### 分析\n\n显然的构造题。\n\n首先因为妹子的关系不能相交，并且要平行于坐标轴，所以可以得到如果一个妹子和四个以上的妹子有关系，那么显然就不能构造出来。首先处理这种非法情况。\n\n剩下的显然是一个dfs搞一下，因为无根，直接取$1$为根。\n\n然后显然是找一个比较好的展开方式就行了。一个直观的做法就是按层次展开就行了。但是为了保证关系不交。我们考虑用下面两个规则展开。\n\n- 1.每层的距离至多为前一层的$\\frac{1}{2}$。\n- 2.同层的节点的距离不同。\n\n这样可以保证所有的点在四相扩展的时候不交。\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\nvector<int> son[100];\nlong long dirx[] = {1,-1,0,0};\nlong long diry[] = {0,0,1,-1};\nbool has_position[100];\nlong long ansx[100],ansy[100];\nvoid lay(int ind, int pre, long long x,long long y, int dir, int floor) {\n\thas_position[ind] = true;\n\tansx[ind] = x;\n\tansy[ind] = y;\n\tlong long rdis = 1ll<<floor;\n\tint dir_ind = 0;\n\tfor(int i:son[ind]) {\n\t\tif(i==pre) continue;\n\t\tif(dir_ind==(dir^1)) dir_ind++;\n\t\tif(dir_ind>3) {\n\t\t\tprintf(\"NO\");\n\t\t\texit(0);\n\t\t}\n\t\tlay(i, ind, x+dirx[dir_ind]*rdis, y+diry[dir_ind]*rdis, dir_ind, floor-1);\n\t\trdis--;\n\t\tdir_ind ++ ;\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i = 1, from ,to;i<n;i++) {\n\t\tscanf(\"%d%d\",&from,&to);\n\t\tson[from].push_back(to);\n\t\tson[to].push_back(from);\n\t}\n\tlay(1,0,0,0,-1,50);\n\tfor(int i = 1;i<=n;i++) if(!has_position[i]) {\n\t\tprintf(\"NO\\n\");\n\t\treturn 0;\n\t}\n\tprintf(\"YES\\n\");\n\tfor(int i = 1;i<=n;i++) printf(\"%lld %lld\\n\", ansx[i], ansy[i]);\n\treturn 0;\n}\n```\n\n\n","slug":"CF/CF_761_E","published":1,"updated":"2019-09-16T09:33:15.732Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1gk000ya613qlfbac45","content":"<h2 id=\"E-Dasha-and-Puzzle\"><a href=\"#E-Dasha-and-Puzzle\" class=\"headerlink\" title=\"E. Dasha and Puzzle\"></a>E. Dasha and Puzzle</h2><p><a href=\"http://codeforces.com/contest/761/problem/E\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<a id=\"more\"></a>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>Dasha decided to have a rest after solving the problem. She had been ready to start her favourite activity — origami, but remembered the puzzle that she could not solve.</p>\n<p><img src=\"http://codeforces.com/predownloaded/1d/1a/1d1ae6a6db028195fcbb0bc79ccb8111c2862fdc.png\" alt=\"\"></p>\n<p>The tree is a non-oriented connected graph without cycles. In particular, there always are $n - 1$ edges in a tree with $n$ vertices.</p>\n<p>The puzzle is to position the vertices at the points of the Cartesian plane with integral coordinates, so that the segments between the vertices connected by edges are parallel to the coordinate axes. Also, the intersection of segments is allowed only at their ends. Distinct vertices should be placed at different points.</p>\n<p>Help Dasha to find any suitable way to position the tree vertices on the plane.</p>\n<p>It is guaranteed that if it is possible to position the tree vertices on the plane without violating the condition which is given above, then you can do it by using points with integral coordinates which don’t exceed $10^{18}$ in absolute value.</p>\n<h3 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h3><p>The first line contains single integer $n$ ($1 ≤ n ≤ 30$) — the number of vertices in the tree.</p>\n<p>Each of next $n - 1$ lines contains two integers $u_i, v_i$ ($1 ≤ u_i, v_i ≤ n$) that mean that the $i$-th edge of the tree connects vertices $u_i$ and $v_i$.</p>\n<p>It is guaranteed that the described graph is a tree.</p>\n<h3 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h3><p>If the puzzle doesn’t have a solution then in the only line print “NO”.</p>\n<p>Otherwise, the first line should contain “YES”. The next <em>n</em> lines should contain the pair of integers $x_i$, $y_i$ (|$x_i$|, |$y_i$| ≤ $10^{18}$) — the coordinates of the point which corresponds to the $i$-th vertex of the tree.</p>\n<p>If there are several solutions, print any of them.</p>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"input1\"><a href=\"#input1\" class=\"headerlink\" title=\"input1\"></a>input1</h4><p>7</p>\n<p>1 2</p>\n<p>1 3</p>\n<p>2 4</p>\n<p>2 5</p>\n<p>3 6</p>\n<p>3 7</p>\n<h4 id=\"output1\"><a href=\"#output1\" class=\"headerlink\" title=\"output1\"></a>output1</h4><p>YES</p>\n<p>0 0</p>\n<p>1 0</p>\n<p>0 1</p>\n<p>2 0</p>\n<p>1 -1</p>\n<p>-1 1</p>\n<p>0 2</p>\n<h4 id=\"input2\"><a href=\"#input2\" class=\"headerlink\" title=\"input2\"></a>input2</h4><p>6</p>\n<p>1 2</p>\n<p>2 3</p>\n<p>2 4</p>\n<p>2 5</p>\n<p>2 6</p>\n<h4 id=\"output2\"><a href=\"#output2\" class=\"headerlink\" title=\"output2\"></a>output2</h4><p>NO</p>\n<h4 id=\"input3\"><a href=\"#input3\" class=\"headerlink\" title=\"input3\"></a>input3</h4><p>4</p>\n<p>1 2</p>\n<p>2 3</p>\n<p>3 4</p>\n<h4 id=\"output3\"><a href=\"#output3\" class=\"headerlink\" title=\"output3\"></a>output3</h4><p>YES</p>\n<p>3 3</p>\n<p>4 3</p>\n<p>5 3</p>\n<p>6 3</p>\n<h3 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h3><p>In the first sample one of the possible positions of tree is:</p>\n<p><img src=\"http://codeforces.com/predownloaded/ea/d8/ead8e669677d63668948ddcb9eaca58e76deabba.png\" alt=\"\"></p>\n<h3 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>zuhiul认识很多妹子（不超过30个），妹子之间是个树形关系。zuhiul家很大，所以他想把所有妹子放家里，因为zuhiul比较喜欢整点，所以他希望妹子都在整点上，并且有关系的妹子，他们之间的连线平行于坐标轴，并且关系不能相交，也不能重合（贵圈真乱！）。虽然zuhiul很有钱，但是他家也不是无限大，也即：所有妹子的坐标的绝对值不能超过$10^{18}$。</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>显然的构造题。</p>\n<p>首先因为妹子的关系不能相交，并且要平行于坐标轴，所以可以得到如果一个妹子和四个以上的妹子有关系，那么显然就不能构造出来。首先处理这种非法情况。</p>\n<p>剩下的显然是一个dfs搞一下，因为无根，直接取$1$为根。</p>\n<p>然后显然是找一个比较好的展开方式就行了。一个直观的做法就是按层次展开就行了。但是为了保证关系不交。我们考虑用下面两个规则展开。</p>\n<ul>\n<li>1.每层的距离至多为前一层的$\\frac{1}{2}$。</li>\n<li>2.同层的节点的距离不同。</li>\n</ul>\n<p>这样可以保证所有的点在四相扩展的时候不交。</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; son[<span class=\"number\">100</span>];</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> dirx[] = &#123;<span class=\"number\">1</span>,<span class=\"number\">-1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> diry[] = &#123;<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">-1</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">bool</span> has_position[<span class=\"number\">100</span>];</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ansx[<span class=\"number\">100</span>],ansy[<span class=\"number\">100</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">lay</span><span class=\"params\">(<span class=\"keyword\">int</span> ind, <span class=\"keyword\">int</span> pre, <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> x,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> y, <span class=\"keyword\">int</span> dir, <span class=\"keyword\">int</span> <span class=\"built_in\">floor</span>)</span> </span>&#123;</span><br><span class=\"line\">\thas_position[ind] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\tansx[ind] = x;</span><br><span class=\"line\">\tansy[ind] = y;</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> rdis = <span class=\"number\">1l</span>l&lt;&lt;<span class=\"built_in\">floor</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> dir_ind = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i:son[ind]) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i==pre) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(dir_ind==(dir^<span class=\"number\">1</span>)) dir_ind++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(dir_ind&gt;<span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"NO\"</span>);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tlay(i, ind, x+dirx[dir_ind]*rdis, y+diry[dir_ind]*rdis, dir_ind, <span class=\"built_in\">floor</span><span class=\"number\">-1</span>);</span><br><span class=\"line\">\t\trdis--;</span><br><span class=\"line\">\t\tdir_ind ++ ;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>, from ,to;i&lt;n;i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;from,&amp;to);</span><br><span class=\"line\">\t\tson[from].push_back(to);</span><br><span class=\"line\">\t\tson[to].push_back(from);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tlay(<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">-1</span>,<span class=\"number\">50</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=n;i++) <span class=\"keyword\">if</span>(!has_position[i]) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"NO\\n\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"YES\\n\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=n;i++) <span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld %lld\\n\"</span>, ansx[i], ansy[i]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"E-Dasha-and-Puzzle\"><a href=\"#E-Dasha-and-Puzzle\" class=\"headerlink\" title=\"E. Dasha and Puzzle\"></a>E. Dasha and Puzzle</h2><p><a href=\"http://codeforces.com/contest/761/problem/E\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>","more":"<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>Dasha decided to have a rest after solving the problem. She had been ready to start her favourite activity — origami, but remembered the puzzle that she could not solve.</p>\n<p><img src=\"http://codeforces.com/predownloaded/1d/1a/1d1ae6a6db028195fcbb0bc79ccb8111c2862fdc.png\" alt=\"\"></p>\n<p>The tree is a non-oriented connected graph without cycles. In particular, there always are $n - 1$ edges in a tree with $n$ vertices.</p>\n<p>The puzzle is to position the vertices at the points of the Cartesian plane with integral coordinates, so that the segments between the vertices connected by edges are parallel to the coordinate axes. Also, the intersection of segments is allowed only at their ends. Distinct vertices should be placed at different points.</p>\n<p>Help Dasha to find any suitable way to position the tree vertices on the plane.</p>\n<p>It is guaranteed that if it is possible to position the tree vertices on the plane without violating the condition which is given above, then you can do it by using points with integral coordinates which don’t exceed $10^{18}$ in absolute value.</p>\n<h3 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h3><p>The first line contains single integer $n$ ($1 ≤ n ≤ 30$) — the number of vertices in the tree.</p>\n<p>Each of next $n - 1$ lines contains two integers $u_i, v_i$ ($1 ≤ u_i, v_i ≤ n$) that mean that the $i$-th edge of the tree connects vertices $u_i$ and $v_i$.</p>\n<p>It is guaranteed that the described graph is a tree.</p>\n<h3 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h3><p>If the puzzle doesn’t have a solution then in the only line print “NO”.</p>\n<p>Otherwise, the first line should contain “YES”. The next <em>n</em> lines should contain the pair of integers $x_i$, $y_i$ (|$x_i$|, |$y_i$| ≤ $10^{18}$) — the coordinates of the point which corresponds to the $i$-th vertex of the tree.</p>\n<p>If there are several solutions, print any of them.</p>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"input1\"><a href=\"#input1\" class=\"headerlink\" title=\"input1\"></a>input1</h4><p>7</p>\n<p>1 2</p>\n<p>1 3</p>\n<p>2 4</p>\n<p>2 5</p>\n<p>3 6</p>\n<p>3 7</p>\n<h4 id=\"output1\"><a href=\"#output1\" class=\"headerlink\" title=\"output1\"></a>output1</h4><p>YES</p>\n<p>0 0</p>\n<p>1 0</p>\n<p>0 1</p>\n<p>2 0</p>\n<p>1 -1</p>\n<p>-1 1</p>\n<p>0 2</p>\n<h4 id=\"input2\"><a href=\"#input2\" class=\"headerlink\" title=\"input2\"></a>input2</h4><p>6</p>\n<p>1 2</p>\n<p>2 3</p>\n<p>2 4</p>\n<p>2 5</p>\n<p>2 6</p>\n<h4 id=\"output2\"><a href=\"#output2\" class=\"headerlink\" title=\"output2\"></a>output2</h4><p>NO</p>\n<h4 id=\"input3\"><a href=\"#input3\" class=\"headerlink\" title=\"input3\"></a>input3</h4><p>4</p>\n<p>1 2</p>\n<p>2 3</p>\n<p>3 4</p>\n<h4 id=\"output3\"><a href=\"#output3\" class=\"headerlink\" title=\"output3\"></a>output3</h4><p>YES</p>\n<p>3 3</p>\n<p>4 3</p>\n<p>5 3</p>\n<p>6 3</p>\n<h3 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h3><p>In the first sample one of the possible positions of tree is:</p>\n<p><img src=\"http://codeforces.com/predownloaded/ea/d8/ead8e669677d63668948ddcb9eaca58e76deabba.png\" alt=\"\"></p>\n<h3 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>zuhiul认识很多妹子（不超过30个），妹子之间是个树形关系。zuhiul家很大，所以他想把所有妹子放家里，因为zuhiul比较喜欢整点，所以他希望妹子都在整点上，并且有关系的妹子，他们之间的连线平行于坐标轴，并且关系不能相交，也不能重合（贵圈真乱！）。虽然zuhiul很有钱，但是他家也不是无限大，也即：所有妹子的坐标的绝对值不能超过$10^{18}$。</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>显然的构造题。</p>\n<p>首先因为妹子的关系不能相交，并且要平行于坐标轴，所以可以得到如果一个妹子和四个以上的妹子有关系，那么显然就不能构造出来。首先处理这种非法情况。</p>\n<p>剩下的显然是一个dfs搞一下，因为无根，直接取$1$为根。</p>\n<p>然后显然是找一个比较好的展开方式就行了。一个直观的做法就是按层次展开就行了。但是为了保证关系不交。我们考虑用下面两个规则展开。</p>\n<ul>\n<li>1.每层的距离至多为前一层的$\\frac{1}{2}$。</li>\n<li>2.同层的节点的距离不同。</li>\n</ul>\n<p>这样可以保证所有的点在四相扩展的时候不交。</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; son[<span class=\"number\">100</span>];</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> dirx[] = &#123;<span class=\"number\">1</span>,<span class=\"number\">-1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> diry[] = &#123;<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">-1</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">bool</span> has_position[<span class=\"number\">100</span>];</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ansx[<span class=\"number\">100</span>],ansy[<span class=\"number\">100</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">lay</span><span class=\"params\">(<span class=\"keyword\">int</span> ind, <span class=\"keyword\">int</span> pre, <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> x,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> y, <span class=\"keyword\">int</span> dir, <span class=\"keyword\">int</span> <span class=\"built_in\">floor</span>)</span> </span>&#123;</span><br><span class=\"line\">\thas_position[ind] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\tansx[ind] = x;</span><br><span class=\"line\">\tansy[ind] = y;</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> rdis = <span class=\"number\">1l</span>l&lt;&lt;<span class=\"built_in\">floor</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> dir_ind = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i:son[ind]) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i==pre) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(dir_ind==(dir^<span class=\"number\">1</span>)) dir_ind++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(dir_ind&gt;<span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"NO\"</span>);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tlay(i, ind, x+dirx[dir_ind]*rdis, y+diry[dir_ind]*rdis, dir_ind, <span class=\"built_in\">floor</span><span class=\"number\">-1</span>);</span><br><span class=\"line\">\t\trdis--;</span><br><span class=\"line\">\t\tdir_ind ++ ;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>, from ,to;i&lt;n;i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;from,&amp;to);</span><br><span class=\"line\">\t\tson[from].push_back(to);</span><br><span class=\"line\">\t\tson[to].push_back(from);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tlay(<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">-1</span>,<span class=\"number\">50</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=n;i++) <span class=\"keyword\">if</span>(!has_position[i]) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"NO\\n\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"YES\\n\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=n;i++) <span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld %lld\\n\"</span>, ansx[i], ansy[i]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Codeforces 847 I","date":"2019-09-22T16:00:00.000Z","author":"zuhiul","_content":"\n## I. Noise Level\n\n[开启传送门](http://codeforces.com/problemset/problem/847/I)\n\n<!-- more -->\n\n### 题目描述\n\nThe Berland's capital has the form of a rectangle with sizes $n × m$ quarters. All quarters are divided into three types:\n\n- regular (labeled with the character '.') — such quarters do not produce the noise but are not obstacles to the propagation of the noise;\n- sources of noise (labeled with an uppercase Latin letter from '$A$' to '$Z$') — such quarters are noise sources and are not obstacles to the propagation of the noise;\n- heavily built-up (labeled with the character '$*$') — such quarters are soundproofed, the noise does not penetrate into them and they themselves are obstacles to the propagation of noise.\n\nA quarter labeled with letter 'A' produces $q$ units of noise. A quarter labeled with letter 'B' produces $2\\cdot q$ units of noise. And so on, up to a quarter labeled with letter 'Z', which produces $26\\cdot q$ units of noise. There can be any number of quarters labeled with each letter in the city.\n\nWhen propagating from the source of the noise, the noise level is halved when moving from one quarter to a quarter that shares a side with it (when an odd number is to be halved, it's rounded down). The noise spreads along the chain. For example, if some quarter is located at a distance $2$ from the noise source, then the value of noise which will reach the quarter is divided by $4$. So the noise level that comes from the source to the quarter is determined solely by the length of the shortest path between them. Heavily built-up quarters are obstacles, the noise does not penetrate into them.\n\n![](http://codeforces.com/predownloaded/5a/7c/5a7cae99652db48cf802c68f3c82351b4084d138.png)\n\n<center><font size=1>The values in the cells of the table on the right show the total noise level in the respective quarters for q = 100, the first term in each sum is the noise from the quarter 'A', the second — the noise from the quarter 'B'.</font></center>\nThe noise level in quarter is defined as the sum of the noise from all sources. To assess the quality of life of the population of the capital of Berland, it is required to find the number of quarters whose noise level exceeds the allowed level $p$.\n\n### Input\n\nThe first line contains four integers $n, m, q$ and $p$ ($1 ≤ n, m ≤ 250, 1 ≤ q, p ≤ 10^6$) — the sizes of Berland's capital, the number of noise units that a quarter '$A$' produces, and the allowable noise level.\n\nEach of the following $n$ lines contains m characters — the description of the capital quarters, in the format that was described in the statement above. It is possible that in the Berland's capital there are no quarters of any type.\n\n### Output\n\nPrint the number of quarters, in which the noise level exceeds the allowed level $p$.\n\n### Examples\n\n#### input1\n\n3 3 100 140\n\n...\n\nA*.\n\n.B.\n\n#### output1\n\n3\n\n#### input2\n\n3 3 2 8\n\nB*.\n\nBB*\n\nBBB\n\n#### output2\n\n4\n\n#### input3\n\n3 4 5 4\n\n..*B\n\n..**\n\nD...\n\n#### output3\n\n7\n\n### Note\n\nThe illustration to the first example is in the main part of the statement.\n\n### 题意\n\nzuhiul家里有很多妹子，但是有一天，妹子们对他都很不满，所以妹子们都在呼叫他，如你所见，妹子在一些点中，并且每个妹子的音量都是他的倍数，其中 A 表示一倍，B表示两倍，最厉害的妹子甚至可以喊出他 26 倍音量（也即 Z ），但是好处是，每个妹子的音量都会随着哈密顿距离指数级减半。zuhiul的耳朵有个承受上线，如果太多杂音，他会受不了。现在问，有多少个位置的音量是zuhiul可接受的。注意，他不能和妹子一个位置。也不能在*上。\n\n### 分析\n\n一个显然的做法是，我们可以直接把每个有音量的地方传播下去，就可以得到一个比较完美的图。然后把音量叠加后枚举每个位置，判断当前音量是否超过阈值即可。\n\n可以发现的是，因为每次音量都是倍减的，所以可以得到，最多倍减log次，所以对于一个音量来说，最大的传播范围是O($log(p_{max})*log(p_{max})$) ，所以复杂度是O($n*m*log(p_{max})*log(p_{max})$)\n\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#include <map>\n#include <queue>\n#include <iostream>\nusing namespace std;\n\nconst int maxm = 300;\nint n, m;\nlong long a, b;\nchar mat[maxm][maxm];\nlong long ans[maxm][maxm];\n\nstruct p {\n\tint x,y,val;\n};\nint dirx[] = {0,0,1,-1};\nint diry[] = {1,-1,0,0};\nbool vis[maxm][maxm];\n\nvector<p> vis_buf;\n\nvoid gao(int a,int b, int val) {\n\tqueue<p> q;\n\tvis_buf.resize(0);\n\tq.push(p{a,b,val});\n\tvis_buf.push_back(p{a,b,val});\n\tvis[a][b] = true;\n\tans[a][b] += val;\n\twhile(!q.empty()) {\n\t\tp buf = q.front();\n\t\tq.pop();\n\t\tif(buf.val==0) continue;\n\t\tfor(int dir = 0;dir<4;dir++) {\n\t\t\tint x = buf.x + dirx[dir];\n\t\t\tint y = buf.y + diry[dir];\n\t\t\tif(x<0||y<0||x>=n||y>=m) continue;\n\t\t\tif(mat[x][y]=='*') continue;\n\t\t\tif(vis[x][y]) continue;\n\t\t\tvis[x][y] = true;\n\t\t\tvis_buf.push_back(p{x,y,0});\n\t\t\tans[x][y] += buf.val>>1;\n\t\t\tq.push(p{x,y,buf.val>>1});\n\t\t}\n\t}\n\tfor(auto i:vis_buf) {\n\t\tvis[i.x][i.y] = false;\n\t}\n}\n\n\n\nint main() {\n\t\tscanf(\"%d%d%lld%lld\", &n, &m, &a, &b);\n\t\tfor (int i = 0; i < n; i++) scanf(\"%s\", mat[i]);\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\t\t\tif (mat[i][j] == '*') continue;\n\t\t\t\t\t\tint val = mat[i][j] == '.' ? 0 : (mat[i][j] - 'A' + 1) * a;\n\t\t\t\t\t\tif(val==0) continue;\n\t\t\t\t\t\tgao(i,j,val);\n\t\t\t\t}\n\t\t}\n\tint rans = 0;\n\tfor(int i = 0;i<n;i++) for(int j = 0;j<m;j++) if(ans[i][j]>b) rans++;\n\tprintf(\"%d\\n\", rans);\n\treturn 0;\n}\n```\n","source":"_posts/CF/CF_847_I.md","raw":"---\ntitle: \tCodeforces 847 I\ndate:\t\t2019-09-23\nauthor:\t\"zuhiul\" \ntags:\n  - CF\n---\n\n## I. Noise Level\n\n[开启传送门](http://codeforces.com/problemset/problem/847/I)\n\n<!-- more -->\n\n### 题目描述\n\nThe Berland's capital has the form of a rectangle with sizes $n × m$ quarters. All quarters are divided into three types:\n\n- regular (labeled with the character '.') — such quarters do not produce the noise but are not obstacles to the propagation of the noise;\n- sources of noise (labeled with an uppercase Latin letter from '$A$' to '$Z$') — such quarters are noise sources and are not obstacles to the propagation of the noise;\n- heavily built-up (labeled with the character '$*$') — such quarters are soundproofed, the noise does not penetrate into them and they themselves are obstacles to the propagation of noise.\n\nA quarter labeled with letter 'A' produces $q$ units of noise. A quarter labeled with letter 'B' produces $2\\cdot q$ units of noise. And so on, up to a quarter labeled with letter 'Z', which produces $26\\cdot q$ units of noise. There can be any number of quarters labeled with each letter in the city.\n\nWhen propagating from the source of the noise, the noise level is halved when moving from one quarter to a quarter that shares a side with it (when an odd number is to be halved, it's rounded down). The noise spreads along the chain. For example, if some quarter is located at a distance $2$ from the noise source, then the value of noise which will reach the quarter is divided by $4$. So the noise level that comes from the source to the quarter is determined solely by the length of the shortest path between them. Heavily built-up quarters are obstacles, the noise does not penetrate into them.\n\n![](http://codeforces.com/predownloaded/5a/7c/5a7cae99652db48cf802c68f3c82351b4084d138.png)\n\n<center><font size=1>The values in the cells of the table on the right show the total noise level in the respective quarters for q = 100, the first term in each sum is the noise from the quarter 'A', the second — the noise from the quarter 'B'.</font></center>\nThe noise level in quarter is defined as the sum of the noise from all sources. To assess the quality of life of the population of the capital of Berland, it is required to find the number of quarters whose noise level exceeds the allowed level $p$.\n\n### Input\n\nThe first line contains four integers $n, m, q$ and $p$ ($1 ≤ n, m ≤ 250, 1 ≤ q, p ≤ 10^6$) — the sizes of Berland's capital, the number of noise units that a quarter '$A$' produces, and the allowable noise level.\n\nEach of the following $n$ lines contains m characters — the description of the capital quarters, in the format that was described in the statement above. It is possible that in the Berland's capital there are no quarters of any type.\n\n### Output\n\nPrint the number of quarters, in which the noise level exceeds the allowed level $p$.\n\n### Examples\n\n#### input1\n\n3 3 100 140\n\n...\n\nA*.\n\n.B.\n\n#### output1\n\n3\n\n#### input2\n\n3 3 2 8\n\nB*.\n\nBB*\n\nBBB\n\n#### output2\n\n4\n\n#### input3\n\n3 4 5 4\n\n..*B\n\n..**\n\nD...\n\n#### output3\n\n7\n\n### Note\n\nThe illustration to the first example is in the main part of the statement.\n\n### 题意\n\nzuhiul家里有很多妹子，但是有一天，妹子们对他都很不满，所以妹子们都在呼叫他，如你所见，妹子在一些点中，并且每个妹子的音量都是他的倍数，其中 A 表示一倍，B表示两倍，最厉害的妹子甚至可以喊出他 26 倍音量（也即 Z ），但是好处是，每个妹子的音量都会随着哈密顿距离指数级减半。zuhiul的耳朵有个承受上线，如果太多杂音，他会受不了。现在问，有多少个位置的音量是zuhiul可接受的。注意，他不能和妹子一个位置。也不能在*上。\n\n### 分析\n\n一个显然的做法是，我们可以直接把每个有音量的地方传播下去，就可以得到一个比较完美的图。然后把音量叠加后枚举每个位置，判断当前音量是否超过阈值即可。\n\n可以发现的是，因为每次音量都是倍减的，所以可以得到，最多倍减log次，所以对于一个音量来说，最大的传播范围是O($log(p_{max})*log(p_{max})$) ，所以复杂度是O($n*m*log(p_{max})*log(p_{max})$)\n\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#include <map>\n#include <queue>\n#include <iostream>\nusing namespace std;\n\nconst int maxm = 300;\nint n, m;\nlong long a, b;\nchar mat[maxm][maxm];\nlong long ans[maxm][maxm];\n\nstruct p {\n\tint x,y,val;\n};\nint dirx[] = {0,0,1,-1};\nint diry[] = {1,-1,0,0};\nbool vis[maxm][maxm];\n\nvector<p> vis_buf;\n\nvoid gao(int a,int b, int val) {\n\tqueue<p> q;\n\tvis_buf.resize(0);\n\tq.push(p{a,b,val});\n\tvis_buf.push_back(p{a,b,val});\n\tvis[a][b] = true;\n\tans[a][b] += val;\n\twhile(!q.empty()) {\n\t\tp buf = q.front();\n\t\tq.pop();\n\t\tif(buf.val==0) continue;\n\t\tfor(int dir = 0;dir<4;dir++) {\n\t\t\tint x = buf.x + dirx[dir];\n\t\t\tint y = buf.y + diry[dir];\n\t\t\tif(x<0||y<0||x>=n||y>=m) continue;\n\t\t\tif(mat[x][y]=='*') continue;\n\t\t\tif(vis[x][y]) continue;\n\t\t\tvis[x][y] = true;\n\t\t\tvis_buf.push_back(p{x,y,0});\n\t\t\tans[x][y] += buf.val>>1;\n\t\t\tq.push(p{x,y,buf.val>>1});\n\t\t}\n\t}\n\tfor(auto i:vis_buf) {\n\t\tvis[i.x][i.y] = false;\n\t}\n}\n\n\n\nint main() {\n\t\tscanf(\"%d%d%lld%lld\", &n, &m, &a, &b);\n\t\tfor (int i = 0; i < n; i++) scanf(\"%s\", mat[i]);\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\t\t\tif (mat[i][j] == '*') continue;\n\t\t\t\t\t\tint val = mat[i][j] == '.' ? 0 : (mat[i][j] - 'A' + 1) * a;\n\t\t\t\t\t\tif(val==0) continue;\n\t\t\t\t\t\tgao(i,j,val);\n\t\t\t\t}\n\t\t}\n\tint rans = 0;\n\tfor(int i = 0;i<n;i++) for(int j = 0;j<m;j++) if(ans[i][j]>b) rans++;\n\tprintf(\"%d\\n\", rans);\n\treturn 0;\n}\n```\n","slug":"CF/CF_847_I","published":1,"updated":"2019-09-27T10:48:56.814Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1gl0010a613fjzjuwve","content":"<h2 id=\"I-Noise-Level\"><a href=\"#I-Noise-Level\" class=\"headerlink\" title=\"I. Noise Level\"></a>I. Noise Level</h2><p><a href=\"http://codeforces.com/problemset/problem/847/I\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<a id=\"more\"></a>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>The Berland’s capital has the form of a rectangle with sizes $n × m$ quarters. All quarters are divided into three types:</p>\n<ul>\n<li>regular (labeled with the character ‘.’) — such quarters do not produce the noise but are not obstacles to the propagation of the noise;</li>\n<li>sources of noise (labeled with an uppercase Latin letter from ‘$A$’ to ‘$Z$’) — such quarters are noise sources and are not obstacles to the propagation of the noise;</li>\n<li>heavily built-up (labeled with the character ‘$*$’) — such quarters are soundproofed, the noise does not penetrate into them and they themselves are obstacles to the propagation of noise.</li>\n</ul>\n<p>A quarter labeled with letter ‘A’ produces $q$ units of noise. A quarter labeled with letter ‘B’ produces $2\\cdot q$ units of noise. And so on, up to a quarter labeled with letter ‘Z’, which produces $26\\cdot q$ units of noise. There can be any number of quarters labeled with each letter in the city.</p>\n<p>When propagating from the source of the noise, the noise level is halved when moving from one quarter to a quarter that shares a side with it (when an odd number is to be halved, it’s rounded down). The noise spreads along the chain. For example, if some quarter is located at a distance $2$ from the noise source, then the value of noise which will reach the quarter is divided by $4$. So the noise level that comes from the source to the quarter is determined solely by the length of the shortest path between them. Heavily built-up quarters are obstacles, the noise does not penetrate into them.</p>\n<p><img src=\"http://codeforces.com/predownloaded/5a/7c/5a7cae99652db48cf802c68f3c82351b4084d138.png\" alt=\"\"></p>\n<p><center><font size=\"1\">The values in the cells of the table on the right show the total noise level in the respective quarters for q = 100, the first term in each sum is the noise from the quarter ‘A’, the second — the noise from the quarter ‘B’.</font></center><br>The noise level in quarter is defined as the sum of the noise from all sources. To assess the quality of life of the population of the capital of Berland, it is required to find the number of quarters whose noise level exceeds the allowed level $p$.</p>\n<h3 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h3><p>The first line contains four integers $n, m, q$ and $p$ ($1 ≤ n, m ≤ 250, 1 ≤ q, p ≤ 10^6$) — the sizes of Berland’s capital, the number of noise units that a quarter ‘$A$’ produces, and the allowable noise level.</p>\n<p>Each of the following $n$ lines contains m characters — the description of the capital quarters, in the format that was described in the statement above. It is possible that in the Berland’s capital there are no quarters of any type.</p>\n<h3 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h3><p>Print the number of quarters, in which the noise level exceeds the allowed level $p$.</p>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"input1\"><a href=\"#input1\" class=\"headerlink\" title=\"input1\"></a>input1</h4><p>3 3 100 140</p>\n<p>…</p>\n<p>A*.</p>\n<p>.B.</p>\n<h4 id=\"output1\"><a href=\"#output1\" class=\"headerlink\" title=\"output1\"></a>output1</h4><p>3</p>\n<h4 id=\"input2\"><a href=\"#input2\" class=\"headerlink\" title=\"input2\"></a>input2</h4><p>3 3 2 8</p>\n<p>B*.</p>\n<p>BB*</p>\n<p>BBB</p>\n<h4 id=\"output2\"><a href=\"#output2\" class=\"headerlink\" title=\"output2\"></a>output2</h4><p>4</p>\n<h4 id=\"input3\"><a href=\"#input3\" class=\"headerlink\" title=\"input3\"></a>input3</h4><p>3 4 5 4</p>\n<p>..*B</p>\n<p>..**</p>\n<p>D…</p>\n<h4 id=\"output3\"><a href=\"#output3\" class=\"headerlink\" title=\"output3\"></a>output3</h4><p>7</p>\n<h3 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h3><p>The illustration to the first example is in the main part of the statement.</p>\n<h3 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>zuhiul家里有很多妹子，但是有一天，妹子们对他都很不满，所以妹子们都在呼叫他，如你所见，妹子在一些点中，并且每个妹子的音量都是他的倍数，其中 A 表示一倍，B表示两倍，最厉害的妹子甚至可以喊出他 26 倍音量（也即 Z ），但是好处是，每个妹子的音量都会随着哈密顿距离指数级减半。zuhiul的耳朵有个承受上线，如果太多杂音，他会受不了。现在问，有多少个位置的音量是zuhiul可接受的。注意，他不能和妹子一个位置。也不能在*上。</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>一个显然的做法是，我们可以直接把每个有音量的地方传播下去，就可以得到一个比较完美的图。然后把音量叠加后枚举每个位置，判断当前音量是否超过阈值即可。</p>\n<p>可以发现的是，因为每次音量都是倍减的，所以可以得到，最多倍减log次，所以对于一个音量来说，最大的传播范围是O($log(p_{max})<em>log(p_{max})$) ，所以复杂度是O($n</em>m<em>log(p_{max})</em>log(p_{max})$)</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">300</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n, m;</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a, b;</span><br><span class=\"line\"><span class=\"keyword\">char</span> mat[maxm][maxm];</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ans[maxm][maxm];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">p</span> &#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> x,y,val;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">int</span> dirx[] = &#123;<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">-1</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">int</span> diry[] = &#123;<span class=\"number\">1</span>,<span class=\"number\">-1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">bool</span> vis[maxm][maxm];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;p&gt; vis_buf;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">gao</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b, <span class=\"keyword\">int</span> val)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">queue</span>&lt;p&gt; q;</span><br><span class=\"line\">\tvis_buf.resize(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tq.push(p&#123;a,b,val&#125;);</span><br><span class=\"line\">\tvis_buf.push_back(p&#123;a,b,val&#125;);</span><br><span class=\"line\">\tvis[a][b] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\tans[a][b] += val;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(!q.empty()) &#123;</span><br><span class=\"line\">\t\tp buf = q.front();</span><br><span class=\"line\">\t\tq.pop();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(buf.val==<span class=\"number\">0</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> dir = <span class=\"number\">0</span>;dir&lt;<span class=\"number\">4</span>;dir++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> x = buf.x + dirx[dir];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> y = buf.y + diry[dir];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>||y&lt;<span class=\"number\">0</span>||x&gt;=n||y&gt;=m) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(mat[x][y]==<span class=\"string\">'*'</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(vis[x][y]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\tvis[x][y] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\tvis_buf.push_back(p&#123;x,y,<span class=\"number\">0</span>&#125;);</span><br><span class=\"line\">\t\t\tans[x][y] += buf.val&gt;&gt;<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tq.push(p&#123;x,y,buf.val&gt;&gt;<span class=\"number\">1</span>&#125;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> i:vis_buf) &#123;</span><br><span class=\"line\">\t\tvis[i.x][i.y] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d%lld%lld\"</span>, &amp;n, &amp;m, &amp;a, &amp;b);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, mat[i]);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span> (mat[i][j] == <span class=\"string\">'*'</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">int</span> val = mat[i][j] == <span class=\"string\">'.'</span> ? <span class=\"number\">0</span> : (mat[i][j] - <span class=\"string\">'A'</span> + <span class=\"number\">1</span>) * a;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span>(val==<span class=\"number\">0</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t\t\t\tgao(i,j,val);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> rans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;n;i++) <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j&lt;m;j++) <span class=\"keyword\">if</span>(ans[i][j]&gt;b) rans++;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>, rans);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"I-Noise-Level\"><a href=\"#I-Noise-Level\" class=\"headerlink\" title=\"I. Noise Level\"></a>I. Noise Level</h2><p><a href=\"http://codeforces.com/problemset/problem/847/I\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>","more":"<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>The Berland’s capital has the form of a rectangle with sizes $n × m$ quarters. All quarters are divided into three types:</p>\n<ul>\n<li>regular (labeled with the character ‘.’) — such quarters do not produce the noise but are not obstacles to the propagation of the noise;</li>\n<li>sources of noise (labeled with an uppercase Latin letter from ‘$A$’ to ‘$Z$’) — such quarters are noise sources and are not obstacles to the propagation of the noise;</li>\n<li>heavily built-up (labeled with the character ‘$*$’) — such quarters are soundproofed, the noise does not penetrate into them and they themselves are obstacles to the propagation of noise.</li>\n</ul>\n<p>A quarter labeled with letter ‘A’ produces $q$ units of noise. A quarter labeled with letter ‘B’ produces $2\\cdot q$ units of noise. And so on, up to a quarter labeled with letter ‘Z’, which produces $26\\cdot q$ units of noise. There can be any number of quarters labeled with each letter in the city.</p>\n<p>When propagating from the source of the noise, the noise level is halved when moving from one quarter to a quarter that shares a side with it (when an odd number is to be halved, it’s rounded down). The noise spreads along the chain. For example, if some quarter is located at a distance $2$ from the noise source, then the value of noise which will reach the quarter is divided by $4$. So the noise level that comes from the source to the quarter is determined solely by the length of the shortest path between them. Heavily built-up quarters are obstacles, the noise does not penetrate into them.</p>\n<p><img src=\"http://codeforces.com/predownloaded/5a/7c/5a7cae99652db48cf802c68f3c82351b4084d138.png\" alt=\"\"></p>\n<p><center><font size=\"1\">The values in the cells of the table on the right show the total noise level in the respective quarters for q = 100, the first term in each sum is the noise from the quarter ‘A’, the second — the noise from the quarter ‘B’.</font></center><br>The noise level in quarter is defined as the sum of the noise from all sources. To assess the quality of life of the population of the capital of Berland, it is required to find the number of quarters whose noise level exceeds the allowed level $p$.</p>\n<h3 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h3><p>The first line contains four integers $n, m, q$ and $p$ ($1 ≤ n, m ≤ 250, 1 ≤ q, p ≤ 10^6$) — the sizes of Berland’s capital, the number of noise units that a quarter ‘$A$’ produces, and the allowable noise level.</p>\n<p>Each of the following $n$ lines contains m characters — the description of the capital quarters, in the format that was described in the statement above. It is possible that in the Berland’s capital there are no quarters of any type.</p>\n<h3 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h3><p>Print the number of quarters, in which the noise level exceeds the allowed level $p$.</p>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"input1\"><a href=\"#input1\" class=\"headerlink\" title=\"input1\"></a>input1</h4><p>3 3 100 140</p>\n<p>…</p>\n<p>A*.</p>\n<p>.B.</p>\n<h4 id=\"output1\"><a href=\"#output1\" class=\"headerlink\" title=\"output1\"></a>output1</h4><p>3</p>\n<h4 id=\"input2\"><a href=\"#input2\" class=\"headerlink\" title=\"input2\"></a>input2</h4><p>3 3 2 8</p>\n<p>B*.</p>\n<p>BB*</p>\n<p>BBB</p>\n<h4 id=\"output2\"><a href=\"#output2\" class=\"headerlink\" title=\"output2\"></a>output2</h4><p>4</p>\n<h4 id=\"input3\"><a href=\"#input3\" class=\"headerlink\" title=\"input3\"></a>input3</h4><p>3 4 5 4</p>\n<p>..*B</p>\n<p>..**</p>\n<p>D…</p>\n<h4 id=\"output3\"><a href=\"#output3\" class=\"headerlink\" title=\"output3\"></a>output3</h4><p>7</p>\n<h3 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h3><p>The illustration to the first example is in the main part of the statement.</p>\n<h3 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>zuhiul家里有很多妹子，但是有一天，妹子们对他都很不满，所以妹子们都在呼叫他，如你所见，妹子在一些点中，并且每个妹子的音量都是他的倍数，其中 A 表示一倍，B表示两倍，最厉害的妹子甚至可以喊出他 26 倍音量（也即 Z ），但是好处是，每个妹子的音量都会随着哈密顿距离指数级减半。zuhiul的耳朵有个承受上线，如果太多杂音，他会受不了。现在问，有多少个位置的音量是zuhiul可接受的。注意，他不能和妹子一个位置。也不能在*上。</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>一个显然的做法是，我们可以直接把每个有音量的地方传播下去，就可以得到一个比较完美的图。然后把音量叠加后枚举每个位置，判断当前音量是否超过阈值即可。</p>\n<p>可以发现的是，因为每次音量都是倍减的，所以可以得到，最多倍减log次，所以对于一个音量来说，最大的传播范围是O($log(p_{max})<em>log(p_{max})$) ，所以复杂度是O($n</em>m<em>log(p_{max})</em>log(p_{max})$)</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">300</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n, m;</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a, b;</span><br><span class=\"line\"><span class=\"keyword\">char</span> mat[maxm][maxm];</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ans[maxm][maxm];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">p</span> &#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> x,y,val;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">int</span> dirx[] = &#123;<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">-1</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">int</span> diry[] = &#123;<span class=\"number\">1</span>,<span class=\"number\">-1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">bool</span> vis[maxm][maxm];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;p&gt; vis_buf;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">gao</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b, <span class=\"keyword\">int</span> val)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">queue</span>&lt;p&gt; q;</span><br><span class=\"line\">\tvis_buf.resize(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tq.push(p&#123;a,b,val&#125;);</span><br><span class=\"line\">\tvis_buf.push_back(p&#123;a,b,val&#125;);</span><br><span class=\"line\">\tvis[a][b] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\tans[a][b] += val;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(!q.empty()) &#123;</span><br><span class=\"line\">\t\tp buf = q.front();</span><br><span class=\"line\">\t\tq.pop();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(buf.val==<span class=\"number\">0</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> dir = <span class=\"number\">0</span>;dir&lt;<span class=\"number\">4</span>;dir++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> x = buf.x + dirx[dir];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> y = buf.y + diry[dir];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>||y&lt;<span class=\"number\">0</span>||x&gt;=n||y&gt;=m) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(mat[x][y]==<span class=\"string\">'*'</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(vis[x][y]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\tvis[x][y] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\tvis_buf.push_back(p&#123;x,y,<span class=\"number\">0</span>&#125;);</span><br><span class=\"line\">\t\t\tans[x][y] += buf.val&gt;&gt;<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tq.push(p&#123;x,y,buf.val&gt;&gt;<span class=\"number\">1</span>&#125;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> i:vis_buf) &#123;</span><br><span class=\"line\">\t\tvis[i.x][i.y] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d%lld%lld\"</span>, &amp;n, &amp;m, &amp;a, &amp;b);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, mat[i]);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span> (mat[i][j] == <span class=\"string\">'*'</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">int</span> val = mat[i][j] == <span class=\"string\">'.'</span> ? <span class=\"number\">0</span> : (mat[i][j] - <span class=\"string\">'A'</span> + <span class=\"number\">1</span>) * a;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span>(val==<span class=\"number\">0</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t\t\t\tgao(i,j,val);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> rans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;n;i++) <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j&lt;m;j++) <span class=\"keyword\">if</span>(ans[i][j]&gt;b) rans++;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>, rans);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Codeforces Round 552","date":"2019-04-16T16:00:00.000Z","author":"zuhiul","_content":"\n## F. Shovels Shop\n\n[开启传送门](http://codeforces.com/contest/1154/problem/F)\n\n<!-- more -->\n\n### 题目描述\n\nThere are $n$ shovels in the nearby shop. The $i$-th shovel costs $a_i$ bourles.\n\nMisha has to buy **exactly $k$** shovels. Each shovel can be bought **no more than once**.\n\nMisha can buy shovels by several purchases. During one purchase he can choose any subset of remaining (non-bought) shovels and buy this subset.\n\nThere are also $m$ special offers in the shop. The $j$-th of them is given as a pair $(x_j,y_j)$, and it means that if Misha buys **exactly** $x_j$ shovels **during one purchase** then $y_j$ **most cheapest** of them are for free (i.e. he will not pay for $y_j$ most cheapest shovels during the current purchase).\n\nMisha can use any offer any (possibly, zero) number of times, but he cannot use **more than one** offer during **one purchase** (but he can buy shovels without using any offers).\n\nYour task is to calculate the minimum cost of buying $k$ shovels, if Misha buys them optimally.\n### Input\n\nThe first line of the input contains three integers $n,m$ and $k$ ($1\\leq n,m\\leq 2\\cdot 10^5,1\\leq k\\leq min(n,2000)$) - the number of shovels in the shop, the number of special offers and the number of shovels Misha has to buy, correspondingly.\n\nThe second line of the input contains $n$ integers $a_1,a_2,\\dots,a_n$ ($1\\leq a_1\\leq 2\\cdot 10^5$), where $a_i$ is the cost of the $i$-th shovel.\n\nThe next $m$ lines contain special offers. The $j$-th of them is given as a pair of integers ($x_i,y_i$) ($1\\leq y_i\\leq x_i\\leq n$) and means that if Misha buys exactly $x_i$ shovels during some purchase, then he can take $y_i$ most cheapest of them for free.\n\n### Output\n\nPrint one integer $-$ the minimum cost of buying $k$ shovels if Misha buys them optimally.\n\n### Examples\n\n#### inpus1\n\n7 4 5\n\n2 5 4 2 6 3 1\n\n2 1\n\n6 5\n\n2 1\n\n3 1\n\n#### output1\n\n7\n\n#### input2\n\n9 4 8\n\n6 8 5 1 8 1 1 2 1\n\n9 2\n\n8 4\n\n5 3\n\n9 7\n\n#### output2\n\n17\n\n#### input3\n\n5 1 4\n\n2 5 7 4 6\n\n5 4\n\n#### output3\n\n17\n\n### Note\n\nIn the first example Misha can buy shovels on positions 1 and 4 (both with costs 2) during the first purchase and get one of them for free using the first or the third special offer. And then he can buy shovels on positions 3 and 6 (with costs 4 and 3) during the second purchase and get the second one for free using the first or the third special offer. Then he can buy the shovel on a position 7 with cost 1. So the total cost is 4+2+1=7.\n\nIn the second example Misha can buy shovels on positions 1, 2, 3, 4 and 8 (costs are 6, 8, 5, 1 and 2) and get three cheapest (with costs 5, 1 and 2) for free. And then he can buy shovels on positions 6, 7 and 9 (all with costs 1) without using any special offers. So the total cost is 6+8+1+1+1=17.\n\nIn the third example Misha can buy four cheapest shovels without using any special offers and get the total cost 17.\n\n### 题意\n\nzuhiul 都20了，还没有对象，然后家里人给安排了n个菇凉和他相亲，他需要挑出k个来相亲。相亲当然是男方请客，和每个妹子相亲的成本是不一样的，每个妹子都有一个固定成本，为了促进zuhiul相亲，家里人说，如果一次邀约了$x_i$个菇凉，家里就给报销这次相亲的所有菇凉中，成本最低的$y_i$个菇凉的花费，现在zuhiul想花最少的钱相完所有的亲，他最少要花多少钱呢？\n\n### 分析\n\n首先可以确定的是，我们一定找n个中最便宜的k个来相亲，因为如果不是这k个，我们一定可以合理的交换，得到一个不劣的解。\n\n然后排序，干掉贵的那一部分。\n\n那么如果不考虑报销的话，成本是固定的，所以剩下的问题就是怎么得到尽可能多的报销。\n\n然后，显然是一个$n^2$的dp了。\n\n我们可以预处理出，如果一次约j个女孩的话，可以省掉多少个女孩的费用，设为sub[j]\n\n假设每个女孩的费用为values[i]\n\n考虑转移，设dp[i]表示邀约前n个妹子的最小花费，那么可以得到$$dp[i] = \\min_{j=1}^{i} (dp[i-j] + \\sum_{k=i-j+sub[j]+1}^{i} values[k])$$\n\n然后对于后面的求和，可以搞一个前缀和来维护，复杂度$O(n^2)$\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxk = 2005;\nconst int maxm = 2e5+10;\nint sub[maxk];\nint n,m,k;\nint values[maxm];\nlong long sum[maxm];\nint ans[maxk];\nlong long cost[maxk];\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(int i = 1;i<=n;i++) scanf(\"%d\",values+i);\n\tsort(values+1,values+n+1);\n\tfor(int i = 1;i<=n;i++) sum[i] = sum[i-1]+values[i];\n\twhile(m--) {/*{{{*/\n\t\tint a,b;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tif(a>k) continue;\n\t\tsub[a] = max(sub[a],b);\n\t}/*}}}*/\n\tfor(int i = 1;i<=k;i++) sub[i] = max(sub[i],sub[i-1]);\n\tmemset(cost,0x3f,sizeof(cost));\n\tcost[0] = 0;\n\tfor(int i = 1;i<=k;i++){\n\t\tcost[i] = sum[i];\n\t\tfor(int j = 1;j<=i;j++){\n\t\t\tcost[i] = min(cost[i],cost[i-j]+sum[i]-sum[i-j+sub[j]]);\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",cost[k]);\n\treturn 0;\n}\n```\n\n\n## G. Minimum Possible LCM\n\n[开启传送门](http://codeforces.com/contest/1154/problem/G)\n\n### 题目描述\n\nYou are given an array $a$ consisting of $n$ integers $a_1,a_2,\\dots,a_n$.\n\nYour problem is to find such pair of indices $i,j (1\\leq i<j\\leq n)$ that $lcm(a_i,a_j)$ is minimum possible.\n\n$lcm(x,y)$ is the least common multiple of $x$ and $y$ (minimum positive number such that both $x$ and $y$ are divisors of this number).\n\n###Input\n\nThe first line of the input contains one integer $n$ ($2\\leq n\\leq10^6$) — the number of elements in $a$.\n\nThe second line of the input contains $n$ integers $a_1,a_2,\\dots,a_n$ ($1\\leq a_i\\leq 10^7$), where $a_i$ is the $i$-th element of $a$.\n\n### Output\n\nPrint two integers $i$ and $j$ ($1\\leq i<j\\leq n$) such that the value of $lcm(a_i,a_j)$ is minimum among all valid pairs $i,j$. If there are multiple answers, you can print any.\n\n### Examples\n\n#### inpus1\n\n5\n\n2 4 8 3 6\n\n#### output1\n\n1 2\n\n#### input2\n\n5\n\n5 2 11 3 7\n\n#### output2\n\n2 4\n\n#### input3\n\n6\n\n2 5 10 1 10 2 \n\n#### output3\n\n1 4\n\n### 题意\n\nzuhiul有很多妹子，今天他想找两个妹子出去吃饭，每个妹子都有一个权值，他今天要花的钱等于这两个妹子权值的lcm，他想花尽可能少的钱，他该约哪两个妹子呢？\n\n### 分析\n\n我们考虑一下那种情况可以构成解。\n\n首先对于重复的数据，我们可以干掉，因为相同值的lcm等于本身，所以我们可以把相同的权值干掉，然后剩下的数据都是不同的。\n\n然后我们考虑权值都不相同的时候怎么构成解。\n\n首先，这两个数肯定有一个gcd，哪怕gcd = 1，然后我们考虑一下，这$n*(n-1)>>1$这么多对数中，哪些对可以构成解，一个显而易见的想法就是，我们可以枚举gcd。\n\n然后我们枚举这个gcd的所有倍数，这样能不重不漏的枚举出所有对数，然后我们考虑怎么减少枚举量。假设当前的$gcd=x$,因为前一步保证了没有相同的数据，所以我们只要找到最小的$i,j$使得$i\\%x==0\\&\\&j\\%x==0$，然后就用这两个数更新一下答案就行了。\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxm = 1e7+10;\nint n;\nint app[maxm];\nstruct p{\n\tlong long ans;\n\tint ind1,ind2;\n\tbool operator<(const p a) const {\n\t\treturn ans<a.ans;\n\t}\n};\nint main(){\n\tscanf(\"%d\",&n);\n\tp ans = {1000000000000000000ll,-1,-1};\n\tfor(int i = 1,buf;i<=n;i++){\n\t\tscanf(\"%d\",&buf);\n\t\tif(app[buf]) ans = min(ans,{buf,app[buf],i});\n\t\tapp[buf] = i;\n\t}\n\tfor(int i = 1;i<maxm;i++){\n\t\tint buf[3] = {0};\n\t\tfor(int j = i;j<maxm;j+=i){\n\t\t\tif(app[j]){\n\t\t\t\tbuf[++buf[0]] = j;\n\t\t\t\tif(buf[0]==2){\n\t\t\t\t\tans = min(ans,{1ll*buf[1]*buf[2]/i,app[buf[1]],app[buf[2]]});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(ans.ind1>ans.ind2) swap(ans.ind1,ans.ind2);\n\tprintf(\"%d %d\\n\",ans.ind1,ans.ind2);\n\treturn 0;\n}\n```\n","source":"_posts/CF/Codeforces_Round_552.md","raw":"---\ntitle: \tCodeforces Round 552\ndate:\t\t2019-04-17\nauthor:\t\"zuhiul\" \ntags:\n  - CF\n---\n\n## F. Shovels Shop\n\n[开启传送门](http://codeforces.com/contest/1154/problem/F)\n\n<!-- more -->\n\n### 题目描述\n\nThere are $n$ shovels in the nearby shop. The $i$-th shovel costs $a_i$ bourles.\n\nMisha has to buy **exactly $k$** shovels. Each shovel can be bought **no more than once**.\n\nMisha can buy shovels by several purchases. During one purchase he can choose any subset of remaining (non-bought) shovels and buy this subset.\n\nThere are also $m$ special offers in the shop. The $j$-th of them is given as a pair $(x_j,y_j)$, and it means that if Misha buys **exactly** $x_j$ shovels **during one purchase** then $y_j$ **most cheapest** of them are for free (i.e. he will not pay for $y_j$ most cheapest shovels during the current purchase).\n\nMisha can use any offer any (possibly, zero) number of times, but he cannot use **more than one** offer during **one purchase** (but he can buy shovels without using any offers).\n\nYour task is to calculate the minimum cost of buying $k$ shovels, if Misha buys them optimally.\n### Input\n\nThe first line of the input contains three integers $n,m$ and $k$ ($1\\leq n,m\\leq 2\\cdot 10^5,1\\leq k\\leq min(n,2000)$) - the number of shovels in the shop, the number of special offers and the number of shovels Misha has to buy, correspondingly.\n\nThe second line of the input contains $n$ integers $a_1,a_2,\\dots,a_n$ ($1\\leq a_1\\leq 2\\cdot 10^5$), where $a_i$ is the cost of the $i$-th shovel.\n\nThe next $m$ lines contain special offers. The $j$-th of them is given as a pair of integers ($x_i,y_i$) ($1\\leq y_i\\leq x_i\\leq n$) and means that if Misha buys exactly $x_i$ shovels during some purchase, then he can take $y_i$ most cheapest of them for free.\n\n### Output\n\nPrint one integer $-$ the minimum cost of buying $k$ shovels if Misha buys them optimally.\n\n### Examples\n\n#### inpus1\n\n7 4 5\n\n2 5 4 2 6 3 1\n\n2 1\n\n6 5\n\n2 1\n\n3 1\n\n#### output1\n\n7\n\n#### input2\n\n9 4 8\n\n6 8 5 1 8 1 1 2 1\n\n9 2\n\n8 4\n\n5 3\n\n9 7\n\n#### output2\n\n17\n\n#### input3\n\n5 1 4\n\n2 5 7 4 6\n\n5 4\n\n#### output3\n\n17\n\n### Note\n\nIn the first example Misha can buy shovels on positions 1 and 4 (both with costs 2) during the first purchase and get one of them for free using the first or the third special offer. And then he can buy shovels on positions 3 and 6 (with costs 4 and 3) during the second purchase and get the second one for free using the first or the third special offer. Then he can buy the shovel on a position 7 with cost 1. So the total cost is 4+2+1=7.\n\nIn the second example Misha can buy shovels on positions 1, 2, 3, 4 and 8 (costs are 6, 8, 5, 1 and 2) and get three cheapest (with costs 5, 1 and 2) for free. And then he can buy shovels on positions 6, 7 and 9 (all with costs 1) without using any special offers. So the total cost is 6+8+1+1+1=17.\n\nIn the third example Misha can buy four cheapest shovels without using any special offers and get the total cost 17.\n\n### 题意\n\nzuhiul 都20了，还没有对象，然后家里人给安排了n个菇凉和他相亲，他需要挑出k个来相亲。相亲当然是男方请客，和每个妹子相亲的成本是不一样的，每个妹子都有一个固定成本，为了促进zuhiul相亲，家里人说，如果一次邀约了$x_i$个菇凉，家里就给报销这次相亲的所有菇凉中，成本最低的$y_i$个菇凉的花费，现在zuhiul想花最少的钱相完所有的亲，他最少要花多少钱呢？\n\n### 分析\n\n首先可以确定的是，我们一定找n个中最便宜的k个来相亲，因为如果不是这k个，我们一定可以合理的交换，得到一个不劣的解。\n\n然后排序，干掉贵的那一部分。\n\n那么如果不考虑报销的话，成本是固定的，所以剩下的问题就是怎么得到尽可能多的报销。\n\n然后，显然是一个$n^2$的dp了。\n\n我们可以预处理出，如果一次约j个女孩的话，可以省掉多少个女孩的费用，设为sub[j]\n\n假设每个女孩的费用为values[i]\n\n考虑转移，设dp[i]表示邀约前n个妹子的最小花费，那么可以得到$$dp[i] = \\min_{j=1}^{i} (dp[i-j] + \\sum_{k=i-j+sub[j]+1}^{i} values[k])$$\n\n然后对于后面的求和，可以搞一个前缀和来维护，复杂度$O(n^2)$\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxk = 2005;\nconst int maxm = 2e5+10;\nint sub[maxk];\nint n,m,k;\nint values[maxm];\nlong long sum[maxm];\nint ans[maxk];\nlong long cost[maxk];\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(int i = 1;i<=n;i++) scanf(\"%d\",values+i);\n\tsort(values+1,values+n+1);\n\tfor(int i = 1;i<=n;i++) sum[i] = sum[i-1]+values[i];\n\twhile(m--) {/*{{{*/\n\t\tint a,b;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tif(a>k) continue;\n\t\tsub[a] = max(sub[a],b);\n\t}/*}}}*/\n\tfor(int i = 1;i<=k;i++) sub[i] = max(sub[i],sub[i-1]);\n\tmemset(cost,0x3f,sizeof(cost));\n\tcost[0] = 0;\n\tfor(int i = 1;i<=k;i++){\n\t\tcost[i] = sum[i];\n\t\tfor(int j = 1;j<=i;j++){\n\t\t\tcost[i] = min(cost[i],cost[i-j]+sum[i]-sum[i-j+sub[j]]);\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",cost[k]);\n\treturn 0;\n}\n```\n\n\n## G. Minimum Possible LCM\n\n[开启传送门](http://codeforces.com/contest/1154/problem/G)\n\n### 题目描述\n\nYou are given an array $a$ consisting of $n$ integers $a_1,a_2,\\dots,a_n$.\n\nYour problem is to find such pair of indices $i,j (1\\leq i<j\\leq n)$ that $lcm(a_i,a_j)$ is minimum possible.\n\n$lcm(x,y)$ is the least common multiple of $x$ and $y$ (minimum positive number such that both $x$ and $y$ are divisors of this number).\n\n###Input\n\nThe first line of the input contains one integer $n$ ($2\\leq n\\leq10^6$) — the number of elements in $a$.\n\nThe second line of the input contains $n$ integers $a_1,a_2,\\dots,a_n$ ($1\\leq a_i\\leq 10^7$), where $a_i$ is the $i$-th element of $a$.\n\n### Output\n\nPrint two integers $i$ and $j$ ($1\\leq i<j\\leq n$) such that the value of $lcm(a_i,a_j)$ is minimum among all valid pairs $i,j$. If there are multiple answers, you can print any.\n\n### Examples\n\n#### inpus1\n\n5\n\n2 4 8 3 6\n\n#### output1\n\n1 2\n\n#### input2\n\n5\n\n5 2 11 3 7\n\n#### output2\n\n2 4\n\n#### input3\n\n6\n\n2 5 10 1 10 2 \n\n#### output3\n\n1 4\n\n### 题意\n\nzuhiul有很多妹子，今天他想找两个妹子出去吃饭，每个妹子都有一个权值，他今天要花的钱等于这两个妹子权值的lcm，他想花尽可能少的钱，他该约哪两个妹子呢？\n\n### 分析\n\n我们考虑一下那种情况可以构成解。\n\n首先对于重复的数据，我们可以干掉，因为相同值的lcm等于本身，所以我们可以把相同的权值干掉，然后剩下的数据都是不同的。\n\n然后我们考虑权值都不相同的时候怎么构成解。\n\n首先，这两个数肯定有一个gcd，哪怕gcd = 1，然后我们考虑一下，这$n*(n-1)>>1$这么多对数中，哪些对可以构成解，一个显而易见的想法就是，我们可以枚举gcd。\n\n然后我们枚举这个gcd的所有倍数，这样能不重不漏的枚举出所有对数，然后我们考虑怎么减少枚举量。假设当前的$gcd=x$,因为前一步保证了没有相同的数据，所以我们只要找到最小的$i,j$使得$i\\%x==0\\&\\&j\\%x==0$，然后就用这两个数更新一下答案就行了。\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxm = 1e7+10;\nint n;\nint app[maxm];\nstruct p{\n\tlong long ans;\n\tint ind1,ind2;\n\tbool operator<(const p a) const {\n\t\treturn ans<a.ans;\n\t}\n};\nint main(){\n\tscanf(\"%d\",&n);\n\tp ans = {1000000000000000000ll,-1,-1};\n\tfor(int i = 1,buf;i<=n;i++){\n\t\tscanf(\"%d\",&buf);\n\t\tif(app[buf]) ans = min(ans,{buf,app[buf],i});\n\t\tapp[buf] = i;\n\t}\n\tfor(int i = 1;i<maxm;i++){\n\t\tint buf[3] = {0};\n\t\tfor(int j = i;j<maxm;j+=i){\n\t\t\tif(app[j]){\n\t\t\t\tbuf[++buf[0]] = j;\n\t\t\t\tif(buf[0]==2){\n\t\t\t\t\tans = min(ans,{1ll*buf[1]*buf[2]/i,app[buf[1]],app[buf[2]]});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(ans.ind1>ans.ind2) swap(ans.ind1,ans.ind2);\n\tprintf(\"%d %d\\n\",ans.ind1,ans.ind2);\n\treturn 0;\n}\n```\n","slug":"CF/Codeforces_Round_552","published":1,"updated":"2019-07-22T09:58:56.440Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1gm0013a6135opqhqvg","content":"<h2 id=\"F-Shovels-Shop\"><a href=\"#F-Shovels-Shop\" class=\"headerlink\" title=\"F. Shovels Shop\"></a>F. Shovels Shop</h2><p><a href=\"http://codeforces.com/contest/1154/problem/F\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<a id=\"more\"></a>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>There are $n$ shovels in the nearby shop. The $i$-th shovel costs $a_i$ bourles.</p>\n<p>Misha has to buy <strong>exactly $k$</strong> shovels. Each shovel can be bought <strong>no more than once</strong>.</p>\n<p>Misha can buy shovels by several purchases. During one purchase he can choose any subset of remaining (non-bought) shovels and buy this subset.</p>\n<p>There are also $m$ special offers in the shop. The $j$-th of them is given as a pair $(x_j,y_j)$, and it means that if Misha buys <strong>exactly</strong> $x_j$ shovels <strong>during one purchase</strong> then $y_j$ <strong>most cheapest</strong> of them are for free (i.e. he will not pay for $y_j$ most cheapest shovels during the current purchase).</p>\n<p>Misha can use any offer any (possibly, zero) number of times, but he cannot use <strong>more than one</strong> offer during <strong>one purchase</strong> (but he can buy shovels without using any offers).</p>\n<p>Your task is to calculate the minimum cost of buying $k$ shovels, if Misha buys them optimally.</p>\n<h3 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h3><p>The first line of the input contains three integers $n,m$ and $k$ ($1\\leq n,m\\leq 2\\cdot 10^5,1\\leq k\\leq min(n,2000)$) - the number of shovels in the shop, the number of special offers and the number of shovels Misha has to buy, correspondingly.</p>\n<p>The second line of the input contains $n$ integers $a_1,a_2,\\dots,a_n$ ($1\\leq a_1\\leq 2\\cdot 10^5$), where $a_i$ is the cost of the $i$-th shovel.</p>\n<p>The next $m$ lines contain special offers. The $j$-th of them is given as a pair of integers ($x_i,y_i$) ($1\\leq y_i\\leq x_i\\leq n$) and means that if Misha buys exactly $x_i$ shovels during some purchase, then he can take $y_i$ most cheapest of them for free.</p>\n<h3 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h3><p>Print one integer $-$ the minimum cost of buying $k$ shovels if Misha buys them optimally.</p>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"inpus1\"><a href=\"#inpus1\" class=\"headerlink\" title=\"inpus1\"></a>inpus1</h4><p>7 4 5</p>\n<p>2 5 4 2 6 3 1</p>\n<p>2 1</p>\n<p>6 5</p>\n<p>2 1</p>\n<p>3 1</p>\n<h4 id=\"output1\"><a href=\"#output1\" class=\"headerlink\" title=\"output1\"></a>output1</h4><p>7</p>\n<h4 id=\"input2\"><a href=\"#input2\" class=\"headerlink\" title=\"input2\"></a>input2</h4><p>9 4 8</p>\n<p>6 8 5 1 8 1 1 2 1</p>\n<p>9 2</p>\n<p>8 4</p>\n<p>5 3</p>\n<p>9 7</p>\n<h4 id=\"output2\"><a href=\"#output2\" class=\"headerlink\" title=\"output2\"></a>output2</h4><p>17</p>\n<h4 id=\"input3\"><a href=\"#input3\" class=\"headerlink\" title=\"input3\"></a>input3</h4><p>5 1 4</p>\n<p>2 5 7 4 6</p>\n<p>5 4</p>\n<h4 id=\"output3\"><a href=\"#output3\" class=\"headerlink\" title=\"output3\"></a>output3</h4><p>17</p>\n<h3 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h3><p>In the first example Misha can buy shovels on positions 1 and 4 (both with costs 2) during the first purchase and get one of them for free using the first or the third special offer. And then he can buy shovels on positions 3 and 6 (with costs 4 and 3) during the second purchase and get the second one for free using the first or the third special offer. Then he can buy the shovel on a position 7 with cost 1. So the total cost is 4+2+1=7.</p>\n<p>In the second example Misha can buy shovels on positions 1, 2, 3, 4 and 8 (costs are 6, 8, 5, 1 and 2) and get three cheapest (with costs 5, 1 and 2) for free. And then he can buy shovels on positions 6, 7 and 9 (all with costs 1) without using any special offers. So the total cost is 6+8+1+1+1=17.</p>\n<p>In the third example Misha can buy four cheapest shovels without using any special offers and get the total cost 17.</p>\n<h3 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>zuhiul 都20了，还没有对象，然后家里人给安排了n个菇凉和他相亲，他需要挑出k个来相亲。相亲当然是男方请客，和每个妹子相亲的成本是不一样的，每个妹子都有一个固定成本，为了促进zuhiul相亲，家里人说，如果一次邀约了$x_i$个菇凉，家里就给报销这次相亲的所有菇凉中，成本最低的$y_i$个菇凉的花费，现在zuhiul想花最少的钱相完所有的亲，他最少要花多少钱呢？</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>首先可以确定的是，我们一定找n个中最便宜的k个来相亲，因为如果不是这k个，我们一定可以合理的交换，得到一个不劣的解。</p>\n<p>然后排序，干掉贵的那一部分。</p>\n<p>那么如果不考虑报销的话，成本是固定的，所以剩下的问题就是怎么得到尽可能多的报销。</p>\n<p>然后，显然是一个$n^2$的dp了。</p>\n<p>我们可以预处理出，如果一次约j个女孩的话，可以省掉多少个女孩的费用，设为sub[j]</p>\n<p>假设每个女孩的费用为values[i]</p>\n<p>考虑转移，设dp[i]表示邀约前n个妹子的最小花费，那么可以得到$$dp[i] = \\min_{j=1}^{i} (dp[i-j] + \\sum_{k=i-j+sub[j]+1}^{i} values[k])$$</p>\n<p>然后对于后面的求和，可以搞一个前缀和来维护，复杂度$O(n^2)$</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxk = <span class=\"number\">2005</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">2e5</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> sub[maxk];</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m,k;</span><br><span class=\"line\"><span class=\"keyword\">int</span> values[maxm];</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> sum[maxm];</span><br><span class=\"line\"><span class=\"keyword\">int</span> ans[maxk];</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> cost[maxk];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d%d\"</span>,&amp;n,&amp;m,&amp;k);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=n;i++) <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,values+i);</span><br><span class=\"line\">\tsort(values+<span class=\"number\">1</span>,values+n+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=n;i++) sum[i] = sum[i<span class=\"number\">-1</span>]+values[i];</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(m--) &#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> a,b;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;a,&amp;b);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(a&gt;k) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\tsub[a] = max(sub[a],b);</span><br><span class=\"line\">\t&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=k;i++) sub[i] = max(sub[i],sub[i<span class=\"number\">-1</span>]);</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(cost,<span class=\"number\">0x3f</span>,<span class=\"keyword\">sizeof</span>(cost));</span><br><span class=\"line\">\tcost[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=k;i++)&#123;</span><br><span class=\"line\">\t\tcost[i] = sum[i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>;j&lt;=i;j++)&#123;</span><br><span class=\"line\">\t\t\tcost[i] = min(cost[i],cost[i-j]+sum[i]-sum[i-j+sub[j]]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,cost[k]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"G-Minimum-Possible-LCM\"><a href=\"#G-Minimum-Possible-LCM\" class=\"headerlink\" title=\"G. Minimum Possible LCM\"></a>G. Minimum Possible LCM</h2><p><a href=\"http://codeforces.com/contest/1154/problem/G\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述-1\"><a href=\"#题目描述-1\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>You are given an array $a$ consisting of $n$ integers $a_1,a_2,\\dots,a_n$.</p>\n<p>Your problem is to find such pair of indices $i,j (1\\leq i&lt;j\\leq n)$ that $lcm(a_i,a_j)$ is minimum possible.</p>\n<p>$lcm(x,y)$ is the least common multiple of $x$ and $y$ (minimum positive number such that both $x$ and $y$ are divisors of this number).</p>\n<p>###Input</p>\n<p>The first line of the input contains one integer $n$ ($2\\leq n\\leq10^6$) — the number of elements in $a$.</p>\n<p>The second line of the input contains $n$ integers $a_1,a_2,\\dots,a_n$ ($1\\leq a_i\\leq 10^7$), where $a_i$ is the $i$-th element of $a$.</p>\n<h3 id=\"Output-1\"><a href=\"#Output-1\" class=\"headerlink\" title=\"Output\"></a>Output</h3><p>Print two integers $i$ and $j$ ($1\\leq i&lt;j\\leq n$) such that the value of $lcm(a_i,a_j)$ is minimum among all valid pairs $i,j$. If there are multiple answers, you can print any.</p>\n<h3 id=\"Examples-1\"><a href=\"#Examples-1\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"inpus1-1\"><a href=\"#inpus1-1\" class=\"headerlink\" title=\"inpus1\"></a>inpus1</h4><p>5</p>\n<p>2 4 8 3 6</p>\n<h4 id=\"output1-1\"><a href=\"#output1-1\" class=\"headerlink\" title=\"output1\"></a>output1</h4><p>1 2</p>\n<h4 id=\"input2-1\"><a href=\"#input2-1\" class=\"headerlink\" title=\"input2\"></a>input2</h4><p>5</p>\n<p>5 2 11 3 7</p>\n<h4 id=\"output2-1\"><a href=\"#output2-1\" class=\"headerlink\" title=\"output2\"></a>output2</h4><p>2 4</p>\n<h4 id=\"input3-1\"><a href=\"#input3-1\" class=\"headerlink\" title=\"input3\"></a>input3</h4><p>6</p>\n<p>2 5 10 1 10 2 </p>\n<h4 id=\"output3-1\"><a href=\"#output3-1\" class=\"headerlink\" title=\"output3\"></a>output3</h4><p>1 4</p>\n<h3 id=\"题意-1\"><a href=\"#题意-1\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>zuhiul有很多妹子，今天他想找两个妹子出去吃饭，每个妹子都有一个权值，他今天要花的钱等于这两个妹子权值的lcm，他想花尽可能少的钱，他该约哪两个妹子呢？</p>\n<h3 id=\"分析-1\"><a href=\"#分析-1\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>我们考虑一下那种情况可以构成解。</p>\n<p>首先对于重复的数据，我们可以干掉，因为相同值的lcm等于本身，所以我们可以把相同的权值干掉，然后剩下的数据都是不同的。</p>\n<p>然后我们考虑权值都不相同的时候怎么构成解。</p>\n<p>首先，这两个数肯定有一个gcd，哪怕gcd = 1，然后我们考虑一下，这$n*(n-1)&gt;&gt;1$这么多对数中，哪些对可以构成解，一个显而易见的想法就是，我们可以枚举gcd。</p>\n<p>然后我们枚举这个gcd的所有倍数，这样能不重不漏的枚举出所有对数，然后我们考虑怎么减少枚举量。假设当前的$gcd=x$,因为前一步保证了没有相同的数据，所以我们只要找到最小的$i,j$使得$i\\%x==0\\&amp;\\&amp;j\\%x==0$，然后就用这两个数更新一下答案就行了。</p>\n<h3 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">1e7</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">int</span> app[maxm];</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">p</span>&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ans;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ind1,ind2;</span><br><span class=\"line\">\t<span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span>&lt;(<span class=\"keyword\">const</span> p a) <span class=\"keyword\">const</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> ans&lt;a.ans;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">\tp ans = &#123;<span class=\"number\">1000000000000000000l</span>l,<span class=\"number\">-1</span>,<span class=\"number\">-1</span>&#125;;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>,buf;i&lt;=n;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;buf);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(app[buf]) ans = min(ans,&#123;buf,app[buf],i&#125;);</span><br><span class=\"line\">\t\tapp[buf] = i;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;maxm;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> buf[<span class=\"number\">3</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = i;j&lt;maxm;j+=i)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(app[j])&#123;</span><br><span class=\"line\">\t\t\t\tbuf[++buf[<span class=\"number\">0</span>]] = j;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(buf[<span class=\"number\">0</span>]==<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\tans = min(ans,&#123;<span class=\"number\">1l</span>l*buf[<span class=\"number\">1</span>]*buf[<span class=\"number\">2</span>]/i,app[buf[<span class=\"number\">1</span>]],app[buf[<span class=\"number\">2</span>]]&#125;);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(ans.ind1&gt;ans.ind2) swap(ans.ind1,ans.ind2);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d %d\\n\"</span>,ans.ind1,ans.ind2);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"F-Shovels-Shop\"><a href=\"#F-Shovels-Shop\" class=\"headerlink\" title=\"F. Shovels Shop\"></a>F. Shovels Shop</h2><p><a href=\"http://codeforces.com/contest/1154/problem/F\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>","more":"<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>There are $n$ shovels in the nearby shop. The $i$-th shovel costs $a_i$ bourles.</p>\n<p>Misha has to buy <strong>exactly $k$</strong> shovels. Each shovel can be bought <strong>no more than once</strong>.</p>\n<p>Misha can buy shovels by several purchases. During one purchase he can choose any subset of remaining (non-bought) shovels and buy this subset.</p>\n<p>There are also $m$ special offers in the shop. The $j$-th of them is given as a pair $(x_j,y_j)$, and it means that if Misha buys <strong>exactly</strong> $x_j$ shovels <strong>during one purchase</strong> then $y_j$ <strong>most cheapest</strong> of them are for free (i.e. he will not pay for $y_j$ most cheapest shovels during the current purchase).</p>\n<p>Misha can use any offer any (possibly, zero) number of times, but he cannot use <strong>more than one</strong> offer during <strong>one purchase</strong> (but he can buy shovels without using any offers).</p>\n<p>Your task is to calculate the minimum cost of buying $k$ shovels, if Misha buys them optimally.</p>\n<h3 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h3><p>The first line of the input contains three integers $n,m$ and $k$ ($1\\leq n,m\\leq 2\\cdot 10^5,1\\leq k\\leq min(n,2000)$) - the number of shovels in the shop, the number of special offers and the number of shovels Misha has to buy, correspondingly.</p>\n<p>The second line of the input contains $n$ integers $a_1,a_2,\\dots,a_n$ ($1\\leq a_1\\leq 2\\cdot 10^5$), where $a_i$ is the cost of the $i$-th shovel.</p>\n<p>The next $m$ lines contain special offers. The $j$-th of them is given as a pair of integers ($x_i,y_i$) ($1\\leq y_i\\leq x_i\\leq n$) and means that if Misha buys exactly $x_i$ shovels during some purchase, then he can take $y_i$ most cheapest of them for free.</p>\n<h3 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h3><p>Print one integer $-$ the minimum cost of buying $k$ shovels if Misha buys them optimally.</p>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"inpus1\"><a href=\"#inpus1\" class=\"headerlink\" title=\"inpus1\"></a>inpus1</h4><p>7 4 5</p>\n<p>2 5 4 2 6 3 1</p>\n<p>2 1</p>\n<p>6 5</p>\n<p>2 1</p>\n<p>3 1</p>\n<h4 id=\"output1\"><a href=\"#output1\" class=\"headerlink\" title=\"output1\"></a>output1</h4><p>7</p>\n<h4 id=\"input2\"><a href=\"#input2\" class=\"headerlink\" title=\"input2\"></a>input2</h4><p>9 4 8</p>\n<p>6 8 5 1 8 1 1 2 1</p>\n<p>9 2</p>\n<p>8 4</p>\n<p>5 3</p>\n<p>9 7</p>\n<h4 id=\"output2\"><a href=\"#output2\" class=\"headerlink\" title=\"output2\"></a>output2</h4><p>17</p>\n<h4 id=\"input3\"><a href=\"#input3\" class=\"headerlink\" title=\"input3\"></a>input3</h4><p>5 1 4</p>\n<p>2 5 7 4 6</p>\n<p>5 4</p>\n<h4 id=\"output3\"><a href=\"#output3\" class=\"headerlink\" title=\"output3\"></a>output3</h4><p>17</p>\n<h3 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h3><p>In the first example Misha can buy shovels on positions 1 and 4 (both with costs 2) during the first purchase and get one of them for free using the first or the third special offer. And then he can buy shovels on positions 3 and 6 (with costs 4 and 3) during the second purchase and get the second one for free using the first or the third special offer. Then he can buy the shovel on a position 7 with cost 1. So the total cost is 4+2+1=7.</p>\n<p>In the second example Misha can buy shovels on positions 1, 2, 3, 4 and 8 (costs are 6, 8, 5, 1 and 2) and get three cheapest (with costs 5, 1 and 2) for free. And then he can buy shovels on positions 6, 7 and 9 (all with costs 1) without using any special offers. So the total cost is 6+8+1+1+1=17.</p>\n<p>In the third example Misha can buy four cheapest shovels without using any special offers and get the total cost 17.</p>\n<h3 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>zuhiul 都20了，还没有对象，然后家里人给安排了n个菇凉和他相亲，他需要挑出k个来相亲。相亲当然是男方请客，和每个妹子相亲的成本是不一样的，每个妹子都有一个固定成本，为了促进zuhiul相亲，家里人说，如果一次邀约了$x_i$个菇凉，家里就给报销这次相亲的所有菇凉中，成本最低的$y_i$个菇凉的花费，现在zuhiul想花最少的钱相完所有的亲，他最少要花多少钱呢？</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>首先可以确定的是，我们一定找n个中最便宜的k个来相亲，因为如果不是这k个，我们一定可以合理的交换，得到一个不劣的解。</p>\n<p>然后排序，干掉贵的那一部分。</p>\n<p>那么如果不考虑报销的话，成本是固定的，所以剩下的问题就是怎么得到尽可能多的报销。</p>\n<p>然后，显然是一个$n^2$的dp了。</p>\n<p>我们可以预处理出，如果一次约j个女孩的话，可以省掉多少个女孩的费用，设为sub[j]</p>\n<p>假设每个女孩的费用为values[i]</p>\n<p>考虑转移，设dp[i]表示邀约前n个妹子的最小花费，那么可以得到$$dp[i] = \\min_{j=1}^{i} (dp[i-j] + \\sum_{k=i-j+sub[j]+1}^{i} values[k])$$</p>\n<p>然后对于后面的求和，可以搞一个前缀和来维护，复杂度$O(n^2)$</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxk = <span class=\"number\">2005</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">2e5</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> sub[maxk];</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m,k;</span><br><span class=\"line\"><span class=\"keyword\">int</span> values[maxm];</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> sum[maxm];</span><br><span class=\"line\"><span class=\"keyword\">int</span> ans[maxk];</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> cost[maxk];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d%d\"</span>,&amp;n,&amp;m,&amp;k);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=n;i++) <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,values+i);</span><br><span class=\"line\">\tsort(values+<span class=\"number\">1</span>,values+n+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=n;i++) sum[i] = sum[i<span class=\"number\">-1</span>]+values[i];</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(m--) &#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> a,b;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;a,&amp;b);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(a&gt;k) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\tsub[a] = max(sub[a],b);</span><br><span class=\"line\">\t&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=k;i++) sub[i] = max(sub[i],sub[i<span class=\"number\">-1</span>]);</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(cost,<span class=\"number\">0x3f</span>,<span class=\"keyword\">sizeof</span>(cost));</span><br><span class=\"line\">\tcost[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=k;i++)&#123;</span><br><span class=\"line\">\t\tcost[i] = sum[i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>;j&lt;=i;j++)&#123;</span><br><span class=\"line\">\t\t\tcost[i] = min(cost[i],cost[i-j]+sum[i]-sum[i-j+sub[j]]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,cost[k]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"G-Minimum-Possible-LCM\"><a href=\"#G-Minimum-Possible-LCM\" class=\"headerlink\" title=\"G. Minimum Possible LCM\"></a>G. Minimum Possible LCM</h2><p><a href=\"http://codeforces.com/contest/1154/problem/G\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述-1\"><a href=\"#题目描述-1\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>You are given an array $a$ consisting of $n$ integers $a_1,a_2,\\dots,a_n$.</p>\n<p>Your problem is to find such pair of indices $i,j (1\\leq i&lt;j\\leq n)$ that $lcm(a_i,a_j)$ is minimum possible.</p>\n<p>$lcm(x,y)$ is the least common multiple of $x$ and $y$ (minimum positive number such that both $x$ and $y$ are divisors of this number).</p>\n<p>###Input</p>\n<p>The first line of the input contains one integer $n$ ($2\\leq n\\leq10^6$) — the number of elements in $a$.</p>\n<p>The second line of the input contains $n$ integers $a_1,a_2,\\dots,a_n$ ($1\\leq a_i\\leq 10^7$), where $a_i$ is the $i$-th element of $a$.</p>\n<h3 id=\"Output-1\"><a href=\"#Output-1\" class=\"headerlink\" title=\"Output\"></a>Output</h3><p>Print two integers $i$ and $j$ ($1\\leq i&lt;j\\leq n$) such that the value of $lcm(a_i,a_j)$ is minimum among all valid pairs $i,j$. If there are multiple answers, you can print any.</p>\n<h3 id=\"Examples-1\"><a href=\"#Examples-1\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"inpus1-1\"><a href=\"#inpus1-1\" class=\"headerlink\" title=\"inpus1\"></a>inpus1</h4><p>5</p>\n<p>2 4 8 3 6</p>\n<h4 id=\"output1-1\"><a href=\"#output1-1\" class=\"headerlink\" title=\"output1\"></a>output1</h4><p>1 2</p>\n<h4 id=\"input2-1\"><a href=\"#input2-1\" class=\"headerlink\" title=\"input2\"></a>input2</h4><p>5</p>\n<p>5 2 11 3 7</p>\n<h4 id=\"output2-1\"><a href=\"#output2-1\" class=\"headerlink\" title=\"output2\"></a>output2</h4><p>2 4</p>\n<h4 id=\"input3-1\"><a href=\"#input3-1\" class=\"headerlink\" title=\"input3\"></a>input3</h4><p>6</p>\n<p>2 5 10 1 10 2 </p>\n<h4 id=\"output3-1\"><a href=\"#output3-1\" class=\"headerlink\" title=\"output3\"></a>output3</h4><p>1 4</p>\n<h3 id=\"题意-1\"><a href=\"#题意-1\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>zuhiul有很多妹子，今天他想找两个妹子出去吃饭，每个妹子都有一个权值，他今天要花的钱等于这两个妹子权值的lcm，他想花尽可能少的钱，他该约哪两个妹子呢？</p>\n<h3 id=\"分析-1\"><a href=\"#分析-1\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>我们考虑一下那种情况可以构成解。</p>\n<p>首先对于重复的数据，我们可以干掉，因为相同值的lcm等于本身，所以我们可以把相同的权值干掉，然后剩下的数据都是不同的。</p>\n<p>然后我们考虑权值都不相同的时候怎么构成解。</p>\n<p>首先，这两个数肯定有一个gcd，哪怕gcd = 1，然后我们考虑一下，这$n*(n-1)&gt;&gt;1$这么多对数中，哪些对可以构成解，一个显而易见的想法就是，我们可以枚举gcd。</p>\n<p>然后我们枚举这个gcd的所有倍数，这样能不重不漏的枚举出所有对数，然后我们考虑怎么减少枚举量。假设当前的$gcd=x$,因为前一步保证了没有相同的数据，所以我们只要找到最小的$i,j$使得$i\\%x==0\\&amp;\\&amp;j\\%x==0$，然后就用这两个数更新一下答案就行了。</p>\n<h3 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">1e7</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">int</span> app[maxm];</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">p</span>&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ans;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ind1,ind2;</span><br><span class=\"line\">\t<span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span>&lt;(<span class=\"keyword\">const</span> p a) <span class=\"keyword\">const</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> ans&lt;a.ans;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">\tp ans = &#123;<span class=\"number\">1000000000000000000l</span>l,<span class=\"number\">-1</span>,<span class=\"number\">-1</span>&#125;;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>,buf;i&lt;=n;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;buf);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(app[buf]) ans = min(ans,&#123;buf,app[buf],i&#125;);</span><br><span class=\"line\">\t\tapp[buf] = i;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;maxm;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> buf[<span class=\"number\">3</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = i;j&lt;maxm;j+=i)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(app[j])&#123;</span><br><span class=\"line\">\t\t\t\tbuf[++buf[<span class=\"number\">0</span>]] = j;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(buf[<span class=\"number\">0</span>]==<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\tans = min(ans,&#123;<span class=\"number\">1l</span>l*buf[<span class=\"number\">1</span>]*buf[<span class=\"number\">2</span>]/i,app[buf[<span class=\"number\">1</span>]],app[buf[<span class=\"number\">2</span>]]&#125;);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(ans.ind1&gt;ans.ind2) swap(ans.ind1,ans.ind2);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d %d\\n\"</span>,ans.ind1,ans.ind2);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Codeforces Round 553","date":"2019-04-18T16:00:00.000Z","author":"zuhiul","_content":"\n## F. Sonya and Informatics\n\n[开启传送门](https://codeforces.com/contest/1151/problem/F)\n\n<!-- more -->\n\n### 题目描述\n\nA girl named Sonya is studying in the scientific lyceum of the Kingdom of Kremland. The teacher of computer science (Sonya's favorite subject!) invented a task for her.\n\nGiven an array $a$ of length $n$, **consisting only of the numbers** $0$ **and** $1$, and the number $k$. Exactly $k$ times the following happens:\n\n - Two numbers $i$ and $j$ are chosen equiprobable such that ($1\\leq i<j\\leq n$).\n - The numbers in the $i$ and $j$ positions are swapped.\n\nSonya's task is to find the probability that after all the operations are completed, the $a$ array will be **sorted in non-decreasing order**. She turned to you for help. Help Sonya solve this problem.\n\nIt can be shown that the desired probability is either $0$ or it can be represented as $\\frac{P}{Q}$, where $P$ and $Q$ are coprime integers and $Q\\not\\equiv0(mod\\ 10^9+7)\\textscA$.\n\n### Input\n\nThe first line contains two integers $n$ and $k$ ($2\\leq n\\leq 100,1\\leq k\\leq 10^9$) — the length of the array $a$ and the number of operations.\n\nThe second line contains $n$ integers $a_1,a_2,\\dots,a_n$ ($0\\leq a_i\\leq 1$) — the description of the array $a$.\n\n### Output\n\nIf the desired probability is $0$, print $0$, otherwise print the value $P\\cdot Q^{-1}$ ($mod\\ 10^9+7$), where $P$ and $Q$ are defined above.\n\n### Examples\n\n#### inpus1\n\n3 2\n\n0 1 0\n\n#### output1\n\n333333336\n\n#### input2\n\n5 1\n\n1 1 1 0 0\n\n#### output2\n\n0\n\n#### input3\n\n6 4\n\n1 0 0 1 1 0\n\n#### output3\n\n968493834\n\n### Note\n\nIn the first example, all possible variants of the final array $a$, after applying exactly two operations: $(0,1,0)$, $(0,0,1)$, $(1,0,0)$, $(1,0,0)$, $(0,1,0)$, $(0,0,1)$, $(0,0,1)$, $(1,0,0)$, $(0,1,0)$. Therefore, the answer is $\\frac{3}{9}=\\frac{1}{3}$.\n\nIn the second example, the array will not be sorted in non-decreasing order after one operation, therefore the answer is 0.\n\n### 题意\n\n给你一个长度为n的01序列，每次随机从中选择两个出来，交换一下，一共这样操作k次，问你经过k次交换之后，序列变成不降($00\\dots 0011\\dots 11$)的概率是？\n\n### 分析\n\n首先序列里面的$0$和$1$的数量是固定的，不妨设分别有$len_a$和$len_b$个。\n\n也就是说在交换$k$次之后要保证前$len_a$个为$0$，后$len_b$个为$1$,如下\n$$\\underbrace{00\\dots 00}_{len_a} \\underbrace{11\\dots 11}_{len_b}$$\n\n然后我们分别统计前半段后半段$0$和$1$的数量，分别定义为$a_0,a_1,b_0,b_1$。例如\n$$\\underbrace{\\underbrace{\\overbrace{01010000101110100}^{a_1=7}}_{a_0=10}}_{len_a=17}\\underbrace{\\underbrace{\\overbrace{000101111101010}^{b_1=8}}_{b_0=7}}_{len_b=15}\\tag{3}$$\n\n然后考虑一次交换产生的效果：\n\n- $b_1$增加：$a_1$和$b_0$交换，使得后半段多了一个1，例如\n$$\\underbrace{\\underbrace{\\overbrace{01010000101110000}^{a_1=6}}_{a_0=11}}_{len_a=17}\\underbrace{\\underbrace{\\overbrace{010101111101010}^{b_1=9}}_{b_0=6}}_{len_b=15}\\tag{2}$$\n\n- $b_1$减少：$a_0$和$b_1$交换，使得后半段少了一个1，例如\n$$\\underbrace{\\underbrace{\\overbrace{01010000101110101}^{a_1=8}}_{a_0=9}}_{len_a=17}\\underbrace{\\underbrace{\\overbrace{000101111101000}^{b_1=7}}_{b_0=8}}_{len_b=15}\\tag{1}$$\n\n- 其他情况不影响$0$和$1$的数量。\n\n然后多次操作和一次操作怎么联系起来呢？\n\n看到这个数据量$n = 100$，一次变多次，一个自然的想法就是快速幂啊啊啊啊啊啊啊啊啊啊。\n\n然后就用上面的式子构造转移矩阵，然后快速幂，就能得到有解的方案数，然后除掉总方案数就行了。\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int mod = 1e9+7;\nlong long add(long long a,long long b){return (a+b)%mod;}\nlong long mul(long long a,long long b){return a*b%mod;}\nlong long qpow(long long a,long long b = mod-2){/*{{{*/\n\tlong long ret = 1;\n\twhile(b){\n\t\tif(b&1) ret = mul(ret,a);\n\t\ta = mul(a,a);\n\t\tb>>=1;\n\t}\n\treturn ret;\n}/*}}}*/\nconst int maxm = 105,inv_2 = qpow(2);\nlong long C(long long a){\n\treturn mul(inv_2,mul(a,add(a,mod-1)));\n}\nint n,k,len_a,len_b;\nint num[maxm];\nstruct matrix{\n\tlong long num[maxm][maxm];\n};\nmatrix mul(matrix a,matrix b){/*{{{*/\n\tmatrix c;\n\tmemset(c.num,0,sizeof(c.num));\n\tfor(int i = 0;i<=len_b;i++) for(int j = 0;j<=len_b;j++)\n\t\t\tif(a.num[i][j])\n\t\t\t\tfor(int k = 0;k<=len_b;k++) c.num[i][k] = add(c.num[i][k],mul(a.num[i][j],b.num[j][k]));\n\treturn c;\n}/*}}}*/\nmatrix qpow(matrix a,long long b){\n\tmatrix e;\n\tfor(int i = 0;i<=len_b;i++) for(int j = 0;j<=len_b;j++) e.num[i][j]=(i==j);\n\twhile(b){\n\t\tif(b&1) e = mul(e,a);\n\t\ta = mul(a,a);\n\t\tb>>=1;\n\t}\n\treturn e;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&k);\n\tint all = C(n);\n\tfor(int i = 0;i<n;i++){/*{{{*/\n\t\tscanf(\"%d\",num+i);\n\t\tif(num[i]) len_b++;\n\t\telse len_a++;\n\t}/*}}}*/\n\tmatrix base;\n\tfor(int i = 0;i<=len_b;i++){\n\t\tfor(int j = max(0,i-1);j<=min(len_b,i+1);j++){\n\t\t\tint b1 = j,b0 = len_b - j,a0 = len_a - b0,a1 = len_a - a0;\n\t\t\tif(i==j-1) base.num[i][j] = a0*b1;\n\t\t\telse if(i==j+1) base.num[i][j] = a1*b0;\n\t\t\telse base.num[i][j] = add(all,add(mod - a0*b1,mod - a1*b0));\n\t\t}\n\t}\n\n\tint cnt = 0;\n\tfor(int i = len_a;i<n;i++) if(num[i]) cnt++;\n\tmatrix ano;\n\tmemset(ano.num,0,sizeof(ano.num));\n\tano.num[cnt][0] = 1;\n\n\tbase = mul(qpow(base,k),ano);\n\n\tlong long ans = base.num[len_b][0];\n\tans = mul(ans,qpow(qpow(C(n),k)));\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n\n\n","source":"_posts/CF/Codeforces_Round_553.md","raw":"---\ntitle: \tCodeforces Round 553\ndate: \t\t2019-04-19\nauthor: \t\"zuhiul\"\ntags:\n  - CF\n---\n\n## F. Sonya and Informatics\n\n[开启传送门](https://codeforces.com/contest/1151/problem/F)\n\n<!-- more -->\n\n### 题目描述\n\nA girl named Sonya is studying in the scientific lyceum of the Kingdom of Kremland. The teacher of computer science (Sonya's favorite subject!) invented a task for her.\n\nGiven an array $a$ of length $n$, **consisting only of the numbers** $0$ **and** $1$, and the number $k$. Exactly $k$ times the following happens:\n\n - Two numbers $i$ and $j$ are chosen equiprobable such that ($1\\leq i<j\\leq n$).\n - The numbers in the $i$ and $j$ positions are swapped.\n\nSonya's task is to find the probability that after all the operations are completed, the $a$ array will be **sorted in non-decreasing order**. She turned to you for help. Help Sonya solve this problem.\n\nIt can be shown that the desired probability is either $0$ or it can be represented as $\\frac{P}{Q}$, where $P$ and $Q$ are coprime integers and $Q\\not\\equiv0(mod\\ 10^9+7)\\textscA$.\n\n### Input\n\nThe first line contains two integers $n$ and $k$ ($2\\leq n\\leq 100,1\\leq k\\leq 10^9$) — the length of the array $a$ and the number of operations.\n\nThe second line contains $n$ integers $a_1,a_2,\\dots,a_n$ ($0\\leq a_i\\leq 1$) — the description of the array $a$.\n\n### Output\n\nIf the desired probability is $0$, print $0$, otherwise print the value $P\\cdot Q^{-1}$ ($mod\\ 10^9+7$), where $P$ and $Q$ are defined above.\n\n### Examples\n\n#### inpus1\n\n3 2\n\n0 1 0\n\n#### output1\n\n333333336\n\n#### input2\n\n5 1\n\n1 1 1 0 0\n\n#### output2\n\n0\n\n#### input3\n\n6 4\n\n1 0 0 1 1 0\n\n#### output3\n\n968493834\n\n### Note\n\nIn the first example, all possible variants of the final array $a$, after applying exactly two operations: $(0,1,0)$, $(0,0,1)$, $(1,0,0)$, $(1,0,0)$, $(0,1,0)$, $(0,0,1)$, $(0,0,1)$, $(1,0,0)$, $(0,1,0)$. Therefore, the answer is $\\frac{3}{9}=\\frac{1}{3}$.\n\nIn the second example, the array will not be sorted in non-decreasing order after one operation, therefore the answer is 0.\n\n### 题意\n\n给你一个长度为n的01序列，每次随机从中选择两个出来，交换一下，一共这样操作k次，问你经过k次交换之后，序列变成不降($00\\dots 0011\\dots 11$)的概率是？\n\n### 分析\n\n首先序列里面的$0$和$1$的数量是固定的，不妨设分别有$len_a$和$len_b$个。\n\n也就是说在交换$k$次之后要保证前$len_a$个为$0$，后$len_b$个为$1$,如下\n$$\\underbrace{00\\dots 00}_{len_a} \\underbrace{11\\dots 11}_{len_b}$$\n\n然后我们分别统计前半段后半段$0$和$1$的数量，分别定义为$a_0,a_1,b_0,b_1$。例如\n$$\\underbrace{\\underbrace{\\overbrace{01010000101110100}^{a_1=7}}_{a_0=10}}_{len_a=17}\\underbrace{\\underbrace{\\overbrace{000101111101010}^{b_1=8}}_{b_0=7}}_{len_b=15}\\tag{3}$$\n\n然后考虑一次交换产生的效果：\n\n- $b_1$增加：$a_1$和$b_0$交换，使得后半段多了一个1，例如\n$$\\underbrace{\\underbrace{\\overbrace{01010000101110000}^{a_1=6}}_{a_0=11}}_{len_a=17}\\underbrace{\\underbrace{\\overbrace{010101111101010}^{b_1=9}}_{b_0=6}}_{len_b=15}\\tag{2}$$\n\n- $b_1$减少：$a_0$和$b_1$交换，使得后半段少了一个1，例如\n$$\\underbrace{\\underbrace{\\overbrace{01010000101110101}^{a_1=8}}_{a_0=9}}_{len_a=17}\\underbrace{\\underbrace{\\overbrace{000101111101000}^{b_1=7}}_{b_0=8}}_{len_b=15}\\tag{1}$$\n\n- 其他情况不影响$0$和$1$的数量。\n\n然后多次操作和一次操作怎么联系起来呢？\n\n看到这个数据量$n = 100$，一次变多次，一个自然的想法就是快速幂啊啊啊啊啊啊啊啊啊啊。\n\n然后就用上面的式子构造转移矩阵，然后快速幂，就能得到有解的方案数，然后除掉总方案数就行了。\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int mod = 1e9+7;\nlong long add(long long a,long long b){return (a+b)%mod;}\nlong long mul(long long a,long long b){return a*b%mod;}\nlong long qpow(long long a,long long b = mod-2){/*{{{*/\n\tlong long ret = 1;\n\twhile(b){\n\t\tif(b&1) ret = mul(ret,a);\n\t\ta = mul(a,a);\n\t\tb>>=1;\n\t}\n\treturn ret;\n}/*}}}*/\nconst int maxm = 105,inv_2 = qpow(2);\nlong long C(long long a){\n\treturn mul(inv_2,mul(a,add(a,mod-1)));\n}\nint n,k,len_a,len_b;\nint num[maxm];\nstruct matrix{\n\tlong long num[maxm][maxm];\n};\nmatrix mul(matrix a,matrix b){/*{{{*/\n\tmatrix c;\n\tmemset(c.num,0,sizeof(c.num));\n\tfor(int i = 0;i<=len_b;i++) for(int j = 0;j<=len_b;j++)\n\t\t\tif(a.num[i][j])\n\t\t\t\tfor(int k = 0;k<=len_b;k++) c.num[i][k] = add(c.num[i][k],mul(a.num[i][j],b.num[j][k]));\n\treturn c;\n}/*}}}*/\nmatrix qpow(matrix a,long long b){\n\tmatrix e;\n\tfor(int i = 0;i<=len_b;i++) for(int j = 0;j<=len_b;j++) e.num[i][j]=(i==j);\n\twhile(b){\n\t\tif(b&1) e = mul(e,a);\n\t\ta = mul(a,a);\n\t\tb>>=1;\n\t}\n\treturn e;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&k);\n\tint all = C(n);\n\tfor(int i = 0;i<n;i++){/*{{{*/\n\t\tscanf(\"%d\",num+i);\n\t\tif(num[i]) len_b++;\n\t\telse len_a++;\n\t}/*}}}*/\n\tmatrix base;\n\tfor(int i = 0;i<=len_b;i++){\n\t\tfor(int j = max(0,i-1);j<=min(len_b,i+1);j++){\n\t\t\tint b1 = j,b0 = len_b - j,a0 = len_a - b0,a1 = len_a - a0;\n\t\t\tif(i==j-1) base.num[i][j] = a0*b1;\n\t\t\telse if(i==j+1) base.num[i][j] = a1*b0;\n\t\t\telse base.num[i][j] = add(all,add(mod - a0*b1,mod - a1*b0));\n\t\t}\n\t}\n\n\tint cnt = 0;\n\tfor(int i = len_a;i<n;i++) if(num[i]) cnt++;\n\tmatrix ano;\n\tmemset(ano.num,0,sizeof(ano.num));\n\tano.num[cnt][0] = 1;\n\n\tbase = mul(qpow(base,k),ano);\n\n\tlong long ans = base.num[len_b][0];\n\tans = mul(ans,qpow(qpow(C(n),k)));\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n\n\n","slug":"CF/Codeforces_Round_553","published":1,"updated":"2019-04-19T10:51:16.175Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1gn0015a613jfwgdbxv","content":"<h2 id=\"F-Sonya-and-Informatics\"><a href=\"#F-Sonya-and-Informatics\" class=\"headerlink\" title=\"F. Sonya and Informatics\"></a>F. Sonya and Informatics</h2><p><a href=\"https://codeforces.com/contest/1151/problem/F\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<a id=\"more\"></a>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>A girl named Sonya is studying in the scientific lyceum of the Kingdom of Kremland. The teacher of computer science (Sonya’s favorite subject!) invented a task for her.</p>\n<p>Given an array $a$ of length $n$, <strong>consisting only of the numbers</strong> $0$ <strong>and</strong> $1$, and the number $k$. Exactly $k$ times the following happens:</p>\n<ul>\n<li>Two numbers $i$ and $j$ are chosen equiprobable such that ($1\\leq i&lt;j\\leq n$).</li>\n<li>The numbers in the $i$ and $j$ positions are swapped.</li>\n</ul>\n<p>Sonya’s task is to find the probability that after all the operations are completed, the $a$ array will be <strong>sorted in non-decreasing order</strong>. She turned to you for help. Help Sonya solve this problem.</p>\n<p>It can be shown that the desired probability is either $0$ or it can be represented as $\\frac{P}{Q}$, where $P$ and $Q$ are coprime integers and $Q\\not\\equiv0(mod\\ 10^9+7)\\textscA$.</p>\n<h3 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h3><p>The first line contains two integers $n$ and $k$ ($2\\leq n\\leq 100,1\\leq k\\leq 10^9$) — the length of the array $a$ and the number of operations.</p>\n<p>The second line contains $n$ integers $a_1,a_2,\\dots,a_n$ ($0\\leq a_i\\leq 1$) — the description of the array $a$.</p>\n<h3 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h3><p>If the desired probability is $0$, print $0$, otherwise print the value $P\\cdot Q^{-1}$ ($mod\\ 10^9+7$), where $P$ and $Q$ are defined above.</p>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"inpus1\"><a href=\"#inpus1\" class=\"headerlink\" title=\"inpus1\"></a>inpus1</h4><p>3 2</p>\n<p>0 1 0</p>\n<h4 id=\"output1\"><a href=\"#output1\" class=\"headerlink\" title=\"output1\"></a>output1</h4><p>333333336</p>\n<h4 id=\"input2\"><a href=\"#input2\" class=\"headerlink\" title=\"input2\"></a>input2</h4><p>5 1</p>\n<p>1 1 1 0 0</p>\n<h4 id=\"output2\"><a href=\"#output2\" class=\"headerlink\" title=\"output2\"></a>output2</h4><p>0</p>\n<h4 id=\"input3\"><a href=\"#input3\" class=\"headerlink\" title=\"input3\"></a>input3</h4><p>6 4</p>\n<p>1 0 0 1 1 0</p>\n<h4 id=\"output3\"><a href=\"#output3\" class=\"headerlink\" title=\"output3\"></a>output3</h4><p>968493834</p>\n<h3 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h3><p>In the first example, all possible variants of the final array $a$, after applying exactly two operations: $(0,1,0)$, $(0,0,1)$, $(1,0,0)$, $(1,0,0)$, $(0,1,0)$, $(0,0,1)$, $(0,0,1)$, $(1,0,0)$, $(0,1,0)$. Therefore, the answer is $\\frac{3}{9}=\\frac{1}{3}$.</p>\n<p>In the second example, the array will not be sorted in non-decreasing order after one operation, therefore the answer is 0.</p>\n<h3 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>给你一个长度为n的01序列，每次随机从中选择两个出来，交换一下，一共这样操作k次，问你经过k次交换之后，序列变成不降($00\\dots 0011\\dots 11$)的概率是？</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>首先序列里面的$0$和$1$的数量是固定的，不妨设分别有$len_a$和$len_b$个。</p>\n<p>也就是说在交换$k$次之后要保证前$len_a$个为$0$，后$len_b$个为$1$,如下<br>$$\\underbrace{00\\dots 00}_{len_a} \\underbrace{11\\dots 11}_{len_b}$$</p>\n<p>然后我们分别统计前半段后半段$0$和$1$的数量，分别定义为$a_0,a_1,b_0,b_1$。例如<br>$$\\underbrace{\\underbrace{\\overbrace{01010000101110100}^{a_1=7}}_{a_0=10}}_{len_a=17}\\underbrace{\\underbrace{\\overbrace{000101111101010}^{b_1=8}}_{b_0=7}}_{len_b=15}\\tag{3}$$</p>\n<p>然后考虑一次交换产生的效果：</p>\n<ul>\n<li><p>$b_1$增加：$a_1$和$b_0$交换，使得后半段多了一个1，例如<br>$$\\underbrace{\\underbrace{\\overbrace{01010000101110000}^{a_1=6}}_{a_0=11}}_{len_a=17}\\underbrace{\\underbrace{\\overbrace{010101111101010}^{b_1=9}}_{b_0=6}}_{len_b=15}\\tag{2}$$</p>\n</li>\n<li><p>$b_1$减少：$a_0$和$b_1$交换，使得后半段少了一个1，例如<br>$$\\underbrace{\\underbrace{\\overbrace{01010000101110101}^{a_1=8}}_{a_0=9}}_{len_a=17}\\underbrace{\\underbrace{\\overbrace{000101111101000}^{b_1=7}}_{b_0=8}}_{len_b=15}\\tag{1}$$</p>\n</li>\n<li><p>其他情况不影响$0$和$1$的数量。</p>\n</li>\n</ul>\n<p>然后多次操作和一次操作怎么联系起来呢？</p>\n<p>看到这个数据量$n = 100$，一次变多次，一个自然的想法就是快速幂啊啊啊啊啊啊啊啊啊啊。</p>\n<p>然后就用上面的式子构造转移矩阵，然后快速幂，就能得到有解的方案数，然后除掉总方案数就行了。</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> mod = <span class=\"number\">1e9</span>+<span class=\"number\">7</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> b)</span></span>&#123;<span class=\"keyword\">return</span> (a+b)%mod;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">mul</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> b)</span></span>&#123;<span class=\"keyword\">return</span> a*b%mod;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">qpow</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> b = mod<span class=\"number\">-2</span>)</span></span>&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ret = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(b)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(b&amp;<span class=\"number\">1</span>) ret = mul(ret,a);</span><br><span class=\"line\">\t\ta = mul(a,a);</span><br><span class=\"line\">\t\tb&gt;&gt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">105</span>,inv_2 = qpow(<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">C</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> mul(inv_2,mul(a,add(a,mod<span class=\"number\">-1</span>)));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,k,len_a,len_b;</span><br><span class=\"line\"><span class=\"keyword\">int</span> num[maxm];</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">matrix</span>&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> num[maxm][maxm];</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"function\">matrix <span class=\"title\">mul</span><span class=\"params\">(matrix a,matrix b)</span></span>&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">\tmatrix c;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(c.num,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(c.num));</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;=len_b;i++) <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j&lt;=len_b;j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(a.num[i][j])</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>;k&lt;=len_b;k++) c.num[i][k] = add(c.num[i][k],mul(a.num[i][j],b.num[j][k]));</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> c;</span><br><span class=\"line\">&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"function\">matrix <span class=\"title\">qpow</span><span class=\"params\">(matrix a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> b)</span></span>&#123;</span><br><span class=\"line\">\tmatrix e;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;=len_b;i++) <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j&lt;=len_b;j++) e.num[i][j]=(i==j);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(b)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(b&amp;<span class=\"number\">1</span>) e = mul(e,a);</span><br><span class=\"line\">\t\ta = mul(a,a);</span><br><span class=\"line\">\t\tb&gt;&gt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> e;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;n,&amp;k);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> all = C(n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;n;i++)&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,num+i);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(num[i]) len_b++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> len_a++;</span><br><span class=\"line\">\t&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\">\tmatrix base;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;=len_b;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = max(<span class=\"number\">0</span>,i<span class=\"number\">-1</span>);j&lt;=min(len_b,i+<span class=\"number\">1</span>);j++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> b1 = j,b0 = len_b - j,a0 = len_a - b0,a1 = len_a - a0;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(i==j<span class=\"number\">-1</span>) base.num[i][j] = a0*b1;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i==j+<span class=\"number\">1</span>) base.num[i][j] = a1*b0;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> base.num[i][j] = add(all,add(mod - a0*b1,mod - a1*b0));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = len_a;i&lt;n;i++) <span class=\"keyword\">if</span>(num[i]) cnt++;</span><br><span class=\"line\">\tmatrix ano;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(ano.num,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(ano.num));</span><br><span class=\"line\">\tano.num[cnt][<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tbase = mul(qpow(base,k),ano);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ans = base.num[len_b][<span class=\"number\">0</span>];</span><br><span class=\"line\">\tans = mul(ans,qpow(qpow(C(n),k)));</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,ans);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"F-Sonya-and-Informatics\"><a href=\"#F-Sonya-and-Informatics\" class=\"headerlink\" title=\"F. Sonya and Informatics\"></a>F. Sonya and Informatics</h2><p><a href=\"https://codeforces.com/contest/1151/problem/F\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>","more":"<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>A girl named Sonya is studying in the scientific lyceum of the Kingdom of Kremland. The teacher of computer science (Sonya’s favorite subject!) invented a task for her.</p>\n<p>Given an array $a$ of length $n$, <strong>consisting only of the numbers</strong> $0$ <strong>and</strong> $1$, and the number $k$. Exactly $k$ times the following happens:</p>\n<ul>\n<li>Two numbers $i$ and $j$ are chosen equiprobable such that ($1\\leq i&lt;j\\leq n$).</li>\n<li>The numbers in the $i$ and $j$ positions are swapped.</li>\n</ul>\n<p>Sonya’s task is to find the probability that after all the operations are completed, the $a$ array will be <strong>sorted in non-decreasing order</strong>. She turned to you for help. Help Sonya solve this problem.</p>\n<p>It can be shown that the desired probability is either $0$ or it can be represented as $\\frac{P}{Q}$, where $P$ and $Q$ are coprime integers and $Q\\not\\equiv0(mod\\ 10^9+7)\\textscA$.</p>\n<h3 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h3><p>The first line contains two integers $n$ and $k$ ($2\\leq n\\leq 100,1\\leq k\\leq 10^9$) — the length of the array $a$ and the number of operations.</p>\n<p>The second line contains $n$ integers $a_1,a_2,\\dots,a_n$ ($0\\leq a_i\\leq 1$) — the description of the array $a$.</p>\n<h3 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h3><p>If the desired probability is $0$, print $0$, otherwise print the value $P\\cdot Q^{-1}$ ($mod\\ 10^9+7$), where $P$ and $Q$ are defined above.</p>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"inpus1\"><a href=\"#inpus1\" class=\"headerlink\" title=\"inpus1\"></a>inpus1</h4><p>3 2</p>\n<p>0 1 0</p>\n<h4 id=\"output1\"><a href=\"#output1\" class=\"headerlink\" title=\"output1\"></a>output1</h4><p>333333336</p>\n<h4 id=\"input2\"><a href=\"#input2\" class=\"headerlink\" title=\"input2\"></a>input2</h4><p>5 1</p>\n<p>1 1 1 0 0</p>\n<h4 id=\"output2\"><a href=\"#output2\" class=\"headerlink\" title=\"output2\"></a>output2</h4><p>0</p>\n<h4 id=\"input3\"><a href=\"#input3\" class=\"headerlink\" title=\"input3\"></a>input3</h4><p>6 4</p>\n<p>1 0 0 1 1 0</p>\n<h4 id=\"output3\"><a href=\"#output3\" class=\"headerlink\" title=\"output3\"></a>output3</h4><p>968493834</p>\n<h3 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h3><p>In the first example, all possible variants of the final array $a$, after applying exactly two operations: $(0,1,0)$, $(0,0,1)$, $(1,0,0)$, $(1,0,0)$, $(0,1,0)$, $(0,0,1)$, $(0,0,1)$, $(1,0,0)$, $(0,1,0)$. Therefore, the answer is $\\frac{3}{9}=\\frac{1}{3}$.</p>\n<p>In the second example, the array will not be sorted in non-decreasing order after one operation, therefore the answer is 0.</p>\n<h3 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>给你一个长度为n的01序列，每次随机从中选择两个出来，交换一下，一共这样操作k次，问你经过k次交换之后，序列变成不降($00\\dots 0011\\dots 11$)的概率是？</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>首先序列里面的$0$和$1$的数量是固定的，不妨设分别有$len_a$和$len_b$个。</p>\n<p>也就是说在交换$k$次之后要保证前$len_a$个为$0$，后$len_b$个为$1$,如下<br>$$\\underbrace{00\\dots 00}_{len_a} \\underbrace{11\\dots 11}_{len_b}$$</p>\n<p>然后我们分别统计前半段后半段$0$和$1$的数量，分别定义为$a_0,a_1,b_0,b_1$。例如<br>$$\\underbrace{\\underbrace{\\overbrace{01010000101110100}^{a_1=7}}_{a_0=10}}_{len_a=17}\\underbrace{\\underbrace{\\overbrace{000101111101010}^{b_1=8}}_{b_0=7}}_{len_b=15}\\tag{3}$$</p>\n<p>然后考虑一次交换产生的效果：</p>\n<ul>\n<li><p>$b_1$增加：$a_1$和$b_0$交换，使得后半段多了一个1，例如<br>$$\\underbrace{\\underbrace{\\overbrace{01010000101110000}^{a_1=6}}_{a_0=11}}_{len_a=17}\\underbrace{\\underbrace{\\overbrace{010101111101010}^{b_1=9}}_{b_0=6}}_{len_b=15}\\tag{2}$$</p>\n</li>\n<li><p>$b_1$减少：$a_0$和$b_1$交换，使得后半段少了一个1，例如<br>$$\\underbrace{\\underbrace{\\overbrace{01010000101110101}^{a_1=8}}_{a_0=9}}_{len_a=17}\\underbrace{\\underbrace{\\overbrace{000101111101000}^{b_1=7}}_{b_0=8}}_{len_b=15}\\tag{1}$$</p>\n</li>\n<li><p>其他情况不影响$0$和$1$的数量。</p>\n</li>\n</ul>\n<p>然后多次操作和一次操作怎么联系起来呢？</p>\n<p>看到这个数据量$n = 100$，一次变多次，一个自然的想法就是快速幂啊啊啊啊啊啊啊啊啊啊。</p>\n<p>然后就用上面的式子构造转移矩阵，然后快速幂，就能得到有解的方案数，然后除掉总方案数就行了。</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> mod = <span class=\"number\">1e9</span>+<span class=\"number\">7</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> b)</span></span>&#123;<span class=\"keyword\">return</span> (a+b)%mod;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">mul</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> b)</span></span>&#123;<span class=\"keyword\">return</span> a*b%mod;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">qpow</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> b = mod<span class=\"number\">-2</span>)</span></span>&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ret = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(b)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(b&amp;<span class=\"number\">1</span>) ret = mul(ret,a);</span><br><span class=\"line\">\t\ta = mul(a,a);</span><br><span class=\"line\">\t\tb&gt;&gt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">105</span>,inv_2 = qpow(<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">C</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> mul(inv_2,mul(a,add(a,mod<span class=\"number\">-1</span>)));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,k,len_a,len_b;</span><br><span class=\"line\"><span class=\"keyword\">int</span> num[maxm];</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">matrix</span>&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> num[maxm][maxm];</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"function\">matrix <span class=\"title\">mul</span><span class=\"params\">(matrix a,matrix b)</span></span>&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">\tmatrix c;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(c.num,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(c.num));</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;=len_b;i++) <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j&lt;=len_b;j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(a.num[i][j])</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>;k&lt;=len_b;k++) c.num[i][k] = add(c.num[i][k],mul(a.num[i][j],b.num[j][k]));</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> c;</span><br><span class=\"line\">&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"function\">matrix <span class=\"title\">qpow</span><span class=\"params\">(matrix a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> b)</span></span>&#123;</span><br><span class=\"line\">\tmatrix e;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;=len_b;i++) <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j&lt;=len_b;j++) e.num[i][j]=(i==j);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(b)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(b&amp;<span class=\"number\">1</span>) e = mul(e,a);</span><br><span class=\"line\">\t\ta = mul(a,a);</span><br><span class=\"line\">\t\tb&gt;&gt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> e;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;n,&amp;k);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> all = C(n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;n;i++)&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,num+i);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(num[i]) len_b++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> len_a++;</span><br><span class=\"line\">\t&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\">\tmatrix base;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;=len_b;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = max(<span class=\"number\">0</span>,i<span class=\"number\">-1</span>);j&lt;=min(len_b,i+<span class=\"number\">1</span>);j++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> b1 = j,b0 = len_b - j,a0 = len_a - b0,a1 = len_a - a0;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(i==j<span class=\"number\">-1</span>) base.num[i][j] = a0*b1;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i==j+<span class=\"number\">1</span>) base.num[i][j] = a1*b0;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> base.num[i][j] = add(all,add(mod - a0*b1,mod - a1*b0));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = len_a;i&lt;n;i++) <span class=\"keyword\">if</span>(num[i]) cnt++;</span><br><span class=\"line\">\tmatrix ano;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(ano.num,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(ano.num));</span><br><span class=\"line\">\tano.num[cnt][<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tbase = mul(qpow(base,k),ano);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ans = base.num[len_b][<span class=\"number\">0</span>];</span><br><span class=\"line\">\tans = mul(ans,qpow(qpow(C(n),k)));</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,ans);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Project Euler 288 An enormous factorial","date":"2018-12-07T16:00:00.000Z","author":"zuhiul","_content":"\n[开启传送门](https://projecteuler.net/problem=288)\n\n### 题目描述\n<!-- more -->\n\nFor any prime $p$ the number $N(p,q)$ is defined by $N(p,q) = \\sum_{n=0}^q T_n*p^n$\nwith $T_n$ generated by the following random number generator:\n\n\\begin{eqnarray}\n&&S_0 = 290797\\\\\\\n&&S_{n+1} = S_n^2 mod 50515093\\\\\\\n&&T_n = S_n mod p\\\\\\\n\\end{eqnarray}\n\nLet $Nfac(p,q)$ be the factorial of $N(p,q)$.\nLet $NF(p,q)$ be the number of factors $p$ in $Nfac(p,q)$.\n\nYou are given that $NF(3,10000) mod 3^{20}=624955285$.\n\nFind $NF(61,10^7)$ mod $61^{10}$\n\n### 题意\n题意说的有点麻烦，我简化一下\n\n$T_i$是随机生成的数据，$N(p,q)=\\sum_{n=0}^q T_n*p^n$\n\n问你$N(p,q)$的阶乘里面，质因数分解以后$p$的指数膜$p^{10}$答案是多少．\n\n### 分析\n首先可以观察到的是，$T_i$很小，而且他是随机的，我们显然要把他存起来．\n\n然后一个比较显然的结论是\n$$\nn!质因数分解后素因子p的数量为\\lfloor \\frac{n}{p} \\rfloor + \\lfloor \\frac{n}{p^2} \\rfloor + \\cdots \n$$\n$$\n\\because 最后的答案要膜 p^{10} \\therefore 我们统计的时候，对于第一项，我们统计指数为 [1,10]的，第二项[2,11],然后枚举项统计答案即可\n$$\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxm = 1e7+1;\nconst int pow_num = 10;\nlong long T[maxm+100];\nconst int p = 61;\nlong long powp[1000];\nvoid init(){\n\tpowp[0] = 1;\n\tfor(int i = 1;i<=pow_num;i++) powp[i] = powp[i-1]*p;\n\tlong long s0 = 290797;\n\tfor(int i = 1;i<maxm;i++) T[i] = (s0=s0*s0%50515093)%p;\n}\nint main(){\n\tinit();\n\tlong long ans = 0;\n\tconst long long mod = powp[pow_num];\n\tfor(int i = 1;i<maxm;i++) for(int j = i;j<=i+pow_num-1;j++) ans = (ans+(T[j]*powp[j-i]%mod))%mod;\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n","source":"_posts/PE/PE288.md","raw":"---\ntitle: Project Euler 288 An enormous factorial \ndate:\t2018-12-08\nauthor:\t\"zuhiul\"\ntags:\n  - 数学\n  - PE\n---\n\n[开启传送门](https://projecteuler.net/problem=288)\n\n### 题目描述\n<!-- more -->\n\nFor any prime $p$ the number $N(p,q)$ is defined by $N(p,q) = \\sum_{n=0}^q T_n*p^n$\nwith $T_n$ generated by the following random number generator:\n\n\\begin{eqnarray}\n&&S_0 = 290797\\\\\\\n&&S_{n+1} = S_n^2 mod 50515093\\\\\\\n&&T_n = S_n mod p\\\\\\\n\\end{eqnarray}\n\nLet $Nfac(p,q)$ be the factorial of $N(p,q)$.\nLet $NF(p,q)$ be the number of factors $p$ in $Nfac(p,q)$.\n\nYou are given that $NF(3,10000) mod 3^{20}=624955285$.\n\nFind $NF(61,10^7)$ mod $61^{10}$\n\n### 题意\n题意说的有点麻烦，我简化一下\n\n$T_i$是随机生成的数据，$N(p,q)=\\sum_{n=0}^q T_n*p^n$\n\n问你$N(p,q)$的阶乘里面，质因数分解以后$p$的指数膜$p^{10}$答案是多少．\n\n### 分析\n首先可以观察到的是，$T_i$很小，而且他是随机的，我们显然要把他存起来．\n\n然后一个比较显然的结论是\n$$\nn!质因数分解后素因子p的数量为\\lfloor \\frac{n}{p} \\rfloor + \\lfloor \\frac{n}{p^2} \\rfloor + \\cdots \n$$\n$$\n\\because 最后的答案要膜 p^{10} \\therefore 我们统计的时候，对于第一项，我们统计指数为 [1,10]的，第二项[2,11],然后枚举项统计答案即可\n$$\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxm = 1e7+1;\nconst int pow_num = 10;\nlong long T[maxm+100];\nconst int p = 61;\nlong long powp[1000];\nvoid init(){\n\tpowp[0] = 1;\n\tfor(int i = 1;i<=pow_num;i++) powp[i] = powp[i-1]*p;\n\tlong long s0 = 290797;\n\tfor(int i = 1;i<maxm;i++) T[i] = (s0=s0*s0%50515093)%p;\n}\nint main(){\n\tinit();\n\tlong long ans = 0;\n\tconst long long mod = powp[pow_num];\n\tfor(int i = 1;i<maxm;i++) for(int j = i;j<=i+pow_num-1;j++) ans = (ans+(T[j]*powp[j-i]%mod))%mod;\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n","slug":"PE/PE288","published":1,"updated":"2019-04-14T08:29:29.896Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1go0018a613uco73qrx","content":"<p><a href=\"https://projecteuler.net/problem=288\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><a id=\"more\"></a>\n<p>For any prime $p$ the number $N(p,q)$ is defined by $N(p,q) = \\sum_{n=0}^q T_n*p^n$<br>with $T_n$ generated by the following random number generator:</p>\n<p>\\begin{eqnarray}<br>&amp;&amp;S_0 = 290797\\\\<br>&amp;&amp;S_{n+1} = S_n^2 mod 50515093\\\\<br>&amp;&amp;T_n = S_n mod p\\\\<br>\\end{eqnarray}</p>\n<p>Let $Nfac(p,q)$ be the factorial of $N(p,q)$.<br>Let $NF(p,q)$ be the number of factors $p$ in $Nfac(p,q)$.</p>\n<p>You are given that $NF(3,10000) mod 3^{20}=624955285$.</p>\n<p>Find $NF(61,10^7)$ mod $61^{10}$</p>\n<h3 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>题意说的有点麻烦，我简化一下</p>\n<p>$T_i$是随机生成的数据，$N(p,q)=\\sum_{n=0}^q T_n*p^n$</p>\n<p>问你$N(p,q)$的阶乘里面，质因数分解以后$p$的指数膜$p^{10}$答案是多少．</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>首先可以观察到的是，$T_i$很小，而且他是随机的，我们显然要把他存起来．</p>\n<p>然后一个比较显然的结论是<br>$$<br>n!质因数分解后素因子p的数量为\\lfloor \\frac{n}{p} \\rfloor + \\lfloor \\frac{n}{p^2} \\rfloor + \\cdots<br>$$<br>$$<br>\\because 最后的答案要膜 p^{10} \\therefore 我们统计的时候，对于第一项，我们统计指数为 [1,10]的，第二项[2,11],然后枚举项统计答案即可<br>$$</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">1e7</span>+<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> pow_num = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> T[maxm+<span class=\"number\">100</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> p = <span class=\"number\">61</span>;</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> powp[<span class=\"number\">1000</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tpowp[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=pow_num;i++) powp[i] = powp[i<span class=\"number\">-1</span>]*p;</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> s0 = <span class=\"number\">290797</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;maxm;i++) T[i] = (s0=s0*s0%<span class=\"number\">50515093</span>)%p;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tinit();</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> mod = powp[pow_num];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;maxm;i++) <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = i;j&lt;=i+pow_num<span class=\"number\">-1</span>;j++) ans = (ans+(T[j]*powp[j-i]%mod))%mod;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,ans);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://projecteuler.net/problem=288\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3>","more":"<p>For any prime $p$ the number $N(p,q)$ is defined by $N(p,q) = \\sum_{n=0}^q T_n*p^n$<br>with $T_n$ generated by the following random number generator:</p>\n<p>\\begin{eqnarray}<br>&amp;&amp;S_0 = 290797\\\\<br>&amp;&amp;S_{n+1} = S_n^2 mod 50515093\\\\<br>&amp;&amp;T_n = S_n mod p\\\\<br>\\end{eqnarray}</p>\n<p>Let $Nfac(p,q)$ be the factorial of $N(p,q)$.<br>Let $NF(p,q)$ be the number of factors $p$ in $Nfac(p,q)$.</p>\n<p>You are given that $NF(3,10000) mod 3^{20}=624955285$.</p>\n<p>Find $NF(61,10^7)$ mod $61^{10}$</p>\n<h3 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>题意说的有点麻烦，我简化一下</p>\n<p>$T_i$是随机生成的数据，$N(p,q)=\\sum_{n=0}^q T_n*p^n$</p>\n<p>问你$N(p,q)$的阶乘里面，质因数分解以后$p$的指数膜$p^{10}$答案是多少．</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>首先可以观察到的是，$T_i$很小，而且他是随机的，我们显然要把他存起来．</p>\n<p>然后一个比较显然的结论是<br>$$<br>n!质因数分解后素因子p的数量为\\lfloor \\frac{n}{p} \\rfloor + \\lfloor \\frac{n}{p^2} \\rfloor + \\cdots<br>$$<br>$$<br>\\because 最后的答案要膜 p^{10} \\therefore 我们统计的时候，对于第一项，我们统计指数为 [1,10]的，第二项[2,11],然后枚举项统计答案即可<br>$$</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">1e7</span>+<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> pow_num = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> T[maxm+<span class=\"number\">100</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> p = <span class=\"number\">61</span>;</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> powp[<span class=\"number\">1000</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tpowp[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=pow_num;i++) powp[i] = powp[i<span class=\"number\">-1</span>]*p;</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> s0 = <span class=\"number\">290797</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;maxm;i++) T[i] = (s0=s0*s0%<span class=\"number\">50515093</span>)%p;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tinit();</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> mod = powp[pow_num];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;maxm;i++) <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = i;j&lt;=i+pow_num<span class=\"number\">-1</span>;j++) ans = (ans+(T[j]*powp[j-i]%mod))%mod;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,ans);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"Educational Codeforces Round 63","date":"2019-04-27T16:00:00.000Z","author":"zuhiul","_content":"\n## F. Delivery Oligopoly\n\n[开启传送门](https://codeforces.com/contest/1155/problem/F)\n\n<!-- more -->\n\n### 题目描述\n\nThe whole delivery market of Berland is controlled by two rival companies: BerEx and BerPS. They both provide fast and reliable delivery services across all the cities of Berland.\n\nThe map of Berland can be represented as an **undirected** graph. The cities are vertices and the roads are edges between them. Each pair of cities has no more than one road between them. Each road connects different cities.\n\nBerEx and BerPS are so competitive that for each pair of cities $(v,u)$ they have set up their paths from $v$ to $u$ in such a way that **these two paths don't share a single road.** It is guaranteed that it was possible.\n\nNow Berland government decided to cut down the road maintenance cost by abandoning some roads. Obviously, they want to maintain as little roads as possible. However, they don't want to break the entire delivery system. So BerEx and BerPS should still be able to have their paths between every pair of cities non-intersecting.\n\nWhat is the minimal number of roads Berland government can maintain?\n\n*More formally, given a 2-edge connected undirected graph, what is the minimum number of edges that can be left in it so that the resulting graph is also 2-edge connected?*\n\n\n### Input\n\nThe first line contains two integers $n$ and $m$ ($3\\leq n\\leq14$, $n\\leq m\\leq \\frac{n(n-1)}{2}$) — the number of cities and the number of roads between them.\n\nEach of the next 𝑚 lines contains two integers $v$ and $u$ ($1\\leq v,u\\leq n,v\\neq u$) — the cities connected by the next road.\n\nIt is guaranteed that each pair of cities has no more than one road between them. It is guaranteed that each pair of cities have at least two paths between them that don't share a single road.\n\n\n### Output\n\nThe first line should contain a single integer $k$ — the minimum number of roads Berland government can maintain so that BerEx and BerPS are still able to have their paths between every pair of cities non-intersecting.\n\nThe next $k$ lines should contain the list of roads which are being maintained. Each line of form \"$v\\ u$\", where $v$ and $u$ are cities connected by the next road.\n\nIf there are multiple lists of minimum size, print any of them. The order of roads in the list doesn't matter.\n\n\n### Examples\n\n#### input1\n\n3 3\n1 2\n2 3\n3 1\n\n#### output1\n\n\n3\n1 3\n3 2\n1 2\n\n\n#### input2\n\n\n4 5\n1 2\n1 4\n2 3\n4 3\n1 3\n\n\n#### output2\n\n\n4\n1 4\n4 3\n3 2\n1 2\n\n\n#### input3\n\n\n6 10\n1 2\n2 3\n3 1\n3 4\n4 5\n5 6\n4 6\n2 5\n1 6\n3 5\n\n\n#### output3\n\n\n6\n1 6\n6 5\n5 4\n4 3\n3 2\n1 2\n\n\n### Note\n\nHere are graphs from the examples, red edges are the maintained ones.\n\n![cf_1155_f_1.png](/img/cf_1155_f_1.png)\n\n![cf_1155_f_1.png](/img/cf_1155_f_2.png)\n\n![cf_1155_f_1.png](/img/cf_1155_f_3.png)\n\n### 题意\n\n给你一个不超过14个节点的无向图，让你找到满足一下条件的一个子图：\n\n- 包含所有点\n- 包含尽可能少的边\n- 子图中任意两个点存在两条完全不交的路径\n\n让你输出一个任意符合题意的子图。\n\n### 分析\n\n当时没做出来，看题解才做出来的。建议先看原题解。如下：\n\n  Let's use dynamic programming to solve this problem. We will start with a single biconnected component consisting of vertex $0$, and connect other vertices to it. So, the state of our dynamic programming will be a $mask$ of vertices that are in the same biconnected component with $0$.\n\n  How can we extend a biconnected component in such a way that some other vertices are added into it, but it is still biconnected? We will add a path (possibly cyclic) that starts in some vertex $x$ belonging to the $mask$, goes through some vertices not belonging to the $mask$, and ends in some vertex $y$ belonging to the $mask$ (possibly $x=y$). If for every triple ($x,y,addmask$) we precalculate some path that starts in $x$, goes through vertices from $addmask$ and ends in $y$ (and $addmask$ does not contain neither $x$ nor $y$), then we can solve the problem in $O(3^nn^2)$: there will be $2^n$ states, for every state we will iterate on two vertices $x$ and $y$ belonging to the $mask$, and the number of possible pairs of non-intersecting masks $mask$ and $addmask$ is $O(3^n)$.\n\n  The only thing that's left is precalculating the paths for triples ($x,y,addmask$). That can be done with auxiliary dynamic programming $dp2[x][y][addmask]$ which will denote whether such a path exists. For every edge ($u,v$) of the original graph, $dp2[u][v][0]$ is true, and we can go from $dp2[x][y][addmask]$ to some state $dp2[x][z][addmask^{'}]$, where $addmask^{'}$ will contain all vertices from $addmask$ and vertex $y$ (and we should ensure that there is an edge ($y,z$) in the graph and the $addmask$ didn't contain vertex $y$ earlier). We should also somehow be able to restore the paths from this dp, and we also should be careful not to choose the same edge twice (for example, if we start a path by edge ($x,y$), we should not use the same edge to return to $x$) — both these things can be done, for example, by storing next-to-last vertex in the path.\n\n我基本是看完题解才有想法的，和题解写的一模一样，（其实不一样，我写的比标程丑）。\n\n大体思路还是很清晰的。\n\n首先，我们可以很轻松的发现，答案一定是很多环交在了一起构成了答案对应的子图，然后对于任何一个存在很多环相交的图来说，我们可以拆成一个环和很多很多边构成的，如下图：\n\n![edu_cf_63_f_1.png](/img/edu_cf_63_f_1.png)\n\n同样的我们可以很轻松的得到，任何一个环都可以作为拆分后唯一的环。剩下的问题就是我们怎么找到所有的边了。也即怎么找到我们需要的所有路径。我们做以下定义。\n\n我们找到一条从$a$到$b$的路径，并且其中包括$mask$对应的其他点，我们假设$dp2[a][b][mask]$表示是否存在一条从$a$到$b$的路径，并且还包含了$mask$点，例如：\n\n$dp2[1][3][1] = 1$表示存在一条$1-0-3$的路径\n\n$dp2[3][5][3] = 1$表示存在一条从$3$到$5$的路径，其中包含$0$号点和$1$号点，路径可能是$3-0-1-5$，也可能是$3-1-0-5$。\n\n对于他的转移显然比较好想，直接枚举下一个点是谁就行了。\n\n然后我们取出任意一个节点表示当前符合答案的子图的子图。因为一个点的时候显然符合答案（因为一对都没有）。然后我们在这个子图的子图中不断的添加边构成环，最后判断得到的全图是否满足答案就行了。。。。\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int inf = 0x3f3f3f3f;\nconst int maxn = 14;\nconst int maxm = 1<<maxn;\nint n,m,upper;\nint dp[maxm|10];//记录答案是否存在，也即当前子图是否满足条件（子图中任意两个点存在两条完全不交的路径）\nbool dp2[maxn][maxn][maxm];//表示是否存在一条从i到j，包含mask对应点的路径\nint last[maxn][maxn][maxm];//用来记录i到j中上一个点是谁，用来输出路径\nvector<int> bit[maxm|10];//表示mask中对应的点的编号\nvector<int> mat[maxm|10];//存输入的图\npair<int,int> con[maxm|10];//表示mask对应的两个外部点，也就是路径的起点终点\nint addmask[maxm|10];//mask对应的外部边对应的mask\nvoid show_bit(int a){\n\tif(a) show_bit(a>>1);\n\telse return ;\n\tif(a&1) cout<<1;\n\telse cout<<0;\n}\nint main(){\n\tcin>>n>>m;\n\tupper = 1<<n;\n\tfor(int i = 0,a,b;i<m;i++){\n\t\tcin>>a>>b;\n\t\ta--,b--;\n\t\tmat[a].push_back(b);\n\t\tmat[b].push_back(a);\n\t}\n\tmemset(dp,0x3f,sizeof dp);\n\tmemset(dp2,false,sizeof dp2);\n\tfor(int i = 0;i<n;i++)\n\t\tfor(auto j: mat[i]){\n\t\t\tdp2[i][j][0] = 1;\n\t\t\tlast[i][j][0] = i;\n\t\t}\n\tfor(int mask = 0;mask<upper;mask++) for(int j = 0;j<n;j++) if(mask&(1<<j)) bit[mask].push_back(j);\n\tfor(int mask = 0;mask<upper;mask++){\n\t\tfor(int i = 0;i<n;i++){\n\t\t\tif(mask&(1<<i)) continue;\n\t\t\tfor(int j = 0;j<n;j++){\n\t\t\t\tif(mask&(1<<j)) continue;\n\t\t\t\tif(i==j||dp2[i][j][mask]==false) continue;\n\t\t\t\tfor(auto z:mat[j]){\n\t\t\t\t\tif(mask&(1<<z)) continue;\n\t\t\t\t\tif(z==last[i][j][mask]) continue;\n\t\t\t\t\tif(dp2[i][z][mask|(1<<j)]==false){\n\t\t\t\t\t\tlast[i][z][mask|(1<<j)] = j;\n\t\t\t\t\t\tdp2[i][z][mask|(1<<j)] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tdp[1] = 0;\n\tfor(int mask = 0;mask < upper;mask++) {\n\t\tfor(int add = mask;add;add = (add-1)&mask){\n\t\t\tint pre = add^mask;\n\t\t\tint cnt = __builtin_popcount(add)+1;\n\t\t\tif(dp[pre]+cnt>=dp[mask]) continue;\n\t\t\tbool flag = false;\n\t\t\tfor(auto x:bit[pre]){\n\t\t\t\tfor(auto y: bit[pre]){\n\t\t\t\t\tif(dp2[x][y][add]){\n\t\t\t\t\t\tdp[mask] = dp[pre]+cnt;\n\t\t\t\t\t\tcon[mask] = make_pair(x,y);\n\t\t\t\t\t\taddmask[mask] = add;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(dp[(1<<n)-1]==inf) cout<<-1<<endl;\n\telse {\n\t\tcout<<dp[(1<<n)-1]<<endl;\n\t\tint cur = (1<<n) - 1;\n\t\twhile(cur!=1){\n\t\t\tint add = addmask[cur];\n\t\t\tint x = con[cur].first;\n\t\t\tint y = con[cur].second;\n\t\t\tcur^=add;\n\t\t\twhile(add){\n\t\t\t\tint ny = last[x][y][add];\n\t\t\t\tcout<<y+1<<' '<<ny+1<<endl;\n\t\t\t\ty = ny;\n\t\t\t\tadd^=(1<<ny);\n\t\t\t}\n\t\t\tcout<<x+1<<' '<<y+1<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n","source":"_posts/CF/Educational Codeforces Round 63.md","raw":"---\ntitle: \tEducational Codeforces Round 63\ndate:\t\t2019-04-28\nauthor:\t\"zuhiul\" \ntags:\n  - CF\n---\n\n## F. Delivery Oligopoly\n\n[开启传送门](https://codeforces.com/contest/1155/problem/F)\n\n<!-- more -->\n\n### 题目描述\n\nThe whole delivery market of Berland is controlled by two rival companies: BerEx and BerPS. They both provide fast and reliable delivery services across all the cities of Berland.\n\nThe map of Berland can be represented as an **undirected** graph. The cities are vertices and the roads are edges between them. Each pair of cities has no more than one road between them. Each road connects different cities.\n\nBerEx and BerPS are so competitive that for each pair of cities $(v,u)$ they have set up their paths from $v$ to $u$ in such a way that **these two paths don't share a single road.** It is guaranteed that it was possible.\n\nNow Berland government decided to cut down the road maintenance cost by abandoning some roads. Obviously, they want to maintain as little roads as possible. However, they don't want to break the entire delivery system. So BerEx and BerPS should still be able to have their paths between every pair of cities non-intersecting.\n\nWhat is the minimal number of roads Berland government can maintain?\n\n*More formally, given a 2-edge connected undirected graph, what is the minimum number of edges that can be left in it so that the resulting graph is also 2-edge connected?*\n\n\n### Input\n\nThe first line contains two integers $n$ and $m$ ($3\\leq n\\leq14$, $n\\leq m\\leq \\frac{n(n-1)}{2}$) — the number of cities and the number of roads between them.\n\nEach of the next 𝑚 lines contains two integers $v$ and $u$ ($1\\leq v,u\\leq n,v\\neq u$) — the cities connected by the next road.\n\nIt is guaranteed that each pair of cities has no more than one road between them. It is guaranteed that each pair of cities have at least two paths between them that don't share a single road.\n\n\n### Output\n\nThe first line should contain a single integer $k$ — the minimum number of roads Berland government can maintain so that BerEx and BerPS are still able to have their paths between every pair of cities non-intersecting.\n\nThe next $k$ lines should contain the list of roads which are being maintained. Each line of form \"$v\\ u$\", where $v$ and $u$ are cities connected by the next road.\n\nIf there are multiple lists of minimum size, print any of them. The order of roads in the list doesn't matter.\n\n\n### Examples\n\n#### input1\n\n3 3\n1 2\n2 3\n3 1\n\n#### output1\n\n\n3\n1 3\n3 2\n1 2\n\n\n#### input2\n\n\n4 5\n1 2\n1 4\n2 3\n4 3\n1 3\n\n\n#### output2\n\n\n4\n1 4\n4 3\n3 2\n1 2\n\n\n#### input3\n\n\n6 10\n1 2\n2 3\n3 1\n3 4\n4 5\n5 6\n4 6\n2 5\n1 6\n3 5\n\n\n#### output3\n\n\n6\n1 6\n6 5\n5 4\n4 3\n3 2\n1 2\n\n\n### Note\n\nHere are graphs from the examples, red edges are the maintained ones.\n\n![cf_1155_f_1.png](/img/cf_1155_f_1.png)\n\n![cf_1155_f_1.png](/img/cf_1155_f_2.png)\n\n![cf_1155_f_1.png](/img/cf_1155_f_3.png)\n\n### 题意\n\n给你一个不超过14个节点的无向图，让你找到满足一下条件的一个子图：\n\n- 包含所有点\n- 包含尽可能少的边\n- 子图中任意两个点存在两条完全不交的路径\n\n让你输出一个任意符合题意的子图。\n\n### 分析\n\n当时没做出来，看题解才做出来的。建议先看原题解。如下：\n\n  Let's use dynamic programming to solve this problem. We will start with a single biconnected component consisting of vertex $0$, and connect other vertices to it. So, the state of our dynamic programming will be a $mask$ of vertices that are in the same biconnected component with $0$.\n\n  How can we extend a biconnected component in such a way that some other vertices are added into it, but it is still biconnected? We will add a path (possibly cyclic) that starts in some vertex $x$ belonging to the $mask$, goes through some vertices not belonging to the $mask$, and ends in some vertex $y$ belonging to the $mask$ (possibly $x=y$). If for every triple ($x,y,addmask$) we precalculate some path that starts in $x$, goes through vertices from $addmask$ and ends in $y$ (and $addmask$ does not contain neither $x$ nor $y$), then we can solve the problem in $O(3^nn^2)$: there will be $2^n$ states, for every state we will iterate on two vertices $x$ and $y$ belonging to the $mask$, and the number of possible pairs of non-intersecting masks $mask$ and $addmask$ is $O(3^n)$.\n\n  The only thing that's left is precalculating the paths for triples ($x,y,addmask$). That can be done with auxiliary dynamic programming $dp2[x][y][addmask]$ which will denote whether such a path exists. For every edge ($u,v$) of the original graph, $dp2[u][v][0]$ is true, and we can go from $dp2[x][y][addmask]$ to some state $dp2[x][z][addmask^{'}]$, where $addmask^{'}$ will contain all vertices from $addmask$ and vertex $y$ (and we should ensure that there is an edge ($y,z$) in the graph and the $addmask$ didn't contain vertex $y$ earlier). We should also somehow be able to restore the paths from this dp, and we also should be careful not to choose the same edge twice (for example, if we start a path by edge ($x,y$), we should not use the same edge to return to $x$) — both these things can be done, for example, by storing next-to-last vertex in the path.\n\n我基本是看完题解才有想法的，和题解写的一模一样，（其实不一样，我写的比标程丑）。\n\n大体思路还是很清晰的。\n\n首先，我们可以很轻松的发现，答案一定是很多环交在了一起构成了答案对应的子图，然后对于任何一个存在很多环相交的图来说，我们可以拆成一个环和很多很多边构成的，如下图：\n\n![edu_cf_63_f_1.png](/img/edu_cf_63_f_1.png)\n\n同样的我们可以很轻松的得到，任何一个环都可以作为拆分后唯一的环。剩下的问题就是我们怎么找到所有的边了。也即怎么找到我们需要的所有路径。我们做以下定义。\n\n我们找到一条从$a$到$b$的路径，并且其中包括$mask$对应的其他点，我们假设$dp2[a][b][mask]$表示是否存在一条从$a$到$b$的路径，并且还包含了$mask$点，例如：\n\n$dp2[1][3][1] = 1$表示存在一条$1-0-3$的路径\n\n$dp2[3][5][3] = 1$表示存在一条从$3$到$5$的路径，其中包含$0$号点和$1$号点，路径可能是$3-0-1-5$，也可能是$3-1-0-5$。\n\n对于他的转移显然比较好想，直接枚举下一个点是谁就行了。\n\n然后我们取出任意一个节点表示当前符合答案的子图的子图。因为一个点的时候显然符合答案（因为一对都没有）。然后我们在这个子图的子图中不断的添加边构成环，最后判断得到的全图是否满足答案就行了。。。。\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int inf = 0x3f3f3f3f;\nconst int maxn = 14;\nconst int maxm = 1<<maxn;\nint n,m,upper;\nint dp[maxm|10];//记录答案是否存在，也即当前子图是否满足条件（子图中任意两个点存在两条完全不交的路径）\nbool dp2[maxn][maxn][maxm];//表示是否存在一条从i到j，包含mask对应点的路径\nint last[maxn][maxn][maxm];//用来记录i到j中上一个点是谁，用来输出路径\nvector<int> bit[maxm|10];//表示mask中对应的点的编号\nvector<int> mat[maxm|10];//存输入的图\npair<int,int> con[maxm|10];//表示mask对应的两个外部点，也就是路径的起点终点\nint addmask[maxm|10];//mask对应的外部边对应的mask\nvoid show_bit(int a){\n\tif(a) show_bit(a>>1);\n\telse return ;\n\tif(a&1) cout<<1;\n\telse cout<<0;\n}\nint main(){\n\tcin>>n>>m;\n\tupper = 1<<n;\n\tfor(int i = 0,a,b;i<m;i++){\n\t\tcin>>a>>b;\n\t\ta--,b--;\n\t\tmat[a].push_back(b);\n\t\tmat[b].push_back(a);\n\t}\n\tmemset(dp,0x3f,sizeof dp);\n\tmemset(dp2,false,sizeof dp2);\n\tfor(int i = 0;i<n;i++)\n\t\tfor(auto j: mat[i]){\n\t\t\tdp2[i][j][0] = 1;\n\t\t\tlast[i][j][0] = i;\n\t\t}\n\tfor(int mask = 0;mask<upper;mask++) for(int j = 0;j<n;j++) if(mask&(1<<j)) bit[mask].push_back(j);\n\tfor(int mask = 0;mask<upper;mask++){\n\t\tfor(int i = 0;i<n;i++){\n\t\t\tif(mask&(1<<i)) continue;\n\t\t\tfor(int j = 0;j<n;j++){\n\t\t\t\tif(mask&(1<<j)) continue;\n\t\t\t\tif(i==j||dp2[i][j][mask]==false) continue;\n\t\t\t\tfor(auto z:mat[j]){\n\t\t\t\t\tif(mask&(1<<z)) continue;\n\t\t\t\t\tif(z==last[i][j][mask]) continue;\n\t\t\t\t\tif(dp2[i][z][mask|(1<<j)]==false){\n\t\t\t\t\t\tlast[i][z][mask|(1<<j)] = j;\n\t\t\t\t\t\tdp2[i][z][mask|(1<<j)] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tdp[1] = 0;\n\tfor(int mask = 0;mask < upper;mask++) {\n\t\tfor(int add = mask;add;add = (add-1)&mask){\n\t\t\tint pre = add^mask;\n\t\t\tint cnt = __builtin_popcount(add)+1;\n\t\t\tif(dp[pre]+cnt>=dp[mask]) continue;\n\t\t\tbool flag = false;\n\t\t\tfor(auto x:bit[pre]){\n\t\t\t\tfor(auto y: bit[pre]){\n\t\t\t\t\tif(dp2[x][y][add]){\n\t\t\t\t\t\tdp[mask] = dp[pre]+cnt;\n\t\t\t\t\t\tcon[mask] = make_pair(x,y);\n\t\t\t\t\t\taddmask[mask] = add;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(dp[(1<<n)-1]==inf) cout<<-1<<endl;\n\telse {\n\t\tcout<<dp[(1<<n)-1]<<endl;\n\t\tint cur = (1<<n) - 1;\n\t\twhile(cur!=1){\n\t\t\tint add = addmask[cur];\n\t\t\tint x = con[cur].first;\n\t\t\tint y = con[cur].second;\n\t\t\tcur^=add;\n\t\t\twhile(add){\n\t\t\t\tint ny = last[x][y][add];\n\t\t\t\tcout<<y+1<<' '<<ny+1<<endl;\n\t\t\t\ty = ny;\n\t\t\t\tadd^=(1<<ny);\n\t\t\t}\n\t\t\tcout<<x+1<<' '<<y+1<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n","slug":"CF/Educational Codeforces Round 63","published":1,"updated":"2019-04-29T06:37:03.889Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1hr001xa613wwh05uzt","content":"<h2 id=\"F-Delivery-Oligopoly\"><a href=\"#F-Delivery-Oligopoly\" class=\"headerlink\" title=\"F. Delivery Oligopoly\"></a>F. Delivery Oligopoly</h2><p><a href=\"https://codeforces.com/contest/1155/problem/F\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<a id=\"more\"></a>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>The whole delivery market of Berland is controlled by two rival companies: BerEx and BerPS. They both provide fast and reliable delivery services across all the cities of Berland.</p>\n<p>The map of Berland can be represented as an <strong>undirected</strong> graph. The cities are vertices and the roads are edges between them. Each pair of cities has no more than one road between them. Each road connects different cities.</p>\n<p>BerEx and BerPS are so competitive that for each pair of cities $(v,u)$ they have set up their paths from $v$ to $u$ in such a way that <strong>these two paths don’t share a single road.</strong> It is guaranteed that it was possible.</p>\n<p>Now Berland government decided to cut down the road maintenance cost by abandoning some roads. Obviously, they want to maintain as little roads as possible. However, they don’t want to break the entire delivery system. So BerEx and BerPS should still be able to have their paths between every pair of cities non-intersecting.</p>\n<p>What is the minimal number of roads Berland government can maintain?</p>\n<p><em>More formally, given a 2-edge connected undirected graph, what is the minimum number of edges that can be left in it so that the resulting graph is also 2-edge connected?</em></p>\n<h3 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h3><p>The first line contains two integers $n$ and $m$ ($3\\leq n\\leq14$, $n\\leq m\\leq \\frac{n(n-1)}{2}$) — the number of cities and the number of roads between them.</p>\n<p>Each of the next 𝑚 lines contains two integers $v$ and $u$ ($1\\leq v,u\\leq n,v\\neq u$) — the cities connected by the next road.</p>\n<p>It is guaranteed that each pair of cities has no more than one road between them. It is guaranteed that each pair of cities have at least two paths between them that don’t share a single road.</p>\n<h3 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h3><p>The first line should contain a single integer $k$ — the minimum number of roads Berland government can maintain so that BerEx and BerPS are still able to have their paths between every pair of cities non-intersecting.</p>\n<p>The next $k$ lines should contain the list of roads which are being maintained. Each line of form “$v\\ u$”, where $v$ and $u$ are cities connected by the next road.</p>\n<p>If there are multiple lists of minimum size, print any of them. The order of roads in the list doesn’t matter.</p>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"input1\"><a href=\"#input1\" class=\"headerlink\" title=\"input1\"></a>input1</h4><p>3 3<br>1 2<br>2 3<br>3 1</p>\n<h4 id=\"output1\"><a href=\"#output1\" class=\"headerlink\" title=\"output1\"></a>output1</h4><p>3<br>1 3<br>3 2<br>1 2</p>\n<h4 id=\"input2\"><a href=\"#input2\" class=\"headerlink\" title=\"input2\"></a>input2</h4><p>4 5<br>1 2<br>1 4<br>2 3<br>4 3<br>1 3</p>\n<h4 id=\"output2\"><a href=\"#output2\" class=\"headerlink\" title=\"output2\"></a>output2</h4><p>4<br>1 4<br>4 3<br>3 2<br>1 2</p>\n<h4 id=\"input3\"><a href=\"#input3\" class=\"headerlink\" title=\"input3\"></a>input3</h4><p>6 10<br>1 2<br>2 3<br>3 1<br>3 4<br>4 5<br>5 6<br>4 6<br>2 5<br>1 6<br>3 5</p>\n<h4 id=\"output3\"><a href=\"#output3\" class=\"headerlink\" title=\"output3\"></a>output3</h4><p>6<br>1 6<br>6 5<br>5 4<br>4 3<br>3 2<br>1 2</p>\n<h3 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h3><p>Here are graphs from the examples, red edges are the maintained ones.</p>\n<p><img src=\"/img/cf_1155_f_1.png\" alt=\"cf_1155_f_1.png\"></p>\n<p><img src=\"/img/cf_1155_f_2.png\" alt=\"cf_1155_f_1.png\"></p>\n<p><img src=\"/img/cf_1155_f_3.png\" alt=\"cf_1155_f_1.png\"></p>\n<h3 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>给你一个不超过14个节点的无向图，让你找到满足一下条件的一个子图：</p>\n<ul>\n<li>包含所有点</li>\n<li>包含尽可能少的边</li>\n<li>子图中任意两个点存在两条完全不交的路径</li>\n</ul>\n<p>让你输出一个任意符合题意的子图。</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>当时没做出来，看题解才做出来的。建议先看原题解。如下：</p>\n<p>  Let’s use dynamic programming to solve this problem. We will start with a single biconnected component consisting of vertex $0$, and connect other vertices to it. So, the state of our dynamic programming will be a $mask$ of vertices that are in the same biconnected component with $0$.</p>\n<p>  How can we extend a biconnected component in such a way that some other vertices are added into it, but it is still biconnected? We will add a path (possibly cyclic) that starts in some vertex $x$ belonging to the $mask$, goes through some vertices not belonging to the $mask$, and ends in some vertex $y$ belonging to the $mask$ (possibly $x=y$). If for every triple ($x,y,addmask$) we precalculate some path that starts in $x$, goes through vertices from $addmask$ and ends in $y$ (and $addmask$ does not contain neither $x$ nor $y$), then we can solve the problem in $O(3^nn^2)$: there will be $2^n$ states, for every state we will iterate on two vertices $x$ and $y$ belonging to the $mask$, and the number of possible pairs of non-intersecting masks $mask$ and $addmask$ is $O(3^n)$.</p>\n<p>  The only thing that’s left is precalculating the paths for triples ($x,y,addmask$). That can be done with auxiliary dynamic programming $dp2[x][y][addmask]$ which will denote whether such a path exists. For every edge ($u,v$) of the original graph, $dp2[u][v][0]$ is true, and we can go from $dp2[x][y][addmask]$ to some state $dp2[x][z][addmask^{‘}]$, where $addmask^{‘}$ will contain all vertices from $addmask$ and vertex $y$ (and we should ensure that there is an edge ($y,z$) in the graph and the $addmask$ didn’t contain vertex $y$ earlier). We should also somehow be able to restore the paths from this dp, and we also should be careful not to choose the same edge twice (for example, if we start a path by edge ($x,y$), we should not use the same edge to return to $x$) — both these things can be done, for example, by storing next-to-last vertex in the path.</p>\n<p>我基本是看完题解才有想法的，和题解写的一模一样，（其实不一样，我写的比标程丑）。</p>\n<p>大体思路还是很清晰的。</p>\n<p>首先，我们可以很轻松的发现，答案一定是很多环交在了一起构成了答案对应的子图，然后对于任何一个存在很多环相交的图来说，我们可以拆成一个环和很多很多边构成的，如下图：</p>\n<p><img src=\"/img/edu_cf_63_f_1.png\" alt=\"edu_cf_63_f_1.png\"></p>\n<p>同样的我们可以很轻松的得到，任何一个环都可以作为拆分后唯一的环。剩下的问题就是我们怎么找到所有的边了。也即怎么找到我们需要的所有路径。我们做以下定义。</p>\n<p>我们找到一条从$a$到$b$的路径，并且其中包括$mask$对应的其他点，我们假设$dp2[a][b][mask]$表示是否存在一条从$a$到$b$的路径，并且还包含了$mask$点，例如：</p>\n<p>$dp2[1][3][1] = 1$表示存在一条$1-0-3$的路径</p>\n<p>$dp2[3][5][3] = 1$表示存在一条从$3$到$5$的路径，其中包含$0$号点和$1$号点，路径可能是$3-0-1-5$，也可能是$3-1-0-5$。</p>\n<p>对于他的转移显然比较好想，直接枚举下一个点是谁就行了。</p>\n<p>然后我们取出任意一个节点表示当前符合答案的子图的子图。因为一个点的时候显然符合答案（因为一对都没有）。然后我们在这个子图的子图中不断的添加边构成环，最后判断得到的全图是否满足答案就行了。。。。</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> inf = <span class=\"number\">0x3f3f3f3f</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxn = <span class=\"number\">14</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">1</span>&lt;&lt;maxn;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m,upper;</span><br><span class=\"line\"><span class=\"keyword\">int</span> dp[maxm|<span class=\"number\">10</span>];<span class=\"comment\">//记录答案是否存在，也即当前子图是否满足条件（子图中任意两个点存在两条完全不交的路径）</span></span><br><span class=\"line\"><span class=\"keyword\">bool</span> dp2[maxn][maxn][maxm];<span class=\"comment\">//表示是否存在一条从i到j，包含mask对应点的路径</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> last[maxn][maxn][maxm];<span class=\"comment\">//用来记录i到j中上一个点是谁，用来输出路径</span></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; bit[maxm|<span class=\"number\">10</span>];<span class=\"comment\">//表示mask中对应的点的编号</span></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; mat[maxm|<span class=\"number\">10</span>];<span class=\"comment\">//存输入的图</span></span><br><span class=\"line\">pair&lt;<span class=\"keyword\">int</span>,<span class=\"keyword\">int</span>&gt; con[maxm|<span class=\"number\">10</span>];<span class=\"comment\">//表示mask对应的两个外部点，也就是路径的起点终点</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> addmask[maxm|<span class=\"number\">10</span>];<span class=\"comment\">//mask对应的外部边对应的mask</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">show_bit</span><span class=\"params\">(<span class=\"keyword\">int</span> a)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a) show_bit(a&gt;&gt;<span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">return</span> ;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a&amp;<span class=\"number\">1</span>) <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class=\"line\">\tupper = <span class=\"number\">1</span>&lt;&lt;n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>,a,b;i&lt;m;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class=\"line\">\t\ta--,b--;</span><br><span class=\"line\">\t\tmat[a].push_back(b);</span><br><span class=\"line\">\t\tmat[b].push_back(a);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(dp,<span class=\"number\">0x3f</span>,<span class=\"keyword\">sizeof</span> dp);</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(dp2,<span class=\"literal\">false</span>,<span class=\"keyword\">sizeof</span> dp2);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> j: mat[i])&#123;</span><br><span class=\"line\">\t\t\tdp2[i][j][<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tlast[i][j][<span class=\"number\">0</span>] = i;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> mask = <span class=\"number\">0</span>;mask&lt;upper;mask++) <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j&lt;n;j++) <span class=\"keyword\">if</span>(mask&amp;(<span class=\"number\">1</span>&lt;&lt;j)) bit[mask].push_back(j);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> mask = <span class=\"number\">0</span>;mask&lt;upper;mask++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(mask&amp;(<span class=\"number\">1</span>&lt;&lt;i)) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j&lt;n;j++)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(mask&amp;(<span class=\"number\">1</span>&lt;&lt;j)) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(i==j||dp2[i][j][mask]==<span class=\"literal\">false</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> z:mat[j])&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(mask&amp;(<span class=\"number\">1</span>&lt;&lt;z)) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(z==last[i][j][mask]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(dp2[i][z][mask|(<span class=\"number\">1</span>&lt;&lt;j)]==<span class=\"literal\">false</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\tlast[i][z][mask|(<span class=\"number\">1</span>&lt;&lt;j)] = j;</span><br><span class=\"line\">\t\t\t\t\t\tdp2[i][z][mask|(<span class=\"number\">1</span>&lt;&lt;j)] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tdp[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> mask = <span class=\"number\">0</span>;mask &lt; upper;mask++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> add = mask;add;add = (add<span class=\"number\">-1</span>)&amp;mask)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> pre = add^mask;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> cnt = __builtin_popcount(add)+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(dp[pre]+cnt&gt;=dp[mask]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">bool</span> flag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> x:bit[pre])&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> y: bit[pre])&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(dp2[x][y][add])&#123;</span><br><span class=\"line\">\t\t\t\t\t\tdp[mask] = dp[pre]+cnt;</span><br><span class=\"line\">\t\t\t\t\t\tcon[mask] = make_pair(x,y);</span><br><span class=\"line\">\t\t\t\t\t\taddmask[mask] = add;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(dp[(<span class=\"number\">1</span>&lt;&lt;n)<span class=\"number\">-1</span>]==inf) <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"number\">-1</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;dp[(<span class=\"number\">1</span>&lt;&lt;n)<span class=\"number\">-1</span>]&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> cur = (<span class=\"number\">1</span>&lt;&lt;n) - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(cur!=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> add = addmask[cur];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> x = con[cur].first;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> y = con[cur].second;</span><br><span class=\"line\">\t\t\tcur^=add;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(add)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">int</span> ny = last[x][y][add];</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">cout</span>&lt;&lt;y+<span class=\"number\">1</span>&lt;&lt;<span class=\"string\">' '</span>&lt;&lt;ny+<span class=\"number\">1</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t\t\ty = ny;</span><br><span class=\"line\">\t\t\t\tadd^=(<span class=\"number\">1</span>&lt;&lt;ny);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span>&lt;&lt;x+<span class=\"number\">1</span>&lt;&lt;<span class=\"string\">' '</span>&lt;&lt;y+<span class=\"number\">1</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"F-Delivery-Oligopoly\"><a href=\"#F-Delivery-Oligopoly\" class=\"headerlink\" title=\"F. Delivery Oligopoly\"></a>F. Delivery Oligopoly</h2><p><a href=\"https://codeforces.com/contest/1155/problem/F\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>","more":"<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>The whole delivery market of Berland is controlled by two rival companies: BerEx and BerPS. They both provide fast and reliable delivery services across all the cities of Berland.</p>\n<p>The map of Berland can be represented as an <strong>undirected</strong> graph. The cities are vertices and the roads are edges between them. Each pair of cities has no more than one road between them. Each road connects different cities.</p>\n<p>BerEx and BerPS are so competitive that for each pair of cities $(v,u)$ they have set up their paths from $v$ to $u$ in such a way that <strong>these two paths don’t share a single road.</strong> It is guaranteed that it was possible.</p>\n<p>Now Berland government decided to cut down the road maintenance cost by abandoning some roads. Obviously, they want to maintain as little roads as possible. However, they don’t want to break the entire delivery system. So BerEx and BerPS should still be able to have their paths between every pair of cities non-intersecting.</p>\n<p>What is the minimal number of roads Berland government can maintain?</p>\n<p><em>More formally, given a 2-edge connected undirected graph, what is the minimum number of edges that can be left in it so that the resulting graph is also 2-edge connected?</em></p>\n<h3 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h3><p>The first line contains two integers $n$ and $m$ ($3\\leq n\\leq14$, $n\\leq m\\leq \\frac{n(n-1)}{2}$) — the number of cities and the number of roads between them.</p>\n<p>Each of the next 𝑚 lines contains two integers $v$ and $u$ ($1\\leq v,u\\leq n,v\\neq u$) — the cities connected by the next road.</p>\n<p>It is guaranteed that each pair of cities has no more than one road between them. It is guaranteed that each pair of cities have at least two paths between them that don’t share a single road.</p>\n<h3 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h3><p>The first line should contain a single integer $k$ — the minimum number of roads Berland government can maintain so that BerEx and BerPS are still able to have their paths between every pair of cities non-intersecting.</p>\n<p>The next $k$ lines should contain the list of roads which are being maintained. Each line of form “$v\\ u$”, where $v$ and $u$ are cities connected by the next road.</p>\n<p>If there are multiple lists of minimum size, print any of them. The order of roads in the list doesn’t matter.</p>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"input1\"><a href=\"#input1\" class=\"headerlink\" title=\"input1\"></a>input1</h4><p>3 3<br>1 2<br>2 3<br>3 1</p>\n<h4 id=\"output1\"><a href=\"#output1\" class=\"headerlink\" title=\"output1\"></a>output1</h4><p>3<br>1 3<br>3 2<br>1 2</p>\n<h4 id=\"input2\"><a href=\"#input2\" class=\"headerlink\" title=\"input2\"></a>input2</h4><p>4 5<br>1 2<br>1 4<br>2 3<br>4 3<br>1 3</p>\n<h4 id=\"output2\"><a href=\"#output2\" class=\"headerlink\" title=\"output2\"></a>output2</h4><p>4<br>1 4<br>4 3<br>3 2<br>1 2</p>\n<h4 id=\"input3\"><a href=\"#input3\" class=\"headerlink\" title=\"input3\"></a>input3</h4><p>6 10<br>1 2<br>2 3<br>3 1<br>3 4<br>4 5<br>5 6<br>4 6<br>2 5<br>1 6<br>3 5</p>\n<h4 id=\"output3\"><a href=\"#output3\" class=\"headerlink\" title=\"output3\"></a>output3</h4><p>6<br>1 6<br>6 5<br>5 4<br>4 3<br>3 2<br>1 2</p>\n<h3 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h3><p>Here are graphs from the examples, red edges are the maintained ones.</p>\n<p><img src=\"/img/cf_1155_f_1.png\" alt=\"cf_1155_f_1.png\"></p>\n<p><img src=\"/img/cf_1155_f_2.png\" alt=\"cf_1155_f_1.png\"></p>\n<p><img src=\"/img/cf_1155_f_3.png\" alt=\"cf_1155_f_1.png\"></p>\n<h3 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>给你一个不超过14个节点的无向图，让你找到满足一下条件的一个子图：</p>\n<ul>\n<li>包含所有点</li>\n<li>包含尽可能少的边</li>\n<li>子图中任意两个点存在两条完全不交的路径</li>\n</ul>\n<p>让你输出一个任意符合题意的子图。</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>当时没做出来，看题解才做出来的。建议先看原题解。如下：</p>\n<p>  Let’s use dynamic programming to solve this problem. We will start with a single biconnected component consisting of vertex $0$, and connect other vertices to it. So, the state of our dynamic programming will be a $mask$ of vertices that are in the same biconnected component with $0$.</p>\n<p>  How can we extend a biconnected component in such a way that some other vertices are added into it, but it is still biconnected? We will add a path (possibly cyclic) that starts in some vertex $x$ belonging to the $mask$, goes through some vertices not belonging to the $mask$, and ends in some vertex $y$ belonging to the $mask$ (possibly $x=y$). If for every triple ($x,y,addmask$) we precalculate some path that starts in $x$, goes through vertices from $addmask$ and ends in $y$ (and $addmask$ does not contain neither $x$ nor $y$), then we can solve the problem in $O(3^nn^2)$: there will be $2^n$ states, for every state we will iterate on two vertices $x$ and $y$ belonging to the $mask$, and the number of possible pairs of non-intersecting masks $mask$ and $addmask$ is $O(3^n)$.</p>\n<p>  The only thing that’s left is precalculating the paths for triples ($x,y,addmask$). That can be done with auxiliary dynamic programming $dp2[x][y][addmask]$ which will denote whether such a path exists. For every edge ($u,v$) of the original graph, $dp2[u][v][0]$ is true, and we can go from $dp2[x][y][addmask]$ to some state $dp2[x][z][addmask^{‘}]$, where $addmask^{‘}$ will contain all vertices from $addmask$ and vertex $y$ (and we should ensure that there is an edge ($y,z$) in the graph and the $addmask$ didn’t contain vertex $y$ earlier). We should also somehow be able to restore the paths from this dp, and we also should be careful not to choose the same edge twice (for example, if we start a path by edge ($x,y$), we should not use the same edge to return to $x$) — both these things can be done, for example, by storing next-to-last vertex in the path.</p>\n<p>我基本是看完题解才有想法的，和题解写的一模一样，（其实不一样，我写的比标程丑）。</p>\n<p>大体思路还是很清晰的。</p>\n<p>首先，我们可以很轻松的发现，答案一定是很多环交在了一起构成了答案对应的子图，然后对于任何一个存在很多环相交的图来说，我们可以拆成一个环和很多很多边构成的，如下图：</p>\n<p><img src=\"/img/edu_cf_63_f_1.png\" alt=\"edu_cf_63_f_1.png\"></p>\n<p>同样的我们可以很轻松的得到，任何一个环都可以作为拆分后唯一的环。剩下的问题就是我们怎么找到所有的边了。也即怎么找到我们需要的所有路径。我们做以下定义。</p>\n<p>我们找到一条从$a$到$b$的路径，并且其中包括$mask$对应的其他点，我们假设$dp2[a][b][mask]$表示是否存在一条从$a$到$b$的路径，并且还包含了$mask$点，例如：</p>\n<p>$dp2[1][3][1] = 1$表示存在一条$1-0-3$的路径</p>\n<p>$dp2[3][5][3] = 1$表示存在一条从$3$到$5$的路径，其中包含$0$号点和$1$号点，路径可能是$3-0-1-5$，也可能是$3-1-0-5$。</p>\n<p>对于他的转移显然比较好想，直接枚举下一个点是谁就行了。</p>\n<p>然后我们取出任意一个节点表示当前符合答案的子图的子图。因为一个点的时候显然符合答案（因为一对都没有）。然后我们在这个子图的子图中不断的添加边构成环，最后判断得到的全图是否满足答案就行了。。。。</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> inf = <span class=\"number\">0x3f3f3f3f</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxn = <span class=\"number\">14</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">1</span>&lt;&lt;maxn;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m,upper;</span><br><span class=\"line\"><span class=\"keyword\">int</span> dp[maxm|<span class=\"number\">10</span>];<span class=\"comment\">//记录答案是否存在，也即当前子图是否满足条件（子图中任意两个点存在两条完全不交的路径）</span></span><br><span class=\"line\"><span class=\"keyword\">bool</span> dp2[maxn][maxn][maxm];<span class=\"comment\">//表示是否存在一条从i到j，包含mask对应点的路径</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> last[maxn][maxn][maxm];<span class=\"comment\">//用来记录i到j中上一个点是谁，用来输出路径</span></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; bit[maxm|<span class=\"number\">10</span>];<span class=\"comment\">//表示mask中对应的点的编号</span></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; mat[maxm|<span class=\"number\">10</span>];<span class=\"comment\">//存输入的图</span></span><br><span class=\"line\">pair&lt;<span class=\"keyword\">int</span>,<span class=\"keyword\">int</span>&gt; con[maxm|<span class=\"number\">10</span>];<span class=\"comment\">//表示mask对应的两个外部点，也就是路径的起点终点</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> addmask[maxm|<span class=\"number\">10</span>];<span class=\"comment\">//mask对应的外部边对应的mask</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">show_bit</span><span class=\"params\">(<span class=\"keyword\">int</span> a)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a) show_bit(a&gt;&gt;<span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">return</span> ;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a&amp;<span class=\"number\">1</span>) <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class=\"line\">\tupper = <span class=\"number\">1</span>&lt;&lt;n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>,a,b;i&lt;m;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class=\"line\">\t\ta--,b--;</span><br><span class=\"line\">\t\tmat[a].push_back(b);</span><br><span class=\"line\">\t\tmat[b].push_back(a);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(dp,<span class=\"number\">0x3f</span>,<span class=\"keyword\">sizeof</span> dp);</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(dp2,<span class=\"literal\">false</span>,<span class=\"keyword\">sizeof</span> dp2);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> j: mat[i])&#123;</span><br><span class=\"line\">\t\t\tdp2[i][j][<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tlast[i][j][<span class=\"number\">0</span>] = i;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> mask = <span class=\"number\">0</span>;mask&lt;upper;mask++) <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j&lt;n;j++) <span class=\"keyword\">if</span>(mask&amp;(<span class=\"number\">1</span>&lt;&lt;j)) bit[mask].push_back(j);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> mask = <span class=\"number\">0</span>;mask&lt;upper;mask++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(mask&amp;(<span class=\"number\">1</span>&lt;&lt;i)) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j&lt;n;j++)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(mask&amp;(<span class=\"number\">1</span>&lt;&lt;j)) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(i==j||dp2[i][j][mask]==<span class=\"literal\">false</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> z:mat[j])&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(mask&amp;(<span class=\"number\">1</span>&lt;&lt;z)) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(z==last[i][j][mask]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(dp2[i][z][mask|(<span class=\"number\">1</span>&lt;&lt;j)]==<span class=\"literal\">false</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\tlast[i][z][mask|(<span class=\"number\">1</span>&lt;&lt;j)] = j;</span><br><span class=\"line\">\t\t\t\t\t\tdp2[i][z][mask|(<span class=\"number\">1</span>&lt;&lt;j)] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tdp[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> mask = <span class=\"number\">0</span>;mask &lt; upper;mask++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> add = mask;add;add = (add<span class=\"number\">-1</span>)&amp;mask)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> pre = add^mask;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> cnt = __builtin_popcount(add)+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(dp[pre]+cnt&gt;=dp[mask]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">bool</span> flag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> x:bit[pre])&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> y: bit[pre])&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(dp2[x][y][add])&#123;</span><br><span class=\"line\">\t\t\t\t\t\tdp[mask] = dp[pre]+cnt;</span><br><span class=\"line\">\t\t\t\t\t\tcon[mask] = make_pair(x,y);</span><br><span class=\"line\">\t\t\t\t\t\taddmask[mask] = add;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(dp[(<span class=\"number\">1</span>&lt;&lt;n)<span class=\"number\">-1</span>]==inf) <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"number\">-1</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;dp[(<span class=\"number\">1</span>&lt;&lt;n)<span class=\"number\">-1</span>]&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> cur = (<span class=\"number\">1</span>&lt;&lt;n) - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(cur!=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> add = addmask[cur];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> x = con[cur].first;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> y = con[cur].second;</span><br><span class=\"line\">\t\t\tcur^=add;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(add)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">int</span> ny = last[x][y][add];</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">cout</span>&lt;&lt;y+<span class=\"number\">1</span>&lt;&lt;<span class=\"string\">' '</span>&lt;&lt;ny+<span class=\"number\">1</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t\t\ty = ny;</span><br><span class=\"line\">\t\t\t\tadd^=(<span class=\"number\">1</span>&lt;&lt;ny);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span>&lt;&lt;x+<span class=\"number\">1</span>&lt;&lt;<span class=\"string\">' '</span>&lt;&lt;y+<span class=\"number\">1</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"程序对拍器","date":"2019-05-28T16:00:00.000Z","author":"zuhiul","_content":"\n### 对拍器\n\n```bash\ng++ -std=c++11 my.cpp -o my\ng++ -std=c++11 data.cpp -o data\ng++ -std=c++11 ac.cpp -o ac\nwhile true; do\n\t./data > in\n\t./my < in > my.out\n\t./ac < in > ac.out\n\tif diff my.out ac.out; then\n\t\t((var++))\n\t\techo $var\n    else\n        printf \"WA\\n\"\n        exit 0\n    fi\ndone\n```\n","source":"_posts/skill/program_beat.md","raw":"---\ntitle: 程序对拍器\ndate: 2019-05-29\nauthor: \"zuhiul\"\ntags:\n  - 模板\n---\n\n### 对拍器\n\n```bash\ng++ -std=c++11 my.cpp -o my\ng++ -std=c++11 data.cpp -o data\ng++ -std=c++11 ac.cpp -o ac\nwhile true; do\n\t./data > in\n\t./my < in > my.out\n\t./ac < in > ac.out\n\tif diff my.out ac.out; then\n\t\t((var++))\n\t\techo $var\n    else\n        printf \"WA\\n\"\n        exit 0\n    fi\ndone\n```\n","slug":"skill/program_beat","published":1,"updated":"2019-06-03T13:22:37.677Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1hs001ya613jz4mnte1","content":"<h3 id=\"对拍器\"><a href=\"#对拍器\" class=\"headerlink\" title=\"对拍器\"></a>对拍器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">g++ -std=c++11 my.cpp -o my</span><br><span class=\"line\">g++ -std=c++11 data.cpp -o data</span><br><span class=\"line\">g++ -std=c++11 ac.cpp -o ac</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">true</span>; <span class=\"keyword\">do</span></span><br><span class=\"line\">\t./data &gt; <span class=\"keyword\">in</span></span><br><span class=\"line\">\t./my &lt; <span class=\"keyword\">in</span> &gt; my.out</span><br><span class=\"line\">\t./ac &lt; <span class=\"keyword\">in</span> &gt; ac.out</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> diff my.out ac.out; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t\t((var++))</span><br><span class=\"line\">\t\t<span class=\"built_in\">echo</span> <span class=\"variable\">$var</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">printf</span> <span class=\"string\">\"WA\\n\"</span></span><br><span class=\"line\">        <span class=\"built_in\">exit</span> 0</span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"对拍器\"><a href=\"#对拍器\" class=\"headerlink\" title=\"对拍器\"></a>对拍器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">g++ -std=c++11 my.cpp -o my</span><br><span class=\"line\">g++ -std=c++11 data.cpp -o data</span><br><span class=\"line\">g++ -std=c++11 ac.cpp -o ac</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">true</span>; <span class=\"keyword\">do</span></span><br><span class=\"line\">\t./data &gt; <span class=\"keyword\">in</span></span><br><span class=\"line\">\t./my &lt; <span class=\"keyword\">in</span> &gt; my.out</span><br><span class=\"line\">\t./ac &lt; <span class=\"keyword\">in</span> &gt; ac.out</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> diff my.out ac.out; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t\t((var++))</span><br><span class=\"line\">\t\t<span class=\"built_in\">echo</span> <span class=\"variable\">$var</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">printf</span> <span class=\"string\">\"WA\\n\"</span></span><br><span class=\"line\">        <span class=\"built_in\">exit</span> 0</span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n"},{"title":"C++ 大数","date":"2019-06-02T16:00:00.000Z","author":"zuhiul","_content":"\n闲来无事写了一发玩玩。。。\n\n不保证正确性。。。\n\n<!-- more -->\n\n```cpp\n#include <algorithm>\n#include <bitset>\n#include <complex>\n#include <deque>\n#include <exception>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <ios>\n#include <iosfwd>\n#include <iostream>\n#include <istream>\n#include <iterator>\n#include <limits>\n#include <list>\n#include <locale>\n#include <map>\n#include <memory>\n#include <new>\n#include <numeric>\n#include <ostream>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdexcept>\n#include <streambuf>\n#include <string>\n#include <typeinfo>\n#include <utility>\n#include <valarray>\n#include <vector>\nusing namespace std;\nconst int mod = 10000;\nchar for_cin[mod<<8];\nstruct bigInt {/*{{{*/\n    bool neg;\n    vector<int> num;\n    bigInt() {\n        neg = false;\n    }\n    bigInt(int len) {\n        neg = false;\n        num.resize(len);\n        for(int i = 0;i<len;i++) num[i] = 0;\n    }\n};/*}}}*/\nvoid relen(bigInt&a) {/*{{{*/\n\tint len = a.num.size();\n    for(int i = len-1;i>0;i--) {\n        if(a.num[i] && a.num[i-1]<0) {\n            a.num[i]--;\n            a.num[i-1] += mod;\n        }\n    }\n    while(a.num.size()>=1&&a.num[a.num.size()-1]==0) a.num.resize(a.num.size()-1);\n    if(a.num.size()==0) a.num.push_back(0);\n}/*}}}*/\nvoid show(bigInt a,char b = '\\n'){/*{{{*/\n    if(a.neg) putchar('-');\n    int len = a.num.size();\n    printf(\"%d\",a.num[len-1]);\n    for(int i = len-2;i>=0;i--){\n        printf(\"%04d\",a.num[i]);\n    }\n    cout<<b;\n}/*}}}*/\nbool input(bigInt & ret){/*{{{*/\n    if(scanf(\"%s\",for_cin)==EOF) return false;\n    ret.num.resize(0);\n    int startInd = 0;\n    int len = strlen(for_cin);\n    if(for_cin[0]=='-') {\n        startInd = 1;\n        ret.neg = true;\n    }\n    int i;\n    for(i = len-4;i>=startInd;i-=4){\n        ret.num.push_back(atoi(for_cin+i));\n        for_cin[i] = '\\0';\n    }\n    if(i!=startInd) ret.num.push_back(atoi(for_cin+startInd));\n    relen(ret);\n    return true;\n}/*}}}*/\nbigInt trans(int a){/*{{{*/\n    bigInt ret(0);\n    if(a<0) ret.neg = true,a = -a;\n    while(a){\n        ret.num.resize(ret.num.size()+1);\n        ret.num[ret.num.size()-1] = a%mod;\n        a/=mod;\n    }\n    relen(ret);\n    return ret;\n}/*}}}*/\nbigInt trans(long long a){/*{{{*/\n    bigInt ret(0);\n    if(a<0) ret.neg = true,a = -a;\n    while(a){\n        ret.num.resize(ret.num.size()+1);\n        ret.num[ret.num.size()-1] = a%mod;\n        a/=mod;\n    }\n    relen(ret);\n    return ret;\n}/*}}}*/\nbool equal(bigInt a,bigInt b){/*{{{*/\n    if(a.neg!=b.neg) return false;\n    if(a.num.size()!=b.num.size()) return false;\n    int len = a.num.size();\n    for(int i = 0;i<len;i++) if(a.num[i]!=b.num[i]) return false;\n    return true;\n}/*}}}*/\nbool bigger(bigInt a,bigInt b) {/*{{{*/\n    if(a.neg&&!b.neg) return false;\n    if(!a.neg&&b.neg) return true;\n    if(a.neg&&b.neg) {\n        a.neg = b.neg = false;\n        bool ret = bigger(b,a);\n        a.neg = b.neg = true;\n        return ret;\n    }\n    if(a.num.size()>b.num.size()) return true;\n    if(a.num.size()<b.num.size()) return false;\n    int len = a.num.size();\n    for(int i = len-1;i>=0;i--){\n        if(a.num[i]!=b.num[i]) return a.num[i]>b.num[i];\n    }\n    return false;\n}/*}}}*/\nbigInt add(bigInt a,bigInt b) {/*{{{*/\n    bigInt ret(max(a.num.size(),b.num.size())+1);\n    if(a.neg&&b.neg){\n        a.neg = b.neg = false;\n        ret = add(a,b);\n        ret.neg = true;\n        return ret;\n    }\n    if(a.neg){/*{{{*/\n        a.neg = false;\n        if(bigger(a,b)) {\n            for(int i = b.num.size()-1;i>=0;i--){\n                a.num[i]-=b.num[i];\n                if(a.num[i]<0) {\n                    a.num[i]+=mod;\n                    a.num[i+1]--;\n                }\n            }\n            relen(a);\n            a.neg = true;\n            return a;\n        }else{\n            for(int i = a.num.size()-1;i>=0;i--){\n                b.num[i]-=a.num[i];\n                if(b.num[i]<0){\n                    b.num[i]+=mod;\n                    b.num[i+1]--;\n                }\n            }\n            relen(b);\n            return b;\n        }\n    }/*}}}*/\n    if(b.neg) return add(b,a);\n    int maxlen = max(a.num.size(),b.num.size());\n    a.num.resize(maxlen+1);\n    int minlen = min(a.num.size(),b.num.size());\n    for(int i = 0;i<minlen;i++){\n        a.num[i]+=b.num[i];\n        if(a.num[i]>=mod) {\n            a.num[i]-=mod;\n            a.num[i+1]++;\n        }\n        b.num[i] = 0;\n    }\n    relen(a);\n    return a;\n}/*}}}*/\nbigInt sub(bigInt a,bigInt b){/*{{{*/\n    b.neg = ~b.neg;\n    return add(a,b);\n}/*}}}*/\nbigInt mul(bigInt a,bigInt b){/*{{{*/\n    int lena = a.num.size();\n    int lenb = b.num.size();\n    int len = lena+lenb;\n    bigInt ret(len);\n    long long add = 0;\n    for(int i = 0;i<len;i++){\n        long long buf = add;\n        for(int j = max(0,i-lenb+1);j<=i&&j<lena;j++) buf = buf+a.num[j]*b.num[i-j];\n        add = buf/mod;\n        ret.num[i] = buf%mod;\n    }\n    ret.neg = (a.neg!=b.neg);\n    relen(ret);\n    return ret;\n}/*}}}*/\nbigInt exec(bigInt a,int b){/*{{{*/\n    bool neg = (b<0);\n    bigInt ret(a.num.size());\n    ret.neg = (a.neg!=neg);\n    a.neg = false;\n    int buf = 0;\n    for(int i = a.num.size()-1;i>=0;i--){\n        buf = buf*mod+a.num[i];\n        ret.num[i] = buf/b;\n        buf%=b;\n    }\n    relen(ret);\n    return ret;\n}/*}}}*/\nbigInt exec(bigInt a,bigInt b){/*{{{*/\n    bigInt base = trans(1);\n    bigInt big10 = trans(10);\n    bigInt big0 = trans(0);\n    bigInt ans = trans(0);\n    bool neg = (a.neg!=b.neg);\n    a.neg = b.neg = false;\n    while(bigger(a,mul(b,big10))) {\n        base = mul(base,big10);\n        b = mul(b,big10);\n    }\n    while(!equal(base,big0)) {\n        while(bigger(a,b)) {\n            ans = add(ans,base);\n            a = sub(a,b);\n        }\n        b = exec(b,10);\n        base = exec(base,10);\n    }\n    ans.neg = neg;\n    return ans;\n}/*}}}*/\nint Mod(bigInt a,int b){\n    int ret = 0;\n    for(int i = a.num.size()-1;i>=0;i--){\n        ret = ret*mod+a.num[i];\n        ret%=b;\n    }\n    return ret;\n}\nbigInt table[mod];\nint main(){\n    return 0;\n}\n```\n","source":"_posts/knowledge/BigInt.md","raw":"---\ntitle: C++ 大数\ndate: 2019-06-03\nauthor: \"zuhiul\"\ntags:\n  - 模板\n---\n\n闲来无事写了一发玩玩。。。\n\n不保证正确性。。。\n\n<!-- more -->\n\n```cpp\n#include <algorithm>\n#include <bitset>\n#include <complex>\n#include <deque>\n#include <exception>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <ios>\n#include <iosfwd>\n#include <iostream>\n#include <istream>\n#include <iterator>\n#include <limits>\n#include <list>\n#include <locale>\n#include <map>\n#include <memory>\n#include <new>\n#include <numeric>\n#include <ostream>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdexcept>\n#include <streambuf>\n#include <string>\n#include <typeinfo>\n#include <utility>\n#include <valarray>\n#include <vector>\nusing namespace std;\nconst int mod = 10000;\nchar for_cin[mod<<8];\nstruct bigInt {/*{{{*/\n    bool neg;\n    vector<int> num;\n    bigInt() {\n        neg = false;\n    }\n    bigInt(int len) {\n        neg = false;\n        num.resize(len);\n        for(int i = 0;i<len;i++) num[i] = 0;\n    }\n};/*}}}*/\nvoid relen(bigInt&a) {/*{{{*/\n\tint len = a.num.size();\n    for(int i = len-1;i>0;i--) {\n        if(a.num[i] && a.num[i-1]<0) {\n            a.num[i]--;\n            a.num[i-1] += mod;\n        }\n    }\n    while(a.num.size()>=1&&a.num[a.num.size()-1]==0) a.num.resize(a.num.size()-1);\n    if(a.num.size()==0) a.num.push_back(0);\n}/*}}}*/\nvoid show(bigInt a,char b = '\\n'){/*{{{*/\n    if(a.neg) putchar('-');\n    int len = a.num.size();\n    printf(\"%d\",a.num[len-1]);\n    for(int i = len-2;i>=0;i--){\n        printf(\"%04d\",a.num[i]);\n    }\n    cout<<b;\n}/*}}}*/\nbool input(bigInt & ret){/*{{{*/\n    if(scanf(\"%s\",for_cin)==EOF) return false;\n    ret.num.resize(0);\n    int startInd = 0;\n    int len = strlen(for_cin);\n    if(for_cin[0]=='-') {\n        startInd = 1;\n        ret.neg = true;\n    }\n    int i;\n    for(i = len-4;i>=startInd;i-=4){\n        ret.num.push_back(atoi(for_cin+i));\n        for_cin[i] = '\\0';\n    }\n    if(i!=startInd) ret.num.push_back(atoi(for_cin+startInd));\n    relen(ret);\n    return true;\n}/*}}}*/\nbigInt trans(int a){/*{{{*/\n    bigInt ret(0);\n    if(a<0) ret.neg = true,a = -a;\n    while(a){\n        ret.num.resize(ret.num.size()+1);\n        ret.num[ret.num.size()-1] = a%mod;\n        a/=mod;\n    }\n    relen(ret);\n    return ret;\n}/*}}}*/\nbigInt trans(long long a){/*{{{*/\n    bigInt ret(0);\n    if(a<0) ret.neg = true,a = -a;\n    while(a){\n        ret.num.resize(ret.num.size()+1);\n        ret.num[ret.num.size()-1] = a%mod;\n        a/=mod;\n    }\n    relen(ret);\n    return ret;\n}/*}}}*/\nbool equal(bigInt a,bigInt b){/*{{{*/\n    if(a.neg!=b.neg) return false;\n    if(a.num.size()!=b.num.size()) return false;\n    int len = a.num.size();\n    for(int i = 0;i<len;i++) if(a.num[i]!=b.num[i]) return false;\n    return true;\n}/*}}}*/\nbool bigger(bigInt a,bigInt b) {/*{{{*/\n    if(a.neg&&!b.neg) return false;\n    if(!a.neg&&b.neg) return true;\n    if(a.neg&&b.neg) {\n        a.neg = b.neg = false;\n        bool ret = bigger(b,a);\n        a.neg = b.neg = true;\n        return ret;\n    }\n    if(a.num.size()>b.num.size()) return true;\n    if(a.num.size()<b.num.size()) return false;\n    int len = a.num.size();\n    for(int i = len-1;i>=0;i--){\n        if(a.num[i]!=b.num[i]) return a.num[i]>b.num[i];\n    }\n    return false;\n}/*}}}*/\nbigInt add(bigInt a,bigInt b) {/*{{{*/\n    bigInt ret(max(a.num.size(),b.num.size())+1);\n    if(a.neg&&b.neg){\n        a.neg = b.neg = false;\n        ret = add(a,b);\n        ret.neg = true;\n        return ret;\n    }\n    if(a.neg){/*{{{*/\n        a.neg = false;\n        if(bigger(a,b)) {\n            for(int i = b.num.size()-1;i>=0;i--){\n                a.num[i]-=b.num[i];\n                if(a.num[i]<0) {\n                    a.num[i]+=mod;\n                    a.num[i+1]--;\n                }\n            }\n            relen(a);\n            a.neg = true;\n            return a;\n        }else{\n            for(int i = a.num.size()-1;i>=0;i--){\n                b.num[i]-=a.num[i];\n                if(b.num[i]<0){\n                    b.num[i]+=mod;\n                    b.num[i+1]--;\n                }\n            }\n            relen(b);\n            return b;\n        }\n    }/*}}}*/\n    if(b.neg) return add(b,a);\n    int maxlen = max(a.num.size(),b.num.size());\n    a.num.resize(maxlen+1);\n    int minlen = min(a.num.size(),b.num.size());\n    for(int i = 0;i<minlen;i++){\n        a.num[i]+=b.num[i];\n        if(a.num[i]>=mod) {\n            a.num[i]-=mod;\n            a.num[i+1]++;\n        }\n        b.num[i] = 0;\n    }\n    relen(a);\n    return a;\n}/*}}}*/\nbigInt sub(bigInt a,bigInt b){/*{{{*/\n    b.neg = ~b.neg;\n    return add(a,b);\n}/*}}}*/\nbigInt mul(bigInt a,bigInt b){/*{{{*/\n    int lena = a.num.size();\n    int lenb = b.num.size();\n    int len = lena+lenb;\n    bigInt ret(len);\n    long long add = 0;\n    for(int i = 0;i<len;i++){\n        long long buf = add;\n        for(int j = max(0,i-lenb+1);j<=i&&j<lena;j++) buf = buf+a.num[j]*b.num[i-j];\n        add = buf/mod;\n        ret.num[i] = buf%mod;\n    }\n    ret.neg = (a.neg!=b.neg);\n    relen(ret);\n    return ret;\n}/*}}}*/\nbigInt exec(bigInt a,int b){/*{{{*/\n    bool neg = (b<0);\n    bigInt ret(a.num.size());\n    ret.neg = (a.neg!=neg);\n    a.neg = false;\n    int buf = 0;\n    for(int i = a.num.size()-1;i>=0;i--){\n        buf = buf*mod+a.num[i];\n        ret.num[i] = buf/b;\n        buf%=b;\n    }\n    relen(ret);\n    return ret;\n}/*}}}*/\nbigInt exec(bigInt a,bigInt b){/*{{{*/\n    bigInt base = trans(1);\n    bigInt big10 = trans(10);\n    bigInt big0 = trans(0);\n    bigInt ans = trans(0);\n    bool neg = (a.neg!=b.neg);\n    a.neg = b.neg = false;\n    while(bigger(a,mul(b,big10))) {\n        base = mul(base,big10);\n        b = mul(b,big10);\n    }\n    while(!equal(base,big0)) {\n        while(bigger(a,b)) {\n            ans = add(ans,base);\n            a = sub(a,b);\n        }\n        b = exec(b,10);\n        base = exec(base,10);\n    }\n    ans.neg = neg;\n    return ans;\n}/*}}}*/\nint Mod(bigInt a,int b){\n    int ret = 0;\n    for(int i = a.num.size()-1;i>=0;i--){\n        ret = ret*mod+a.num[i];\n        ret%=b;\n    }\n    return ret;\n}\nbigInt table[mod];\nint main(){\n    return 0;\n}\n```\n","slug":"knowledge/BigInt","published":1,"updated":"2019-11-16T11:10:24.656Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1ht0020a6136niv4yz7","content":"<p>闲来无事写了一发玩玩。。。</p>\n<p>不保证正确性。。。</p>\n<a id=\"more\"></a>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bitset&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;complex&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;deque&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;exception&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;fstream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;functional&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iomanip&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;ios&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iosfwd&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;istream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iterator&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;limits&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;list&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;locale&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;memory&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;new&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;numeric&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;ostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;set&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sstream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stack&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdexcept&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;streambuf&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;typeinfo&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;utility&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;valarray&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> mod = <span class=\"number\">10000</span>;</span><br><span class=\"line\"><span class=\"keyword\">char</span> for_cin[mod&lt;&lt;<span class=\"number\">8</span>];</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">bigInt</span> &#123;</span><span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">    <span class=\"keyword\">bool</span> neg;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; num;</span><br><span class=\"line\">    bigInt() &#123;</span><br><span class=\"line\">        neg = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    bigInt(<span class=\"keyword\">int</span> len) &#123;</span><br><span class=\"line\">        neg = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        num.resize(len);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;len;i++) num[i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">relen</span><span class=\"params\">(bigInt&amp;a)</span> </span>&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> len = a.num.size();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = len<span class=\"number\">-1</span>;i&gt;<span class=\"number\">0</span>;i--) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a.num[i] &amp;&amp; a.num[i<span class=\"number\">-1</span>]&lt;<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            a.num[i]--;</span><br><span class=\"line\">            a.num[i<span class=\"number\">-1</span>] += mod;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(a.num.size()&gt;=<span class=\"number\">1</span>&amp;&amp;a.num[a.num.size()<span class=\"number\">-1</span>]==<span class=\"number\">0</span>) a.num.resize(a.num.size()<span class=\"number\">-1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a.num.size()==<span class=\"number\">0</span>) a.num.push_back(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">(bigInt a,<span class=\"keyword\">char</span> b = <span class=\"string\">'\\n'</span>)</span></span>&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a.neg) <span class=\"built_in\">putchar</span>(<span class=\"string\">'-'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len = a.num.size();</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>,a.num[len<span class=\"number\">-1</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = len<span class=\"number\">-2</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%04d\"</span>,a.num[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;b;</span><br><span class=\"line\">&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">input</span><span class=\"params\">(bigInt &amp; ret)</span></span>&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>,for_cin)==EOF) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    ret.num.resize(<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> startInd = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len = <span class=\"built_in\">strlen</span>(for_cin);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(for_cin[<span class=\"number\">0</span>]==<span class=\"string\">'-'</span>) &#123;</span><br><span class=\"line\">        startInd = <span class=\"number\">1</span>;</span><br><span class=\"line\">        ret.neg = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = len<span class=\"number\">-4</span>;i&gt;=startInd;i-=<span class=\"number\">4</span>)&#123;</span><br><span class=\"line\">        ret.num.push_back(atoi(for_cin+i));</span><br><span class=\"line\">        for_cin[i] = <span class=\"string\">'\\0'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(i!=startInd) ret.num.push_back(atoi(for_cin+startInd));</span><br><span class=\"line\">    relen(ret);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"function\">bigInt <span class=\"title\">trans</span><span class=\"params\">(<span class=\"keyword\">int</span> a)</span></span>&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">    <span class=\"function\">bigInt <span class=\"title\">ret</span><span class=\"params\">(<span class=\"number\">0</span>)</span></span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a&lt;<span class=\"number\">0</span>) ret.neg = <span class=\"literal\">true</span>,a = -a;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(a)&#123;</span><br><span class=\"line\">        ret.num.resize(ret.num.size()+<span class=\"number\">1</span>);</span><br><span class=\"line\">        ret.num[ret.num.size()<span class=\"number\">-1</span>] = a%mod;</span><br><span class=\"line\">        a/=mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    relen(ret);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"function\">bigInt <span class=\"title\">trans</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a)</span></span>&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">    <span class=\"function\">bigInt <span class=\"title\">ret</span><span class=\"params\">(<span class=\"number\">0</span>)</span></span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a&lt;<span class=\"number\">0</span>) ret.neg = <span class=\"literal\">true</span>,a = -a;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(a)&#123;</span><br><span class=\"line\">        ret.num.resize(ret.num.size()+<span class=\"number\">1</span>);</span><br><span class=\"line\">        ret.num[ret.num.size()<span class=\"number\">-1</span>] = a%mod;</span><br><span class=\"line\">        a/=mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    relen(ret);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">equal</span><span class=\"params\">(bigInt a,bigInt b)</span></span>&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a.neg!=b.neg) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a.num.size()!=b.num.size()) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len = a.num.size();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;len;i++) <span class=\"keyword\">if</span>(a.num[i]!=b.num[i]) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">bigger</span><span class=\"params\">(bigInt a,bigInt b)</span> </span>&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a.neg&amp;&amp;!b.neg) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!a.neg&amp;&amp;b.neg) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a.neg&amp;&amp;b.neg) &#123;</span><br><span class=\"line\">        a.neg = b.neg = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">bool</span> ret = bigger(b,a);</span><br><span class=\"line\">        a.neg = b.neg = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a.num.size()&gt;b.num.size()) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a.num.size()&lt;b.num.size()) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len = a.num.size();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = len<span class=\"number\">-1</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a.num[i]!=b.num[i]) <span class=\"keyword\">return</span> a.num[i]&gt;b.num[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"function\">bigInt <span class=\"title\">add</span><span class=\"params\">(bigInt a,bigInt b)</span> </span>&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">    <span class=\"function\">bigInt <span class=\"title\">ret</span><span class=\"params\">(max(a.num.size(),b.num.size())+<span class=\"number\">1</span>)</span></span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a.neg&amp;&amp;b.neg)&#123;</span><br><span class=\"line\">        a.neg = b.neg = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        ret = add(a,b);</span><br><span class=\"line\">        ret.neg = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a.neg)&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">        a.neg = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(bigger(a,b)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = b.num.size()<span class=\"number\">-1</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">                a.num[i]-=b.num[i];</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(a.num[i]&lt;<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    a.num[i]+=mod;</span><br><span class=\"line\">                    a.num[i+<span class=\"number\">1</span>]--;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            relen(a);</span><br><span class=\"line\">            a.neg = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = a.num.size()<span class=\"number\">-1</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">                b.num[i]-=a.num[i];</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(b.num[i]&lt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                    b.num[i]+=mod;</span><br><span class=\"line\">                    b.num[i+<span class=\"number\">1</span>]--;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            relen(b);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> b;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(b.neg) <span class=\"keyword\">return</span> add(b,a);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> maxlen = max(a.num.size(),b.num.size());</span><br><span class=\"line\">    a.num.resize(maxlen+<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> minlen = min(a.num.size(),b.num.size());</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;minlen;i++)&#123;</span><br><span class=\"line\">        a.num[i]+=b.num[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a.num[i]&gt;=mod) &#123;</span><br><span class=\"line\">            a.num[i]-=mod;</span><br><span class=\"line\">            a.num[i+<span class=\"number\">1</span>]++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        b.num[i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    relen(a);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"function\">bigInt <span class=\"title\">sub</span><span class=\"params\">(bigInt a,bigInt b)</span></span>&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">    b.neg = ~b.neg;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> add(a,b);</span><br><span class=\"line\">&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"function\">bigInt <span class=\"title\">mul</span><span class=\"params\">(bigInt a,bigInt b)</span></span>&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> lena = a.num.size();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> lenb = b.num.size();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len = lena+lenb;</span><br><span class=\"line\">    <span class=\"function\">bigInt <span class=\"title\">ret</span><span class=\"params\">(len)</span></span>;</span><br><span class=\"line\">    <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> add = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;len;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> buf = add;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = max(<span class=\"number\">0</span>,i-lenb+<span class=\"number\">1</span>);j&lt;=i&amp;&amp;j&lt;lena;j++) buf = buf+a.num[j]*b.num[i-j];</span><br><span class=\"line\">        add = buf/mod;</span><br><span class=\"line\">        ret.num[i] = buf%mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ret.neg = (a.neg!=b.neg);</span><br><span class=\"line\">    relen(ret);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"function\">bigInt <span class=\"title\">exec</span><span class=\"params\">(bigInt a,<span class=\"keyword\">int</span> b)</span></span>&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">    <span class=\"keyword\">bool</span> neg = (b&lt;<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"function\">bigInt <span class=\"title\">ret</span><span class=\"params\">(a.num.size())</span></span>;</span><br><span class=\"line\">    ret.neg = (a.neg!=neg);</span><br><span class=\"line\">    a.neg = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> buf = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = a.num.size()<span class=\"number\">-1</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">        buf = buf*mod+a.num[i];</span><br><span class=\"line\">        ret.num[i] = buf/b;</span><br><span class=\"line\">        buf%=b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    relen(ret);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"function\">bigInt <span class=\"title\">exec</span><span class=\"params\">(bigInt a,bigInt b)</span></span>&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">    bigInt base = trans(<span class=\"number\">1</span>);</span><br><span class=\"line\">    bigInt big10 = trans(<span class=\"number\">10</span>);</span><br><span class=\"line\">    bigInt big0 = trans(<span class=\"number\">0</span>);</span><br><span class=\"line\">    bigInt ans = trans(<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> neg = (a.neg!=b.neg);</span><br><span class=\"line\">    a.neg = b.neg = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(bigger(a,mul(b,big10))) &#123;</span><br><span class=\"line\">        base = mul(base,big10);</span><br><span class=\"line\">        b = mul(b,big10);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!equal(base,big0)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(bigger(a,b)) &#123;</span><br><span class=\"line\">            ans = add(ans,base);</span><br><span class=\"line\">            a = sub(a,b);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        b = exec(b,<span class=\"number\">10</span>);</span><br><span class=\"line\">        base = exec(base,<span class=\"number\">10</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ans.neg = neg;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">Mod</span><span class=\"params\">(bigInt a,<span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ret = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = a.num.size()<span class=\"number\">-1</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">        ret = ret*mod+a.num[i];</span><br><span class=\"line\">        ret%=b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">bigInt table[mod];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>闲来无事写了一发玩玩。。。</p>\n<p>不保证正确性。。。</p>","more":"<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bitset&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;complex&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;deque&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;exception&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;fstream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;functional&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iomanip&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;ios&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iosfwd&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;istream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iterator&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;limits&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;list&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;locale&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;memory&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;new&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;numeric&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;ostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;set&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sstream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stack&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdexcept&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;streambuf&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;typeinfo&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;utility&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;valarray&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> mod = <span class=\"number\">10000</span>;</span><br><span class=\"line\"><span class=\"keyword\">char</span> for_cin[mod&lt;&lt;<span class=\"number\">8</span>];</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">bigInt</span> &#123;</span><span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">    <span class=\"keyword\">bool</span> neg;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; num;</span><br><span class=\"line\">    bigInt() &#123;</span><br><span class=\"line\">        neg = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    bigInt(<span class=\"keyword\">int</span> len) &#123;</span><br><span class=\"line\">        neg = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        num.resize(len);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;len;i++) num[i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">relen</span><span class=\"params\">(bigInt&amp;a)</span> </span>&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> len = a.num.size();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = len<span class=\"number\">-1</span>;i&gt;<span class=\"number\">0</span>;i--) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a.num[i] &amp;&amp; a.num[i<span class=\"number\">-1</span>]&lt;<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            a.num[i]--;</span><br><span class=\"line\">            a.num[i<span class=\"number\">-1</span>] += mod;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(a.num.size()&gt;=<span class=\"number\">1</span>&amp;&amp;a.num[a.num.size()<span class=\"number\">-1</span>]==<span class=\"number\">0</span>) a.num.resize(a.num.size()<span class=\"number\">-1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a.num.size()==<span class=\"number\">0</span>) a.num.push_back(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">(bigInt a,<span class=\"keyword\">char</span> b = <span class=\"string\">'\\n'</span>)</span></span>&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a.neg) <span class=\"built_in\">putchar</span>(<span class=\"string\">'-'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len = a.num.size();</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>,a.num[len<span class=\"number\">-1</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = len<span class=\"number\">-2</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%04d\"</span>,a.num[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;b;</span><br><span class=\"line\">&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">input</span><span class=\"params\">(bigInt &amp; ret)</span></span>&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>,for_cin)==EOF) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    ret.num.resize(<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> startInd = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len = <span class=\"built_in\">strlen</span>(for_cin);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(for_cin[<span class=\"number\">0</span>]==<span class=\"string\">'-'</span>) &#123;</span><br><span class=\"line\">        startInd = <span class=\"number\">1</span>;</span><br><span class=\"line\">        ret.neg = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = len<span class=\"number\">-4</span>;i&gt;=startInd;i-=<span class=\"number\">4</span>)&#123;</span><br><span class=\"line\">        ret.num.push_back(atoi(for_cin+i));</span><br><span class=\"line\">        for_cin[i] = <span class=\"string\">'\\0'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(i!=startInd) ret.num.push_back(atoi(for_cin+startInd));</span><br><span class=\"line\">    relen(ret);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"function\">bigInt <span class=\"title\">trans</span><span class=\"params\">(<span class=\"keyword\">int</span> a)</span></span>&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">    <span class=\"function\">bigInt <span class=\"title\">ret</span><span class=\"params\">(<span class=\"number\">0</span>)</span></span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a&lt;<span class=\"number\">0</span>) ret.neg = <span class=\"literal\">true</span>,a = -a;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(a)&#123;</span><br><span class=\"line\">        ret.num.resize(ret.num.size()+<span class=\"number\">1</span>);</span><br><span class=\"line\">        ret.num[ret.num.size()<span class=\"number\">-1</span>] = a%mod;</span><br><span class=\"line\">        a/=mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    relen(ret);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"function\">bigInt <span class=\"title\">trans</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a)</span></span>&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">    <span class=\"function\">bigInt <span class=\"title\">ret</span><span class=\"params\">(<span class=\"number\">0</span>)</span></span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a&lt;<span class=\"number\">0</span>) ret.neg = <span class=\"literal\">true</span>,a = -a;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(a)&#123;</span><br><span class=\"line\">        ret.num.resize(ret.num.size()+<span class=\"number\">1</span>);</span><br><span class=\"line\">        ret.num[ret.num.size()<span class=\"number\">-1</span>] = a%mod;</span><br><span class=\"line\">        a/=mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    relen(ret);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">equal</span><span class=\"params\">(bigInt a,bigInt b)</span></span>&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a.neg!=b.neg) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a.num.size()!=b.num.size()) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len = a.num.size();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;len;i++) <span class=\"keyword\">if</span>(a.num[i]!=b.num[i]) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">bigger</span><span class=\"params\">(bigInt a,bigInt b)</span> </span>&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a.neg&amp;&amp;!b.neg) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!a.neg&amp;&amp;b.neg) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a.neg&amp;&amp;b.neg) &#123;</span><br><span class=\"line\">        a.neg = b.neg = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">bool</span> ret = bigger(b,a);</span><br><span class=\"line\">        a.neg = b.neg = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a.num.size()&gt;b.num.size()) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a.num.size()&lt;b.num.size()) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len = a.num.size();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = len<span class=\"number\">-1</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a.num[i]!=b.num[i]) <span class=\"keyword\">return</span> a.num[i]&gt;b.num[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"function\">bigInt <span class=\"title\">add</span><span class=\"params\">(bigInt a,bigInt b)</span> </span>&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">    <span class=\"function\">bigInt <span class=\"title\">ret</span><span class=\"params\">(max(a.num.size(),b.num.size())+<span class=\"number\">1</span>)</span></span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a.neg&amp;&amp;b.neg)&#123;</span><br><span class=\"line\">        a.neg = b.neg = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        ret = add(a,b);</span><br><span class=\"line\">        ret.neg = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a.neg)&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">        a.neg = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(bigger(a,b)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = b.num.size()<span class=\"number\">-1</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">                a.num[i]-=b.num[i];</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(a.num[i]&lt;<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    a.num[i]+=mod;</span><br><span class=\"line\">                    a.num[i+<span class=\"number\">1</span>]--;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            relen(a);</span><br><span class=\"line\">            a.neg = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = a.num.size()<span class=\"number\">-1</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">                b.num[i]-=a.num[i];</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(b.num[i]&lt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                    b.num[i]+=mod;</span><br><span class=\"line\">                    b.num[i+<span class=\"number\">1</span>]--;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            relen(b);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> b;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(b.neg) <span class=\"keyword\">return</span> add(b,a);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> maxlen = max(a.num.size(),b.num.size());</span><br><span class=\"line\">    a.num.resize(maxlen+<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> minlen = min(a.num.size(),b.num.size());</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;minlen;i++)&#123;</span><br><span class=\"line\">        a.num[i]+=b.num[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a.num[i]&gt;=mod) &#123;</span><br><span class=\"line\">            a.num[i]-=mod;</span><br><span class=\"line\">            a.num[i+<span class=\"number\">1</span>]++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        b.num[i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    relen(a);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"function\">bigInt <span class=\"title\">sub</span><span class=\"params\">(bigInt a,bigInt b)</span></span>&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">    b.neg = ~b.neg;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> add(a,b);</span><br><span class=\"line\">&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"function\">bigInt <span class=\"title\">mul</span><span class=\"params\">(bigInt a,bigInt b)</span></span>&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> lena = a.num.size();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> lenb = b.num.size();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len = lena+lenb;</span><br><span class=\"line\">    <span class=\"function\">bigInt <span class=\"title\">ret</span><span class=\"params\">(len)</span></span>;</span><br><span class=\"line\">    <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> add = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;len;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> buf = add;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = max(<span class=\"number\">0</span>,i-lenb+<span class=\"number\">1</span>);j&lt;=i&amp;&amp;j&lt;lena;j++) buf = buf+a.num[j]*b.num[i-j];</span><br><span class=\"line\">        add = buf/mod;</span><br><span class=\"line\">        ret.num[i] = buf%mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ret.neg = (a.neg!=b.neg);</span><br><span class=\"line\">    relen(ret);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"function\">bigInt <span class=\"title\">exec</span><span class=\"params\">(bigInt a,<span class=\"keyword\">int</span> b)</span></span>&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">    <span class=\"keyword\">bool</span> neg = (b&lt;<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"function\">bigInt <span class=\"title\">ret</span><span class=\"params\">(a.num.size())</span></span>;</span><br><span class=\"line\">    ret.neg = (a.neg!=neg);</span><br><span class=\"line\">    a.neg = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> buf = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = a.num.size()<span class=\"number\">-1</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">        buf = buf*mod+a.num[i];</span><br><span class=\"line\">        ret.num[i] = buf/b;</span><br><span class=\"line\">        buf%=b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    relen(ret);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"function\">bigInt <span class=\"title\">exec</span><span class=\"params\">(bigInt a,bigInt b)</span></span>&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">    bigInt base = trans(<span class=\"number\">1</span>);</span><br><span class=\"line\">    bigInt big10 = trans(<span class=\"number\">10</span>);</span><br><span class=\"line\">    bigInt big0 = trans(<span class=\"number\">0</span>);</span><br><span class=\"line\">    bigInt ans = trans(<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> neg = (a.neg!=b.neg);</span><br><span class=\"line\">    a.neg = b.neg = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(bigger(a,mul(b,big10))) &#123;</span><br><span class=\"line\">        base = mul(base,big10);</span><br><span class=\"line\">        b = mul(b,big10);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!equal(base,big0)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(bigger(a,b)) &#123;</span><br><span class=\"line\">            ans = add(ans,base);</span><br><span class=\"line\">            a = sub(a,b);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        b = exec(b,<span class=\"number\">10</span>);</span><br><span class=\"line\">        base = exec(base,<span class=\"number\">10</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ans.neg = neg;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">Mod</span><span class=\"params\">(bigInt a,<span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ret = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = a.num.size()<span class=\"number\">-1</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">        ret = ret*mod+a.num[i];</span><br><span class=\"line\">        ret%=b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">bigInt table[mod];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"IC(answer.chepter2)","date":"2018-12-23T16:00:00.000Z","author":"zuhiul","_content":"\n作者自己辛苦原创,如有错误or转载or其他用途请联系qq:669415029,谢谢\n<!-- more -->\n\n1.$\\emptyset$ : $4^5 = 1024$.$\\lbrace a\\rbrace$ : $5\\times 4\\times 4\\times 4 = 320$.$\\lbrace b\\rbrace$ : $5\\times 5\\times 5\\times 2 = 250$.$\\lbrace a,b\\rbrace$ : $4\\times 4\\times 4\\times 2 = 128$\n\n2.$(13!)^4 = 1503561738404723998944447273369600000000$.\n\n3.\n$$\n\\left(\n\t\\begin{matrix}\n\t\t52\\\\\\\n\t\t5\n\t\\end{matrix}\n\\right)\n=2598960\n$$\n\n4.(a) $5\\times 3\\times 7\\times 2 = 210$\n(b) $620 = 2^2+3^1+5^1+7^1$,$3\\times 2\\times 2\\times 2 = 24$\n(c) $10^{10} = 2^{10} 5^{10}$,$11\\times 11 = 121$\n\n5.因为$10 = 2\\times 5$,所以我们只用统计$2,5$的数量就行了,然后我们可以发现,$2$的数量显然多于$5$的数量,所以我们只用统计$5$的个数就是答案.下面给出一个通用的代码\n\n```cpp\nint cal(int a){\n\tint ret = 0;\n\twhile(a) ret+=a/=5;\n\treturn ret;\n}\n```\n\n6.小数据暴力,大数据模拟\n","source":"_posts/knowledge/IC_chepter2.md","raw":"---\ntitle: IC(answer.chepter2)\ndate: 2018-12-24\nauthor: \"zuhiul\"\ntags:\n  - IC\n---\n\n作者自己辛苦原创,如有错误or转载or其他用途请联系qq:669415029,谢谢\n<!-- more -->\n\n1.$\\emptyset$ : $4^5 = 1024$.$\\lbrace a\\rbrace$ : $5\\times 4\\times 4\\times 4 = 320$.$\\lbrace b\\rbrace$ : $5\\times 5\\times 5\\times 2 = 250$.$\\lbrace a,b\\rbrace$ : $4\\times 4\\times 4\\times 2 = 128$\n\n2.$(13!)^4 = 1503561738404723998944447273369600000000$.\n\n3.\n$$\n\\left(\n\t\\begin{matrix}\n\t\t52\\\\\\\n\t\t5\n\t\\end{matrix}\n\\right)\n=2598960\n$$\n\n4.(a) $5\\times 3\\times 7\\times 2 = 210$\n(b) $620 = 2^2+3^1+5^1+7^1$,$3\\times 2\\times 2\\times 2 = 24$\n(c) $10^{10} = 2^{10} 5^{10}$,$11\\times 11 = 121$\n\n5.因为$10 = 2\\times 5$,所以我们只用统计$2,5$的数量就行了,然后我们可以发现,$2$的数量显然多于$5$的数量,所以我们只用统计$5$的个数就是答案.下面给出一个通用的代码\n\n```cpp\nint cal(int a){\n\tint ret = 0;\n\twhile(a) ret+=a/=5;\n\treturn ret;\n}\n```\n\n6.小数据暴力,大数据模拟\n","slug":"knowledge/IC_chepter2","published":1,"updated":"2019-04-14T08:28:50.217Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1hu0022a613a5d375im","content":"<p>作者自己辛苦原创,如有错误or转载or其他用途请联系qq:669415029,谢谢<br><a id=\"more\"></a></p>\n<p>1.$\\emptyset$ : $4^5 = 1024$.$\\lbrace a\\rbrace$ : $5\\times 4\\times 4\\times 4 = 320$.$\\lbrace b\\rbrace$ : $5\\times 5\\times 5\\times 2 = 250$.$\\lbrace a,b\\rbrace$ : $4\\times 4\\times 4\\times 2 = 128$</p>\n<p>2.$(13!)^4 = 1503561738404723998944447273369600000000$.</p>\n<p>3.<br>$$<br>\\left(<br>    \\begin{matrix}<br>        52\\\\<br>        5<br>    \\end{matrix}<br>\\right)<br>=2598960<br>$$</p>\n<p>4.(a) $5\\times 3\\times 7\\times 2 = 210$<br>(b) $620 = 2^2+3^1+5^1+7^1$,$3\\times 2\\times 2\\times 2 = 24$<br>(c) $10^{10} = 2^{10} 5^{10}$,$11\\times 11 = 121$</p>\n<p>5.因为$10 = 2\\times 5$,所以我们只用统计$2,5$的数量就行了,然后我们可以发现,$2$的数量显然多于$5$的数量,所以我们只用统计$5$的个数就是答案.下面给出一个通用的代码</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">cal</span><span class=\"params\">(<span class=\"keyword\">int</span> a)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ret = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(a) ret+=a/=<span class=\"number\">5</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>6.小数据暴力,大数据模拟</p>\n","site":{"data":{}},"excerpt":"<p>作者自己辛苦原创,如有错误or转载or其他用途请联系qq:669415029,谢谢<br>","more":"</p>\n<p>1.$\\emptyset$ : $4^5 = 1024$.$\\lbrace a\\rbrace$ : $5\\times 4\\times 4\\times 4 = 320$.$\\lbrace b\\rbrace$ : $5\\times 5\\times 5\\times 2 = 250$.$\\lbrace a,b\\rbrace$ : $4\\times 4\\times 4\\times 2 = 128$</p>\n<p>2.$(13!)^4 = 1503561738404723998944447273369600000000$.</p>\n<p>3.<br>$$<br>\\left(<br>    \\begin{matrix}<br>        52\\\\<br>        5<br>    \\end{matrix}<br>\\right)<br>=2598960<br>$$</p>\n<p>4.(a) $5\\times 3\\times 7\\times 2 = 210$<br>(b) $620 = 2^2+3^1+5^1+7^1$,$3\\times 2\\times 2\\times 2 = 24$<br>(c) $10^{10} = 2^{10} 5^{10}$,$11\\times 11 = 121$</p>\n<p>5.因为$10 = 2\\times 5$,所以我们只用统计$2,5$的数量就行了,然后我们可以发现,$2$的数量显然多于$5$的数量,所以我们只用统计$5$的个数就是答案.下面给出一个通用的代码</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">cal</span><span class=\"params\">(<span class=\"keyword\">int</span> a)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ret = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(a) ret+=a/=<span class=\"number\">5</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>6.小数据暴力,大数据模拟</p>"},{"title":"IC(answer.chepter1)","date":"2018-12-23T16:00:00.000Z","author":"zuhiul","_content":"\n作者自己辛苦原创,如有错误or转载or其他用途请联系qq:669415029,谢谢\n<!-- more -->\n\n1.利用反证法容易得到,如果$n$和$m$都是奇数,那么$n*m$也是奇数,显然不可覆盖,所以$n$和$m$至少有一个偶数\n\n2.我们定义行号从上到下为$1\\dots m$,列号从左到右为$1\\dots n$,然后我们就可以得到被切掉的那个方块只可能是奇数行奇数列,或者偶数行偶数列,我们考虑对这两种方案分别进行构造来得到我们想要的答案.\n\n  - 奇数行奇数列:对于和他在同一行同一列的方块来说,因为他去掉了,所以剩下的一定是可以匹配的偶数,也就是说我们可以匹配上这一行一列,对于剩下的一定都是偶数行偶数列的联通块,显然可以构造\n  - 奇数行奇数列:这个稍微麻烦一点,我们可以选择他周围的奇数行奇数列的一个子矩阵,显然可以螺旋式的构造,也就是说我们用完左上角,对于剩下的容易证明也是两个偶数的联通块,同样可以构造,看图\n![avatar](https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/IC1-1.png)\n\n3.显然是不能获得自由的,因为我们可以将这个棋盘黑白二染色,然后可以发现对顶角颜色相同,每一步颜色都会反转,一共要走63步,所以最后一步一定会在异色块上,所以不行.\n\n4.(a)对于每一个$n$来说我们直接考虑最后一块的摆放方法,如果是竖着放,那么剩下的就是$f(n-1)$的子问题,如果是横着放,那么倒数第二块显然也是横着放的,所以剩下的就是$f(n-2)$的子问题,所以显然可以得到的是$f(n) = f(n-1)+f(n-2)$,也就是说答案就是fibonacci.$\\therefore f(12) = 233$\n\n4.(b)这里我们可以考虑DP来做,具体程序如下:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxm = 1e5+10;\nint dp[maxm][8];\nint main(){\n\tdp[0][0] = dp[0][3] = dp[0][6] = dp[1][1] = dp[1][4] = dp[1][7] = 1;\n\tfor(int i = 2;i<maxm;i++){\n\t\tdp[i][0] = dp[i-2][3]+dp[i-2][6]+dp[i-2][0];\n\t\tdp[i][1] = dp[i-1][0]+dp[i-2][1];\n\t\tdp[i][3] = dp[i][0]+dp[i-2][3];\n\t\tdp[i][4] = dp[i][1];\n\t\tdp[i][6] = dp[i][3];\n\t}\n\treturn 0;\n}\n```\n\n然后可以发现$g(n) = 4\\ast g(n-2)-g(n-4)$\n\n5.用4.(b)的代码容易可得,$g(4) = 11$\n\n6.同样采用反证法容易证得$n$是偶数,下面我们考虑$n$是奇数扣掉中间一块的情况.不妨假设八个角上的颜色是黑色,可以得到黑块数量是$4k^3+6k^2+3k+1$,白块的数量是$4k^3+6k^2+3k$,我们可以分两种情况讨论,我们假设$n = 2k+1$\n\n  - 当k是奇数时,也就是$k = 2t+1$,即$n = 4t+3$,中间块是白色的.然后扣掉白块后,显然黑块和白块不匹配,然后不行鸭.\n  - 当k是偶数时,也就是$k = 2t$,即$n = 4t+1$,中间块是黑色的,扣掉黑块后,白块和黑块是匹配的,可能可以.下面我们证明$n = 4t+1$时是可行的\n\t- 我们按照层数拆分,我们抽掉其中的第$2t+1$层,我们可以得到,这一层显然是可行的,类比于二阶的时候,我们扣掉中心块\n\t- 对于剩下的两个联通块,我们显然可以得到是他们对称,我们只考虑上面的$2t$层的部分,我们每两层考虑一下\n\t- 对于相连的两层,也就是$2\\ast n\\ast n$的形状,我们显然可以构造,所以整个三维结构是可以构造的.\n\n7.首先证明$a$既是$n$的因子,又是$m$的因子\n\n  - 因为$a$是$b$的因子,所以$a\\ast b$的可以看成多个$a\\ast a$的,采用反证法,假设$a$不是$m$的因子,那么对于剩下的$(m%a)\\ast (n%a)$的矩阵显然不可以用$a\\ast a$的矩阵填满,所以$m%a==0&&n%a==0$.\n\n再证$b$是$n$或者$m$的因子\n\n  - 同样反证法,我们将$a,b,m,n$同时缩小$a$倍,然后可以转化成,现在有一个$x\\ast y$的棋盘,我要用一个$1\\ast z$的棋盘去覆盖他,但是$gcd(x,z)=gcd(y,z)=1$,这个可以显然发现是不可能的\n\n8.先证:存在完美覆盖$\\rightarrow$存在平凡完美覆盖\n\n  - 利用习题7,我们得到如果存在完美覆盖,那么$gcd(n,a)=gcd(m,a)=a$并且$gcd(m,b)=b$,然后我们显然可以让$b$的朝向指向$m$的方向,也就是存在平凡完美覆盖\n\n再证:存在平凡完美覆盖$\\rightarrow$存在完美覆盖\n\n  - 显然\n\n9.显然,举个简单例子$n=5,m=6,a=2,b=3$存在完美覆盖,但是不存在平凡完美覆盖.\n\n10.假设存在不妨设四个变量是$a,b,c,d$,那么可以得到$a+b=b+c$即$a=c$显然不能构成幻方\n\n11.12.13 如图\n\n![avatar](https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/IC1-2.png)\n\n14.所有可能的构造如图\n\n![avatar](https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/IC1-3.png)\n\n15.暴力枚举的,确实没有解,并不知道为什么......\n\n16.$n$阶幻方,幻方总和是$n^2\\ast (n^2+1)/2$,所以每一行每一列求和都是$n\\ast (n^2+1)/2$,现在替换后每一行每一列的和换成了$n\\ast (n^2+1) - n\\ast (n^2+1)/2 = n\\ast (n^2+1)/2$所以可能是个幻方,然后因为里面的元素都是属于$[1,n^2]$之间的,所以$n^2+1-a$可以保证换完之后每个元素还是只出现一次,所以新生成的还是幻方.\n\n17.给出$n=4$和$n=8$时的图.......\n\n![avatar](https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/IC1-4.png)\n\n18.这个应该是显然的,因为二阶幻方都没有,显然没有二阶幻方体.\n\n19.首先我们拆开来看没一个单独的平面,我们可以得到,对于一个四阶幻方来说,如果对角线也满足幻和,那么显然可以得到任意三阶子矩阵的对顶角之和等于幻和的一半,所以我们任取出四阶幻方体的任一三阶子体,可以得到类似于$a+b=b+c$的等式,也就是说存在$a==c$的情况,这显然和题意不符,所以不可能存在四阶幻方体.\n\n20.首先,$10$和$5$一个颜色,$1,3,7,9$一个颜色,$2,4,6,8$一种颜色,可以得到可以由三种颜色构成,然后,$1,2,10$相互接壤,显然需要三种及以上颜色来涂,方案数为$3\\ast 2\\ast 1 = 6$.\n\n21.(a) 二阶的显然不存在,书后面给了答案,还有一个比较简单的想法就是如果存在显然可以得到类似于$a==b$的结论,所以不存在.\n\n(b) 暴搜剪枝,emmmmm......如图\n\n![avatar](https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/IC1-5.jpg)\n\n\n","source":"_posts/knowledge/IC_chepter1.md","raw":"---\ntitle: IC(answer.chepter1)\ndate: 2018-12-24\nauthor: \"zuhiul\"\ntags:\n  - IC\n---\n\n作者自己辛苦原创,如有错误or转载or其他用途请联系qq:669415029,谢谢\n<!-- more -->\n\n1.利用反证法容易得到,如果$n$和$m$都是奇数,那么$n*m$也是奇数,显然不可覆盖,所以$n$和$m$至少有一个偶数\n\n2.我们定义行号从上到下为$1\\dots m$,列号从左到右为$1\\dots n$,然后我们就可以得到被切掉的那个方块只可能是奇数行奇数列,或者偶数行偶数列,我们考虑对这两种方案分别进行构造来得到我们想要的答案.\n\n  - 奇数行奇数列:对于和他在同一行同一列的方块来说,因为他去掉了,所以剩下的一定是可以匹配的偶数,也就是说我们可以匹配上这一行一列,对于剩下的一定都是偶数行偶数列的联通块,显然可以构造\n  - 奇数行奇数列:这个稍微麻烦一点,我们可以选择他周围的奇数行奇数列的一个子矩阵,显然可以螺旋式的构造,也就是说我们用完左上角,对于剩下的容易证明也是两个偶数的联通块,同样可以构造,看图\n![avatar](https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/IC1-1.png)\n\n3.显然是不能获得自由的,因为我们可以将这个棋盘黑白二染色,然后可以发现对顶角颜色相同,每一步颜色都会反转,一共要走63步,所以最后一步一定会在异色块上,所以不行.\n\n4.(a)对于每一个$n$来说我们直接考虑最后一块的摆放方法,如果是竖着放,那么剩下的就是$f(n-1)$的子问题,如果是横着放,那么倒数第二块显然也是横着放的,所以剩下的就是$f(n-2)$的子问题,所以显然可以得到的是$f(n) = f(n-1)+f(n-2)$,也就是说答案就是fibonacci.$\\therefore f(12) = 233$\n\n4.(b)这里我们可以考虑DP来做,具体程序如下:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxm = 1e5+10;\nint dp[maxm][8];\nint main(){\n\tdp[0][0] = dp[0][3] = dp[0][6] = dp[1][1] = dp[1][4] = dp[1][7] = 1;\n\tfor(int i = 2;i<maxm;i++){\n\t\tdp[i][0] = dp[i-2][3]+dp[i-2][6]+dp[i-2][0];\n\t\tdp[i][1] = dp[i-1][0]+dp[i-2][1];\n\t\tdp[i][3] = dp[i][0]+dp[i-2][3];\n\t\tdp[i][4] = dp[i][1];\n\t\tdp[i][6] = dp[i][3];\n\t}\n\treturn 0;\n}\n```\n\n然后可以发现$g(n) = 4\\ast g(n-2)-g(n-4)$\n\n5.用4.(b)的代码容易可得,$g(4) = 11$\n\n6.同样采用反证法容易证得$n$是偶数,下面我们考虑$n$是奇数扣掉中间一块的情况.不妨假设八个角上的颜色是黑色,可以得到黑块数量是$4k^3+6k^2+3k+1$,白块的数量是$4k^3+6k^2+3k$,我们可以分两种情况讨论,我们假设$n = 2k+1$\n\n  - 当k是奇数时,也就是$k = 2t+1$,即$n = 4t+3$,中间块是白色的.然后扣掉白块后,显然黑块和白块不匹配,然后不行鸭.\n  - 当k是偶数时,也就是$k = 2t$,即$n = 4t+1$,中间块是黑色的,扣掉黑块后,白块和黑块是匹配的,可能可以.下面我们证明$n = 4t+1$时是可行的\n\t- 我们按照层数拆分,我们抽掉其中的第$2t+1$层,我们可以得到,这一层显然是可行的,类比于二阶的时候,我们扣掉中心块\n\t- 对于剩下的两个联通块,我们显然可以得到是他们对称,我们只考虑上面的$2t$层的部分,我们每两层考虑一下\n\t- 对于相连的两层,也就是$2\\ast n\\ast n$的形状,我们显然可以构造,所以整个三维结构是可以构造的.\n\n7.首先证明$a$既是$n$的因子,又是$m$的因子\n\n  - 因为$a$是$b$的因子,所以$a\\ast b$的可以看成多个$a\\ast a$的,采用反证法,假设$a$不是$m$的因子,那么对于剩下的$(m%a)\\ast (n%a)$的矩阵显然不可以用$a\\ast a$的矩阵填满,所以$m%a==0&&n%a==0$.\n\n再证$b$是$n$或者$m$的因子\n\n  - 同样反证法,我们将$a,b,m,n$同时缩小$a$倍,然后可以转化成,现在有一个$x\\ast y$的棋盘,我要用一个$1\\ast z$的棋盘去覆盖他,但是$gcd(x,z)=gcd(y,z)=1$,这个可以显然发现是不可能的\n\n8.先证:存在完美覆盖$\\rightarrow$存在平凡完美覆盖\n\n  - 利用习题7,我们得到如果存在完美覆盖,那么$gcd(n,a)=gcd(m,a)=a$并且$gcd(m,b)=b$,然后我们显然可以让$b$的朝向指向$m$的方向,也就是存在平凡完美覆盖\n\n再证:存在平凡完美覆盖$\\rightarrow$存在完美覆盖\n\n  - 显然\n\n9.显然,举个简单例子$n=5,m=6,a=2,b=3$存在完美覆盖,但是不存在平凡完美覆盖.\n\n10.假设存在不妨设四个变量是$a,b,c,d$,那么可以得到$a+b=b+c$即$a=c$显然不能构成幻方\n\n11.12.13 如图\n\n![avatar](https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/IC1-2.png)\n\n14.所有可能的构造如图\n\n![avatar](https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/IC1-3.png)\n\n15.暴力枚举的,确实没有解,并不知道为什么......\n\n16.$n$阶幻方,幻方总和是$n^2\\ast (n^2+1)/2$,所以每一行每一列求和都是$n\\ast (n^2+1)/2$,现在替换后每一行每一列的和换成了$n\\ast (n^2+1) - n\\ast (n^2+1)/2 = n\\ast (n^2+1)/2$所以可能是个幻方,然后因为里面的元素都是属于$[1,n^2]$之间的,所以$n^2+1-a$可以保证换完之后每个元素还是只出现一次,所以新生成的还是幻方.\n\n17.给出$n=4$和$n=8$时的图.......\n\n![avatar](https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/IC1-4.png)\n\n18.这个应该是显然的,因为二阶幻方都没有,显然没有二阶幻方体.\n\n19.首先我们拆开来看没一个单独的平面,我们可以得到,对于一个四阶幻方来说,如果对角线也满足幻和,那么显然可以得到任意三阶子矩阵的对顶角之和等于幻和的一半,所以我们任取出四阶幻方体的任一三阶子体,可以得到类似于$a+b=b+c$的等式,也就是说存在$a==c$的情况,这显然和题意不符,所以不可能存在四阶幻方体.\n\n20.首先,$10$和$5$一个颜色,$1,3,7,9$一个颜色,$2,4,6,8$一种颜色,可以得到可以由三种颜色构成,然后,$1,2,10$相互接壤,显然需要三种及以上颜色来涂,方案数为$3\\ast 2\\ast 1 = 6$.\n\n21.(a) 二阶的显然不存在,书后面给了答案,还有一个比较简单的想法就是如果存在显然可以得到类似于$a==b$的结论,所以不存在.\n\n(b) 暴搜剪枝,emmmmm......如图\n\n![avatar](https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/IC1-5.jpg)\n\n\n","slug":"knowledge/IC_chepter1","published":1,"updated":"2019-07-22T03:39:48.541Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1hv0023a6136m4mtfko","content":"<p>作者自己辛苦原创,如有错误or转载or其他用途请联系qq:669415029,谢谢<br><a id=\"more\"></a></p>\n<p>1.利用反证法容易得到,如果$n$和$m$都是奇数,那么$n*m$也是奇数,显然不可覆盖,所以$n$和$m$至少有一个偶数</p>\n<p>2.我们定义行号从上到下为$1\\dots m$,列号从左到右为$1\\dots n$,然后我们就可以得到被切掉的那个方块只可能是奇数行奇数列,或者偶数行偶数列,我们考虑对这两种方案分别进行构造来得到我们想要的答案.</p>\n<ul>\n<li>奇数行奇数列:对于和他在同一行同一列的方块来说,因为他去掉了,所以剩下的一定是可以匹配的偶数,也就是说我们可以匹配上这一行一列,对于剩下的一定都是偶数行偶数列的联通块,显然可以构造</li>\n<li>奇数行奇数列:这个稍微麻烦一点,我们可以选择他周围的奇数行奇数列的一个子矩阵,显然可以螺旋式的构造,也就是说我们用完左上角,对于剩下的容易证明也是两个偶数的联通块,同样可以构造,看图<br><img src=\"https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/IC1-1.png\" alt=\"avatar\"></li>\n</ul>\n<p>3.显然是不能获得自由的,因为我们可以将这个棋盘黑白二染色,然后可以发现对顶角颜色相同,每一步颜色都会反转,一共要走63步,所以最后一步一定会在异色块上,所以不行.</p>\n<p>4.(a)对于每一个$n$来说我们直接考虑最后一块的摆放方法,如果是竖着放,那么剩下的就是$f(n-1)$的子问题,如果是横着放,那么倒数第二块显然也是横着放的,所以剩下的就是$f(n-2)$的子问题,所以显然可以得到的是$f(n) = f(n-1)+f(n-2)$,也就是说答案就是fibonacci.$\\therefore f(12) = 233$</p>\n<p>4.(b)这里我们可以考虑DP来做,具体程序如下:</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">1e5</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> dp[maxm][<span class=\"number\">8</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tdp[<span class=\"number\">0</span>][<span class=\"number\">0</span>] = dp[<span class=\"number\">0</span>][<span class=\"number\">3</span>] = dp[<span class=\"number\">0</span>][<span class=\"number\">6</span>] = dp[<span class=\"number\">1</span>][<span class=\"number\">1</span>] = dp[<span class=\"number\">1</span>][<span class=\"number\">4</span>] = dp[<span class=\"number\">1</span>][<span class=\"number\">7</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>;i&lt;maxm;i++)&#123;</span><br><span class=\"line\">\t\tdp[i][<span class=\"number\">0</span>] = dp[i<span class=\"number\">-2</span>][<span class=\"number\">3</span>]+dp[i<span class=\"number\">-2</span>][<span class=\"number\">6</span>]+dp[i<span class=\"number\">-2</span>][<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\tdp[i][<span class=\"number\">1</span>] = dp[i<span class=\"number\">-1</span>][<span class=\"number\">0</span>]+dp[i<span class=\"number\">-2</span>][<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\tdp[i][<span class=\"number\">3</span>] = dp[i][<span class=\"number\">0</span>]+dp[i<span class=\"number\">-2</span>][<span class=\"number\">3</span>];</span><br><span class=\"line\">\t\tdp[i][<span class=\"number\">4</span>] = dp[i][<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\tdp[i][<span class=\"number\">6</span>] = dp[i][<span class=\"number\">3</span>];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后可以发现$g(n) = 4\\ast g(n-2)-g(n-4)$</p>\n<p>5.用4.(b)的代码容易可得,$g(4) = 11$</p>\n<p>6.同样采用反证法容易证得$n$是偶数,下面我们考虑$n$是奇数扣掉中间一块的情况.不妨假设八个角上的颜色是黑色,可以得到黑块数量是$4k^3+6k^2+3k+1$,白块的数量是$4k^3+6k^2+3k$,我们可以分两种情况讨论,我们假设$n = 2k+1$</p>\n<ul>\n<li>当k是奇数时,也就是$k = 2t+1$,即$n = 4t+3$,中间块是白色的.然后扣掉白块后,显然黑块和白块不匹配,然后不行鸭.</li>\n<li>当k是偶数时,也就是$k = 2t$,即$n = 4t+1$,中间块是黑色的,扣掉黑块后,白块和黑块是匹配的,可能可以.下面我们证明$n = 4t+1$时是可行的<ul>\n<li>我们按照层数拆分,我们抽掉其中的第$2t+1$层,我们可以得到,这一层显然是可行的,类比于二阶的时候,我们扣掉中心块</li>\n<li>对于剩下的两个联通块,我们显然可以得到是他们对称,我们只考虑上面的$2t$层的部分,我们每两层考虑一下</li>\n<li>对于相连的两层,也就是$2\\ast n\\ast n$的形状,我们显然可以构造,所以整个三维结构是可以构造的.</li>\n</ul>\n</li>\n</ul>\n<p>7.首先证明$a$既是$n$的因子,又是$m$的因子</p>\n<ul>\n<li>因为$a$是$b$的因子,所以$a\\ast b$的可以看成多个$a\\ast a$的,采用反证法,假设$a$不是$m$的因子,那么对于剩下的$(m%a)\\ast (n%a)$的矩阵显然不可以用$a\\ast a$的矩阵填满,所以$m%a==0&amp;&amp;n%a==0$.</li>\n</ul>\n<p>再证$b$是$n$或者$m$的因子</p>\n<ul>\n<li>同样反证法,我们将$a,b,m,n$同时缩小$a$倍,然后可以转化成,现在有一个$x\\ast y$的棋盘,我要用一个$1\\ast z$的棋盘去覆盖他,但是$gcd(x,z)=gcd(y,z)=1$,这个可以显然发现是不可能的</li>\n</ul>\n<p>8.先证:存在完美覆盖$\\rightarrow$存在平凡完美覆盖</p>\n<ul>\n<li>利用习题7,我们得到如果存在完美覆盖,那么$gcd(n,a)=gcd(m,a)=a$并且$gcd(m,b)=b$,然后我们显然可以让$b$的朝向指向$m$的方向,也就是存在平凡完美覆盖</li>\n</ul>\n<p>再证:存在平凡完美覆盖$\\rightarrow$存在完美覆盖</p>\n<ul>\n<li>显然</li>\n</ul>\n<p>9.显然,举个简单例子$n=5,m=6,a=2,b=3$存在完美覆盖,但是不存在平凡完美覆盖.</p>\n<p>10.假设存在不妨设四个变量是$a,b,c,d$,那么可以得到$a+b=b+c$即$a=c$显然不能构成幻方</p>\n<p>11.12.13 如图</p>\n<p><img src=\"https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/IC1-2.png\" alt=\"avatar\"></p>\n<p>14.所有可能的构造如图</p>\n<p><img src=\"https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/IC1-3.png\" alt=\"avatar\"></p>\n<p>15.暴力枚举的,确实没有解,并不知道为什么……</p>\n<p>16.$n$阶幻方,幻方总和是$n^2\\ast (n^2+1)/2$,所以每一行每一列求和都是$n\\ast (n^2+1)/2$,现在替换后每一行每一列的和换成了$n\\ast (n^2+1) - n\\ast (n^2+1)/2 = n\\ast (n^2+1)/2$所以可能是个幻方,然后因为里面的元素都是属于$[1,n^2]$之间的,所以$n^2+1-a$可以保证换完之后每个元素还是只出现一次,所以新生成的还是幻方.</p>\n<p>17.给出$n=4$和$n=8$时的图…….</p>\n<p><img src=\"https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/IC1-4.png\" alt=\"avatar\"></p>\n<p>18.这个应该是显然的,因为二阶幻方都没有,显然没有二阶幻方体.</p>\n<p>19.首先我们拆开来看没一个单独的平面,我们可以得到,对于一个四阶幻方来说,如果对角线也满足幻和,那么显然可以得到任意三阶子矩阵的对顶角之和等于幻和的一半,所以我们任取出四阶幻方体的任一三阶子体,可以得到类似于$a+b=b+c$的等式,也就是说存在$a==c$的情况,这显然和题意不符,所以不可能存在四阶幻方体.</p>\n<p>20.首先,$10$和$5$一个颜色,$1,3,7,9$一个颜色,$2,4,6,8$一种颜色,可以得到可以由三种颜色构成,然后,$1,2,10$相互接壤,显然需要三种及以上颜色来涂,方案数为$3\\ast 2\\ast 1 = 6$.</p>\n<p>21.(a) 二阶的显然不存在,书后面给了答案,还有一个比较简单的想法就是如果存在显然可以得到类似于$a==b$的结论,所以不存在.</p>\n<p>(b) 暴搜剪枝,emmmmm……如图</p>\n<p><img src=\"https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/IC1-5.jpg\" alt=\"avatar\"></p>\n","site":{"data":{}},"excerpt":"<p>作者自己辛苦原创,如有错误or转载or其他用途请联系qq:669415029,谢谢<br>","more":"</p>\n<p>1.利用反证法容易得到,如果$n$和$m$都是奇数,那么$n*m$也是奇数,显然不可覆盖,所以$n$和$m$至少有一个偶数</p>\n<p>2.我们定义行号从上到下为$1\\dots m$,列号从左到右为$1\\dots n$,然后我们就可以得到被切掉的那个方块只可能是奇数行奇数列,或者偶数行偶数列,我们考虑对这两种方案分别进行构造来得到我们想要的答案.</p>\n<ul>\n<li>奇数行奇数列:对于和他在同一行同一列的方块来说,因为他去掉了,所以剩下的一定是可以匹配的偶数,也就是说我们可以匹配上这一行一列,对于剩下的一定都是偶数行偶数列的联通块,显然可以构造</li>\n<li>奇数行奇数列:这个稍微麻烦一点,我们可以选择他周围的奇数行奇数列的一个子矩阵,显然可以螺旋式的构造,也就是说我们用完左上角,对于剩下的容易证明也是两个偶数的联通块,同样可以构造,看图<br><img src=\"https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/IC1-1.png\" alt=\"avatar\"></li>\n</ul>\n<p>3.显然是不能获得自由的,因为我们可以将这个棋盘黑白二染色,然后可以发现对顶角颜色相同,每一步颜色都会反转,一共要走63步,所以最后一步一定会在异色块上,所以不行.</p>\n<p>4.(a)对于每一个$n$来说我们直接考虑最后一块的摆放方法,如果是竖着放,那么剩下的就是$f(n-1)$的子问题,如果是横着放,那么倒数第二块显然也是横着放的,所以剩下的就是$f(n-2)$的子问题,所以显然可以得到的是$f(n) = f(n-1)+f(n-2)$,也就是说答案就是fibonacci.$\\therefore f(12) = 233$</p>\n<p>4.(b)这里我们可以考虑DP来做,具体程序如下:</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">1e5</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> dp[maxm][<span class=\"number\">8</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tdp[<span class=\"number\">0</span>][<span class=\"number\">0</span>] = dp[<span class=\"number\">0</span>][<span class=\"number\">3</span>] = dp[<span class=\"number\">0</span>][<span class=\"number\">6</span>] = dp[<span class=\"number\">1</span>][<span class=\"number\">1</span>] = dp[<span class=\"number\">1</span>][<span class=\"number\">4</span>] = dp[<span class=\"number\">1</span>][<span class=\"number\">7</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>;i&lt;maxm;i++)&#123;</span><br><span class=\"line\">\t\tdp[i][<span class=\"number\">0</span>] = dp[i<span class=\"number\">-2</span>][<span class=\"number\">3</span>]+dp[i<span class=\"number\">-2</span>][<span class=\"number\">6</span>]+dp[i<span class=\"number\">-2</span>][<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\tdp[i][<span class=\"number\">1</span>] = dp[i<span class=\"number\">-1</span>][<span class=\"number\">0</span>]+dp[i<span class=\"number\">-2</span>][<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\tdp[i][<span class=\"number\">3</span>] = dp[i][<span class=\"number\">0</span>]+dp[i<span class=\"number\">-2</span>][<span class=\"number\">3</span>];</span><br><span class=\"line\">\t\tdp[i][<span class=\"number\">4</span>] = dp[i][<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\tdp[i][<span class=\"number\">6</span>] = dp[i][<span class=\"number\">3</span>];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后可以发现$g(n) = 4\\ast g(n-2)-g(n-4)$</p>\n<p>5.用4.(b)的代码容易可得,$g(4) = 11$</p>\n<p>6.同样采用反证法容易证得$n$是偶数,下面我们考虑$n$是奇数扣掉中间一块的情况.不妨假设八个角上的颜色是黑色,可以得到黑块数量是$4k^3+6k^2+3k+1$,白块的数量是$4k^3+6k^2+3k$,我们可以分两种情况讨论,我们假设$n = 2k+1$</p>\n<ul>\n<li>当k是奇数时,也就是$k = 2t+1$,即$n = 4t+3$,中间块是白色的.然后扣掉白块后,显然黑块和白块不匹配,然后不行鸭.</li>\n<li>当k是偶数时,也就是$k = 2t$,即$n = 4t+1$,中间块是黑色的,扣掉黑块后,白块和黑块是匹配的,可能可以.下面我们证明$n = 4t+1$时是可行的<ul>\n<li>我们按照层数拆分,我们抽掉其中的第$2t+1$层,我们可以得到,这一层显然是可行的,类比于二阶的时候,我们扣掉中心块</li>\n<li>对于剩下的两个联通块,我们显然可以得到是他们对称,我们只考虑上面的$2t$层的部分,我们每两层考虑一下</li>\n<li>对于相连的两层,也就是$2\\ast n\\ast n$的形状,我们显然可以构造,所以整个三维结构是可以构造的.</li>\n</ul>\n</li>\n</ul>\n<p>7.首先证明$a$既是$n$的因子,又是$m$的因子</p>\n<ul>\n<li>因为$a$是$b$的因子,所以$a\\ast b$的可以看成多个$a\\ast a$的,采用反证法,假设$a$不是$m$的因子,那么对于剩下的$(m%a)\\ast (n%a)$的矩阵显然不可以用$a\\ast a$的矩阵填满,所以$m%a==0&amp;&amp;n%a==0$.</li>\n</ul>\n<p>再证$b$是$n$或者$m$的因子</p>\n<ul>\n<li>同样反证法,我们将$a,b,m,n$同时缩小$a$倍,然后可以转化成,现在有一个$x\\ast y$的棋盘,我要用一个$1\\ast z$的棋盘去覆盖他,但是$gcd(x,z)=gcd(y,z)=1$,这个可以显然发现是不可能的</li>\n</ul>\n<p>8.先证:存在完美覆盖$\\rightarrow$存在平凡完美覆盖</p>\n<ul>\n<li>利用习题7,我们得到如果存在完美覆盖,那么$gcd(n,a)=gcd(m,a)=a$并且$gcd(m,b)=b$,然后我们显然可以让$b$的朝向指向$m$的方向,也就是存在平凡完美覆盖</li>\n</ul>\n<p>再证:存在平凡完美覆盖$\\rightarrow$存在完美覆盖</p>\n<ul>\n<li>显然</li>\n</ul>\n<p>9.显然,举个简单例子$n=5,m=6,a=2,b=3$存在完美覆盖,但是不存在平凡完美覆盖.</p>\n<p>10.假设存在不妨设四个变量是$a,b,c,d$,那么可以得到$a+b=b+c$即$a=c$显然不能构成幻方</p>\n<p>11.12.13 如图</p>\n<p><img src=\"https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/IC1-2.png\" alt=\"avatar\"></p>\n<p>14.所有可能的构造如图</p>\n<p><img src=\"https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/IC1-3.png\" alt=\"avatar\"></p>\n<p>15.暴力枚举的,确实没有解,并不知道为什么……</p>\n<p>16.$n$阶幻方,幻方总和是$n^2\\ast (n^2+1)/2$,所以每一行每一列求和都是$n\\ast (n^2+1)/2$,现在替换后每一行每一列的和换成了$n\\ast (n^2+1) - n\\ast (n^2+1)/2 = n\\ast (n^2+1)/2$所以可能是个幻方,然后因为里面的元素都是属于$[1,n^2]$之间的,所以$n^2+1-a$可以保证换完之后每个元素还是只出现一次,所以新生成的还是幻方.</p>\n<p>17.给出$n=4$和$n=8$时的图…….</p>\n<p><img src=\"https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/IC1-4.png\" alt=\"avatar\"></p>\n<p>18.这个应该是显然的,因为二阶幻方都没有,显然没有二阶幻方体.</p>\n<p>19.首先我们拆开来看没一个单独的平面,我们可以得到,对于一个四阶幻方来说,如果对角线也满足幻和,那么显然可以得到任意三阶子矩阵的对顶角之和等于幻和的一半,所以我们任取出四阶幻方体的任一三阶子体,可以得到类似于$a+b=b+c$的等式,也就是说存在$a==c$的情况,这显然和题意不符,所以不可能存在四阶幻方体.</p>\n<p>20.首先,$10$和$5$一个颜色,$1,3,7,9$一个颜色,$2,4,6,8$一种颜色,可以得到可以由三种颜色构成,然后,$1,2,10$相互接壤,显然需要三种及以上颜色来涂,方案数为$3\\ast 2\\ast 1 = 6$.</p>\n<p>21.(a) 二阶的显然不存在,书后面给了答案,还有一个比较简单的想法就是如果存在显然可以得到类似于$a==b$的结论,所以不存在.</p>\n<p>(b) 暴搜剪枝,emmmmm……如图</p>\n<p><img src=\"https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/IC1-5.jpg\" alt=\"avatar\"></p>"},{"title":"mathematical formula(Irregular updates)","date":"2018-12-06T16:00:00.000Z","author":"zuhiul","_content":"\n### 二元运算符\n<!-- more -->\n\n|符号|功能|代码|符号|功能|代码|符号|功能|代码|\n|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|\n|$+$|加|+|$-$|减|-|$\\triangleleft$||\\triangleleft|\n|$\\pm$|加减|\\pm|$\\mp$|减加|\\mp|$\\triangleright$||\\triangleright|\n|$\\times$|乘|\\times|$\\setminus$|差集|\\setminus|$\\star$|５星乘|\\star|\n|$\\cup$|并|\\cup|$\\cap$|交|\\cap|$\\ast$|６星乘|\\ast|\n|$\\sqcup$||\\sqcup|$\\sqcap$||\\sqcap|$\\circ$||\\circ|\n|$\\vee$|合取|\\vee|$\\wedge$|析取|\\wedge|$\\bullet$||\\bullet|\n|$\\oplus$|异或|\\oplus|$\\ominus$||\\ominus|$\\diamond$||\\diamond|\n|$\\odot$||\\odot|$\\oslash$||\\oslash|$\\uplus$||\\uplus|\n|$\\otimes$||\\otimes|$\\bigcirc$||\\bigcirc|$\\amalg$||\\amalg|\n|$\\bigtriangleup$||\\bigtriangleup|$\\bigtriangledown$||\\bigtriangledown|$\\dagger$||\\dagger|\n|$\\lhd$||\\lhd|$\\rhd$||\\rhd|$\\ddagger$||\\ddagger|\n|$\\unlhd$||\\unlhd|$\\unrhd$||\\unrhd|$\\wr$||\\wr|\n\n### 二元关系符\n\n|符号|功能|代码|符号|功能|代码|符号|功能|代码|\n|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|\n|$<$|小于|<|$>$|大于|>|$=$|等于|=|\n|$\\leq$|小于等于|\\leq|$\\geq$|大于等于|\\geq|$\\equiv$|同余|\\equiv|\n|$\\ll$|远小于|\\ll|$\\gg$|远大于|\\gg|$\\doteq$|约等于|\\doteq|\n|$\\prec$||\\prec|$\\succ$||\\succ|$\\sim$||\\sim|\n|$\\preceq$||\\preceq|$\\succeq$||\\succeq|$\\simeq$||\\simeq|\n|$\\subset$|子集|\\subset|$\\supset$|父集|\\supset|$\\approx$||\\approx|\n|$\\subseteq$||\\subseteq|$\\supseteq$||\\supseteq|$\\cong$||\\cong|\n|$\\sqsubset$||\\sqsubset|$\\sqsupset$||\\sqsupset|$\\Join$||\\Join|\n|$\\sqsubseteq$||\\sqsubseteq|$\\sqsupseteq$||\\sqsupseteq|$\\bowtie$||\\bowtie|\n|$\\in$|属于|\\in|$\\ni$|被属于|\\ni|$\\propto$||\\propto|\n|$\\vdash$|蕴涵|\\vdash|$\\dashv$|被蕴涵|\\dashv|$\\models$||\\models|\n|$\\mid$|整除|\\mid|$\\parallel$|平行|\\parallel|$\\perp$||\\perp|\n|$\\smile$||\\smile|$\\frown$||\\frown|$\\asymp$||\\asymp|\n|$:$||：|$\\notin$|不属于|\\notin|$\\neq$|不等于|\\neq|\n\n### 小写希腊字母\n|符号|代码|符号|代码|符号|代码|符号|代码|符号|代码|\n|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|\n|$\\alpha$|\\alpha|$\\beta$|\\beta|$\\gamma$|\\gamma|$\\delta$|\\delta|$\\omega$|\\omega|\n|$\\epsilon$|\\epsilon|$\\varepsilon$|\\varepsilon|$\\zeta$|\\zeta|$\\eta$|\\eta|$\\psi$|\\psi|\n|$\\theta$|\\theta|$\\vartheta$|\\vartheta|$\\iota$|\\iota|$\\kappa$|\\kappa|$\\varphi$|\\varphi|\n|$\\lambda$|\\lambda|$\\mu$|\\mu|$\\nu$|\\nu|$\\xi$|\\xi|$\\phi$|\\phi|\n|$\\pi$|\\pi|$\\varpi$|\\varpi|$\\rho$|\\rho|$\\varrho$|\\varrho|$\\upsilon$|\\upsilon|\n|$\\sigma$|\\sigma|$\\varsigma$|\\varsigma|$\\tau$|\\tau|\n\n### 大写希腊字母\n\n|符号|代码|符号|代码|符号|代码|符号|代码|符号|代码|\n|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|\n|$\\Gamma$|\\Gamma|$\\Delta$|\\Delta|$\\Theta$|\\Theta|$\\Lambda$|\\Lambda|$\\Omega$|\\Omega|\n|$\\Xi$|\\Xi|$\\Pi$|\\Pi|$\\Sigma$|\\Sigma|$\\Upsilon$|\\Upsilon|$\\Psi$|\\Psi|\n|$\\Phi$|\\Phi|\n\n### 箭头\n\n|符号|代码|符号|代码|符号|代码|符号|代码|\n|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|\n|$\\leftarrow$|\\leftarrow|$\\rightarrow$|\\rightarrow|$\\Leftarrow$|\\Leftarrow|$\\Rightarrow$|\\Rightarrow|\n|$\\longleftarrow$|\\longleftarrow|$\\longrightarrow$|\\longrightarrow|$\\Longleftarrow$|\\Longleftarrow|$\\Longrightarrow$|\\Longrightarrow|\n|$\\uparrow$|\\uparrow|$\\downarrow$|\\downarrow|$\\Uparrow$|\\Uparrow|$\\Downarrow$|\\Downarrow|\n|$\\nwarrow$|\\nwarrow|$\\nearrow$|\\nearrow|$\\swarrow$|\\swarrow|$\\searrow$|\\searrow|\n|$\\Leftrightarrow$|\\Leftrightarrow|$\\Longleftrightarrow$|\\Longleftrightarrow|$\\Updownarrow$|\\Updownarrow|$\\iff$|\\iff|\n|$\\mapsto$|\\mapsto|$\\longmapsto$|\\longmapsto|$\\hookleftarrow$|\\hookleftarrow|$\\hookrightarrow$|\\hookrightarrow|\n|$\\leftharpoonup$|\\leftharpoonup|$\\rightharpoonup$|\\rightharpoonup|$\\leftharpoondown$|\\leftharpoondown|$\\rightharpoondown$|\\rightharpoondown|\n|$\\updownarrow$|\\updownarrow|$\\leadsto$|\\leadsto|$\\rightleftharpoons$|\\rightleftharpoons|$\\longleftrightarrow$|\\longleftrightarrow|\n|$\\leftrightarrow$|\\leftrightarrow|\n\n### 括号\n|符号|代码|符号|代码|符号|代码|符号|代码|\n|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|\n|$\\lbrack$|\\lbrack|$\\rbrack$|\\rbrack|$\\lbrace$|\\lbrace|$\\rbrace$|\\rbrace|\n|$\\langle$|\\langle|$\\rangle$|\\rangle|$\\lfloor$|\\lfloor|$\\rfloor$|\\rfloor|\n|$\\vert$|\\vert|$\\Vert$|\\Vert|$\\lceil$|\\lceil|$\\rceil$|\\rceil|\n|$\\backslash$|\\backslash|\n\n### 大尺寸符号\n|符号|代码|符号|代码|符号|代码|符号|代码|\n|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|\n|$\\lgroup$|\\lgroup|$\\rgroup$|\\rgroup|$\\lmoustache$|\\lmoustache|$\\rmoustache$|\\rmoustache|\n|$\\arrowvert$|\\arrowvert|$\\Arrowvert$|\\Arrowvert|$\\bracevert$|\\bracevert|\n","source":"_posts/knowledge/Mathematical_Formula.md","raw":"---\ntitle: mathematical formula(Irregular updates)\ndate:\t2018-12-07\nauthor:\t\"zuhiul\"\ntags:\n  - 数学\n---\n\n### 二元运算符\n<!-- more -->\n\n|符号|功能|代码|符号|功能|代码|符号|功能|代码|\n|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|\n|$+$|加|+|$-$|减|-|$\\triangleleft$||\\triangleleft|\n|$\\pm$|加减|\\pm|$\\mp$|减加|\\mp|$\\triangleright$||\\triangleright|\n|$\\times$|乘|\\times|$\\setminus$|差集|\\setminus|$\\star$|５星乘|\\star|\n|$\\cup$|并|\\cup|$\\cap$|交|\\cap|$\\ast$|６星乘|\\ast|\n|$\\sqcup$||\\sqcup|$\\sqcap$||\\sqcap|$\\circ$||\\circ|\n|$\\vee$|合取|\\vee|$\\wedge$|析取|\\wedge|$\\bullet$||\\bullet|\n|$\\oplus$|异或|\\oplus|$\\ominus$||\\ominus|$\\diamond$||\\diamond|\n|$\\odot$||\\odot|$\\oslash$||\\oslash|$\\uplus$||\\uplus|\n|$\\otimes$||\\otimes|$\\bigcirc$||\\bigcirc|$\\amalg$||\\amalg|\n|$\\bigtriangleup$||\\bigtriangleup|$\\bigtriangledown$||\\bigtriangledown|$\\dagger$||\\dagger|\n|$\\lhd$||\\lhd|$\\rhd$||\\rhd|$\\ddagger$||\\ddagger|\n|$\\unlhd$||\\unlhd|$\\unrhd$||\\unrhd|$\\wr$||\\wr|\n\n### 二元关系符\n\n|符号|功能|代码|符号|功能|代码|符号|功能|代码|\n|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|\n|$<$|小于|<|$>$|大于|>|$=$|等于|=|\n|$\\leq$|小于等于|\\leq|$\\geq$|大于等于|\\geq|$\\equiv$|同余|\\equiv|\n|$\\ll$|远小于|\\ll|$\\gg$|远大于|\\gg|$\\doteq$|约等于|\\doteq|\n|$\\prec$||\\prec|$\\succ$||\\succ|$\\sim$||\\sim|\n|$\\preceq$||\\preceq|$\\succeq$||\\succeq|$\\simeq$||\\simeq|\n|$\\subset$|子集|\\subset|$\\supset$|父集|\\supset|$\\approx$||\\approx|\n|$\\subseteq$||\\subseteq|$\\supseteq$||\\supseteq|$\\cong$||\\cong|\n|$\\sqsubset$||\\sqsubset|$\\sqsupset$||\\sqsupset|$\\Join$||\\Join|\n|$\\sqsubseteq$||\\sqsubseteq|$\\sqsupseteq$||\\sqsupseteq|$\\bowtie$||\\bowtie|\n|$\\in$|属于|\\in|$\\ni$|被属于|\\ni|$\\propto$||\\propto|\n|$\\vdash$|蕴涵|\\vdash|$\\dashv$|被蕴涵|\\dashv|$\\models$||\\models|\n|$\\mid$|整除|\\mid|$\\parallel$|平行|\\parallel|$\\perp$||\\perp|\n|$\\smile$||\\smile|$\\frown$||\\frown|$\\asymp$||\\asymp|\n|$:$||：|$\\notin$|不属于|\\notin|$\\neq$|不等于|\\neq|\n\n### 小写希腊字母\n|符号|代码|符号|代码|符号|代码|符号|代码|符号|代码|\n|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|\n|$\\alpha$|\\alpha|$\\beta$|\\beta|$\\gamma$|\\gamma|$\\delta$|\\delta|$\\omega$|\\omega|\n|$\\epsilon$|\\epsilon|$\\varepsilon$|\\varepsilon|$\\zeta$|\\zeta|$\\eta$|\\eta|$\\psi$|\\psi|\n|$\\theta$|\\theta|$\\vartheta$|\\vartheta|$\\iota$|\\iota|$\\kappa$|\\kappa|$\\varphi$|\\varphi|\n|$\\lambda$|\\lambda|$\\mu$|\\mu|$\\nu$|\\nu|$\\xi$|\\xi|$\\phi$|\\phi|\n|$\\pi$|\\pi|$\\varpi$|\\varpi|$\\rho$|\\rho|$\\varrho$|\\varrho|$\\upsilon$|\\upsilon|\n|$\\sigma$|\\sigma|$\\varsigma$|\\varsigma|$\\tau$|\\tau|\n\n### 大写希腊字母\n\n|符号|代码|符号|代码|符号|代码|符号|代码|符号|代码|\n|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|\n|$\\Gamma$|\\Gamma|$\\Delta$|\\Delta|$\\Theta$|\\Theta|$\\Lambda$|\\Lambda|$\\Omega$|\\Omega|\n|$\\Xi$|\\Xi|$\\Pi$|\\Pi|$\\Sigma$|\\Sigma|$\\Upsilon$|\\Upsilon|$\\Psi$|\\Psi|\n|$\\Phi$|\\Phi|\n\n### 箭头\n\n|符号|代码|符号|代码|符号|代码|符号|代码|\n|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|\n|$\\leftarrow$|\\leftarrow|$\\rightarrow$|\\rightarrow|$\\Leftarrow$|\\Leftarrow|$\\Rightarrow$|\\Rightarrow|\n|$\\longleftarrow$|\\longleftarrow|$\\longrightarrow$|\\longrightarrow|$\\Longleftarrow$|\\Longleftarrow|$\\Longrightarrow$|\\Longrightarrow|\n|$\\uparrow$|\\uparrow|$\\downarrow$|\\downarrow|$\\Uparrow$|\\Uparrow|$\\Downarrow$|\\Downarrow|\n|$\\nwarrow$|\\nwarrow|$\\nearrow$|\\nearrow|$\\swarrow$|\\swarrow|$\\searrow$|\\searrow|\n|$\\Leftrightarrow$|\\Leftrightarrow|$\\Longleftrightarrow$|\\Longleftrightarrow|$\\Updownarrow$|\\Updownarrow|$\\iff$|\\iff|\n|$\\mapsto$|\\mapsto|$\\longmapsto$|\\longmapsto|$\\hookleftarrow$|\\hookleftarrow|$\\hookrightarrow$|\\hookrightarrow|\n|$\\leftharpoonup$|\\leftharpoonup|$\\rightharpoonup$|\\rightharpoonup|$\\leftharpoondown$|\\leftharpoondown|$\\rightharpoondown$|\\rightharpoondown|\n|$\\updownarrow$|\\updownarrow|$\\leadsto$|\\leadsto|$\\rightleftharpoons$|\\rightleftharpoons|$\\longleftrightarrow$|\\longleftrightarrow|\n|$\\leftrightarrow$|\\leftrightarrow|\n\n### 括号\n|符号|代码|符号|代码|符号|代码|符号|代码|\n|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|\n|$\\lbrack$|\\lbrack|$\\rbrack$|\\rbrack|$\\lbrace$|\\lbrace|$\\rbrace$|\\rbrace|\n|$\\langle$|\\langle|$\\rangle$|\\rangle|$\\lfloor$|\\lfloor|$\\rfloor$|\\rfloor|\n|$\\vert$|\\vert|$\\Vert$|\\Vert|$\\lceil$|\\lceil|$\\rceil$|\\rceil|\n|$\\backslash$|\\backslash|\n\n### 大尺寸符号\n|符号|代码|符号|代码|符号|代码|符号|代码|\n|:------:|:------:|:------:|:------:|:------:|:------:|:------:|:------:|\n|$\\lgroup$|\\lgroup|$\\rgroup$|\\rgroup|$\\lmoustache$|\\lmoustache|$\\rmoustache$|\\rmoustache|\n|$\\arrowvert$|\\arrowvert|$\\Arrowvert$|\\Arrowvert|$\\bracevert$|\\bracevert|\n","slug":"knowledge/Mathematical_Formula","published":1,"updated":"2019-05-09T11:22:07.904Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1hv0024a613f14xek54","content":"<h3 id=\"二元运算符\"><a href=\"#二元运算符\" class=\"headerlink\" title=\"二元运算符\"></a>二元运算符</h3><a id=\"more\"></a>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">功能</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">功能</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">功能</th>\n<th style=\"text-align:center\">代码</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">$+$</td>\n<td style=\"text-align:center\">加</td>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:center\">$-$</td>\n<td style=\"text-align:center\">减</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">$\\triangleleft$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\triangleleft</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\pm$</td>\n<td style=\"text-align:center\">加减</td>\n<td style=\"text-align:center\">\\pm</td>\n<td style=\"text-align:center\">$\\mp$</td>\n<td style=\"text-align:center\">减加</td>\n<td style=\"text-align:center\">\\mp</td>\n<td style=\"text-align:center\">$\\triangleright$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\triangleright</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\times$</td>\n<td style=\"text-align:center\">乘</td>\n<td style=\"text-align:center\">\\times</td>\n<td style=\"text-align:center\">$\\setminus$</td>\n<td style=\"text-align:center\">差集</td>\n<td style=\"text-align:center\">\\setminus</td>\n<td style=\"text-align:center\">$\\star$</td>\n<td style=\"text-align:center\">５星乘</td>\n<td style=\"text-align:center\">\\star</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\cup$</td>\n<td style=\"text-align:center\">并</td>\n<td style=\"text-align:center\">\\cup</td>\n<td style=\"text-align:center\">$\\cap$</td>\n<td style=\"text-align:center\">交</td>\n<td style=\"text-align:center\">\\cap</td>\n<td style=\"text-align:center\">$\\ast$</td>\n<td style=\"text-align:center\">６星乘</td>\n<td style=\"text-align:center\">\\ast</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\sqcup$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\sqcup</td>\n<td style=\"text-align:center\">$\\sqcap$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\sqcap</td>\n<td style=\"text-align:center\">$\\circ$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\circ</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\vee$</td>\n<td style=\"text-align:center\">合取</td>\n<td style=\"text-align:center\">\\vee</td>\n<td style=\"text-align:center\">$\\wedge$</td>\n<td style=\"text-align:center\">析取</td>\n<td style=\"text-align:center\">\\wedge</td>\n<td style=\"text-align:center\">$\\bullet$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\bullet</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\oplus$</td>\n<td style=\"text-align:center\">异或</td>\n<td style=\"text-align:center\">\\oplus</td>\n<td style=\"text-align:center\">$\\ominus$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\ominus</td>\n<td style=\"text-align:center\">$\\diamond$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\diamond</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\odot$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\odot</td>\n<td style=\"text-align:center\">$\\oslash$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\oslash</td>\n<td style=\"text-align:center\">$\\uplus$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\uplus</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\otimes$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\otimes</td>\n<td style=\"text-align:center\">$\\bigcirc$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\bigcirc</td>\n<td style=\"text-align:center\">$\\amalg$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\amalg</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\bigtriangleup$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\bigtriangleup</td>\n<td style=\"text-align:center\">$\\bigtriangledown$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\bigtriangledown</td>\n<td style=\"text-align:center\">$\\dagger$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\dagger</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\lhd$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\lhd</td>\n<td style=\"text-align:center\">$\\rhd$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\rhd</td>\n<td style=\"text-align:center\">$\\ddagger$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\ddagger</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\unlhd$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\unlhd</td>\n<td style=\"text-align:center\">$\\unrhd$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\unrhd</td>\n<td style=\"text-align:center\">$\\wr$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\wr</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"二元关系符\"><a href=\"#二元关系符\" class=\"headerlink\" title=\"二元关系符\"></a>二元关系符</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">功能</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">功能</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">功能</th>\n<th style=\"text-align:center\">代码</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">$&lt;$</td>\n<td style=\"text-align:center\">小于</td>\n<td style=\"text-align:center\">&lt;</td>\n<td style=\"text-align:center\">$&gt;$</td>\n<td style=\"text-align:center\">大于</td>\n<td style=\"text-align:center\">&gt;</td>\n<td style=\"text-align:center\">$=$</td>\n<td style=\"text-align:center\">等于</td>\n<td style=\"text-align:center\">=</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\leq$</td>\n<td style=\"text-align:center\">小于等于</td>\n<td style=\"text-align:center\">\\leq</td>\n<td style=\"text-align:center\">$\\geq$</td>\n<td style=\"text-align:center\">大于等于</td>\n<td style=\"text-align:center\">\\geq</td>\n<td style=\"text-align:center\">$\\equiv$</td>\n<td style=\"text-align:center\">同余</td>\n<td style=\"text-align:center\">\\equiv</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\ll$</td>\n<td style=\"text-align:center\">远小于</td>\n<td style=\"text-align:center\">\\ll</td>\n<td style=\"text-align:center\">$\\gg$</td>\n<td style=\"text-align:center\">远大于</td>\n<td style=\"text-align:center\">\\gg</td>\n<td style=\"text-align:center\">$\\doteq$</td>\n<td style=\"text-align:center\">约等于</td>\n<td style=\"text-align:center\">\\doteq</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\prec$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\prec</td>\n<td style=\"text-align:center\">$\\succ$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\succ</td>\n<td style=\"text-align:center\">$\\sim$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\sim</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\preceq$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\preceq</td>\n<td style=\"text-align:center\">$\\succeq$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\succeq</td>\n<td style=\"text-align:center\">$\\simeq$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\simeq</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\subset$</td>\n<td style=\"text-align:center\">子集</td>\n<td style=\"text-align:center\">\\subset</td>\n<td style=\"text-align:center\">$\\supset$</td>\n<td style=\"text-align:center\">父集</td>\n<td style=\"text-align:center\">\\supset</td>\n<td style=\"text-align:center\">$\\approx$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\approx</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\subseteq$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\subseteq</td>\n<td style=\"text-align:center\">$\\supseteq$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\supseteq</td>\n<td style=\"text-align:center\">$\\cong$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\cong</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\sqsubset$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\sqsubset</td>\n<td style=\"text-align:center\">$\\sqsupset$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\sqsupset</td>\n<td style=\"text-align:center\">$\\Join$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\Join</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\sqsubseteq$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\sqsubseteq</td>\n<td style=\"text-align:center\">$\\sqsupseteq$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\sqsupseteq</td>\n<td style=\"text-align:center\">$\\bowtie$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\bowtie</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\in$</td>\n<td style=\"text-align:center\">属于</td>\n<td style=\"text-align:center\">\\in</td>\n<td style=\"text-align:center\">$\\ni$</td>\n<td style=\"text-align:center\">被属于</td>\n<td style=\"text-align:center\">\\ni</td>\n<td style=\"text-align:center\">$\\propto$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\propto</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\vdash$</td>\n<td style=\"text-align:center\">蕴涵</td>\n<td style=\"text-align:center\">\\vdash</td>\n<td style=\"text-align:center\">$\\dashv$</td>\n<td style=\"text-align:center\">被蕴涵</td>\n<td style=\"text-align:center\">\\dashv</td>\n<td style=\"text-align:center\">$\\models$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\models</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\mid$</td>\n<td style=\"text-align:center\">整除</td>\n<td style=\"text-align:center\">\\mid</td>\n<td style=\"text-align:center\">$\\parallel$</td>\n<td style=\"text-align:center\">平行</td>\n<td style=\"text-align:center\">\\parallel</td>\n<td style=\"text-align:center\">$\\perp$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\perp</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\smile$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\smile</td>\n<td style=\"text-align:center\">$\\frown$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\frown</td>\n<td style=\"text-align:center\">$\\asymp$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\asymp</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$:$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">：</td>\n<td style=\"text-align:center\">$\\notin$</td>\n<td style=\"text-align:center\">不属于</td>\n<td style=\"text-align:center\">\\notin</td>\n<td style=\"text-align:center\">$\\neq$</td>\n<td style=\"text-align:center\">不等于</td>\n<td style=\"text-align:center\">\\neq</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"小写希腊字母\"><a href=\"#小写希腊字母\" class=\"headerlink\" title=\"小写希腊字母\"></a>小写希腊字母</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">$\\alpha$</td>\n<td style=\"text-align:center\">\\alpha</td>\n<td style=\"text-align:center\">$\\beta$</td>\n<td style=\"text-align:center\">\\beta</td>\n<td style=\"text-align:center\">$\\gamma$</td>\n<td style=\"text-align:center\">\\gamma</td>\n<td style=\"text-align:center\">$\\delta$</td>\n<td style=\"text-align:center\">\\delta</td>\n<td style=\"text-align:center\">$\\omega$</td>\n<td style=\"text-align:center\">\\omega</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\epsilon$</td>\n<td style=\"text-align:center\">\\epsilon</td>\n<td style=\"text-align:center\">$\\varepsilon$</td>\n<td style=\"text-align:center\">\\varepsilon</td>\n<td style=\"text-align:center\">$\\zeta$</td>\n<td style=\"text-align:center\">\\zeta</td>\n<td style=\"text-align:center\">$\\eta$</td>\n<td style=\"text-align:center\">\\eta</td>\n<td style=\"text-align:center\">$\\psi$</td>\n<td style=\"text-align:center\">\\psi</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\theta$</td>\n<td style=\"text-align:center\">\\theta</td>\n<td style=\"text-align:center\">$\\vartheta$</td>\n<td style=\"text-align:center\">\\vartheta</td>\n<td style=\"text-align:center\">$\\iota$</td>\n<td style=\"text-align:center\">\\iota</td>\n<td style=\"text-align:center\">$\\kappa$</td>\n<td style=\"text-align:center\">\\kappa</td>\n<td style=\"text-align:center\">$\\varphi$</td>\n<td style=\"text-align:center\">\\varphi</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\lambda$</td>\n<td style=\"text-align:center\">\\lambda</td>\n<td style=\"text-align:center\">$\\mu$</td>\n<td style=\"text-align:center\">\\mu</td>\n<td style=\"text-align:center\">$\\nu$</td>\n<td style=\"text-align:center\">\\nu</td>\n<td style=\"text-align:center\">$\\xi$</td>\n<td style=\"text-align:center\">\\xi</td>\n<td style=\"text-align:center\">$\\phi$</td>\n<td style=\"text-align:center\">\\phi</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\pi$</td>\n<td style=\"text-align:center\">\\pi</td>\n<td style=\"text-align:center\">$\\varpi$</td>\n<td style=\"text-align:center\">\\varpi</td>\n<td style=\"text-align:center\">$\\rho$</td>\n<td style=\"text-align:center\">\\rho</td>\n<td style=\"text-align:center\">$\\varrho$</td>\n<td style=\"text-align:center\">\\varrho</td>\n<td style=\"text-align:center\">$\\upsilon$</td>\n<td style=\"text-align:center\">\\upsilon</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\sigma$</td>\n<td style=\"text-align:center\">\\sigma</td>\n<td style=\"text-align:center\">$\\varsigma$</td>\n<td style=\"text-align:center\">\\varsigma</td>\n<td style=\"text-align:center\">$\\tau$</td>\n<td style=\"text-align:center\">\\tau</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"大写希腊字母\"><a href=\"#大写希腊字母\" class=\"headerlink\" title=\"大写希腊字母\"></a>大写希腊字母</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">$\\Gamma$</td>\n<td style=\"text-align:center\">\\Gamma</td>\n<td style=\"text-align:center\">$\\Delta$</td>\n<td style=\"text-align:center\">\\Delta</td>\n<td style=\"text-align:center\">$\\Theta$</td>\n<td style=\"text-align:center\">\\Theta</td>\n<td style=\"text-align:center\">$\\Lambda$</td>\n<td style=\"text-align:center\">\\Lambda</td>\n<td style=\"text-align:center\">$\\Omega$</td>\n<td style=\"text-align:center\">\\Omega</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\Xi$</td>\n<td style=\"text-align:center\">\\Xi</td>\n<td style=\"text-align:center\">$\\Pi$</td>\n<td style=\"text-align:center\">\\Pi</td>\n<td style=\"text-align:center\">$\\Sigma$</td>\n<td style=\"text-align:center\">\\Sigma</td>\n<td style=\"text-align:center\">$\\Upsilon$</td>\n<td style=\"text-align:center\">\\Upsilon</td>\n<td style=\"text-align:center\">$\\Psi$</td>\n<td style=\"text-align:center\">\\Psi</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\Phi$</td>\n<td style=\"text-align:center\">\\Phi</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"箭头\"><a href=\"#箭头\" class=\"headerlink\" title=\"箭头\"></a>箭头</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">$\\leftarrow$</td>\n<td style=\"text-align:center\">\\leftarrow</td>\n<td style=\"text-align:center\">$\\rightarrow$</td>\n<td style=\"text-align:center\">\\rightarrow</td>\n<td style=\"text-align:center\">$\\Leftarrow$</td>\n<td style=\"text-align:center\">\\Leftarrow</td>\n<td style=\"text-align:center\">$\\Rightarrow$</td>\n<td style=\"text-align:center\">\\Rightarrow</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\longleftarrow$</td>\n<td style=\"text-align:center\">\\longleftarrow</td>\n<td style=\"text-align:center\">$\\longrightarrow$</td>\n<td style=\"text-align:center\">\\longrightarrow</td>\n<td style=\"text-align:center\">$\\Longleftarrow$</td>\n<td style=\"text-align:center\">\\Longleftarrow</td>\n<td style=\"text-align:center\">$\\Longrightarrow$</td>\n<td style=\"text-align:center\">\\Longrightarrow</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\uparrow$</td>\n<td style=\"text-align:center\">\\uparrow</td>\n<td style=\"text-align:center\">$\\downarrow$</td>\n<td style=\"text-align:center\">\\downarrow</td>\n<td style=\"text-align:center\">$\\Uparrow$</td>\n<td style=\"text-align:center\">\\Uparrow</td>\n<td style=\"text-align:center\">$\\Downarrow$</td>\n<td style=\"text-align:center\">\\Downarrow</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\nwarrow$</td>\n<td style=\"text-align:center\">\\nwarrow</td>\n<td style=\"text-align:center\">$\\nearrow$</td>\n<td style=\"text-align:center\">\\nearrow</td>\n<td style=\"text-align:center\">$\\swarrow$</td>\n<td style=\"text-align:center\">\\swarrow</td>\n<td style=\"text-align:center\">$\\searrow$</td>\n<td style=\"text-align:center\">\\searrow</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\Leftrightarrow$</td>\n<td style=\"text-align:center\">\\Leftrightarrow</td>\n<td style=\"text-align:center\">$\\Longleftrightarrow$</td>\n<td style=\"text-align:center\">\\Longleftrightarrow</td>\n<td style=\"text-align:center\">$\\Updownarrow$</td>\n<td style=\"text-align:center\">\\Updownarrow</td>\n<td style=\"text-align:center\">$\\iff$</td>\n<td style=\"text-align:center\">\\iff</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\mapsto$</td>\n<td style=\"text-align:center\">\\mapsto</td>\n<td style=\"text-align:center\">$\\longmapsto$</td>\n<td style=\"text-align:center\">\\longmapsto</td>\n<td style=\"text-align:center\">$\\hookleftarrow$</td>\n<td style=\"text-align:center\">\\hookleftarrow</td>\n<td style=\"text-align:center\">$\\hookrightarrow$</td>\n<td style=\"text-align:center\">\\hookrightarrow</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\leftharpoonup$</td>\n<td style=\"text-align:center\">\\leftharpoonup</td>\n<td style=\"text-align:center\">$\\rightharpoonup$</td>\n<td style=\"text-align:center\">\\rightharpoonup</td>\n<td style=\"text-align:center\">$\\leftharpoondown$</td>\n<td style=\"text-align:center\">\\leftharpoondown</td>\n<td style=\"text-align:center\">$\\rightharpoondown$</td>\n<td style=\"text-align:center\">\\rightharpoondown</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\updownarrow$</td>\n<td style=\"text-align:center\">\\updownarrow</td>\n<td style=\"text-align:center\">$\\leadsto$</td>\n<td style=\"text-align:center\">\\leadsto</td>\n<td style=\"text-align:center\">$\\rightleftharpoons$</td>\n<td style=\"text-align:center\">\\rightleftharpoons</td>\n<td style=\"text-align:center\">$\\longleftrightarrow$</td>\n<td style=\"text-align:center\">\\longleftrightarrow</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\leftrightarrow$</td>\n<td style=\"text-align:center\">\\leftrightarrow</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"括号\"><a href=\"#括号\" class=\"headerlink\" title=\"括号\"></a>括号</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">$\\lbrack$</td>\n<td style=\"text-align:center\">\\lbrack</td>\n<td style=\"text-align:center\">$\\rbrack$</td>\n<td style=\"text-align:center\">\\rbrack</td>\n<td style=\"text-align:center\">$\\lbrace$</td>\n<td style=\"text-align:center\">\\lbrace</td>\n<td style=\"text-align:center\">$\\rbrace$</td>\n<td style=\"text-align:center\">\\rbrace</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\langle$</td>\n<td style=\"text-align:center\">\\langle</td>\n<td style=\"text-align:center\">$\\rangle$</td>\n<td style=\"text-align:center\">\\rangle</td>\n<td style=\"text-align:center\">$\\lfloor$</td>\n<td style=\"text-align:center\">\\lfloor</td>\n<td style=\"text-align:center\">$\\rfloor$</td>\n<td style=\"text-align:center\">\\rfloor</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\vert$</td>\n<td style=\"text-align:center\">\\vert</td>\n<td style=\"text-align:center\">$\\Vert$</td>\n<td style=\"text-align:center\">\\Vert</td>\n<td style=\"text-align:center\">$\\lceil$</td>\n<td style=\"text-align:center\">\\lceil</td>\n<td style=\"text-align:center\">$\\rceil$</td>\n<td style=\"text-align:center\">\\rceil</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\backslash$</td>\n<td style=\"text-align:center\">\\backslash</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"大尺寸符号\"><a href=\"#大尺寸符号\" class=\"headerlink\" title=\"大尺寸符号\"></a>大尺寸符号</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">$\\lgroup$</td>\n<td style=\"text-align:center\">\\lgroup</td>\n<td style=\"text-align:center\">$\\rgroup$</td>\n<td style=\"text-align:center\">\\rgroup</td>\n<td style=\"text-align:center\">$\\lmoustache$</td>\n<td style=\"text-align:center\">\\lmoustache</td>\n<td style=\"text-align:center\">$\\rmoustache$</td>\n<td style=\"text-align:center\">\\rmoustache</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\arrowvert$</td>\n<td style=\"text-align:center\">\\arrowvert</td>\n<td style=\"text-align:center\">$\\Arrowvert$</td>\n<td style=\"text-align:center\">\\Arrowvert</td>\n<td style=\"text-align:center\">$\\bracevert$</td>\n<td style=\"text-align:center\">\\bracevert</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"<h3 id=\"二元运算符\"><a href=\"#二元运算符\" class=\"headerlink\" title=\"二元运算符\"></a>二元运算符</h3>","more":"<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">功能</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">功能</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">功能</th>\n<th style=\"text-align:center\">代码</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">$+$</td>\n<td style=\"text-align:center\">加</td>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:center\">$-$</td>\n<td style=\"text-align:center\">减</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">$\\triangleleft$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\triangleleft</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\pm$</td>\n<td style=\"text-align:center\">加减</td>\n<td style=\"text-align:center\">\\pm</td>\n<td style=\"text-align:center\">$\\mp$</td>\n<td style=\"text-align:center\">减加</td>\n<td style=\"text-align:center\">\\mp</td>\n<td style=\"text-align:center\">$\\triangleright$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\triangleright</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\times$</td>\n<td style=\"text-align:center\">乘</td>\n<td style=\"text-align:center\">\\times</td>\n<td style=\"text-align:center\">$\\setminus$</td>\n<td style=\"text-align:center\">差集</td>\n<td style=\"text-align:center\">\\setminus</td>\n<td style=\"text-align:center\">$\\star$</td>\n<td style=\"text-align:center\">５星乘</td>\n<td style=\"text-align:center\">\\star</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\cup$</td>\n<td style=\"text-align:center\">并</td>\n<td style=\"text-align:center\">\\cup</td>\n<td style=\"text-align:center\">$\\cap$</td>\n<td style=\"text-align:center\">交</td>\n<td style=\"text-align:center\">\\cap</td>\n<td style=\"text-align:center\">$\\ast$</td>\n<td style=\"text-align:center\">６星乘</td>\n<td style=\"text-align:center\">\\ast</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\sqcup$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\sqcup</td>\n<td style=\"text-align:center\">$\\sqcap$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\sqcap</td>\n<td style=\"text-align:center\">$\\circ$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\circ</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\vee$</td>\n<td style=\"text-align:center\">合取</td>\n<td style=\"text-align:center\">\\vee</td>\n<td style=\"text-align:center\">$\\wedge$</td>\n<td style=\"text-align:center\">析取</td>\n<td style=\"text-align:center\">\\wedge</td>\n<td style=\"text-align:center\">$\\bullet$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\bullet</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\oplus$</td>\n<td style=\"text-align:center\">异或</td>\n<td style=\"text-align:center\">\\oplus</td>\n<td style=\"text-align:center\">$\\ominus$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\ominus</td>\n<td style=\"text-align:center\">$\\diamond$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\diamond</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\odot$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\odot</td>\n<td style=\"text-align:center\">$\\oslash$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\oslash</td>\n<td style=\"text-align:center\">$\\uplus$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\uplus</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\otimes$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\otimes</td>\n<td style=\"text-align:center\">$\\bigcirc$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\bigcirc</td>\n<td style=\"text-align:center\">$\\amalg$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\amalg</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\bigtriangleup$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\bigtriangleup</td>\n<td style=\"text-align:center\">$\\bigtriangledown$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\bigtriangledown</td>\n<td style=\"text-align:center\">$\\dagger$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\dagger</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\lhd$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\lhd</td>\n<td style=\"text-align:center\">$\\rhd$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\rhd</td>\n<td style=\"text-align:center\">$\\ddagger$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\ddagger</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\unlhd$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\unlhd</td>\n<td style=\"text-align:center\">$\\unrhd$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\unrhd</td>\n<td style=\"text-align:center\">$\\wr$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\wr</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"二元关系符\"><a href=\"#二元关系符\" class=\"headerlink\" title=\"二元关系符\"></a>二元关系符</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">功能</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">功能</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">功能</th>\n<th style=\"text-align:center\">代码</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">$&lt;$</td>\n<td style=\"text-align:center\">小于</td>\n<td style=\"text-align:center\">&lt;</td>\n<td style=\"text-align:center\">$&gt;$</td>\n<td style=\"text-align:center\">大于</td>\n<td style=\"text-align:center\">&gt;</td>\n<td style=\"text-align:center\">$=$</td>\n<td style=\"text-align:center\">等于</td>\n<td style=\"text-align:center\">=</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\leq$</td>\n<td style=\"text-align:center\">小于等于</td>\n<td style=\"text-align:center\">\\leq</td>\n<td style=\"text-align:center\">$\\geq$</td>\n<td style=\"text-align:center\">大于等于</td>\n<td style=\"text-align:center\">\\geq</td>\n<td style=\"text-align:center\">$\\equiv$</td>\n<td style=\"text-align:center\">同余</td>\n<td style=\"text-align:center\">\\equiv</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\ll$</td>\n<td style=\"text-align:center\">远小于</td>\n<td style=\"text-align:center\">\\ll</td>\n<td style=\"text-align:center\">$\\gg$</td>\n<td style=\"text-align:center\">远大于</td>\n<td style=\"text-align:center\">\\gg</td>\n<td style=\"text-align:center\">$\\doteq$</td>\n<td style=\"text-align:center\">约等于</td>\n<td style=\"text-align:center\">\\doteq</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\prec$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\prec</td>\n<td style=\"text-align:center\">$\\succ$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\succ</td>\n<td style=\"text-align:center\">$\\sim$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\sim</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\preceq$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\preceq</td>\n<td style=\"text-align:center\">$\\succeq$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\succeq</td>\n<td style=\"text-align:center\">$\\simeq$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\simeq</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\subset$</td>\n<td style=\"text-align:center\">子集</td>\n<td style=\"text-align:center\">\\subset</td>\n<td style=\"text-align:center\">$\\supset$</td>\n<td style=\"text-align:center\">父集</td>\n<td style=\"text-align:center\">\\supset</td>\n<td style=\"text-align:center\">$\\approx$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\approx</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\subseteq$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\subseteq</td>\n<td style=\"text-align:center\">$\\supseteq$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\supseteq</td>\n<td style=\"text-align:center\">$\\cong$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\cong</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\sqsubset$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\sqsubset</td>\n<td style=\"text-align:center\">$\\sqsupset$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\sqsupset</td>\n<td style=\"text-align:center\">$\\Join$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\Join</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\sqsubseteq$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\sqsubseteq</td>\n<td style=\"text-align:center\">$\\sqsupseteq$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\sqsupseteq</td>\n<td style=\"text-align:center\">$\\bowtie$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\bowtie</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\in$</td>\n<td style=\"text-align:center\">属于</td>\n<td style=\"text-align:center\">\\in</td>\n<td style=\"text-align:center\">$\\ni$</td>\n<td style=\"text-align:center\">被属于</td>\n<td style=\"text-align:center\">\\ni</td>\n<td style=\"text-align:center\">$\\propto$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\propto</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\vdash$</td>\n<td style=\"text-align:center\">蕴涵</td>\n<td style=\"text-align:center\">\\vdash</td>\n<td style=\"text-align:center\">$\\dashv$</td>\n<td style=\"text-align:center\">被蕴涵</td>\n<td style=\"text-align:center\">\\dashv</td>\n<td style=\"text-align:center\">$\\models$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\models</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\mid$</td>\n<td style=\"text-align:center\">整除</td>\n<td style=\"text-align:center\">\\mid</td>\n<td style=\"text-align:center\">$\\parallel$</td>\n<td style=\"text-align:center\">平行</td>\n<td style=\"text-align:center\">\\parallel</td>\n<td style=\"text-align:center\">$\\perp$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\perp</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\smile$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\smile</td>\n<td style=\"text-align:center\">$\\frown$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\frown</td>\n<td style=\"text-align:center\">$\\asymp$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">\\asymp</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$:$</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">：</td>\n<td style=\"text-align:center\">$\\notin$</td>\n<td style=\"text-align:center\">不属于</td>\n<td style=\"text-align:center\">\\notin</td>\n<td style=\"text-align:center\">$\\neq$</td>\n<td style=\"text-align:center\">不等于</td>\n<td style=\"text-align:center\">\\neq</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"小写希腊字母\"><a href=\"#小写希腊字母\" class=\"headerlink\" title=\"小写希腊字母\"></a>小写希腊字母</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">$\\alpha$</td>\n<td style=\"text-align:center\">\\alpha</td>\n<td style=\"text-align:center\">$\\beta$</td>\n<td style=\"text-align:center\">\\beta</td>\n<td style=\"text-align:center\">$\\gamma$</td>\n<td style=\"text-align:center\">\\gamma</td>\n<td style=\"text-align:center\">$\\delta$</td>\n<td style=\"text-align:center\">\\delta</td>\n<td style=\"text-align:center\">$\\omega$</td>\n<td style=\"text-align:center\">\\omega</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\epsilon$</td>\n<td style=\"text-align:center\">\\epsilon</td>\n<td style=\"text-align:center\">$\\varepsilon$</td>\n<td style=\"text-align:center\">\\varepsilon</td>\n<td style=\"text-align:center\">$\\zeta$</td>\n<td style=\"text-align:center\">\\zeta</td>\n<td style=\"text-align:center\">$\\eta$</td>\n<td style=\"text-align:center\">\\eta</td>\n<td style=\"text-align:center\">$\\psi$</td>\n<td style=\"text-align:center\">\\psi</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\theta$</td>\n<td style=\"text-align:center\">\\theta</td>\n<td style=\"text-align:center\">$\\vartheta$</td>\n<td style=\"text-align:center\">\\vartheta</td>\n<td style=\"text-align:center\">$\\iota$</td>\n<td style=\"text-align:center\">\\iota</td>\n<td style=\"text-align:center\">$\\kappa$</td>\n<td style=\"text-align:center\">\\kappa</td>\n<td style=\"text-align:center\">$\\varphi$</td>\n<td style=\"text-align:center\">\\varphi</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\lambda$</td>\n<td style=\"text-align:center\">\\lambda</td>\n<td style=\"text-align:center\">$\\mu$</td>\n<td style=\"text-align:center\">\\mu</td>\n<td style=\"text-align:center\">$\\nu$</td>\n<td style=\"text-align:center\">\\nu</td>\n<td style=\"text-align:center\">$\\xi$</td>\n<td style=\"text-align:center\">\\xi</td>\n<td style=\"text-align:center\">$\\phi$</td>\n<td style=\"text-align:center\">\\phi</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\pi$</td>\n<td style=\"text-align:center\">\\pi</td>\n<td style=\"text-align:center\">$\\varpi$</td>\n<td style=\"text-align:center\">\\varpi</td>\n<td style=\"text-align:center\">$\\rho$</td>\n<td style=\"text-align:center\">\\rho</td>\n<td style=\"text-align:center\">$\\varrho$</td>\n<td style=\"text-align:center\">\\varrho</td>\n<td style=\"text-align:center\">$\\upsilon$</td>\n<td style=\"text-align:center\">\\upsilon</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\sigma$</td>\n<td style=\"text-align:center\">\\sigma</td>\n<td style=\"text-align:center\">$\\varsigma$</td>\n<td style=\"text-align:center\">\\varsigma</td>\n<td style=\"text-align:center\">$\\tau$</td>\n<td style=\"text-align:center\">\\tau</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"大写希腊字母\"><a href=\"#大写希腊字母\" class=\"headerlink\" title=\"大写希腊字母\"></a>大写希腊字母</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">$\\Gamma$</td>\n<td style=\"text-align:center\">\\Gamma</td>\n<td style=\"text-align:center\">$\\Delta$</td>\n<td style=\"text-align:center\">\\Delta</td>\n<td style=\"text-align:center\">$\\Theta$</td>\n<td style=\"text-align:center\">\\Theta</td>\n<td style=\"text-align:center\">$\\Lambda$</td>\n<td style=\"text-align:center\">\\Lambda</td>\n<td style=\"text-align:center\">$\\Omega$</td>\n<td style=\"text-align:center\">\\Omega</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\Xi$</td>\n<td style=\"text-align:center\">\\Xi</td>\n<td style=\"text-align:center\">$\\Pi$</td>\n<td style=\"text-align:center\">\\Pi</td>\n<td style=\"text-align:center\">$\\Sigma$</td>\n<td style=\"text-align:center\">\\Sigma</td>\n<td style=\"text-align:center\">$\\Upsilon$</td>\n<td style=\"text-align:center\">\\Upsilon</td>\n<td style=\"text-align:center\">$\\Psi$</td>\n<td style=\"text-align:center\">\\Psi</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\Phi$</td>\n<td style=\"text-align:center\">\\Phi</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"箭头\"><a href=\"#箭头\" class=\"headerlink\" title=\"箭头\"></a>箭头</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">$\\leftarrow$</td>\n<td style=\"text-align:center\">\\leftarrow</td>\n<td style=\"text-align:center\">$\\rightarrow$</td>\n<td style=\"text-align:center\">\\rightarrow</td>\n<td style=\"text-align:center\">$\\Leftarrow$</td>\n<td style=\"text-align:center\">\\Leftarrow</td>\n<td style=\"text-align:center\">$\\Rightarrow$</td>\n<td style=\"text-align:center\">\\Rightarrow</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\longleftarrow$</td>\n<td style=\"text-align:center\">\\longleftarrow</td>\n<td style=\"text-align:center\">$\\longrightarrow$</td>\n<td style=\"text-align:center\">\\longrightarrow</td>\n<td style=\"text-align:center\">$\\Longleftarrow$</td>\n<td style=\"text-align:center\">\\Longleftarrow</td>\n<td style=\"text-align:center\">$\\Longrightarrow$</td>\n<td style=\"text-align:center\">\\Longrightarrow</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\uparrow$</td>\n<td style=\"text-align:center\">\\uparrow</td>\n<td style=\"text-align:center\">$\\downarrow$</td>\n<td style=\"text-align:center\">\\downarrow</td>\n<td style=\"text-align:center\">$\\Uparrow$</td>\n<td style=\"text-align:center\">\\Uparrow</td>\n<td style=\"text-align:center\">$\\Downarrow$</td>\n<td style=\"text-align:center\">\\Downarrow</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\nwarrow$</td>\n<td style=\"text-align:center\">\\nwarrow</td>\n<td style=\"text-align:center\">$\\nearrow$</td>\n<td style=\"text-align:center\">\\nearrow</td>\n<td style=\"text-align:center\">$\\swarrow$</td>\n<td style=\"text-align:center\">\\swarrow</td>\n<td style=\"text-align:center\">$\\searrow$</td>\n<td style=\"text-align:center\">\\searrow</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\Leftrightarrow$</td>\n<td style=\"text-align:center\">\\Leftrightarrow</td>\n<td style=\"text-align:center\">$\\Longleftrightarrow$</td>\n<td style=\"text-align:center\">\\Longleftrightarrow</td>\n<td style=\"text-align:center\">$\\Updownarrow$</td>\n<td style=\"text-align:center\">\\Updownarrow</td>\n<td style=\"text-align:center\">$\\iff$</td>\n<td style=\"text-align:center\">\\iff</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\mapsto$</td>\n<td style=\"text-align:center\">\\mapsto</td>\n<td style=\"text-align:center\">$\\longmapsto$</td>\n<td style=\"text-align:center\">\\longmapsto</td>\n<td style=\"text-align:center\">$\\hookleftarrow$</td>\n<td style=\"text-align:center\">\\hookleftarrow</td>\n<td style=\"text-align:center\">$\\hookrightarrow$</td>\n<td style=\"text-align:center\">\\hookrightarrow</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\leftharpoonup$</td>\n<td style=\"text-align:center\">\\leftharpoonup</td>\n<td style=\"text-align:center\">$\\rightharpoonup$</td>\n<td style=\"text-align:center\">\\rightharpoonup</td>\n<td style=\"text-align:center\">$\\leftharpoondown$</td>\n<td style=\"text-align:center\">\\leftharpoondown</td>\n<td style=\"text-align:center\">$\\rightharpoondown$</td>\n<td style=\"text-align:center\">\\rightharpoondown</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\updownarrow$</td>\n<td style=\"text-align:center\">\\updownarrow</td>\n<td style=\"text-align:center\">$\\leadsto$</td>\n<td style=\"text-align:center\">\\leadsto</td>\n<td style=\"text-align:center\">$\\rightleftharpoons$</td>\n<td style=\"text-align:center\">\\rightleftharpoons</td>\n<td style=\"text-align:center\">$\\longleftrightarrow$</td>\n<td style=\"text-align:center\">\\longleftrightarrow</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\leftrightarrow$</td>\n<td style=\"text-align:center\">\\leftrightarrow</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"括号\"><a href=\"#括号\" class=\"headerlink\" title=\"括号\"></a>括号</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">$\\lbrack$</td>\n<td style=\"text-align:center\">\\lbrack</td>\n<td style=\"text-align:center\">$\\rbrack$</td>\n<td style=\"text-align:center\">\\rbrack</td>\n<td style=\"text-align:center\">$\\lbrace$</td>\n<td style=\"text-align:center\">\\lbrace</td>\n<td style=\"text-align:center\">$\\rbrace$</td>\n<td style=\"text-align:center\">\\rbrace</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\langle$</td>\n<td style=\"text-align:center\">\\langle</td>\n<td style=\"text-align:center\">$\\rangle$</td>\n<td style=\"text-align:center\">\\rangle</td>\n<td style=\"text-align:center\">$\\lfloor$</td>\n<td style=\"text-align:center\">\\lfloor</td>\n<td style=\"text-align:center\">$\\rfloor$</td>\n<td style=\"text-align:center\">\\rfloor</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\vert$</td>\n<td style=\"text-align:center\">\\vert</td>\n<td style=\"text-align:center\">$\\Vert$</td>\n<td style=\"text-align:center\">\\Vert</td>\n<td style=\"text-align:center\">$\\lceil$</td>\n<td style=\"text-align:center\">\\lceil</td>\n<td style=\"text-align:center\">$\\rceil$</td>\n<td style=\"text-align:center\">\\rceil</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\backslash$</td>\n<td style=\"text-align:center\">\\backslash</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"大尺寸符号\"><a href=\"#大尺寸符号\" class=\"headerlink\" title=\"大尺寸符号\"></a>大尺寸符号</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">代码</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">$\\lgroup$</td>\n<td style=\"text-align:center\">\\lgroup</td>\n<td style=\"text-align:center\">$\\rgroup$</td>\n<td style=\"text-align:center\">\\rgroup</td>\n<td style=\"text-align:center\">$\\lmoustache$</td>\n<td style=\"text-align:center\">\\lmoustache</td>\n<td style=\"text-align:center\">$\\rmoustache$</td>\n<td style=\"text-align:center\">\\rmoustache</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$\\arrowvert$</td>\n<td style=\"text-align:center\">\\arrowvert</td>\n<td style=\"text-align:center\">$\\Arrowvert$</td>\n<td style=\"text-align:center\">\\Arrowvert</td>\n<td style=\"text-align:center\">$\\bracevert$</td>\n<td style=\"text-align:center\">\\bracevert</td>\n</tr>\n</tbody>\n</table>"},{"title":"matlab","date":"2018-12-22T16:00:00.000Z","author":"zuhiul","_content":"\n### 系统级命令\n<!-- more -->\n\n|命令名称|功能说明|\n|:------:|:------:|\n|clear|清楚内存中所有的或指定的变量和函数|\n|cd|显示和改变当前工作目录|\n|clc|擦除MATLAB工作窗口中所有显示的内容|\n|clf|擦除MATLAB当前工作窗口中的图形|\n|dir|列出当前或者指定目录下的子目录和文件清单|\n|disp|在运行中显示变量或文字信息|\n|echo|控制运行的文字命令是否显示|\n|hold|控制当前的图形窗口对象是否被刷新|\n|home|擦除命令窗口中的内容,并把光标移动到命令窗口|\n|pack|收集内存碎片以扩大内存空间|\n|quit|关闭并退出MATLAB|\n|type|显示所指定文件的全部内容|\n|exit|退出MATLAB|\n|save|将工作区的变量存放到指定文件|\n|load|回复保存过的变量|\n\n### 系统变量\n\n|变量|解释|\n|:------:|:------:|\n|ans|结果的缺省变量名|\n|pi|圆周率|\n|i,j|虚数单位|\n|inf|无穷大|\n|NaN|not a number|\n\n### 矩阵函数\n\n|函数|解释|\n|:------:|:------:|\n|complex|将两个矩阵并成一个复矩阵|\n|zeros(a,b)|a*b全0阵|\n|ones(a,b)|a*b全1阵|\n|eye(a,b)|a*b单位矩阵|\n|randi([a,b],m,n)|m*n在a,b之间等概率随机整数矩阵|\n|randn(a,b)|产生均值为0,方差为1的a*b的高斯分布随机阵|\n|repmat(a,b,c)|将a矩阵铺放成b*c的形式,总大小size(a)*b*c|\n|size(a)|确定矩阵大小,返回[行数,列数]|\n|length(a)|确定向量元素的个数|\n|numel(a)|确定矩阵中元素个数|\n|find()|查找矩阵中满足条件的下标,或者行列|\n|reshape(a,b,c)|将a变成b行c列(按列重拍)|\n|a'|转置,复数则共轭转置|\n|a(:)|变成一列|\n|rot90|旋转|\n|fliplr|左右翻转|\n|flipud|上下翻转|\n|diag|抽取主对角线|\n|tril|抽取上三角|\n|triu|抽取下三角|\n|max|各列最大值|\n|min|各列最小值|\n|sort|各列递增排序|\n|sum|各列求和|\n|mean|各列平均值|\n|std|各列标准差|\n|var|各列方差|\n\n\n### 基本数学函数\n\n|函数|解释|\n|:------:|:------:|\n|abs(x)|x中每个实数元素的绝对值,复数元素的模|\n|sqrt(x)|x中每个元素求平方根|\n|exp(x)|指数运算|\n|real(x)|求实部|\n|imag(x)|求虚部|\n|conj(x)|求共轭|\n|angle(x)|求相位角|\n|sin(x)|正弦|\n|cos(x)|余弦|\n|asin(x)|反正弦|\n|acos(x)|反余弦|\n|tan(x)|正切|\n|atan(x)|反正切|\n|log10(x)|常用对数lgx|\n|log(x)|自然对数lnx|\n|loga(b)|任意对数|\n|mod(x,y)|求余函数|\n|rem(x,y)|输出对应元素的余数|\n|sign(x)|求矩阵中元素的正负号|\n|lcm(x,y)|最小公倍数|\n|gcd(x,y)|最大公约数|\n|round(a)|四舍五入|\n|fix(a)|按0的方向取整|\n|floor(a)|向负无穷方向取整|\n|ceil(a)|向正无穷方向取整|\n|randperm(n)|产生一个长度为n的排列|\n\n### 绘图\n\n|函数|解释|\n|:------:|:------:|\n|plot(x,y,'option')|x横轴,y纵轴,逐点连折线绘制二维图形,参数见下表|\n|plot(y)|y为向量,以下标作为x轴,y为纵轴,绘制曲线|\n|title('text')|添加标题|\n|xlabel('text')|x轴加标注|\n|ylabel('text')|y轴加标记|\n|legend('图例1','图例2',...)|添加图例|\n|text(x,y,'text')|在指定位置添加文本字符串|\n|gtext('text')|用鼠标放置文本|\n|axis([xmin xmax ymin ymax zmin zmax])|调整坐标|\n|hold|图形保持函数|\n|subplot|子图分割命令|\n|stem|离散序列|\n\n#### 绘图参数表\n\n|符号|含义|符号|含义|\n|:------:|:------:|:------:|:------:|\n|y|黄|b|蓝|\n|m|洋红|w|白|\n|c|青|k|黑|\n|r|红|g|绿|\n|-|实线|--|虚线|\n|:|点线|-.|点划线|\n|.|点|o|圆|\n|x|叉号|+|加号|\n|^|向上的三角形|v|向下的三角形|\n|>|大于号|<|小于号|\n|s|正方形|d|菱形|\n|p|五角星|h|六角星|\n|*|星号|\n\n### 字符串函数\n\n|函数|解释|\n|:------:|:------:|\n|abs|字符串到ascii转换|\n|str2mat|字符串转换成字符矩阵|\n|setstr|ascii转字符串|\n|num2str|数值转字符串|\n|str2num|字符串转换成数值|\n|dec2bin|十进制数转二进制字符串|\n|bin2dec|二进制串转十进制|\n|int2str|将数值取整后转成字符串|\n|upper|字符串转换成大写|\n|lower|字符串转换成小写|\n|sprintf|用格式控制,数字转字符串|\n|sscanf|格式控制,字符串转数字|\n\n### 输入输出\n\n|函数|解释|\n|:------:|:------:|\n|input('text')|键盘提示输入|\n|fprintf()|格式输出|\n\n","source":"_posts/knowledge/matlab.md","raw":"---\ntitle: matlab\ndate:       2018-12-23\nauthor:     \"zuhiul\"\ntags:\n  - live\n---\n\n### 系统级命令\n<!-- more -->\n\n|命令名称|功能说明|\n|:------:|:------:|\n|clear|清楚内存中所有的或指定的变量和函数|\n|cd|显示和改变当前工作目录|\n|clc|擦除MATLAB工作窗口中所有显示的内容|\n|clf|擦除MATLAB当前工作窗口中的图形|\n|dir|列出当前或者指定目录下的子目录和文件清单|\n|disp|在运行中显示变量或文字信息|\n|echo|控制运行的文字命令是否显示|\n|hold|控制当前的图形窗口对象是否被刷新|\n|home|擦除命令窗口中的内容,并把光标移动到命令窗口|\n|pack|收集内存碎片以扩大内存空间|\n|quit|关闭并退出MATLAB|\n|type|显示所指定文件的全部内容|\n|exit|退出MATLAB|\n|save|将工作区的变量存放到指定文件|\n|load|回复保存过的变量|\n\n### 系统变量\n\n|变量|解释|\n|:------:|:------:|\n|ans|结果的缺省变量名|\n|pi|圆周率|\n|i,j|虚数单位|\n|inf|无穷大|\n|NaN|not a number|\n\n### 矩阵函数\n\n|函数|解释|\n|:------:|:------:|\n|complex|将两个矩阵并成一个复矩阵|\n|zeros(a,b)|a*b全0阵|\n|ones(a,b)|a*b全1阵|\n|eye(a,b)|a*b单位矩阵|\n|randi([a,b],m,n)|m*n在a,b之间等概率随机整数矩阵|\n|randn(a,b)|产生均值为0,方差为1的a*b的高斯分布随机阵|\n|repmat(a,b,c)|将a矩阵铺放成b*c的形式,总大小size(a)*b*c|\n|size(a)|确定矩阵大小,返回[行数,列数]|\n|length(a)|确定向量元素的个数|\n|numel(a)|确定矩阵中元素个数|\n|find()|查找矩阵中满足条件的下标,或者行列|\n|reshape(a,b,c)|将a变成b行c列(按列重拍)|\n|a'|转置,复数则共轭转置|\n|a(:)|变成一列|\n|rot90|旋转|\n|fliplr|左右翻转|\n|flipud|上下翻转|\n|diag|抽取主对角线|\n|tril|抽取上三角|\n|triu|抽取下三角|\n|max|各列最大值|\n|min|各列最小值|\n|sort|各列递增排序|\n|sum|各列求和|\n|mean|各列平均值|\n|std|各列标准差|\n|var|各列方差|\n\n\n### 基本数学函数\n\n|函数|解释|\n|:------:|:------:|\n|abs(x)|x中每个实数元素的绝对值,复数元素的模|\n|sqrt(x)|x中每个元素求平方根|\n|exp(x)|指数运算|\n|real(x)|求实部|\n|imag(x)|求虚部|\n|conj(x)|求共轭|\n|angle(x)|求相位角|\n|sin(x)|正弦|\n|cos(x)|余弦|\n|asin(x)|反正弦|\n|acos(x)|反余弦|\n|tan(x)|正切|\n|atan(x)|反正切|\n|log10(x)|常用对数lgx|\n|log(x)|自然对数lnx|\n|loga(b)|任意对数|\n|mod(x,y)|求余函数|\n|rem(x,y)|输出对应元素的余数|\n|sign(x)|求矩阵中元素的正负号|\n|lcm(x,y)|最小公倍数|\n|gcd(x,y)|最大公约数|\n|round(a)|四舍五入|\n|fix(a)|按0的方向取整|\n|floor(a)|向负无穷方向取整|\n|ceil(a)|向正无穷方向取整|\n|randperm(n)|产生一个长度为n的排列|\n\n### 绘图\n\n|函数|解释|\n|:------:|:------:|\n|plot(x,y,'option')|x横轴,y纵轴,逐点连折线绘制二维图形,参数见下表|\n|plot(y)|y为向量,以下标作为x轴,y为纵轴,绘制曲线|\n|title('text')|添加标题|\n|xlabel('text')|x轴加标注|\n|ylabel('text')|y轴加标记|\n|legend('图例1','图例2',...)|添加图例|\n|text(x,y,'text')|在指定位置添加文本字符串|\n|gtext('text')|用鼠标放置文本|\n|axis([xmin xmax ymin ymax zmin zmax])|调整坐标|\n|hold|图形保持函数|\n|subplot|子图分割命令|\n|stem|离散序列|\n\n#### 绘图参数表\n\n|符号|含义|符号|含义|\n|:------:|:------:|:------:|:------:|\n|y|黄|b|蓝|\n|m|洋红|w|白|\n|c|青|k|黑|\n|r|红|g|绿|\n|-|实线|--|虚线|\n|:|点线|-.|点划线|\n|.|点|o|圆|\n|x|叉号|+|加号|\n|^|向上的三角形|v|向下的三角形|\n|>|大于号|<|小于号|\n|s|正方形|d|菱形|\n|p|五角星|h|六角星|\n|*|星号|\n\n### 字符串函数\n\n|函数|解释|\n|:------:|:------:|\n|abs|字符串到ascii转换|\n|str2mat|字符串转换成字符矩阵|\n|setstr|ascii转字符串|\n|num2str|数值转字符串|\n|str2num|字符串转换成数值|\n|dec2bin|十进制数转二进制字符串|\n|bin2dec|二进制串转十进制|\n|int2str|将数值取整后转成字符串|\n|upper|字符串转换成大写|\n|lower|字符串转换成小写|\n|sprintf|用格式控制,数字转字符串|\n|sscanf|格式控制,字符串转数字|\n\n### 输入输出\n\n|函数|解释|\n|:------:|:------:|\n|input('text')|键盘提示输入|\n|fprintf()|格式输出|\n\n","slug":"knowledge/matlab","published":1,"updated":"2019-05-05T02:40:47.791Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1hw0027a613bsyo41ba","content":"<h3 id=\"系统级命令\"><a href=\"#系统级命令\" class=\"headerlink\" title=\"系统级命令\"></a>系统级命令</h3><a id=\"more\"></a>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">命令名称</th>\n<th style=\"text-align:center\">功能说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">clear</td>\n<td style=\"text-align:center\">清楚内存中所有的或指定的变量和函数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">cd</td>\n<td style=\"text-align:center\">显示和改变当前工作目录</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">clc</td>\n<td style=\"text-align:center\">擦除MATLAB工作窗口中所有显示的内容</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">clf</td>\n<td style=\"text-align:center\">擦除MATLAB当前工作窗口中的图形</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dir</td>\n<td style=\"text-align:center\">列出当前或者指定目录下的子目录和文件清单</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">disp</td>\n<td style=\"text-align:center\">在运行中显示变量或文字信息</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">echo</td>\n<td style=\"text-align:center\">控制运行的文字命令是否显示</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">hold</td>\n<td style=\"text-align:center\">控制当前的图形窗口对象是否被刷新</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">home</td>\n<td style=\"text-align:center\">擦除命令窗口中的内容,并把光标移动到命令窗口</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">pack</td>\n<td style=\"text-align:center\">收集内存碎片以扩大内存空间</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">quit</td>\n<td style=\"text-align:center\">关闭并退出MATLAB</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">type</td>\n<td style=\"text-align:center\">显示所指定文件的全部内容</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">exit</td>\n<td style=\"text-align:center\">退出MATLAB</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">save</td>\n<td style=\"text-align:center\">将工作区的变量存放到指定文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">load</td>\n<td style=\"text-align:center\">回复保存过的变量</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"系统变量\"><a href=\"#系统变量\" class=\"headerlink\" title=\"系统变量\"></a>系统变量</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">变量</th>\n<th style=\"text-align:center\">解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">ans</td>\n<td style=\"text-align:center\">结果的缺省变量名</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">pi</td>\n<td style=\"text-align:center\">圆周率</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">i,j</td>\n<td style=\"text-align:center\">虚数单位</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">inf</td>\n<td style=\"text-align:center\">无穷大</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">NaN</td>\n<td style=\"text-align:center\">not a number</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"矩阵函数\"><a href=\"#矩阵函数\" class=\"headerlink\" title=\"矩阵函数\"></a>矩阵函数</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">complex</td>\n<td style=\"text-align:center\">将两个矩阵并成一个复矩阵</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">zeros(a,b)</td>\n<td style=\"text-align:center\">a*b全0阵</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ones(a,b)</td>\n<td style=\"text-align:center\">a*b全1阵</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">eye(a,b)</td>\n<td style=\"text-align:center\">a*b单位矩阵</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">randi([a,b],m,n)</td>\n<td style=\"text-align:center\">m*n在a,b之间等概率随机整数矩阵</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">randn(a,b)</td>\n<td style=\"text-align:center\">产生均值为0,方差为1的a*b的高斯分布随机阵</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">repmat(a,b,c)</td>\n<td style=\"text-align:center\">将a矩阵铺放成b<em>c的形式,总大小size(a)</em>b*c</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">size(a)</td>\n<td style=\"text-align:center\">确定矩阵大小,返回[行数,列数]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">length(a)</td>\n<td style=\"text-align:center\">确定向量元素的个数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">numel(a)</td>\n<td style=\"text-align:center\">确定矩阵中元素个数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">find()</td>\n<td style=\"text-align:center\">查找矩阵中满足条件的下标,或者行列</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">reshape(a,b,c)</td>\n<td style=\"text-align:center\">将a变成b行c列(按列重拍)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">a’</td>\n<td style=\"text-align:center\">转置,复数则共轭转置</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">a(:)</td>\n<td style=\"text-align:center\">变成一列</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">rot90</td>\n<td style=\"text-align:center\">旋转</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">fliplr</td>\n<td style=\"text-align:center\">左右翻转</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">flipud</td>\n<td style=\"text-align:center\">上下翻转</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">diag</td>\n<td style=\"text-align:center\">抽取主对角线</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">tril</td>\n<td style=\"text-align:center\">抽取上三角</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">triu</td>\n<td style=\"text-align:center\">抽取下三角</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">max</td>\n<td style=\"text-align:center\">各列最大值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">min</td>\n<td style=\"text-align:center\">各列最小值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">sort</td>\n<td style=\"text-align:center\">各列递增排序</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">sum</td>\n<td style=\"text-align:center\">各列求和</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">mean</td>\n<td style=\"text-align:center\">各列平均值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">std</td>\n<td style=\"text-align:center\">各列标准差</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">var</td>\n<td style=\"text-align:center\">各列方差</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"基本数学函数\"><a href=\"#基本数学函数\" class=\"headerlink\" title=\"基本数学函数\"></a>基本数学函数</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">abs(x)</td>\n<td style=\"text-align:center\">x中每个实数元素的绝对值,复数元素的模</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">sqrt(x)</td>\n<td style=\"text-align:center\">x中每个元素求平方根</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">exp(x)</td>\n<td style=\"text-align:center\">指数运算</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">real(x)</td>\n<td style=\"text-align:center\">求实部</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">imag(x)</td>\n<td style=\"text-align:center\">求虚部</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">conj(x)</td>\n<td style=\"text-align:center\">求共轭</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">angle(x)</td>\n<td style=\"text-align:center\">求相位角</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">sin(x)</td>\n<td style=\"text-align:center\">正弦</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">cos(x)</td>\n<td style=\"text-align:center\">余弦</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">asin(x)</td>\n<td style=\"text-align:center\">反正弦</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">acos(x)</td>\n<td style=\"text-align:center\">反余弦</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">tan(x)</td>\n<td style=\"text-align:center\">正切</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">atan(x)</td>\n<td style=\"text-align:center\">反正切</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">log10(x)</td>\n<td style=\"text-align:center\">常用对数lgx</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">log(x)</td>\n<td style=\"text-align:center\">自然对数lnx</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">loga(b)</td>\n<td style=\"text-align:center\">任意对数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">mod(x,y)</td>\n<td style=\"text-align:center\">求余函数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">rem(x,y)</td>\n<td style=\"text-align:center\">输出对应元素的余数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">sign(x)</td>\n<td style=\"text-align:center\">求矩阵中元素的正负号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">lcm(x,y)</td>\n<td style=\"text-align:center\">最小公倍数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">gcd(x,y)</td>\n<td style=\"text-align:center\">最大公约数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">round(a)</td>\n<td style=\"text-align:center\">四舍五入</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">fix(a)</td>\n<td style=\"text-align:center\">按0的方向取整</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">floor(a)</td>\n<td style=\"text-align:center\">向负无穷方向取整</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ceil(a)</td>\n<td style=\"text-align:center\">向正无穷方向取整</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">randperm(n)</td>\n<td style=\"text-align:center\">产生一个长度为n的排列</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"绘图\"><a href=\"#绘图\" class=\"headerlink\" title=\"绘图\"></a>绘图</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">plot(x,y,’option’)</td>\n<td style=\"text-align:center\">x横轴,y纵轴,逐点连折线绘制二维图形,参数见下表</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">plot(y)</td>\n<td style=\"text-align:center\">y为向量,以下标作为x轴,y为纵轴,绘制曲线</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">title(‘text’)</td>\n<td style=\"text-align:center\">添加标题</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">xlabel(‘text’)</td>\n<td style=\"text-align:center\">x轴加标注</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ylabel(‘text’)</td>\n<td style=\"text-align:center\">y轴加标记</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">legend(‘图例1’,’图例2’,…)</td>\n<td style=\"text-align:center\">添加图例</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">text(x,y,’text’)</td>\n<td style=\"text-align:center\">在指定位置添加文本字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">gtext(‘text’)</td>\n<td style=\"text-align:center\">用鼠标放置文本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">axis([xmin xmax ymin ymax zmin zmax])</td>\n<td style=\"text-align:center\">调整坐标</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">hold</td>\n<td style=\"text-align:center\">图形保持函数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">subplot</td>\n<td style=\"text-align:center\">子图分割命令</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">stem</td>\n<td style=\"text-align:center\">离散序列</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"绘图参数表\"><a href=\"#绘图参数表\" class=\"headerlink\" title=\"绘图参数表\"></a>绘图参数表</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">含义</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">y</td>\n<td style=\"text-align:center\">黄</td>\n<td style=\"text-align:center\">b</td>\n<td style=\"text-align:center\">蓝</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">m</td>\n<td style=\"text-align:center\">洋红</td>\n<td style=\"text-align:center\">w</td>\n<td style=\"text-align:center\">白</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">c</td>\n<td style=\"text-align:center\">青</td>\n<td style=\"text-align:center\">k</td>\n<td style=\"text-align:center\">黑</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">r</td>\n<td style=\"text-align:center\">红</td>\n<td style=\"text-align:center\">g</td>\n<td style=\"text-align:center\">绿</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">实线</td>\n<td style=\"text-align:center\">–</td>\n<td style=\"text-align:center\">虚线</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">:</td>\n<td style=\"text-align:center\">点线</td>\n<td style=\"text-align:center\">-.</td>\n<td style=\"text-align:center\">点划线</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">.</td>\n<td style=\"text-align:center\">点</td>\n<td style=\"text-align:center\">o</td>\n<td style=\"text-align:center\">圆</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">叉号</td>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:center\">加号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">^</td>\n<td style=\"text-align:center\">向上的三角形</td>\n<td style=\"text-align:center\">v</td>\n<td style=\"text-align:center\">向下的三角形</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&gt;</td>\n<td style=\"text-align:center\">大于号</td>\n<td style=\"text-align:center\">&lt;</td>\n<td style=\"text-align:center\">小于号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">s</td>\n<td style=\"text-align:center\">正方形</td>\n<td style=\"text-align:center\">d</td>\n<td style=\"text-align:center\">菱形</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">p</td>\n<td style=\"text-align:center\">五角星</td>\n<td style=\"text-align:center\">h</td>\n<td style=\"text-align:center\">六角星</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">*</td>\n<td style=\"text-align:center\">星号</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"字符串函数\"><a href=\"#字符串函数\" class=\"headerlink\" title=\"字符串函数\"></a>字符串函数</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">abs</td>\n<td style=\"text-align:center\">字符串到ascii转换</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">str2mat</td>\n<td style=\"text-align:center\">字符串转换成字符矩阵</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">setstr</td>\n<td style=\"text-align:center\">ascii转字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">num2str</td>\n<td style=\"text-align:center\">数值转字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">str2num</td>\n<td style=\"text-align:center\">字符串转换成数值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dec2bin</td>\n<td style=\"text-align:center\">十进制数转二进制字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">bin2dec</td>\n<td style=\"text-align:center\">二进制串转十进制</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">int2str</td>\n<td style=\"text-align:center\">将数值取整后转成字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">upper</td>\n<td style=\"text-align:center\">字符串转换成大写</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">lower</td>\n<td style=\"text-align:center\">字符串转换成小写</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">sprintf</td>\n<td style=\"text-align:center\">用格式控制,数字转字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">sscanf</td>\n<td style=\"text-align:center\">格式控制,字符串转数字</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"输入输出\"><a href=\"#输入输出\" class=\"headerlink\" title=\"输入输出\"></a>输入输出</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">input(‘text’)</td>\n<td style=\"text-align:center\">键盘提示输入</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">fprintf()</td>\n<td style=\"text-align:center\">格式输出</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"<h3 id=\"系统级命令\"><a href=\"#系统级命令\" class=\"headerlink\" title=\"系统级命令\"></a>系统级命令</h3>","more":"<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">命令名称</th>\n<th style=\"text-align:center\">功能说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">clear</td>\n<td style=\"text-align:center\">清楚内存中所有的或指定的变量和函数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">cd</td>\n<td style=\"text-align:center\">显示和改变当前工作目录</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">clc</td>\n<td style=\"text-align:center\">擦除MATLAB工作窗口中所有显示的内容</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">clf</td>\n<td style=\"text-align:center\">擦除MATLAB当前工作窗口中的图形</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dir</td>\n<td style=\"text-align:center\">列出当前或者指定目录下的子目录和文件清单</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">disp</td>\n<td style=\"text-align:center\">在运行中显示变量或文字信息</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">echo</td>\n<td style=\"text-align:center\">控制运行的文字命令是否显示</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">hold</td>\n<td style=\"text-align:center\">控制当前的图形窗口对象是否被刷新</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">home</td>\n<td style=\"text-align:center\">擦除命令窗口中的内容,并把光标移动到命令窗口</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">pack</td>\n<td style=\"text-align:center\">收集内存碎片以扩大内存空间</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">quit</td>\n<td style=\"text-align:center\">关闭并退出MATLAB</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">type</td>\n<td style=\"text-align:center\">显示所指定文件的全部内容</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">exit</td>\n<td style=\"text-align:center\">退出MATLAB</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">save</td>\n<td style=\"text-align:center\">将工作区的变量存放到指定文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">load</td>\n<td style=\"text-align:center\">回复保存过的变量</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"系统变量\"><a href=\"#系统变量\" class=\"headerlink\" title=\"系统变量\"></a>系统变量</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">变量</th>\n<th style=\"text-align:center\">解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">ans</td>\n<td style=\"text-align:center\">结果的缺省变量名</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">pi</td>\n<td style=\"text-align:center\">圆周率</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">i,j</td>\n<td style=\"text-align:center\">虚数单位</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">inf</td>\n<td style=\"text-align:center\">无穷大</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">NaN</td>\n<td style=\"text-align:center\">not a number</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"矩阵函数\"><a href=\"#矩阵函数\" class=\"headerlink\" title=\"矩阵函数\"></a>矩阵函数</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">complex</td>\n<td style=\"text-align:center\">将两个矩阵并成一个复矩阵</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">zeros(a,b)</td>\n<td style=\"text-align:center\">a*b全0阵</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ones(a,b)</td>\n<td style=\"text-align:center\">a*b全1阵</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">eye(a,b)</td>\n<td style=\"text-align:center\">a*b单位矩阵</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">randi([a,b],m,n)</td>\n<td style=\"text-align:center\">m*n在a,b之间等概率随机整数矩阵</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">randn(a,b)</td>\n<td style=\"text-align:center\">产生均值为0,方差为1的a*b的高斯分布随机阵</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">repmat(a,b,c)</td>\n<td style=\"text-align:center\">将a矩阵铺放成b<em>c的形式,总大小size(a)</em>b*c</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">size(a)</td>\n<td style=\"text-align:center\">确定矩阵大小,返回[行数,列数]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">length(a)</td>\n<td style=\"text-align:center\">确定向量元素的个数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">numel(a)</td>\n<td style=\"text-align:center\">确定矩阵中元素个数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">find()</td>\n<td style=\"text-align:center\">查找矩阵中满足条件的下标,或者行列</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">reshape(a,b,c)</td>\n<td style=\"text-align:center\">将a变成b行c列(按列重拍)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">a’</td>\n<td style=\"text-align:center\">转置,复数则共轭转置</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">a(:)</td>\n<td style=\"text-align:center\">变成一列</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">rot90</td>\n<td style=\"text-align:center\">旋转</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">fliplr</td>\n<td style=\"text-align:center\">左右翻转</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">flipud</td>\n<td style=\"text-align:center\">上下翻转</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">diag</td>\n<td style=\"text-align:center\">抽取主对角线</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">tril</td>\n<td style=\"text-align:center\">抽取上三角</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">triu</td>\n<td style=\"text-align:center\">抽取下三角</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">max</td>\n<td style=\"text-align:center\">各列最大值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">min</td>\n<td style=\"text-align:center\">各列最小值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">sort</td>\n<td style=\"text-align:center\">各列递增排序</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">sum</td>\n<td style=\"text-align:center\">各列求和</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">mean</td>\n<td style=\"text-align:center\">各列平均值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">std</td>\n<td style=\"text-align:center\">各列标准差</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">var</td>\n<td style=\"text-align:center\">各列方差</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"基本数学函数\"><a href=\"#基本数学函数\" class=\"headerlink\" title=\"基本数学函数\"></a>基本数学函数</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">abs(x)</td>\n<td style=\"text-align:center\">x中每个实数元素的绝对值,复数元素的模</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">sqrt(x)</td>\n<td style=\"text-align:center\">x中每个元素求平方根</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">exp(x)</td>\n<td style=\"text-align:center\">指数运算</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">real(x)</td>\n<td style=\"text-align:center\">求实部</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">imag(x)</td>\n<td style=\"text-align:center\">求虚部</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">conj(x)</td>\n<td style=\"text-align:center\">求共轭</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">angle(x)</td>\n<td style=\"text-align:center\">求相位角</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">sin(x)</td>\n<td style=\"text-align:center\">正弦</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">cos(x)</td>\n<td style=\"text-align:center\">余弦</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">asin(x)</td>\n<td style=\"text-align:center\">反正弦</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">acos(x)</td>\n<td style=\"text-align:center\">反余弦</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">tan(x)</td>\n<td style=\"text-align:center\">正切</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">atan(x)</td>\n<td style=\"text-align:center\">反正切</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">log10(x)</td>\n<td style=\"text-align:center\">常用对数lgx</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">log(x)</td>\n<td style=\"text-align:center\">自然对数lnx</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">loga(b)</td>\n<td style=\"text-align:center\">任意对数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">mod(x,y)</td>\n<td style=\"text-align:center\">求余函数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">rem(x,y)</td>\n<td style=\"text-align:center\">输出对应元素的余数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">sign(x)</td>\n<td style=\"text-align:center\">求矩阵中元素的正负号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">lcm(x,y)</td>\n<td style=\"text-align:center\">最小公倍数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">gcd(x,y)</td>\n<td style=\"text-align:center\">最大公约数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">round(a)</td>\n<td style=\"text-align:center\">四舍五入</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">fix(a)</td>\n<td style=\"text-align:center\">按0的方向取整</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">floor(a)</td>\n<td style=\"text-align:center\">向负无穷方向取整</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ceil(a)</td>\n<td style=\"text-align:center\">向正无穷方向取整</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">randperm(n)</td>\n<td style=\"text-align:center\">产生一个长度为n的排列</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"绘图\"><a href=\"#绘图\" class=\"headerlink\" title=\"绘图\"></a>绘图</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">plot(x,y,’option’)</td>\n<td style=\"text-align:center\">x横轴,y纵轴,逐点连折线绘制二维图形,参数见下表</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">plot(y)</td>\n<td style=\"text-align:center\">y为向量,以下标作为x轴,y为纵轴,绘制曲线</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">title(‘text’)</td>\n<td style=\"text-align:center\">添加标题</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">xlabel(‘text’)</td>\n<td style=\"text-align:center\">x轴加标注</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ylabel(‘text’)</td>\n<td style=\"text-align:center\">y轴加标记</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">legend(‘图例1’,’图例2’,…)</td>\n<td style=\"text-align:center\">添加图例</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">text(x,y,’text’)</td>\n<td style=\"text-align:center\">在指定位置添加文本字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">gtext(‘text’)</td>\n<td style=\"text-align:center\">用鼠标放置文本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">axis([xmin xmax ymin ymax zmin zmax])</td>\n<td style=\"text-align:center\">调整坐标</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">hold</td>\n<td style=\"text-align:center\">图形保持函数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">subplot</td>\n<td style=\"text-align:center\">子图分割命令</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">stem</td>\n<td style=\"text-align:center\">离散序列</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"绘图参数表\"><a href=\"#绘图参数表\" class=\"headerlink\" title=\"绘图参数表\"></a>绘图参数表</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">含义</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">y</td>\n<td style=\"text-align:center\">黄</td>\n<td style=\"text-align:center\">b</td>\n<td style=\"text-align:center\">蓝</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">m</td>\n<td style=\"text-align:center\">洋红</td>\n<td style=\"text-align:center\">w</td>\n<td style=\"text-align:center\">白</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">c</td>\n<td style=\"text-align:center\">青</td>\n<td style=\"text-align:center\">k</td>\n<td style=\"text-align:center\">黑</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">r</td>\n<td style=\"text-align:center\">红</td>\n<td style=\"text-align:center\">g</td>\n<td style=\"text-align:center\">绿</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">实线</td>\n<td style=\"text-align:center\">–</td>\n<td style=\"text-align:center\">虚线</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">:</td>\n<td style=\"text-align:center\">点线</td>\n<td style=\"text-align:center\">-.</td>\n<td style=\"text-align:center\">点划线</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">.</td>\n<td style=\"text-align:center\">点</td>\n<td style=\"text-align:center\">o</td>\n<td style=\"text-align:center\">圆</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">叉号</td>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:center\">加号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">^</td>\n<td style=\"text-align:center\">向上的三角形</td>\n<td style=\"text-align:center\">v</td>\n<td style=\"text-align:center\">向下的三角形</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&gt;</td>\n<td style=\"text-align:center\">大于号</td>\n<td style=\"text-align:center\">&lt;</td>\n<td style=\"text-align:center\">小于号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">s</td>\n<td style=\"text-align:center\">正方形</td>\n<td style=\"text-align:center\">d</td>\n<td style=\"text-align:center\">菱形</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">p</td>\n<td style=\"text-align:center\">五角星</td>\n<td style=\"text-align:center\">h</td>\n<td style=\"text-align:center\">六角星</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">*</td>\n<td style=\"text-align:center\">星号</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"字符串函数\"><a href=\"#字符串函数\" class=\"headerlink\" title=\"字符串函数\"></a>字符串函数</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">abs</td>\n<td style=\"text-align:center\">字符串到ascii转换</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">str2mat</td>\n<td style=\"text-align:center\">字符串转换成字符矩阵</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">setstr</td>\n<td style=\"text-align:center\">ascii转字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">num2str</td>\n<td style=\"text-align:center\">数值转字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">str2num</td>\n<td style=\"text-align:center\">字符串转换成数值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dec2bin</td>\n<td style=\"text-align:center\">十进制数转二进制字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">bin2dec</td>\n<td style=\"text-align:center\">二进制串转十进制</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">int2str</td>\n<td style=\"text-align:center\">将数值取整后转成字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">upper</td>\n<td style=\"text-align:center\">字符串转换成大写</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">lower</td>\n<td style=\"text-align:center\">字符串转换成小写</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">sprintf</td>\n<td style=\"text-align:center\">用格式控制,数字转字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">sscanf</td>\n<td style=\"text-align:center\">格式控制,字符串转数字</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"输入输出\"><a href=\"#输入输出\" class=\"headerlink\" title=\"输入输出\"></a>输入输出</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">input(‘text’)</td>\n<td style=\"text-align:center\">键盘提示输入</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">fprintf()</td>\n<td style=\"text-align:center\">格式输出</td>\n</tr>\n</tbody>\n</table>"},{"title":"BZOJ 3829 FarmCraft","date":"2018-12-01T16:00:00.000Z","author":"zuhiul","_content":"\n### 题目描述\nIn a village called Byteville, there are   houses connected with N-1 roads. For each pair of houses, there is a unique way to get from one to another. The houses are numbered from 1 to  . The house no. 1 belongs to the village administrator Byteasar. As part of enabling modern technologies for rural areas framework,   computers have been delivered to Byteasar's house. Every house is to be supplied with a computer, and it is Byteasar's task to distribute them. The citizens of Byteville have already agreed to play the most recent version of FarmCraft (the game) as soon as they have their computers.\n\n<!-- more -->\nByteasar has loaded all the computers on his pickup truck and is about to set out to deliver the goods. He has just the right amount of gasoline to drive each road twice. In each house, Byteasar leaves one computer, and immediately continues on his route. In each house, as soon as house dwellers get their computer, they turn it on and install FarmCraft. The time it takes to install and set up the game very much depends on one's tech savviness, which is fortunately known for each household. After he delivers all the computers, Byteasar will come back to his house and install the game on his computer. The travel time along each road linking two houses is exactly 1 minute, and (due to citizens' eagerness to play) the time to unload a computer is negligible.\n\nHelp Byteasar in determining a delivery order that allows all Byteville's citizens (including Byteasar) to start playing together as soon as possible. In other words, find an order that minimizes the time when everyone has FarmCraft installed.\n\n### 输入\n\nThe first line of the standard input contains a single integer N(2<=N<=5 00 000)  that gives the number of houses in Byteville. The second line contains N integers C1,C2…Cn(1<=Ci<=10^9), separated by single spaces; Ci is the installation time (in minutes) for the dwellers of house no. i.\n\nThe next N-1  lines specify the roads linking the houses. Each such line contains two positive integers a and b(1<=a<b<=N) , separated by a single space. These indicate that there is a direct road between the houses no. a and b.\n\n### 输出\n\nThe first and only line of the standard output should contain a single integer: the (minimum) number of minutes after which all citizens will be able to play FarmCraft together.\n\n### 样例输入\n6\n\n1 8 9 6 3 2\n\n1 3\n\n2 3\n\n3 4\n\n4 5\n\n4 6\n\n### 样例输出\n\n11\n\n### Hits\n\nExplanation: Byteasar should deliver the computers to the houses in the following order: 3, 2, 4, 5, 6, and 1. The game will be installed after 11, 10, 10, 10, 8, and 9 minutes respectively, in the house number order. Thus everyone can play after 11 minutes.\n\nIf Byteasar delivered the game in the following order: 3, 4, 5, 6, 2, and 1, then the game would be installed after: 11, 16, 10, 8, 6, and 7 minutes respectively. Hence, everyone could play only after 16 minutes.\n\n\n\n## 题意\n\nzuhiul是镇长，住在1号房子，镇里的房子构成了一颗树，现在zuhiul要给镇里其他房子里的小姐姐送电脑，每经过一条路径，zuhiul都要花掉一分钟~~(才不是为了看小姐姐)~~。但是zuhiul只负责送不负责装，每个小姐姐的脑子都比较奇怪，有些装的快，有些装的慢，最后zuhiul会返回自己的家给自己装电脑，然后他就可以和小姐姐视频了，但是必须要等所有的小姐姐都装好了才行，现在问你zuhiul最早什么时候可以和所有的小姐姐视频。\n\n\n\n## 分析\n\n显然是树上DP，我们考虑定义DP状态，则有\n\nf[i]表示以 i 为根的子树里，花费总时间的最大值是多少\n\n我们定义son_num表示这个节点对应子树的节点数量\n\n然后我们考虑转移，我们首先考虑怎么搞两个子节点的时候，然后进行推广。\n\n不妨假设这两个字节点分别是a和b，然后可以得到先遍历a再遍历b的最大时长为\n\nmax(f[a]+1,f[b]+son_num[a]*2+1)\n\n同理，先遍历b的最大时常为max(f[b]+1,f[a]+son_num[b]*2+1)\n\n所以如果有max(f[a]+1,f[b]+son_num[a]*2+1)&lt;max(f[b]+1,f[a]+son_num[b]*2+1)\n\n因为f[a]+son_num[b]*2+1>f[a]+1并且f[b]+son_num[a]*2+1>f[b]+1\n\n所以只需要得到 f[b]+son_num[a]*2&lt;f[a]+son_num[b]*2\n\n也即 f[b]-son_num[b]*2&lt;f[a]-son_num[a]*2\n\n同样，对于多个节点来说，我们同样只要对每个子节点按照 f[son]-son_num[son]*2降序排序，然后从前往后贪心选就行了。\n\n## 代码\n\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\t\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxm = 7e5+10;\nstruct p{\n    long long t,son_num;\n} peo[maxm];\nlong long len;\nvector<int>mat[maxm];\nlong long f[maxm];\nint ind[maxm];\nbool cmp(int a,int b){\n    return f[a]-peo[a].son_num*2>f[b]-peo[b].son_num*2;\n}\nvoid dfs(int a,int pre){\n    peo[a].son_num = 1;\n    if(a!=1) f[a] = peo[a].t;\n    for(int i:mat[a]){\n        if(i==pre) continue;\n        dfs(i,a);\n    }\n    ind[0] = 0;\n    for(int i:mat[a]){\n        if(i==pre) continue;\n        ind[++ind[0]] = i;\n        peo[a].son_num+=peo[i].son_num;\n    }\n    sort(ind+1,ind+ind[0]+1,cmp);\n    long long now = 0;\n    for(int i = 1;i&lt;=ind[0];i++){\n        f[a] = max(f[a],f[ind[i]]+now+1);\n        now+=peo[ind[i]].son_num*2;\n    }\n}\nvoid solve(){\n    printf(\"%lld\\n\",max(f[1],len*2-2+peo[1].t));\n}\nint main(){\n    scanf(\"%lld\",&len);\n    for(int i = 1;i&lt;=len;i++) scanf(\"%lld\",&peo[i].t);\n    for(int i = 1,a,b;i&lt;len;i++) {\n        scanf(\"%d%d\",&a,&b);\n        mat[a].push_back(b);\n        mat[b].push_back(a);\n    }\n    dfs(1,0);\n    solve();\n    return 0;\n}\n```\n","source":"_posts/other_oj/BZOJ3829.md","raw":"---\ntitle: BZOJ 3829 FarmCraft\ndate: 2018-12-02\nauthor: \"zuhiul\"\ntags:\n  - 树形DP\n---\n\n### 题目描述\nIn a village called Byteville, there are   houses connected with N-1 roads. For each pair of houses, there is a unique way to get from one to another. The houses are numbered from 1 to  . The house no. 1 belongs to the village administrator Byteasar. As part of enabling modern technologies for rural areas framework,   computers have been delivered to Byteasar's house. Every house is to be supplied with a computer, and it is Byteasar's task to distribute them. The citizens of Byteville have already agreed to play the most recent version of FarmCraft (the game) as soon as they have their computers.\n\n<!-- more -->\nByteasar has loaded all the computers on his pickup truck and is about to set out to deliver the goods. He has just the right amount of gasoline to drive each road twice. In each house, Byteasar leaves one computer, and immediately continues on his route. In each house, as soon as house dwellers get their computer, they turn it on and install FarmCraft. The time it takes to install and set up the game very much depends on one's tech savviness, which is fortunately known for each household. After he delivers all the computers, Byteasar will come back to his house and install the game on his computer. The travel time along each road linking two houses is exactly 1 minute, and (due to citizens' eagerness to play) the time to unload a computer is negligible.\n\nHelp Byteasar in determining a delivery order that allows all Byteville's citizens (including Byteasar) to start playing together as soon as possible. In other words, find an order that minimizes the time when everyone has FarmCraft installed.\n\n### 输入\n\nThe first line of the standard input contains a single integer N(2<=N<=5 00 000)  that gives the number of houses in Byteville. The second line contains N integers C1,C2…Cn(1<=Ci<=10^9), separated by single spaces; Ci is the installation time (in minutes) for the dwellers of house no. i.\n\nThe next N-1  lines specify the roads linking the houses. Each such line contains two positive integers a and b(1<=a<b<=N) , separated by a single space. These indicate that there is a direct road between the houses no. a and b.\n\n### 输出\n\nThe first and only line of the standard output should contain a single integer: the (minimum) number of minutes after which all citizens will be able to play FarmCraft together.\n\n### 样例输入\n6\n\n1 8 9 6 3 2\n\n1 3\n\n2 3\n\n3 4\n\n4 5\n\n4 6\n\n### 样例输出\n\n11\n\n### Hits\n\nExplanation: Byteasar should deliver the computers to the houses in the following order: 3, 2, 4, 5, 6, and 1. The game will be installed after 11, 10, 10, 10, 8, and 9 minutes respectively, in the house number order. Thus everyone can play after 11 minutes.\n\nIf Byteasar delivered the game in the following order: 3, 4, 5, 6, 2, and 1, then the game would be installed after: 11, 16, 10, 8, 6, and 7 minutes respectively. Hence, everyone could play only after 16 minutes.\n\n\n\n## 题意\n\nzuhiul是镇长，住在1号房子，镇里的房子构成了一颗树，现在zuhiul要给镇里其他房子里的小姐姐送电脑，每经过一条路径，zuhiul都要花掉一分钟~~(才不是为了看小姐姐)~~。但是zuhiul只负责送不负责装，每个小姐姐的脑子都比较奇怪，有些装的快，有些装的慢，最后zuhiul会返回自己的家给自己装电脑，然后他就可以和小姐姐视频了，但是必须要等所有的小姐姐都装好了才行，现在问你zuhiul最早什么时候可以和所有的小姐姐视频。\n\n\n\n## 分析\n\n显然是树上DP，我们考虑定义DP状态，则有\n\nf[i]表示以 i 为根的子树里，花费总时间的最大值是多少\n\n我们定义son_num表示这个节点对应子树的节点数量\n\n然后我们考虑转移，我们首先考虑怎么搞两个子节点的时候，然后进行推广。\n\n不妨假设这两个字节点分别是a和b，然后可以得到先遍历a再遍历b的最大时长为\n\nmax(f[a]+1,f[b]+son_num[a]*2+1)\n\n同理，先遍历b的最大时常为max(f[b]+1,f[a]+son_num[b]*2+1)\n\n所以如果有max(f[a]+1,f[b]+son_num[a]*2+1)&lt;max(f[b]+1,f[a]+son_num[b]*2+1)\n\n因为f[a]+son_num[b]*2+1>f[a]+1并且f[b]+son_num[a]*2+1>f[b]+1\n\n所以只需要得到 f[b]+son_num[a]*2&lt;f[a]+son_num[b]*2\n\n也即 f[b]-son_num[b]*2&lt;f[a]-son_num[a]*2\n\n同样，对于多个节点来说，我们同样只要对每个子节点按照 f[son]-son_num[son]*2降序排序，然后从前往后贪心选就行了。\n\n## 代码\n\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\t\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxm = 7e5+10;\nstruct p{\n    long long t,son_num;\n} peo[maxm];\nlong long len;\nvector<int>mat[maxm];\nlong long f[maxm];\nint ind[maxm];\nbool cmp(int a,int b){\n    return f[a]-peo[a].son_num*2>f[b]-peo[b].son_num*2;\n}\nvoid dfs(int a,int pre){\n    peo[a].son_num = 1;\n    if(a!=1) f[a] = peo[a].t;\n    for(int i:mat[a]){\n        if(i==pre) continue;\n        dfs(i,a);\n    }\n    ind[0] = 0;\n    for(int i:mat[a]){\n        if(i==pre) continue;\n        ind[++ind[0]] = i;\n        peo[a].son_num+=peo[i].son_num;\n    }\n    sort(ind+1,ind+ind[0]+1,cmp);\n    long long now = 0;\n    for(int i = 1;i&lt;=ind[0];i++){\n        f[a] = max(f[a],f[ind[i]]+now+1);\n        now+=peo[ind[i]].son_num*2;\n    }\n}\nvoid solve(){\n    printf(\"%lld\\n\",max(f[1],len*2-2+peo[1].t));\n}\nint main(){\n    scanf(\"%lld\",&len);\n    for(int i = 1;i&lt;=len;i++) scanf(\"%lld\",&peo[i].t);\n    for(int i = 1,a,b;i&lt;len;i++) {\n        scanf(\"%d%d\",&a,&b);\n        mat[a].push_back(b);\n        mat[b].push_back(a);\n    }\n    dfs(1,0);\n    solve();\n    return 0;\n}\n```\n","slug":"other_oj/BZOJ3829","published":1,"updated":"2019-04-14T08:27:14.867Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1hx0029a613py4j8lu5","content":"<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>In a village called Byteville, there are   houses connected with N-1 roads. For each pair of houses, there is a unique way to get from one to another. The houses are numbered from 1 to  . The house no. 1 belongs to the village administrator Byteasar. As part of enabling modern technologies for rural areas framework,   computers have been delivered to Byteasar’s house. Every house is to be supplied with a computer, and it is Byteasar’s task to distribute them. The citizens of Byteville have already agreed to play the most recent version of FarmCraft (the game) as soon as they have their computers.</p>\n<a id=\"more\"></a>\n<p>Byteasar has loaded all the computers on his pickup truck and is about to set out to deliver the goods. He has just the right amount of gasoline to drive each road twice. In each house, Byteasar leaves one computer, and immediately continues on his route. In each house, as soon as house dwellers get their computer, they turn it on and install FarmCraft. The time it takes to install and set up the game very much depends on one’s tech savviness, which is fortunately known for each household. After he delivers all the computers, Byteasar will come back to his house and install the game on his computer. The travel time along each road linking two houses is exactly 1 minute, and (due to citizens’ eagerness to play) the time to unload a computer is negligible.</p>\n<p>Help Byteasar in determining a delivery order that allows all Byteville’s citizens (including Byteasar) to start playing together as soon as possible. In other words, find an order that minimizes the time when everyone has FarmCraft installed.</p>\n<h3 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h3><p>The first line of the standard input contains a single integer N(2&lt;=N&lt;=5 00 000)  that gives the number of houses in Byteville. The second line contains N integers C1,C2…Cn(1&lt;=Ci&lt;=10^9), separated by single spaces; Ci is the installation time (in minutes) for the dwellers of house no. i.</p>\n<p>The next N-1  lines specify the roads linking the houses. Each such line contains two positive integers a and b(1&lt;=a&lt;b&lt;=N) , separated by a single space. These indicate that there is a direct road between the houses no. a and b.</p>\n<h3 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h3><p>The first and only line of the standard output should contain a single integer: the (minimum) number of minutes after which all citizens will be able to play FarmCraft together.</p>\n<h3 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h3><p>6</p>\n<p>1 8 9 6 3 2</p>\n<p>1 3</p>\n<p>2 3</p>\n<p>3 4</p>\n<p>4 5</p>\n<p>4 6</p>\n<h3 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h3><p>11</p>\n<h3 id=\"Hits\"><a href=\"#Hits\" class=\"headerlink\" title=\"Hits\"></a>Hits</h3><p>Explanation: Byteasar should deliver the computers to the houses in the following order: 3, 2, 4, 5, 6, and 1. The game will be installed after 11, 10, 10, 10, 8, and 9 minutes respectively, in the house number order. Thus everyone can play after 11 minutes.</p>\n<p>If Byteasar delivered the game in the following order: 3, 4, 5, 6, 2, and 1, then the game would be installed after: 11, 16, 10, 8, 6, and 7 minutes respectively. Hence, everyone could play only after 16 minutes.</p>\n<h2 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h2><p>zuhiul是镇长，住在1号房子，镇里的房子构成了一颗树，现在zuhiul要给镇里其他房子里的小姐姐送电脑，每经过一条路径，zuhiul都要花掉一分钟<del>(才不是为了看小姐姐)</del>。但是zuhiul只负责送不负责装，每个小姐姐的脑子都比较奇怪，有些装的快，有些装的慢，最后zuhiul会返回自己的家给自己装电脑，然后他就可以和小姐姐视频了，但是必须要等所有的小姐姐都装好了才行，现在问你zuhiul最早什么时候可以和所有的小姐姐视频。</p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>显然是树上DP，我们考虑定义DP状态，则有</p>\n<p>f[i]表示以 i 为根的子树里，花费总时间的最大值是多少</p>\n<p>我们定义son_num表示这个节点对应子树的节点数量</p>\n<p>然后我们考虑转移，我们首先考虑怎么搞两个子节点的时候，然后进行推广。</p>\n<p>不妨假设这两个字节点分别是a和b，然后可以得到先遍历a再遍历b的最大时长为</p>\n<p>max(f[a]+1,f[b]+son_num[a]*2+1)</p>\n<p>同理，先遍历b的最大时常为max(f[b]+1,f[a]+son_num[b]*2+1)</p>\n<p>所以如果有max(f[a]+1,f[b]+son_num[a]<em>2+1)&lt;max(f[b]+1,f[a]+son_num[b]</em>2+1)</p>\n<p>因为f[a]+son_num[b]<em>2+1&gt;f[a]+1并且f[b]+son_num[a]</em>2+1&gt;f[b]+1</p>\n<p>所以只需要得到 f[b]+son_num[a]<em>2&lt;f[a]+son_num[b]</em>2</p>\n<p>也即 f[b]-son_num[b]<em>2&lt;f[a]-son_num[a]</em>2</p>\n<p>同样，对于多个节点来说，我们同样只要对每个子节点按照 f[son]-son_num[son]*2降序排序，然后从前往后贪心选就行了。</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">7e5</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">p</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> t,son_num;</span><br><span class=\"line\">&#125; peo[maxm];</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> len;</span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;mat[maxm];</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> f[maxm];</span><br><span class=\"line\"><span class=\"keyword\">int</span> ind[maxm];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> f[a]-peo[a].son_num*<span class=\"number\">2</span>&gt;f[b]-peo[b].son_num*<span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> pre)</span></span>&#123;</span><br><span class=\"line\">    peo[a].son_num = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a!=<span class=\"number\">1</span>) f[a] = peo[a].t;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i:mat[a])&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i==pre) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        dfs(i,a);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ind[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i:mat[a])&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i==pre) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        ind[++ind[<span class=\"number\">0</span>]] = i;</span><br><span class=\"line\">        peo[a].son_num+=peo[i].son_num;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sort(ind+<span class=\"number\">1</span>,ind+ind[<span class=\"number\">0</span>]+<span class=\"number\">1</span>,cmp);</span><br><span class=\"line\">    <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> now = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&amp;lt;=ind[<span class=\"number\">0</span>];i++)&#123;</span><br><span class=\"line\">        f[a] = max(f[a],f[ind[i]]+now+<span class=\"number\">1</span>);</span><br><span class=\"line\">        now+=peo[ind[i]].son_num*<span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">solve</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,max(f[<span class=\"number\">1</span>],len*<span class=\"number\">2</span><span class=\"number\">-2</span>+peo[<span class=\"number\">1</span>].t));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lld\"</span>,&amp;len);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&amp;lt;=len;i++) <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lld\"</span>,&amp;peo[i].t);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>,a,b;i&amp;lt;len;i++) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;a,&amp;b);</span><br><span class=\"line\">        mat[a].push_back(b);</span><br><span class=\"line\">        mat[b].push_back(a);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    dfs(<span class=\"number\">1</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">    solve();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>In a village called Byteville, there are   houses connected with N-1 roads. For each pair of houses, there is a unique way to get from one to another. The houses are numbered from 1 to  . The house no. 1 belongs to the village administrator Byteasar. As part of enabling modern technologies for rural areas framework,   computers have been delivered to Byteasar’s house. Every house is to be supplied with a computer, and it is Byteasar’s task to distribute them. The citizens of Byteville have already agreed to play the most recent version of FarmCraft (the game) as soon as they have their computers.</p>","more":"<p>Byteasar has loaded all the computers on his pickup truck and is about to set out to deliver the goods. He has just the right amount of gasoline to drive each road twice. In each house, Byteasar leaves one computer, and immediately continues on his route. In each house, as soon as house dwellers get their computer, they turn it on and install FarmCraft. The time it takes to install and set up the game very much depends on one’s tech savviness, which is fortunately known for each household. After he delivers all the computers, Byteasar will come back to his house and install the game on his computer. The travel time along each road linking two houses is exactly 1 minute, and (due to citizens’ eagerness to play) the time to unload a computer is negligible.</p>\n<p>Help Byteasar in determining a delivery order that allows all Byteville’s citizens (including Byteasar) to start playing together as soon as possible. In other words, find an order that minimizes the time when everyone has FarmCraft installed.</p>\n<h3 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h3><p>The first line of the standard input contains a single integer N(2&lt;=N&lt;=5 00 000)  that gives the number of houses in Byteville. The second line contains N integers C1,C2…Cn(1&lt;=Ci&lt;=10^9), separated by single spaces; Ci is the installation time (in minutes) for the dwellers of house no. i.</p>\n<p>The next N-1  lines specify the roads linking the houses. Each such line contains two positive integers a and b(1&lt;=a&lt;b&lt;=N) , separated by a single space. These indicate that there is a direct road between the houses no. a and b.</p>\n<h3 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h3><p>The first and only line of the standard output should contain a single integer: the (minimum) number of minutes after which all citizens will be able to play FarmCraft together.</p>\n<h3 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h3><p>6</p>\n<p>1 8 9 6 3 2</p>\n<p>1 3</p>\n<p>2 3</p>\n<p>3 4</p>\n<p>4 5</p>\n<p>4 6</p>\n<h3 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h3><p>11</p>\n<h3 id=\"Hits\"><a href=\"#Hits\" class=\"headerlink\" title=\"Hits\"></a>Hits</h3><p>Explanation: Byteasar should deliver the computers to the houses in the following order: 3, 2, 4, 5, 6, and 1. The game will be installed after 11, 10, 10, 10, 8, and 9 minutes respectively, in the house number order. Thus everyone can play after 11 minutes.</p>\n<p>If Byteasar delivered the game in the following order: 3, 4, 5, 6, 2, and 1, then the game would be installed after: 11, 16, 10, 8, 6, and 7 minutes respectively. Hence, everyone could play only after 16 minutes.</p>\n<h2 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h2><p>zuhiul是镇长，住在1号房子，镇里的房子构成了一颗树，现在zuhiul要给镇里其他房子里的小姐姐送电脑，每经过一条路径，zuhiul都要花掉一分钟<del>(才不是为了看小姐姐)</del>。但是zuhiul只负责送不负责装，每个小姐姐的脑子都比较奇怪，有些装的快，有些装的慢，最后zuhiul会返回自己的家给自己装电脑，然后他就可以和小姐姐视频了，但是必须要等所有的小姐姐都装好了才行，现在问你zuhiul最早什么时候可以和所有的小姐姐视频。</p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>显然是树上DP，我们考虑定义DP状态，则有</p>\n<p>f[i]表示以 i 为根的子树里，花费总时间的最大值是多少</p>\n<p>我们定义son_num表示这个节点对应子树的节点数量</p>\n<p>然后我们考虑转移，我们首先考虑怎么搞两个子节点的时候，然后进行推广。</p>\n<p>不妨假设这两个字节点分别是a和b，然后可以得到先遍历a再遍历b的最大时长为</p>\n<p>max(f[a]+1,f[b]+son_num[a]*2+1)</p>\n<p>同理，先遍历b的最大时常为max(f[b]+1,f[a]+son_num[b]*2+1)</p>\n<p>所以如果有max(f[a]+1,f[b]+son_num[a]<em>2+1)&lt;max(f[b]+1,f[a]+son_num[b]</em>2+1)</p>\n<p>因为f[a]+son_num[b]<em>2+1&gt;f[a]+1并且f[b]+son_num[a]</em>2+1&gt;f[b]+1</p>\n<p>所以只需要得到 f[b]+son_num[a]<em>2&lt;f[a]+son_num[b]</em>2</p>\n<p>也即 f[b]-son_num[b]<em>2&lt;f[a]-son_num[a]</em>2</p>\n<p>同样，对于多个节点来说，我们同样只要对每个子节点按照 f[son]-son_num[son]*2降序排序，然后从前往后贪心选就行了。</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">7e5</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">p</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> t,son_num;</span><br><span class=\"line\">&#125; peo[maxm];</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> len;</span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;mat[maxm];</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> f[maxm];</span><br><span class=\"line\"><span class=\"keyword\">int</span> ind[maxm];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> f[a]-peo[a].son_num*<span class=\"number\">2</span>&gt;f[b]-peo[b].son_num*<span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> pre)</span></span>&#123;</span><br><span class=\"line\">    peo[a].son_num = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a!=<span class=\"number\">1</span>) f[a] = peo[a].t;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i:mat[a])&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i==pre) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        dfs(i,a);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ind[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i:mat[a])&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i==pre) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        ind[++ind[<span class=\"number\">0</span>]] = i;</span><br><span class=\"line\">        peo[a].son_num+=peo[i].son_num;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sort(ind+<span class=\"number\">1</span>,ind+ind[<span class=\"number\">0</span>]+<span class=\"number\">1</span>,cmp);</span><br><span class=\"line\">    <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> now = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&amp;lt;=ind[<span class=\"number\">0</span>];i++)&#123;</span><br><span class=\"line\">        f[a] = max(f[a],f[ind[i]]+now+<span class=\"number\">1</span>);</span><br><span class=\"line\">        now+=peo[ind[i]].son_num*<span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">solve</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,max(f[<span class=\"number\">1</span>],len*<span class=\"number\">2</span><span class=\"number\">-2</span>+peo[<span class=\"number\">1</span>].t));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lld\"</span>,&amp;len);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&amp;lt;=len;i++) <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lld\"</span>,&amp;peo[i].t);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>,a,b;i&amp;lt;len;i++) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;a,&amp;b);</span><br><span class=\"line\">        mat[a].push_back(b);</span><br><span class=\"line\">        mat[b].push_back(a);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    dfs(<span class=\"number\">1</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">    solve();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"The Curse of Knowledge","date":"2019-07-21T16:00:00.000Z","author":"zuhiul","_content":"\n## 知识的诅咒\n\n今天看到这个很有意思的词，记录一下。\n\n先扔链接。\n\n[英文链接](https://hbr.org/2006/12/the-curse-of-knowledge)\n\n[wiki](https://en.wikipedia.org/wiki/Curse_of_knowledge)\n\n用自己的一句话理解来说这件事就是：双方知识的不对等，导致告知者理解不了被告知者因为不清楚某些信息而造成的错误。\n\n因为告知者很难理解在他看来很“常识”的东西，被告知者却不知道。\n\n很多时候，我们描述一个东西，通常会省略我们都认为大家默认如此的东西，但是往往这些我们漏掉的关键信息反而是对方不清楚的。\n\n一个很常见的例子是：我上周要做一个merge数据的操作，老大让我搞一下，当时他的原话是“有时间把这个merge做一下，这个拖了好久了”，然后我就吭哧吭哧开始做了，当我写完设计文档之后，他看完说了句“我说的不是这个merge”。\n\n事实是这样：我们有两部分数据需要做merge。第一部分是上周没做，留下来的，第二部分是一天前没时间做的，我的理解是“拖了很久”，意思应该是第一个，而老大的意思是第二个，因为他觉得第二个是比较紧急的。\n\n这种信息的不对等，导致了我们理解的不一致，如果我继续做的话，必然是有问题的。但是显然大家的理解都没问题，只是知识不对等而已。\n\n知识的诅咒，描述的就是这种现象：当一个人知道一件事后，他就无法想象自己是不知道这件事的。\n\n或许我们可以通过这看懂另一句话：门当户对。\n\n我其实一直不理解为什么要门当户对，后来我渐渐明白一件事：两个环境相似的家庭诞生的两个孩子，可能思维观点一致的可能性更高，稳定的婚姻就越容易。成长环境其实很能限制一个人的发展，每个人的想法很大程度基于自己的成长过程。\n\n同理，我们也很好解释，为啥会产生“知识的诅咒”这种现象。\n","source":"_posts/knowledge/The_Curse_of_Knowledge.md","raw":"---\ntitle: The Curse of Knowledge\ndate: 2019-07-22\nauthor: \"zuhiul\"\ntags:\n  - word\n---\n\n## 知识的诅咒\n\n今天看到这个很有意思的词，记录一下。\n\n先扔链接。\n\n[英文链接](https://hbr.org/2006/12/the-curse-of-knowledge)\n\n[wiki](https://en.wikipedia.org/wiki/Curse_of_knowledge)\n\n用自己的一句话理解来说这件事就是：双方知识的不对等，导致告知者理解不了被告知者因为不清楚某些信息而造成的错误。\n\n因为告知者很难理解在他看来很“常识”的东西，被告知者却不知道。\n\n很多时候，我们描述一个东西，通常会省略我们都认为大家默认如此的东西，但是往往这些我们漏掉的关键信息反而是对方不清楚的。\n\n一个很常见的例子是：我上周要做一个merge数据的操作，老大让我搞一下，当时他的原话是“有时间把这个merge做一下，这个拖了好久了”，然后我就吭哧吭哧开始做了，当我写完设计文档之后，他看完说了句“我说的不是这个merge”。\n\n事实是这样：我们有两部分数据需要做merge。第一部分是上周没做，留下来的，第二部分是一天前没时间做的，我的理解是“拖了很久”，意思应该是第一个，而老大的意思是第二个，因为他觉得第二个是比较紧急的。\n\n这种信息的不对等，导致了我们理解的不一致，如果我继续做的话，必然是有问题的。但是显然大家的理解都没问题，只是知识不对等而已。\n\n知识的诅咒，描述的就是这种现象：当一个人知道一件事后，他就无法想象自己是不知道这件事的。\n\n或许我们可以通过这看懂另一句话：门当户对。\n\n我其实一直不理解为什么要门当户对，后来我渐渐明白一件事：两个环境相似的家庭诞生的两个孩子，可能思维观点一致的可能性更高，稳定的婚姻就越容易。成长环境其实很能限制一个人的发展，每个人的想法很大程度基于自己的成长过程。\n\n同理，我们也很好解释，为啥会产生“知识的诅咒”这种现象。\n","slug":"knowledge/The_Curse_of_Knowledge","published":1,"updated":"2019-07-22T09:52:45.543Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1hy002ca613tbouzw3x","content":"<h2 id=\"知识的诅咒\"><a href=\"#知识的诅咒\" class=\"headerlink\" title=\"知识的诅咒\"></a>知识的诅咒</h2><p>今天看到这个很有意思的词，记录一下。</p>\n<p>先扔链接。</p>\n<p><a href=\"https://hbr.org/2006/12/the-curse-of-knowledge\" target=\"_blank\" rel=\"noopener\">英文链接</a></p>\n<p><a href=\"https://en.wikipedia.org/wiki/Curse_of_knowledge\" target=\"_blank\" rel=\"noopener\">wiki</a></p>\n<p>用自己的一句话理解来说这件事就是：双方知识的不对等，导致告知者理解不了被告知者因为不清楚某些信息而造成的错误。</p>\n<p>因为告知者很难理解在他看来很“常识”的东西，被告知者却不知道。</p>\n<p>很多时候，我们描述一个东西，通常会省略我们都认为大家默认如此的东西，但是往往这些我们漏掉的关键信息反而是对方不清楚的。</p>\n<p>一个很常见的例子是：我上周要做一个merge数据的操作，老大让我搞一下，当时他的原话是“有时间把这个merge做一下，这个拖了好久了”，然后我就吭哧吭哧开始做了，当我写完设计文档之后，他看完说了句“我说的不是这个merge”。</p>\n<p>事实是这样：我们有两部分数据需要做merge。第一部分是上周没做，留下来的，第二部分是一天前没时间做的，我的理解是“拖了很久”，意思应该是第一个，而老大的意思是第二个，因为他觉得第二个是比较紧急的。</p>\n<p>这种信息的不对等，导致了我们理解的不一致，如果我继续做的话，必然是有问题的。但是显然大家的理解都没问题，只是知识不对等而已。</p>\n<p>知识的诅咒，描述的就是这种现象：当一个人知道一件事后，他就无法想象自己是不知道这件事的。</p>\n<p>或许我们可以通过这看懂另一句话：门当户对。</p>\n<p>我其实一直不理解为什么要门当户对，后来我渐渐明白一件事：两个环境相似的家庭诞生的两个孩子，可能思维观点一致的可能性更高，稳定的婚姻就越容易。成长环境其实很能限制一个人的发展，每个人的想法很大程度基于自己的成长过程。</p>\n<p>同理，我们也很好解释，为啥会产生“知识的诅咒”这种现象。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"知识的诅咒\"><a href=\"#知识的诅咒\" class=\"headerlink\" title=\"知识的诅咒\"></a>知识的诅咒</h2><p>今天看到这个很有意思的词，记录一下。</p>\n<p>先扔链接。</p>\n<p><a href=\"https://hbr.org/2006/12/the-curse-of-knowledge\" target=\"_blank\" rel=\"noopener\">英文链接</a></p>\n<p><a href=\"https://en.wikipedia.org/wiki/Curse_of_knowledge\" target=\"_blank\" rel=\"noopener\">wiki</a></p>\n<p>用自己的一句话理解来说这件事就是：双方知识的不对等，导致告知者理解不了被告知者因为不清楚某些信息而造成的错误。</p>\n<p>因为告知者很难理解在他看来很“常识”的东西，被告知者却不知道。</p>\n<p>很多时候，我们描述一个东西，通常会省略我们都认为大家默认如此的东西，但是往往这些我们漏掉的关键信息反而是对方不清楚的。</p>\n<p>一个很常见的例子是：我上周要做一个merge数据的操作，老大让我搞一下，当时他的原话是“有时间把这个merge做一下，这个拖了好久了”，然后我就吭哧吭哧开始做了，当我写完设计文档之后，他看完说了句“我说的不是这个merge”。</p>\n<p>事实是这样：我们有两部分数据需要做merge。第一部分是上周没做，留下来的，第二部分是一天前没时间做的，我的理解是“拖了很久”，意思应该是第一个，而老大的意思是第二个，因为他觉得第二个是比较紧急的。</p>\n<p>这种信息的不对等，导致了我们理解的不一致，如果我继续做的话，必然是有问题的。但是显然大家的理解都没问题，只是知识不对等而已。</p>\n<p>知识的诅咒，描述的就是这种现象：当一个人知道一件事后，他就无法想象自己是不知道这件事的。</p>\n<p>或许我们可以通过这看懂另一句话：门当户对。</p>\n<p>我其实一直不理解为什么要门当户对，后来我渐渐明白一件事：两个环境相似的家庭诞生的两个孩子，可能思维观点一致的可能性更高，稳定的婚姻就越容易。成长环境其实很能限制一个人的发展，每个人的想法很大程度基于自己的成长过程。</p>\n<p>同理，我们也很好解释，为啥会产生“知识的诅咒”这种现象。</p>\n"},{"title":"Problems in Set Theory","date":"2019-07-28T16:00:00.000Z","author":"zuhiul","_content":"\n$\\text{1.Prove Theorem 1 (show that $x$ is in the left-hand set iff it is in the right-hand set).For example,for (d),}$\n\n\\begin{eqnarray} \nx \\in(A \\cup B) \\cap C &\\Longleftrightarrow& [x \\in(A \\cup B) \\text { and } x \\in C] \\\\\\\n&\\Longleftrightarrow& [(x \\in A \\text { or } x \\in B), \\text { and } x \\in C] \\\\\\\n&\\Longleftrightarrow& [(x \\in A, x \\in C) \\text { or }(x \\in B, x \\in C)] \n\\end{eqnarray}\n\n\n- $ A \\cup A = A ; A \\cap A = A$\n\n\\begin{eqnarray}\nA \\cup A &=& \\\\{ x|x \\in A \\\\} \\cup \\\\{ x|x \\in A \\\\}\\\\\\\n&=& \\\\{ x|x \\in A \\\\}\\\\\\\n&=&A\\\\\\\nA \\cap A &=& \\\\{ x| x \\in A \\\\} \\cup \\\\{ x|x \\in A \\\\}\\\\\\\n&=& \\\\{ x|x \\in A \\\\}\\\\\\\n&=&A\\\\\\\n\\end{eqnarray}\n\n- $ A \\cup B = B \\cup A , A \\cap B = B \\cap A $\n\n\\begin{eqnarray}\nA \\cup B &=& \\\\{ x| x \\in A \\\\} \\cup \\\\{ x|x \\in B \\\\} \\\\\\\n&=& \\\\{ x|x \\in A\\ or\\ x \\in B \\\\}\\\\\\\n&=& \\\\{ x|x \\in B \\\\} \\cup \\\\{ x|x \\in A \\\\}\\\\\\\n&=& B \\cup A\n\\end{eqnarray}","source":"_posts/knowledge/Set Theory.md","raw":"---\ntitle: \tProblems in Set Theory\ndate:\t\t2019-07-29\nauthor:\t\"zuhiul\"\ntags:\n  - Mathematical Analysis\n---\n\n$\\text{1.Prove Theorem 1 (show that $x$ is in the left-hand set iff it is in the right-hand set).For example,for (d),}$\n\n\\begin{eqnarray} \nx \\in(A \\cup B) \\cap C &\\Longleftrightarrow& [x \\in(A \\cup B) \\text { and } x \\in C] \\\\\\\n&\\Longleftrightarrow& [(x \\in A \\text { or } x \\in B), \\text { and } x \\in C] \\\\\\\n&\\Longleftrightarrow& [(x \\in A, x \\in C) \\text { or }(x \\in B, x \\in C)] \n\\end{eqnarray}\n\n\n- $ A \\cup A = A ; A \\cap A = A$\n\n\\begin{eqnarray}\nA \\cup A &=& \\\\{ x|x \\in A \\\\} \\cup \\\\{ x|x \\in A \\\\}\\\\\\\n&=& \\\\{ x|x \\in A \\\\}\\\\\\\n&=&A\\\\\\\nA \\cap A &=& \\\\{ x| x \\in A \\\\} \\cup \\\\{ x|x \\in A \\\\}\\\\\\\n&=& \\\\{ x|x \\in A \\\\}\\\\\\\n&=&A\\\\\\\n\\end{eqnarray}\n\n- $ A \\cup B = B \\cup A , A \\cap B = B \\cap A $\n\n\\begin{eqnarray}\nA \\cup B &=& \\\\{ x| x \\in A \\\\} \\cup \\\\{ x|x \\in B \\\\} \\\\\\\n&=& \\\\{ x|x \\in A\\ or\\ x \\in B \\\\}\\\\\\\n&=& \\\\{ x|x \\in B \\\\} \\cup \\\\{ x|x \\in A \\\\}\\\\\\\n&=& B \\cup A\n\\end{eqnarray}","slug":"knowledge/Set Theory","published":1,"updated":"2019-07-29T09:22:20.544Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1hz002da613p75bdtro","content":"<p>$\\text{1.Prove Theorem 1 (show that $x$ is in the left-hand set iff it is in the right-hand set).For example,for (d),}$</p>\n<p>\\begin{eqnarray}<br>x \\in(A \\cup B) \\cap C &amp;\\Longleftrightarrow&amp; [x \\in(A \\cup B) \\text { and } x \\in C] \\\\<br>&amp;\\Longleftrightarrow&amp; [(x \\in A \\text { or } x \\in B), \\text { and } x \\in C] \\\\<br>&amp;\\Longleftrightarrow&amp; [(x \\in A, x \\in C) \\text { or }(x \\in B, x \\in C)]<br>\\end{eqnarray}</p>\n<ul>\n<li>$ A \\cup A = A ; A \\cap A = A$</li>\n</ul>\n<p>\\begin{eqnarray}<br>A \\cup A &amp;=&amp; \\{ x|x \\in A \\} \\cup \\{ x|x \\in A \\}\\\\<br>&amp;=&amp; \\{ x|x \\in A \\}\\\\<br>&amp;=&amp;A\\\\<br>A \\cap A &amp;=&amp; \\{ x| x \\in A \\} \\cup \\{ x|x \\in A \\}\\\\<br>&amp;=&amp; \\{ x|x \\in A \\}\\\\<br>&amp;=&amp;A\\\\<br>\\end{eqnarray}</p>\n<ul>\n<li>$ A \\cup B = B \\cup A , A \\cap B = B \\cap A $</li>\n</ul>\n<p>\\begin{eqnarray}<br>A \\cup B &amp;=&amp; \\{ x| x \\in A \\} \\cup \\{ x|x \\in B \\} \\\\<br>&amp;=&amp; \\{ x|x \\in A\\ or\\ x \\in B \\}\\\\<br>&amp;=&amp; \\{ x|x \\in B \\} \\cup \\{ x|x \\in A \\}\\\\<br>&amp;=&amp; B \\cup A<br>\\end{eqnarray}</p>\n","site":{"data":{}},"excerpt":"","more":"<p>$\\text{1.Prove Theorem 1 (show that $x$ is in the left-hand set iff it is in the right-hand set).For example,for (d),}$</p>\n<p>\\begin{eqnarray}<br>x \\in(A \\cup B) \\cap C &amp;\\Longleftrightarrow&amp; [x \\in(A \\cup B) \\text { and } x \\in C] \\\\<br>&amp;\\Longleftrightarrow&amp; [(x \\in A \\text { or } x \\in B), \\text { and } x \\in C] \\\\<br>&amp;\\Longleftrightarrow&amp; [(x \\in A, x \\in C) \\text { or }(x \\in B, x \\in C)]<br>\\end{eqnarray}</p>\n<ul>\n<li>$ A \\cup A = A ; A \\cap A = A$</li>\n</ul>\n<p>\\begin{eqnarray}<br>A \\cup A &amp;=&amp; \\{ x|x \\in A \\} \\cup \\{ x|x \\in A \\}\\\\<br>&amp;=&amp; \\{ x|x \\in A \\}\\\\<br>&amp;=&amp;A\\\\<br>A \\cap A &amp;=&amp; \\{ x| x \\in A \\} \\cup \\{ x|x \\in A \\}\\\\<br>&amp;=&amp; \\{ x|x \\in A \\}\\\\<br>&amp;=&amp;A\\\\<br>\\end{eqnarray}</p>\n<ul>\n<li>$ A \\cup B = B \\cup A , A \\cap B = B \\cap A $</li>\n</ul>\n<p>\\begin{eqnarray}<br>A \\cup B &amp;=&amp; \\{ x| x \\in A \\} \\cup \\{ x|x \\in B \\} \\\\<br>&amp;=&amp; \\{ x|x \\in A\\ or\\ x \\in B \\}\\\\<br>&amp;=&amp; \\{ x|x \\in B \\} \\cup \\{ x|x \\in A \\}\\\\<br>&amp;=&amp; B \\cup A<br>\\end{eqnarray}</p>\n"},{"title":"UPCOJ 9999 Cube","date":"2018-12-02T16:00:00.000Z","author":"zuhiul","_content":"### 题目描述\n给你一个 $ n\\ast m $ 的棋盘，有一个 $ 1\\ast 1\\ast 2 $ 的长方体竖直放在 (1,1)上，你可以将其在棋盘上滚动，你的目标是让其竖直放在 ( n , m ) 上，问至少需要多少次操作。(放倒、竖直、翻滚)\n<!-- more -->\n\n### 输入\n一行，两个整数n，m (n<=m)\n\n### 输出\n需要最少时间能从(1,1)到达(n,m)，如果无解输出 $ impossible $ .\n\n### 样例输入\n1 1\n\n### 样例输出\n0\n\n### 提示\n\n![avatar](https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/UPCOJ9999.png)\n\n## 分析\n\n这个题目我的做法其实比较暴力，因为和队友赌能不能1Y ，我甚至怂到写暴力对拍了．．．．\n\n闲话少说，下面看分析．\n\n其实还是比较好想的．\n\n首先我们考虑哪种情况是 impossible ．比较好观察的是，当ｎ和ｍ足够大的时候就一定可达\n\n所以我们只用找到一个ｎ和ｍ可达的下界就行了\n\n然后就可以发现只有当ｎ和ｍ都小于３的时候会有impossible的情况(因为转不动．．．．\n\t\t\n接下来分析其他情况，首先比较好分析的是，如果n%3==1&&m%3==1的话，答案可以显然得到是 $(n/3+m/3)\\ast 2$\n\n剩下的同理搞搞就行了，大体情况见下表．\n\n![avatar](https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/UPCOJ9999res.png)\n\n比较显然的是，加的那一项和n,m％3为2的数量一致，然后就是代码啦．．．\n\n## 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n```cpp\n#include<bits/stdc++.h>\n#define endl '\\n'\nusing namespace std;\n \nint main(){\n    int n,m;\n    while(scanf(\"%d%d\",&n,&m)!=EOF){\n        if(n<=2){\n            if(m%3==1) cout<<m/3*2+n-1<<endl;\n            else cout<<\"impossible\"<<endl;\n        }else if(n==3&&m==3) cout<<8<<endl;\n        else if(n==3){\n            if(m%3==0) cout<<m/3*2+4<<endl;\n            else if(m%3==1) cout<<(m+2)/3*2<<endl;\n            else cout<<m/3*2+5<<endl;\n        }else {\n            int ans = (n/3+m/3)*2;\n            ans+=(m%3==2)+(n%3==2);\n            cout<<ans<<endl;\n        }\n    }\n    return 0;\n}\n```\n","source":"_posts/other_oj/UPCOJ9999.md","raw":"---\ntitle: UPCOJ 9999 Cube\ndate:\t2018-12-03\nauthor:\t\"zuhiul\"\ntags:\n  - 找规律\n---\n### 题目描述\n给你一个 $ n\\ast m $ 的棋盘，有一个 $ 1\\ast 1\\ast 2 $ 的长方体竖直放在 (1,1)上，你可以将其在棋盘上滚动，你的目标是让其竖直放在 ( n , m ) 上，问至少需要多少次操作。(放倒、竖直、翻滚)\n<!-- more -->\n\n### 输入\n一行，两个整数n，m (n<=m)\n\n### 输出\n需要最少时间能从(1,1)到达(n,m)，如果无解输出 $ impossible $ .\n\n### 样例输入\n1 1\n\n### 样例输出\n0\n\n### 提示\n\n![avatar](https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/UPCOJ9999.png)\n\n## 分析\n\n这个题目我的做法其实比较暴力，因为和队友赌能不能1Y ，我甚至怂到写暴力对拍了．．．．\n\n闲话少说，下面看分析．\n\n其实还是比较好想的．\n\n首先我们考虑哪种情况是 impossible ．比较好观察的是，当ｎ和ｍ足够大的时候就一定可达\n\n所以我们只用找到一个ｎ和ｍ可达的下界就行了\n\n然后就可以发现只有当ｎ和ｍ都小于３的时候会有impossible的情况(因为转不动．．．．\n\t\t\n接下来分析其他情况，首先比较好分析的是，如果n%3==1&&m%3==1的话，答案可以显然得到是 $(n/3+m/3)\\ast 2$\n\n剩下的同理搞搞就行了，大体情况见下表．\n\n![avatar](https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/UPCOJ9999res.png)\n\n比较显然的是，加的那一项和n,m％3为2的数量一致，然后就是代码啦．．．\n\n## 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n```cpp\n#include<bits/stdc++.h>\n#define endl '\\n'\nusing namespace std;\n \nint main(){\n    int n,m;\n    while(scanf(\"%d%d\",&n,&m)!=EOF){\n        if(n<=2){\n            if(m%3==1) cout<<m/3*2+n-1<<endl;\n            else cout<<\"impossible\"<<endl;\n        }else if(n==3&&m==3) cout<<8<<endl;\n        else if(n==3){\n            if(m%3==0) cout<<m/3*2+4<<endl;\n            else if(m%3==1) cout<<(m+2)/3*2<<endl;\n            else cout<<m/3*2+5<<endl;\n        }else {\n            int ans = (n/3+m/3)*2;\n            ans+=(m%3==2)+(n%3==2);\n            cout<<ans<<endl;\n        }\n    }\n    return 0;\n}\n```\n","slug":"other_oj/UPCOJ9999","published":1,"updated":"2019-07-12T08:29:43.667Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1i0002fa613mj1vp7gb","content":"<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>给你一个 $ n\\ast m $ 的棋盘，有一个 $ 1\\ast 1\\ast 2 $ 的长方体竖直放在 (1,1)上，你可以将其在棋盘上滚动，你的目标是让其竖直放在 ( n , m ) 上，问至少需要多少次操作。(放倒、竖直、翻滚)<br><a id=\"more\"></a></p>\n<h3 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h3><p>一行，两个整数n，m (n&lt;=m)</p>\n<h3 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h3><p>需要最少时间能从(1,1)到达(n,m)，如果无解输出 $ impossible $ .</p>\n<h3 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h3><p>1 1</p>\n<h3 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h3><p>0</p>\n<h3 id=\"提示\"><a href=\"#提示\" class=\"headerlink\" title=\"提示\"></a>提示</h3><p><img src=\"https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/UPCOJ9999.png\" alt=\"avatar\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>这个题目我的做法其实比较暴力，因为和队友赌能不能1Y ，我甚至怂到写暴力对拍了．．．．</p>\n<p>闲话少说，下面看分析．</p>\n<p>其实还是比较好想的．</p>\n<p>首先我们考虑哪种情况是 impossible ．比较好观察的是，当ｎ和ｍ足够大的时候就一定可达</p>\n<p>所以我们只用找到一个ｎ和ｍ可达的下界就行了</p>\n<p>然后就可以发现只有当ｎ和ｍ都小于３的时候会有impossible的情况(因为转不动．．．．</p>\n<p>接下来分析其他情况，首先比较好分析的是，如果n%3==1&amp;&amp;m%3==1的话，答案可以显然得到是 $(n/3+m/3)\\ast 2$</p>\n<p>剩下的同理搞搞就行了，大体情况见下表．</p>\n<p><img src=\"https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/UPCOJ9999res.png\" alt=\"avatar\"></p>\n<p>比较显然的是，加的那一项和n,m％3为2的数量一致，然后就是代码啦．．．</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> endl <span class=\"meta-string\">'\\n'</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;n,&amp;m)!=EOF)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n&lt;=<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(m%<span class=\"number\">3</span>==<span class=\"number\">1</span>) <span class=\"built_in\">cout</span>&lt;&lt;m/<span class=\"number\">3</span>*<span class=\"number\">2</span>+n<span class=\"number\">-1</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"impossible\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(n==<span class=\"number\">3</span>&amp;&amp;m==<span class=\"number\">3</span>) <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"number\">8</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(n==<span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(m%<span class=\"number\">3</span>==<span class=\"number\">0</span>) <span class=\"built_in\">cout</span>&lt;&lt;m/<span class=\"number\">3</span>*<span class=\"number\">2</span>+<span class=\"number\">4</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(m%<span class=\"number\">3</span>==<span class=\"number\">1</span>) <span class=\"built_in\">cout</span>&lt;&lt;(m+<span class=\"number\">2</span>)/<span class=\"number\">3</span>*<span class=\"number\">2</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"built_in\">cout</span>&lt;&lt;m/<span class=\"number\">3</span>*<span class=\"number\">2</span>+<span class=\"number\">5</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> ans = (n/<span class=\"number\">3</span>+m/<span class=\"number\">3</span>)*<span class=\"number\">2</span>;</span><br><span class=\"line\">            ans+=(m%<span class=\"number\">3</span>==<span class=\"number\">2</span>)+(n%<span class=\"number\">3</span>==<span class=\"number\">2</span>);</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>给你一个 $ n\\ast m $ 的棋盘，有一个 $ 1\\ast 1\\ast 2 $ 的长方体竖直放在 (1,1)上，你可以将其在棋盘上滚动，你的目标是让其竖直放在 ( n , m ) 上，问至少需要多少次操作。(放倒、竖直、翻滚)<br>","more":"</p>\n<h3 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h3><p>一行，两个整数n，m (n&lt;=m)</p>\n<h3 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h3><p>需要最少时间能从(1,1)到达(n,m)，如果无解输出 $ impossible $ .</p>\n<h3 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h3><p>1 1</p>\n<h3 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h3><p>0</p>\n<h3 id=\"提示\"><a href=\"#提示\" class=\"headerlink\" title=\"提示\"></a>提示</h3><p><img src=\"https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/UPCOJ9999.png\" alt=\"avatar\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>这个题目我的做法其实比较暴力，因为和队友赌能不能1Y ，我甚至怂到写暴力对拍了．．．．</p>\n<p>闲话少说，下面看分析．</p>\n<p>其实还是比较好想的．</p>\n<p>首先我们考虑哪种情况是 impossible ．比较好观察的是，当ｎ和ｍ足够大的时候就一定可达</p>\n<p>所以我们只用找到一个ｎ和ｍ可达的下界就行了</p>\n<p>然后就可以发现只有当ｎ和ｍ都小于３的时候会有impossible的情况(因为转不动．．．．</p>\n<p>接下来分析其他情况，首先比较好分析的是，如果n%3==1&amp;&amp;m%3==1的话，答案可以显然得到是 $(n/3+m/3)\\ast 2$</p>\n<p>剩下的同理搞搞就行了，大体情况见下表．</p>\n<p><img src=\"https://raw.githubusercontent.com/zuhiul/just-for-fun/master/ForBlog/img/UPCOJ9999res.png\" alt=\"avatar\"></p>\n<p>比较显然的是，加的那一项和n,m％3为2的数量一致，然后就是代码啦．．．</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> endl <span class=\"meta-string\">'\\n'</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;n,&amp;m)!=EOF)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n&lt;=<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(m%<span class=\"number\">3</span>==<span class=\"number\">1</span>) <span class=\"built_in\">cout</span>&lt;&lt;m/<span class=\"number\">3</span>*<span class=\"number\">2</span>+n<span class=\"number\">-1</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"impossible\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(n==<span class=\"number\">3</span>&amp;&amp;m==<span class=\"number\">3</span>) <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"number\">8</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(n==<span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(m%<span class=\"number\">3</span>==<span class=\"number\">0</span>) <span class=\"built_in\">cout</span>&lt;&lt;m/<span class=\"number\">3</span>*<span class=\"number\">2</span>+<span class=\"number\">4</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(m%<span class=\"number\">3</span>==<span class=\"number\">1</span>) <span class=\"built_in\">cout</span>&lt;&lt;(m+<span class=\"number\">2</span>)/<span class=\"number\">3</span>*<span class=\"number\">2</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"built_in\">cout</span>&lt;&lt;m/<span class=\"number\">3</span>*<span class=\"number\">2</span>+<span class=\"number\">5</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> ans = (n/<span class=\"number\">3</span>+m/<span class=\"number\">3</span>)*<span class=\"number\">2</span>;</span><br><span class=\"line\">            ans+=(m%<span class=\"number\">3</span>==<span class=\"number\">2</span>)+(n%<span class=\"number\">3</span>==<span class=\"number\">2</span>);</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"UPCOJ 9805 Network Reliability","date":"2018-12-02T16:00:00.000Z","author":"zuhiul","_content":"### 题目描述\nAn undirected graph is given. Each edge of the graph disappears with a constant probability. Calculate the probability with which the remained graph is connected.\n<!-- more -->\n\n### 输入\nThe first line contains three integers N (1≤N≤14), M (0≤M≤100) and P (0≤P≤100), separated by a single space. N is the number of the vertices and M is the number of the edges. P is the probability represented by a percentage.\n\nThe following M lines describe the edges. Each line contains two integers  $ v_i $  and $ u_i $ (1≤$ u_i $ ,$ v_i $≤N). ($ u_i $ ,$ v_i $) indicates the edge that connects the two vertices $ u_i $  and$  v_i $.\n\n### 输出\nOutput a line containing the probability with which the remained graph is connected. Your program may output an arbitrary number of digits after the decimal point. However, the absolute error should be  $10^{−9}$  or less.\n\n### 样例输入\n3 3 50\n\n1 2\n\n2 3\n\n3 1\n\n### 样例输出\n0.500000000000\n\n## 题意\nzuhiul 和不超过14 个妹子存在着不清不楚的关系，但是他发现，有些妹子们相互之间是闺蜜，所以这些是闺蜜的妹子们有 $P$ 的概率会发现对面和zuhiul有关系从而导致关系破裂，现在问你多大的概率下，大家相安无事(妹子们还是一个联通图)．\n\n## 分析\n数据量这么小，显然状压呀．\n\n所以我们定义\n\n$DP[i] 表示 state==i 时，i 包含的点相互联通的概率$\n\n那么比较容易得到答案就是\t$ DP[(1<<n)-1] $\n\n现在我们考虑转移：\n\n​\t因为要保证state内任意两点可达，所以我们不妨枚举出所有不可达的情况，容斥一下就行了．\n\n​\t所以每次对于一个state，我们可以枚举他的每个点的子集，然后对于其他点到这个集合都割掉就行了\n\n​\t你问我为什么不会重复和遗漏？\n\n​\t这就要用到神奇的构造了．\n\n​\t首先我们保证每个正确的点的子集里面都包含某一个点，那么对于包含这个点的所有正确子集来说肯定各不相同，这个保证了不会重复\n\n​\t然后怎么证明没有遗漏呢？\n\n​\t因为对于任何一个点来说，他都属于某一个联通块，我们实际上是在枚举每一个联通块，所以不会遗漏呀．\n\n​\t恩，大概就是这样，详情请看代码．\n\n​\t最后说一下复杂度．\n\n​\t应该是 $O(\\sum_{i = 1}^{n} C_n^i * 2^i) = O(3^n)$\n\n\n## 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\ndouble p;\ndouble pow_p[100];\nint pow_2[100];\nint mat[100][100];\nvoid init(){\n    scanf(\"%d%d%lf\",&n,&m,&p);\n    p/=100;\n    pow_2[0] = 1;\n    pow_p[0] = 1;\n    for(int i = 1;i<100;i++) pow_p[i] = pow_p[i-1]*p,pow_2[i] = pow_2[i-1]<<1;\n    for(int i = 1,from,to;i<=m;i++) {\n        scanf(\"%d%d\",&from,&to);\n        mat[--from][--to]++;\n        mat[to][from]++;\n    }\n}\nconst int maxm = 1<<15;\ndouble dp[maxm];\nint has[100];\nint sub[100];\nvoid get(int state){\n    dp[state] = 1;\n    has[0] = 0;\n    for(int i = 0;i<n;i++) if(state&(1<<i)) has[++has[0]] = i;\n    if(has[0]==1) return ;\n    for(int now = state&(state-1);now;now = (now-1)&state){\n        if((now&(1<<has[1]))==0) continue;\n        sub[0] = 0;\n        for(int i = 1;i<=has[0];i++) if(now&(1<<has[i])) sub[++sub[0]] = has[i];\n        int cnt = 0;\n        for(int i = 1;i<=has[0];i++)\n            for(int j = 1;j<=sub[0];j++){\n                if(now&(1<<has[i])) continue;\n                cnt+=mat[has[i]][sub[j]];\n            }\n        dp[state]-=dp[now]*pow_p[cnt];\n    }\n}\nint main(){\n    init();\n    const int nouse = pow_2[n];\n    for(int i = 1;i<nouse;i++){\n        get(i);\n    }\n    printf(\"%.10f\\n\",dp[nouse-1]);\n    return 0;\n}\n```\n","source":"_posts/other_oj/UPCOJ9805.md","raw":"---\ntitle: UPCOJ 9805 Network Reliability\ndate:\t2018-12-03\nauthor:\t\"zuhiul\"\ntags:\n  - 状压DP\n---\n### 题目描述\nAn undirected graph is given. Each edge of the graph disappears with a constant probability. Calculate the probability with which the remained graph is connected.\n<!-- more -->\n\n### 输入\nThe first line contains three integers N (1≤N≤14), M (0≤M≤100) and P (0≤P≤100), separated by a single space. N is the number of the vertices and M is the number of the edges. P is the probability represented by a percentage.\n\nThe following M lines describe the edges. Each line contains two integers  $ v_i $  and $ u_i $ (1≤$ u_i $ ,$ v_i $≤N). ($ u_i $ ,$ v_i $) indicates the edge that connects the two vertices $ u_i $  and$  v_i $.\n\n### 输出\nOutput a line containing the probability with which the remained graph is connected. Your program may output an arbitrary number of digits after the decimal point. However, the absolute error should be  $10^{−9}$  or less.\n\n### 样例输入\n3 3 50\n\n1 2\n\n2 3\n\n3 1\n\n### 样例输出\n0.500000000000\n\n## 题意\nzuhiul 和不超过14 个妹子存在着不清不楚的关系，但是他发现，有些妹子们相互之间是闺蜜，所以这些是闺蜜的妹子们有 $P$ 的概率会发现对面和zuhiul有关系从而导致关系破裂，现在问你多大的概率下，大家相安无事(妹子们还是一个联通图)．\n\n## 分析\n数据量这么小，显然状压呀．\n\n所以我们定义\n\n$DP[i] 表示 state==i 时，i 包含的点相互联通的概率$\n\n那么比较容易得到答案就是\t$ DP[(1<<n)-1] $\n\n现在我们考虑转移：\n\n​\t因为要保证state内任意两点可达，所以我们不妨枚举出所有不可达的情况，容斥一下就行了．\n\n​\t所以每次对于一个state，我们可以枚举他的每个点的子集，然后对于其他点到这个集合都割掉就行了\n\n​\t你问我为什么不会重复和遗漏？\n\n​\t这就要用到神奇的构造了．\n\n​\t首先我们保证每个正确的点的子集里面都包含某一个点，那么对于包含这个点的所有正确子集来说肯定各不相同，这个保证了不会重复\n\n​\t然后怎么证明没有遗漏呢？\n\n​\t因为对于任何一个点来说，他都属于某一个联通块，我们实际上是在枚举每一个联通块，所以不会遗漏呀．\n\n​\t恩，大概就是这样，详情请看代码．\n\n​\t最后说一下复杂度．\n\n​\t应该是 $O(\\sum_{i = 1}^{n} C_n^i * 2^i) = O(3^n)$\n\n\n## 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\ndouble p;\ndouble pow_p[100];\nint pow_2[100];\nint mat[100][100];\nvoid init(){\n    scanf(\"%d%d%lf\",&n,&m,&p);\n    p/=100;\n    pow_2[0] = 1;\n    pow_p[0] = 1;\n    for(int i = 1;i<100;i++) pow_p[i] = pow_p[i-1]*p,pow_2[i] = pow_2[i-1]<<1;\n    for(int i = 1,from,to;i<=m;i++) {\n        scanf(\"%d%d\",&from,&to);\n        mat[--from][--to]++;\n        mat[to][from]++;\n    }\n}\nconst int maxm = 1<<15;\ndouble dp[maxm];\nint has[100];\nint sub[100];\nvoid get(int state){\n    dp[state] = 1;\n    has[0] = 0;\n    for(int i = 0;i<n;i++) if(state&(1<<i)) has[++has[0]] = i;\n    if(has[0]==1) return ;\n    for(int now = state&(state-1);now;now = (now-1)&state){\n        if((now&(1<<has[1]))==0) continue;\n        sub[0] = 0;\n        for(int i = 1;i<=has[0];i++) if(now&(1<<has[i])) sub[++sub[0]] = has[i];\n        int cnt = 0;\n        for(int i = 1;i<=has[0];i++)\n            for(int j = 1;j<=sub[0];j++){\n                if(now&(1<<has[i])) continue;\n                cnt+=mat[has[i]][sub[j]];\n            }\n        dp[state]-=dp[now]*pow_p[cnt];\n    }\n}\nint main(){\n    init();\n    const int nouse = pow_2[n];\n    for(int i = 1;i<nouse;i++){\n        get(i);\n    }\n    printf(\"%.10f\\n\",dp[nouse-1]);\n    return 0;\n}\n```\n","slug":"other_oj/UPCOJ9805","published":1,"updated":"2019-07-22T03:39:41.529Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1i0002ha613965mdjzs","content":"<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>An undirected graph is given. Each edge of the graph disappears with a constant probability. Calculate the probability with which the remained graph is connected.<br><a id=\"more\"></a></p>\n<h3 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h3><p>The first line contains three integers N (1≤N≤14), M (0≤M≤100) and P (0≤P≤100), separated by a single space. N is the number of the vertices and M is the number of the edges. P is the probability represented by a percentage.</p>\n<p>The following M lines describe the edges. Each line contains two integers  $ v_i $  and $ u_i $ (1≤$ u_i $ ,$ v_i $≤N). ($ u_i $ ,$ v_i $) indicates the edge that connects the two vertices $ u_i $  and$  v_i $.</p>\n<h3 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h3><p>Output a line containing the probability with which the remained graph is connected. Your program may output an arbitrary number of digits after the decimal point. However, the absolute error should be  $10^{−9}$  or less.</p>\n<h3 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h3><p>3 3 50</p>\n<p>1 2</p>\n<p>2 3</p>\n<p>3 1</p>\n<h3 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h3><p>0.500000000000</p>\n<h2 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h2><p>zuhiul 和不超过14 个妹子存在着不清不楚的关系，但是他发现，有些妹子们相互之间是闺蜜，所以这些是闺蜜的妹子们有 $P$ 的概率会发现对面和zuhiul有关系从而导致关系破裂，现在问你多大的概率下，大家相安无事(妹子们还是一个联通图)．</p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>数据量这么小，显然状压呀．</p>\n<p>所以我们定义</p>\n<p>$DP[i] 表示 state==i 时，i 包含的点相互联通的概率$</p>\n<p>那么比较容易得到答案就是    $ DP[(1&lt;&lt;n)-1] $</p>\n<p>现在我们考虑转移：</p>\n<p>​    因为要保证state内任意两点可达，所以我们不妨枚举出所有不可达的情况，容斥一下就行了．</p>\n<p>​    所以每次对于一个state，我们可以枚举他的每个点的子集，然后对于其他点到这个集合都割掉就行了</p>\n<p>​    你问我为什么不会重复和遗漏？</p>\n<p>​    这就要用到神奇的构造了．</p>\n<p>​    首先我们保证每个正确的点的子集里面都包含某一个点，那么对于包含这个点的所有正确子集来说肯定各不相同，这个保证了不会重复</p>\n<p>​    然后怎么证明没有遗漏呢？</p>\n<p>​    因为对于任何一个点来说，他都属于某一个联通块，我们实际上是在枚举每一个联通块，所以不会遗漏呀．</p>\n<p>​    恩，大概就是这样，详情请看代码．</p>\n<p>​    最后说一下复杂度．</p>\n<p>​    应该是 $O(\\sum_{i = 1}^{n} C_n^i * 2^i) = O(3^n)$</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\"><span class=\"keyword\">double</span> p;</span><br><span class=\"line\"><span class=\"keyword\">double</span> pow_p[<span class=\"number\">100</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> pow_2[<span class=\"number\">100</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> mat[<span class=\"number\">100</span>][<span class=\"number\">100</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d%lf\"</span>,&amp;n,&amp;m,&amp;p);</span><br><span class=\"line\">    p/=<span class=\"number\">100</span>;</span><br><span class=\"line\">    pow_2[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    pow_p[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;<span class=\"number\">100</span>;i++) pow_p[i] = pow_p[i<span class=\"number\">-1</span>]*p,pow_2[i] = pow_2[i<span class=\"number\">-1</span>]&lt;&lt;<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>,from,to;i&lt;=m;i++) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;from,&amp;to);</span><br><span class=\"line\">        mat[--from][--to]++;</span><br><span class=\"line\">        mat[to][from]++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">1</span>&lt;&lt;<span class=\"number\">15</span>;</span><br><span class=\"line\"><span class=\"keyword\">double</span> dp[maxm];</span><br><span class=\"line\"><span class=\"keyword\">int</span> has[<span class=\"number\">100</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> sub[<span class=\"number\">100</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">get</span><span class=\"params\">(<span class=\"keyword\">int</span> state)</span></span>&#123;</span><br><span class=\"line\">    dp[state] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    has[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;n;i++) <span class=\"keyword\">if</span>(state&amp;(<span class=\"number\">1</span>&lt;&lt;i)) has[++has[<span class=\"number\">0</span>]] = i;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(has[<span class=\"number\">0</span>]==<span class=\"number\">1</span>) <span class=\"keyword\">return</span> ;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> now = state&amp;(state<span class=\"number\">-1</span>);now;now = (now<span class=\"number\">-1</span>)&amp;state)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>((now&amp;(<span class=\"number\">1</span>&lt;&lt;has[<span class=\"number\">1</span>]))==<span class=\"number\">0</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        sub[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=has[<span class=\"number\">0</span>];i++) <span class=\"keyword\">if</span>(now&amp;(<span class=\"number\">1</span>&lt;&lt;has[i])) sub[++sub[<span class=\"number\">0</span>]] = has[i];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=has[<span class=\"number\">0</span>];i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>;j&lt;=sub[<span class=\"number\">0</span>];j++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(now&amp;(<span class=\"number\">1</span>&lt;&lt;has[i])) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                cnt+=mat[has[i]][sub[j]];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        dp[state]-=dp[now]*pow_p[cnt];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    init();</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> nouse = pow_2[n];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;nouse;i++)&#123;</span><br><span class=\"line\">        get(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%.10f\\n\"</span>,dp[nouse<span class=\"number\">-1</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>An undirected graph is given. Each edge of the graph disappears with a constant probability. Calculate the probability with which the remained graph is connected.<br>","more":"</p>\n<h3 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h3><p>The first line contains three integers N (1≤N≤14), M (0≤M≤100) and P (0≤P≤100), separated by a single space. N is the number of the vertices and M is the number of the edges. P is the probability represented by a percentage.</p>\n<p>The following M lines describe the edges. Each line contains two integers  $ v_i $  and $ u_i $ (1≤$ u_i $ ,$ v_i $≤N). ($ u_i $ ,$ v_i $) indicates the edge that connects the two vertices $ u_i $  and$  v_i $.</p>\n<h3 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h3><p>Output a line containing the probability with which the remained graph is connected. Your program may output an arbitrary number of digits after the decimal point. However, the absolute error should be  $10^{−9}$  or less.</p>\n<h3 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h3><p>3 3 50</p>\n<p>1 2</p>\n<p>2 3</p>\n<p>3 1</p>\n<h3 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h3><p>0.500000000000</p>\n<h2 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h2><p>zuhiul 和不超过14 个妹子存在着不清不楚的关系，但是他发现，有些妹子们相互之间是闺蜜，所以这些是闺蜜的妹子们有 $P$ 的概率会发现对面和zuhiul有关系从而导致关系破裂，现在问你多大的概率下，大家相安无事(妹子们还是一个联通图)．</p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>数据量这么小，显然状压呀．</p>\n<p>所以我们定义</p>\n<p>$DP[i] 表示 state==i 时，i 包含的点相互联通的概率$</p>\n<p>那么比较容易得到答案就是    $ DP[(1&lt;&lt;n)-1] $</p>\n<p>现在我们考虑转移：</p>\n<p>​    因为要保证state内任意两点可达，所以我们不妨枚举出所有不可达的情况，容斥一下就行了．</p>\n<p>​    所以每次对于一个state，我们可以枚举他的每个点的子集，然后对于其他点到这个集合都割掉就行了</p>\n<p>​    你问我为什么不会重复和遗漏？</p>\n<p>​    这就要用到神奇的构造了．</p>\n<p>​    首先我们保证每个正确的点的子集里面都包含某一个点，那么对于包含这个点的所有正确子集来说肯定各不相同，这个保证了不会重复</p>\n<p>​    然后怎么证明没有遗漏呢？</p>\n<p>​    因为对于任何一个点来说，他都属于某一个联通块，我们实际上是在枚举每一个联通块，所以不会遗漏呀．</p>\n<p>​    恩，大概就是这样，详情请看代码．</p>\n<p>​    最后说一下复杂度．</p>\n<p>​    应该是 $O(\\sum_{i = 1}^{n} C_n^i * 2^i) = O(3^n)$</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\"><span class=\"keyword\">double</span> p;</span><br><span class=\"line\"><span class=\"keyword\">double</span> pow_p[<span class=\"number\">100</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> pow_2[<span class=\"number\">100</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> mat[<span class=\"number\">100</span>][<span class=\"number\">100</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d%lf\"</span>,&amp;n,&amp;m,&amp;p);</span><br><span class=\"line\">    p/=<span class=\"number\">100</span>;</span><br><span class=\"line\">    pow_2[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    pow_p[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;<span class=\"number\">100</span>;i++) pow_p[i] = pow_p[i<span class=\"number\">-1</span>]*p,pow_2[i] = pow_2[i<span class=\"number\">-1</span>]&lt;&lt;<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>,from,to;i&lt;=m;i++) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;from,&amp;to);</span><br><span class=\"line\">        mat[--from][--to]++;</span><br><span class=\"line\">        mat[to][from]++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">1</span>&lt;&lt;<span class=\"number\">15</span>;</span><br><span class=\"line\"><span class=\"keyword\">double</span> dp[maxm];</span><br><span class=\"line\"><span class=\"keyword\">int</span> has[<span class=\"number\">100</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> sub[<span class=\"number\">100</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">get</span><span class=\"params\">(<span class=\"keyword\">int</span> state)</span></span>&#123;</span><br><span class=\"line\">    dp[state] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    has[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;n;i++) <span class=\"keyword\">if</span>(state&amp;(<span class=\"number\">1</span>&lt;&lt;i)) has[++has[<span class=\"number\">0</span>]] = i;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(has[<span class=\"number\">0</span>]==<span class=\"number\">1</span>) <span class=\"keyword\">return</span> ;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> now = state&amp;(state<span class=\"number\">-1</span>);now;now = (now<span class=\"number\">-1</span>)&amp;state)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>((now&amp;(<span class=\"number\">1</span>&lt;&lt;has[<span class=\"number\">1</span>]))==<span class=\"number\">0</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        sub[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=has[<span class=\"number\">0</span>];i++) <span class=\"keyword\">if</span>(now&amp;(<span class=\"number\">1</span>&lt;&lt;has[i])) sub[++sub[<span class=\"number\">0</span>]] = has[i];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=has[<span class=\"number\">0</span>];i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>;j&lt;=sub[<span class=\"number\">0</span>];j++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(now&amp;(<span class=\"number\">1</span>&lt;&lt;has[i])) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                cnt+=mat[has[i]][sub[j]];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        dp[state]-=dp[now]*pow_p[cnt];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    init();</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> nouse = pow_2[n];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;nouse;i++)&#123;</span><br><span class=\"line\">        get(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%.10f\\n\"</span>,dp[nouse<span class=\"number\">-1</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"面试","date":"2019-02-20T16:00:00.000Z","author":"zuhiul","_content":"\n\n## 头条面试回忆录\n\n### 废话\n\n这两天参加了头条的面试,总体来说,感觉不错,公司效率很高...\n<!-- more -->\n\n### 一面\n\n当天上午投的简历,下午让我第二天面试,时间很紧,很多东西都没来得及准备....\n\n1.自我介绍一下(balabalabala)\n\n2.学过操作系统和计算机网络吗?(网络学了,操作系统下学期开,其实我很想说操作系统自学了,您可以问......)\n\n3.说一下tcp和udp的区别(balabalabala)\n\n- 2.1那个快?为什么?(udp快,因为三次握手四次挥手会占用cpu时间?)\n- 2.2去掉三次握手四次挥手那个快?(不知道)\n\n4.写两个题吧\n\n- 3.1 给你一个数字矩阵,每行每列都是增序,问你某个值是否存在(剑指offer原题,我100%做过,但是我忘了怎么做的,只知道从角上枚举,然后先说了一下从右下角枚举,说不对,然后换成右上角,没啥问题....)\n- 3.2 给一个矩阵,四联通,找到一个最长上升子序列(简单dp,写完就过了)\n  - 3.2.1 能把路径输出一下吗?(记录前驱....)\n  - 3.2.2 能把前驱数组去掉吗?(可以,瞎搞一下就行了.....)\n  \n4.闲聊(emmmmm)\n\n### 二面\n\n二面感觉更严格,感觉答的不好.....\n\n1.自我介绍(balabalabala)\n\n2.有什么数据结构可以做到查询和插入都是o(1)的?(第一反映,显然不可能啊,这不是不可调和的矛盾吗?面试官说:知道hash吗?哇,感觉被鄙视了,确实傻了)\n\n3.给你n个有序链表(从大到小),怎么找到这n个链表的前K大,(先取出每个链表的最大,然后建最大堆,然后每次取出堆顶,然后取出对应链表的后续元素,加入堆,然后一次操作,直到有k个元素)\n\n- 3.1 复杂度多少?(o(n+klogn))\n- 3.2 n是怎么来的?(建堆时间)\n- 3.3 能证明一下吗?(假设堆是用类树状数组的结构维护,先把数据随机放进来,然后每次从大到小枚举一个下标ind,比较当前位置ind和(ind>>1),然后根据大小关系交换一下,可以证明每次都是两个数比较,并且最多有n次比较,所以o(n))\n\n4.写两个题吧\n\n- 2.1 给你一个字典,给你一个询问串,问你能否用字典中的某些单词(每个单词只能用一次),构成询问串.(想复杂了,一直在想怎么优化,后来才知道直接暴力就行,我当时还傻乎乎的用了lower_bound企图缩小范围,结果返回结果还死活不对,搞了30分钟才搞定,感觉要凉)\n- 2.2 可能是看我太菜,没问第二道题,感觉好像对我不感兴趣就溜了???\n\n### 三面\n\n不知道自己怎么活过二面的.......\n\n1.聊天,纯聊天,可能是怕我太紧张,感觉面试官很好\n\n2.提出自我介绍被拒绝.......\n\n3.简单说一下项目,(也不用详细说,因为项目就是很简单......)\n\n4.有啥很厉害的技术要说明的吗?(没有......)\n\n5.我们写两个题吧\n\n- 5.1 给你一个无根树,让你转化成有根树,使得树的深度最小(一眼直径的中点,写了一下,好像有点问题,我问他我是调一下还是?他说不用调了,想法没啥大问题)\n- 5.2 初始位置0,速度1,两个操作\n  - 1.position+=spead,spead*=2\n  - 2.spead>0,spead = -1;else spead = 1\n  - 问你最少操作几次,使得,从0到x\n  - 我第一想法二进制拆分,然后瞎搞,写了一下,没啥大问题\n  - 复杂度?(32^2?)\n  - 怎么证明,我说每次考虑最高位的1,然后瞎搞一下balabalabala\n  - 说正解是dp,比我复杂,emmmmm........\n\n6.浏览器输入baidu.com会发生啥?(balabalabala,昨天看过,不知道说的对不对)\n\n7.你有啥觉得自己的技术亮点要说吗?(感觉瞎bb都能加分,但是我怂,老老实实说自己没啥技能点......)\n\n8.你想过一些大的厂商,背后的技术部门都是怎么运行的吗?(不知道........)\n\n9.面试官可能觉得没啥聊的了,就放我走了......\n\n### 总结\n\n总的来说,面试官还是很和蔼的,有些问题还会引导你向正确的方向思考,问题都不难,好好准备应该好过,就这样吧.......\n","source":"_posts/gluten/gluten_tt.md","raw":"---\ntitle: 面试\ndate: 2019-02-21\nauthor: \"zuhiul\"\ntags:\n  - 面试\n---\n\n\n## 头条面试回忆录\n\n### 废话\n\n这两天参加了头条的面试,总体来说,感觉不错,公司效率很高...\n<!-- more -->\n\n### 一面\n\n当天上午投的简历,下午让我第二天面试,时间很紧,很多东西都没来得及准备....\n\n1.自我介绍一下(balabalabala)\n\n2.学过操作系统和计算机网络吗?(网络学了,操作系统下学期开,其实我很想说操作系统自学了,您可以问......)\n\n3.说一下tcp和udp的区别(balabalabala)\n\n- 2.1那个快?为什么?(udp快,因为三次握手四次挥手会占用cpu时间?)\n- 2.2去掉三次握手四次挥手那个快?(不知道)\n\n4.写两个题吧\n\n- 3.1 给你一个数字矩阵,每行每列都是增序,问你某个值是否存在(剑指offer原题,我100%做过,但是我忘了怎么做的,只知道从角上枚举,然后先说了一下从右下角枚举,说不对,然后换成右上角,没啥问题....)\n- 3.2 给一个矩阵,四联通,找到一个最长上升子序列(简单dp,写完就过了)\n  - 3.2.1 能把路径输出一下吗?(记录前驱....)\n  - 3.2.2 能把前驱数组去掉吗?(可以,瞎搞一下就行了.....)\n  \n4.闲聊(emmmmm)\n\n### 二面\n\n二面感觉更严格,感觉答的不好.....\n\n1.自我介绍(balabalabala)\n\n2.有什么数据结构可以做到查询和插入都是o(1)的?(第一反映,显然不可能啊,这不是不可调和的矛盾吗?面试官说:知道hash吗?哇,感觉被鄙视了,确实傻了)\n\n3.给你n个有序链表(从大到小),怎么找到这n个链表的前K大,(先取出每个链表的最大,然后建最大堆,然后每次取出堆顶,然后取出对应链表的后续元素,加入堆,然后一次操作,直到有k个元素)\n\n- 3.1 复杂度多少?(o(n+klogn))\n- 3.2 n是怎么来的?(建堆时间)\n- 3.3 能证明一下吗?(假设堆是用类树状数组的结构维护,先把数据随机放进来,然后每次从大到小枚举一个下标ind,比较当前位置ind和(ind>>1),然后根据大小关系交换一下,可以证明每次都是两个数比较,并且最多有n次比较,所以o(n))\n\n4.写两个题吧\n\n- 2.1 给你一个字典,给你一个询问串,问你能否用字典中的某些单词(每个单词只能用一次),构成询问串.(想复杂了,一直在想怎么优化,后来才知道直接暴力就行,我当时还傻乎乎的用了lower_bound企图缩小范围,结果返回结果还死活不对,搞了30分钟才搞定,感觉要凉)\n- 2.2 可能是看我太菜,没问第二道题,感觉好像对我不感兴趣就溜了???\n\n### 三面\n\n不知道自己怎么活过二面的.......\n\n1.聊天,纯聊天,可能是怕我太紧张,感觉面试官很好\n\n2.提出自我介绍被拒绝.......\n\n3.简单说一下项目,(也不用详细说,因为项目就是很简单......)\n\n4.有啥很厉害的技术要说明的吗?(没有......)\n\n5.我们写两个题吧\n\n- 5.1 给你一个无根树,让你转化成有根树,使得树的深度最小(一眼直径的中点,写了一下,好像有点问题,我问他我是调一下还是?他说不用调了,想法没啥大问题)\n- 5.2 初始位置0,速度1,两个操作\n  - 1.position+=spead,spead*=2\n  - 2.spead>0,spead = -1;else spead = 1\n  - 问你最少操作几次,使得,从0到x\n  - 我第一想法二进制拆分,然后瞎搞,写了一下,没啥大问题\n  - 复杂度?(32^2?)\n  - 怎么证明,我说每次考虑最高位的1,然后瞎搞一下balabalabala\n  - 说正解是dp,比我复杂,emmmmm........\n\n6.浏览器输入baidu.com会发生啥?(balabalabala,昨天看过,不知道说的对不对)\n\n7.你有啥觉得自己的技术亮点要说吗?(感觉瞎bb都能加分,但是我怂,老老实实说自己没啥技能点......)\n\n8.你想过一些大的厂商,背后的技术部门都是怎么运行的吗?(不知道........)\n\n9.面试官可能觉得没啥聊的了,就放我走了......\n\n### 总结\n\n总的来说,面试官还是很和蔼的,有些问题还会引导你向正确的方向思考,问题都不难,好好准备应该好过,就这样吧.......\n","slug":"gluten/gluten_tt","published":1,"updated":"2019-04-14T08:32:10.608Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1i4002ja6137ef38w5z","content":"<h2 id=\"头条面试回忆录\"><a href=\"#头条面试回忆录\" class=\"headerlink\" title=\"头条面试回忆录\"></a>头条面试回忆录</h2><h3 id=\"废话\"><a href=\"#废话\" class=\"headerlink\" title=\"废话\"></a>废话</h3><p>这两天参加了头条的面试,总体来说,感觉不错,公司效率很高…<br><a id=\"more\"></a></p>\n<h3 id=\"一面\"><a href=\"#一面\" class=\"headerlink\" title=\"一面\"></a>一面</h3><p>当天上午投的简历,下午让我第二天面试,时间很紧,很多东西都没来得及准备….</p>\n<p>1.自我介绍一下(balabalabala)</p>\n<p>2.学过操作系统和计算机网络吗?(网络学了,操作系统下学期开,其实我很想说操作系统自学了,您可以问……)</p>\n<p>3.说一下tcp和udp的区别(balabalabala)</p>\n<ul>\n<li>2.1那个快?为什么?(udp快,因为三次握手四次挥手会占用cpu时间?)</li>\n<li>2.2去掉三次握手四次挥手那个快?(不知道)</li>\n</ul>\n<p>4.写两个题吧</p>\n<ul>\n<li>3.1 给你一个数字矩阵,每行每列都是增序,问你某个值是否存在(剑指offer原题,我100%做过,但是我忘了怎么做的,只知道从角上枚举,然后先说了一下从右下角枚举,说不对,然后换成右上角,没啥问题….)</li>\n<li>3.2 给一个矩阵,四联通,找到一个最长上升子序列(简单dp,写完就过了)<ul>\n<li>3.2.1 能把路径输出一下吗?(记录前驱….)</li>\n<li>3.2.2 能把前驱数组去掉吗?(可以,瞎搞一下就行了…..)</li>\n</ul>\n</li>\n</ul>\n<p>4.闲聊(emmmmm)</p>\n<h3 id=\"二面\"><a href=\"#二面\" class=\"headerlink\" title=\"二面\"></a>二面</h3><p>二面感觉更严格,感觉答的不好…..</p>\n<p>1.自我介绍(balabalabala)</p>\n<p>2.有什么数据结构可以做到查询和插入都是o(1)的?(第一反映,显然不可能啊,这不是不可调和的矛盾吗?面试官说:知道hash吗?哇,感觉被鄙视了,确实傻了)</p>\n<p>3.给你n个有序链表(从大到小),怎么找到这n个链表的前K大,(先取出每个链表的最大,然后建最大堆,然后每次取出堆顶,然后取出对应链表的后续元素,加入堆,然后一次操作,直到有k个元素)</p>\n<ul>\n<li>3.1 复杂度多少?(o(n+klogn))</li>\n<li>3.2 n是怎么来的?(建堆时间)</li>\n<li>3.3 能证明一下吗?(假设堆是用类树状数组的结构维护,先把数据随机放进来,然后每次从大到小枚举一个下标ind,比较当前位置ind和(ind&gt;&gt;1),然后根据大小关系交换一下,可以证明每次都是两个数比较,并且最多有n次比较,所以o(n))</li>\n</ul>\n<p>4.写两个题吧</p>\n<ul>\n<li>2.1 给你一个字典,给你一个询问串,问你能否用字典中的某些单词(每个单词只能用一次),构成询问串.(想复杂了,一直在想怎么优化,后来才知道直接暴力就行,我当时还傻乎乎的用了lower_bound企图缩小范围,结果返回结果还死活不对,搞了30分钟才搞定,感觉要凉)</li>\n<li>2.2 可能是看我太菜,没问第二道题,感觉好像对我不感兴趣就溜了???</li>\n</ul>\n<h3 id=\"三面\"><a href=\"#三面\" class=\"headerlink\" title=\"三面\"></a>三面</h3><p>不知道自己怎么活过二面的…….</p>\n<p>1.聊天,纯聊天,可能是怕我太紧张,感觉面试官很好</p>\n<p>2.提出自我介绍被拒绝…….</p>\n<p>3.简单说一下项目,(也不用详细说,因为项目就是很简单……)</p>\n<p>4.有啥很厉害的技术要说明的吗?(没有……)</p>\n<p>5.我们写两个题吧</p>\n<ul>\n<li>5.1 给你一个无根树,让你转化成有根树,使得树的深度最小(一眼直径的中点,写了一下,好像有点问题,我问他我是调一下还是?他说不用调了,想法没啥大问题)</li>\n<li>5.2 初始位置0,速度1,两个操作<ul>\n<li>1.position+=spead,spead*=2</li>\n<li>2.spead&gt;0,spead = -1;else spead = 1</li>\n<li>问你最少操作几次,使得,从0到x</li>\n<li>我第一想法二进制拆分,然后瞎搞,写了一下,没啥大问题</li>\n<li>复杂度?(32^2?)</li>\n<li>怎么证明,我说每次考虑最高位的1,然后瞎搞一下balabalabala</li>\n<li>说正解是dp,比我复杂,emmmmm……..</li>\n</ul>\n</li>\n</ul>\n<p>6.浏览器输入baidu.com会发生啥?(balabalabala,昨天看过,不知道说的对不对)</p>\n<p>7.你有啥觉得自己的技术亮点要说吗?(感觉瞎bb都能加分,但是我怂,老老实实说自己没啥技能点……)</p>\n<p>8.你想过一些大的厂商,背后的技术部门都是怎么运行的吗?(不知道……..)</p>\n<p>9.面试官可能觉得没啥聊的了,就放我走了……</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>总的来说,面试官还是很和蔼的,有些问题还会引导你向正确的方向思考,问题都不难,好好准备应该好过,就这样吧…….</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"头条面试回忆录\"><a href=\"#头条面试回忆录\" class=\"headerlink\" title=\"头条面试回忆录\"></a>头条面试回忆录</h2><h3 id=\"废话\"><a href=\"#废话\" class=\"headerlink\" title=\"废话\"></a>废话</h3><p>这两天参加了头条的面试,总体来说,感觉不错,公司效率很高…<br>","more":"</p>\n<h3 id=\"一面\"><a href=\"#一面\" class=\"headerlink\" title=\"一面\"></a>一面</h3><p>当天上午投的简历,下午让我第二天面试,时间很紧,很多东西都没来得及准备….</p>\n<p>1.自我介绍一下(balabalabala)</p>\n<p>2.学过操作系统和计算机网络吗?(网络学了,操作系统下学期开,其实我很想说操作系统自学了,您可以问……)</p>\n<p>3.说一下tcp和udp的区别(balabalabala)</p>\n<ul>\n<li>2.1那个快?为什么?(udp快,因为三次握手四次挥手会占用cpu时间?)</li>\n<li>2.2去掉三次握手四次挥手那个快?(不知道)</li>\n</ul>\n<p>4.写两个题吧</p>\n<ul>\n<li>3.1 给你一个数字矩阵,每行每列都是增序,问你某个值是否存在(剑指offer原题,我100%做过,但是我忘了怎么做的,只知道从角上枚举,然后先说了一下从右下角枚举,说不对,然后换成右上角,没啥问题….)</li>\n<li>3.2 给一个矩阵,四联通,找到一个最长上升子序列(简单dp,写完就过了)<ul>\n<li>3.2.1 能把路径输出一下吗?(记录前驱….)</li>\n<li>3.2.2 能把前驱数组去掉吗?(可以,瞎搞一下就行了…..)</li>\n</ul>\n</li>\n</ul>\n<p>4.闲聊(emmmmm)</p>\n<h3 id=\"二面\"><a href=\"#二面\" class=\"headerlink\" title=\"二面\"></a>二面</h3><p>二面感觉更严格,感觉答的不好…..</p>\n<p>1.自我介绍(balabalabala)</p>\n<p>2.有什么数据结构可以做到查询和插入都是o(1)的?(第一反映,显然不可能啊,这不是不可调和的矛盾吗?面试官说:知道hash吗?哇,感觉被鄙视了,确实傻了)</p>\n<p>3.给你n个有序链表(从大到小),怎么找到这n个链表的前K大,(先取出每个链表的最大,然后建最大堆,然后每次取出堆顶,然后取出对应链表的后续元素,加入堆,然后一次操作,直到有k个元素)</p>\n<ul>\n<li>3.1 复杂度多少?(o(n+klogn))</li>\n<li>3.2 n是怎么来的?(建堆时间)</li>\n<li>3.3 能证明一下吗?(假设堆是用类树状数组的结构维护,先把数据随机放进来,然后每次从大到小枚举一个下标ind,比较当前位置ind和(ind&gt;&gt;1),然后根据大小关系交换一下,可以证明每次都是两个数比较,并且最多有n次比较,所以o(n))</li>\n</ul>\n<p>4.写两个题吧</p>\n<ul>\n<li>2.1 给你一个字典,给你一个询问串,问你能否用字典中的某些单词(每个单词只能用一次),构成询问串.(想复杂了,一直在想怎么优化,后来才知道直接暴力就行,我当时还傻乎乎的用了lower_bound企图缩小范围,结果返回结果还死活不对,搞了30分钟才搞定,感觉要凉)</li>\n<li>2.2 可能是看我太菜,没问第二道题,感觉好像对我不感兴趣就溜了???</li>\n</ul>\n<h3 id=\"三面\"><a href=\"#三面\" class=\"headerlink\" title=\"三面\"></a>三面</h3><p>不知道自己怎么活过二面的…….</p>\n<p>1.聊天,纯聊天,可能是怕我太紧张,感觉面试官很好</p>\n<p>2.提出自我介绍被拒绝…….</p>\n<p>3.简单说一下项目,(也不用详细说,因为项目就是很简单……)</p>\n<p>4.有啥很厉害的技术要说明的吗?(没有……)</p>\n<p>5.我们写两个题吧</p>\n<ul>\n<li>5.1 给你一个无根树,让你转化成有根树,使得树的深度最小(一眼直径的中点,写了一下,好像有点问题,我问他我是调一下还是?他说不用调了,想法没啥大问题)</li>\n<li>5.2 初始位置0,速度1,两个操作<ul>\n<li>1.position+=spead,spead*=2</li>\n<li>2.spead&gt;0,spead = -1;else spead = 1</li>\n<li>问你最少操作几次,使得,从0到x</li>\n<li>我第一想法二进制拆分,然后瞎搞,写了一下,没啥大问题</li>\n<li>复杂度?(32^2?)</li>\n<li>怎么证明,我说每次考虑最高位的1,然后瞎搞一下balabalabala</li>\n<li>说正解是dp,比我复杂,emmmmm……..</li>\n</ul>\n</li>\n</ul>\n<p>6.浏览器输入baidu.com会发生啥?(balabalabala,昨天看过,不知道说的对不对)</p>\n<p>7.你有啥觉得自己的技术亮点要说吗?(感觉瞎bb都能加分,但是我怂,老老实实说自己没啥技能点……)</p>\n<p>8.你想过一些大的厂商,背后的技术部门都是怎么运行的吗?(不知道……..)</p>\n<p>9.面试官可能觉得没啥聊的了,就放我走了……</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>总的来说,面试官还是很和蔼的,有些问题还会引导你向正确的方向思考,问题都不难,好好准备应该好过,就这样吧…….</p>"},{"title":"mac下监听全局键盘输入","date":"2019-08-03T16:00:00.000Z","author":"zuhiul","_content":"\n因为这段时间终于狠下心来买了把键盘。然后这两天脑子里面全是如何统计键盘敲击次数，在我踩了几个坑之后，终于搞定了，这里总结一下。\n\n首先就是mac下不支持pyhook，貌似，所以只能用pynput来瞎搞。安装各种依赖就不说了。\n\n首先一个坑点就是，mac为了安全考虑，拒绝一般的程序监听键盘和鼠标等外设的输入。\n\n然后我就想办法给python权限，“系统偏好设置->安全性与隐私->完全磁盘访问权限”，给权限整上了，但是我发现一个比较尴尬的事是：依然是跑不起来。然后就各种寻求帮助。\n\n后来发现是要在sudo下运行，我试了一下，还是不行。\n\n最后才发现，需要的权限名字不叫“完全磁盘访问权限”，而是“辅助功能”，服了。我的理解是：你丫都有完全的磁盘访问权限了，还没有辅助功能？开玩笑呢？\n\n啊，我死了。\n\n这里贴上我抄的代码\n\n```python\nfrom pynput import keyboard\n\n\ndef on_press(key):\n    with open('out', 'a+') as f:\n        try:\n            f.write(str(key.char) + '\\n')\n        except AttributeError:\n            f.write(str(key) + '\\n')\n        f.close()\n\n\ndef on_release(key):\n    pass\n\n\n# Collect events until released\nwith keyboard.Listener(\n        on_press=on_press,\n        on_release=on_release) as listener:\n    listener.join()\n```\n","source":"_posts/skill/mac_keyboard_monitor.md","raw":"---\ntitle: mac下监听全局键盘输入\ndate: 2019-08-04\nauthor: \"zuhiul\"\ntags:\n  - 体验优化\n---\n\n因为这段时间终于狠下心来买了把键盘。然后这两天脑子里面全是如何统计键盘敲击次数，在我踩了几个坑之后，终于搞定了，这里总结一下。\n\n首先就是mac下不支持pyhook，貌似，所以只能用pynput来瞎搞。安装各种依赖就不说了。\n\n首先一个坑点就是，mac为了安全考虑，拒绝一般的程序监听键盘和鼠标等外设的输入。\n\n然后我就想办法给python权限，“系统偏好设置->安全性与隐私->完全磁盘访问权限”，给权限整上了，但是我发现一个比较尴尬的事是：依然是跑不起来。然后就各种寻求帮助。\n\n后来发现是要在sudo下运行，我试了一下，还是不行。\n\n最后才发现，需要的权限名字不叫“完全磁盘访问权限”，而是“辅助功能”，服了。我的理解是：你丫都有完全的磁盘访问权限了，还没有辅助功能？开玩笑呢？\n\n啊，我死了。\n\n这里贴上我抄的代码\n\n```python\nfrom pynput import keyboard\n\n\ndef on_press(key):\n    with open('out', 'a+') as f:\n        try:\n            f.write(str(key.char) + '\\n')\n        except AttributeError:\n            f.write(str(key) + '\\n')\n        f.close()\n\n\ndef on_release(key):\n    pass\n\n\n# Collect events until released\nwith keyboard.Listener(\n        on_press=on_press,\n        on_release=on_release) as listener:\n    listener.join()\n```\n","slug":"skill/mac_keyboard_monitor","published":1,"updated":"2019-08-04T08:39:31.249Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1i5002la6131oxwomql","content":"<p>因为这段时间终于狠下心来买了把键盘。然后这两天脑子里面全是如何统计键盘敲击次数，在我踩了几个坑之后，终于搞定了，这里总结一下。</p>\n<p>首先就是mac下不支持pyhook，貌似，所以只能用pynput来瞎搞。安装各种依赖就不说了。</p>\n<p>首先一个坑点就是，mac为了安全考虑，拒绝一般的程序监听键盘和鼠标等外设的输入。</p>\n<p>然后我就想办法给python权限，“系统偏好设置-&gt;安全性与隐私-&gt;完全磁盘访问权限”，给权限整上了，但是我发现一个比较尴尬的事是：依然是跑不起来。然后就各种寻求帮助。</p>\n<p>后来发现是要在sudo下运行，我试了一下，还是不行。</p>\n<p>最后才发现，需要的权限名字不叫“完全磁盘访问权限”，而是“辅助功能”，服了。我的理解是：你丫都有完全的磁盘访问权限了，还没有辅助功能？开玩笑呢？</p>\n<p>啊，我死了。</p>\n<p>这里贴上我抄的代码</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pynput <span class=\"keyword\">import</span> keyboard</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">on_press</span><span class=\"params\">(key)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> open(<span class=\"string\">'out'</span>, <span class=\"string\">'a+'</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            f.write(str(key.char) + <span class=\"string\">'\\n'</span>)</span><br><span class=\"line\">        <span class=\"keyword\">except</span> AttributeError:</span><br><span class=\"line\">            f.write(str(key) + <span class=\"string\">'\\n'</span>)</span><br><span class=\"line\">        f.close()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">on_release</span><span class=\"params\">(key)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Collect events until released</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> keyboard.Listener(</span><br><span class=\"line\">        on_press=on_press,</span><br><span class=\"line\">        on_release=on_release) <span class=\"keyword\">as</span> listener:</span><br><span class=\"line\">    listener.join()</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>因为这段时间终于狠下心来买了把键盘。然后这两天脑子里面全是如何统计键盘敲击次数，在我踩了几个坑之后，终于搞定了，这里总结一下。</p>\n<p>首先就是mac下不支持pyhook，貌似，所以只能用pynput来瞎搞。安装各种依赖就不说了。</p>\n<p>首先一个坑点就是，mac为了安全考虑，拒绝一般的程序监听键盘和鼠标等外设的输入。</p>\n<p>然后我就想办法给python权限，“系统偏好设置-&gt;安全性与隐私-&gt;完全磁盘访问权限”，给权限整上了，但是我发现一个比较尴尬的事是：依然是跑不起来。然后就各种寻求帮助。</p>\n<p>后来发现是要在sudo下运行，我试了一下，还是不行。</p>\n<p>最后才发现，需要的权限名字不叫“完全磁盘访问权限”，而是“辅助功能”，服了。我的理解是：你丫都有完全的磁盘访问权限了，还没有辅助功能？开玩笑呢？</p>\n<p>啊，我死了。</p>\n<p>这里贴上我抄的代码</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pynput <span class=\"keyword\">import</span> keyboard</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">on_press</span><span class=\"params\">(key)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> open(<span class=\"string\">'out'</span>, <span class=\"string\">'a+'</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            f.write(str(key.char) + <span class=\"string\">'\\n'</span>)</span><br><span class=\"line\">        <span class=\"keyword\">except</span> AttributeError:</span><br><span class=\"line\">            f.write(str(key) + <span class=\"string\">'\\n'</span>)</span><br><span class=\"line\">        f.close()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">on_release</span><span class=\"params\">(key)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Collect events until released</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> keyboard.Listener(</span><br><span class=\"line\">        on_press=on_press,</span><br><span class=\"line\">        on_release=on_release) <span class=\"keyword\">as</span> listener:</span><br><span class=\"line\">    listener.join()</span><br></pre></td></tr></table></figure>\n"},{"title":"Codeforces Round 551","date":"2019-04-13T16:00:00.000Z","author":"zuhiul","_content":"\n## A. Serval and Bus\n\n[开启传送门](http://codeforces.com/contest/1153/problem/A)\n\n<!-- more -->\n\n### 题目描述\nIt is raining heavily. But this is the first day for Serval, who just became 3 years old, to go to the kindergarten. Unfortunately, he lives far from kindergarten, and his father is too busy to drive him there. The only choice for this poor little boy is to wait for a bus on this rainy day. Under such circumstances, the poor boy will use the first bus he sees no matter where it goes. If several buses come at the same time, he will choose one randomly.\n\nServal will go to the bus station at time $t$, and there are $n$ bus routes which stop at this station. For the $i$-th bus route, the first bus arrives at time $s_i$ minutes, and each bus of this route comes $d_i$ minutes later than the previous one.\n\nAs Serval's best friend, you wonder which bus route will he get on. If several buses arrive at the same time, you can print any of them.\n\n### Input\nThe first line contains two space-separated integers $n$ and $t$ (1≤$n$≤100, 1≤$t$≤$10^5$) $-$ the number of bus routes and the time Serval goes to the station.\n\nEach of the next $n$ lines contains two space-separated integers $s_i$ and $d_i$ (1≤$s_i,d_i$≤$10^5$) $-$ the time when the first bus of this route arrives and the interval between two buses of this route.\n\n### Output\nPrint one number $-$ what bus route Serval will use. If there are several possible answers, you can print any of them.\n\n### Examples\n\n#### input1\n2 2\n\n6 4\n\n9 5\n\n#### output1\n\n1\n\n#### input2\n\n5 5\n\n3 3\n\n2 5\n\n5 6\n\n4 9\n\n6 1\n\n#### output2\n\n3\n\n#### input3\n\n3 7\n\n2 2\n\n2 3\n\n2 4\n\n#### output3\n\n1\n\n### 题意\n\nzuhiul很忙，他要约妹子，他一共有$n$个妹子要约，但是他$t$天后才有空，妹子们也不是每天都有时间，但是妹子都是周期性有时间，比如，第$i$个妹子，$s_i$天之后才有时间，而且每$d_i$天就会再次出线，现在问你，zuhiul最早会和哪个妹子约会，如果会和多个妹子约会，只需要输出任意一个妹子就行了。\n\n### 分析\n\n只需要枚举每个妹子，然后看一下这个妹子什么时候最早可以邀约，然后算一下min就可以了\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxm = 105;\nint s[maxm],d[maxm];\nint main(){\n\tint n,t;\n\tcin>>n>>t;\n\tint ind,sum = 1e8;\n\tfor(int i = 1;i<=n;i++){\n\t\tcin>>s[i]>>d[i];\n\t\tif(s[i]>=t){\n\t\t\tif(sum>s[i]){\n\t\t\t\tsum = s[i];\n\t\t\t\tind = i;\n\t\t\t}\n\t\t}else {\n\t\t\tint nee = t-s[i];\n\t\t\tif(nee%d[i]!=0) nee = (nee/d[i]+1)*d[i];\n\t\t\tnee+=s[i];\n\t\t\tif(nee<sum){\n\t\t\t\tsum = nee;\n\t\t\t\tind = i;\n\t\t\t}\n\t\t}\n\t}\n\tcout<<ind<<endl;\n\treturn 0;\n}\n```\n\n## B. Serval and Toy Bricks\n\n[开启传送门](http://codeforces.com/contest/1153/problem/B)\n\n### 题目描述\nLuckily, Serval got onto the right bus, and he came to the kindergarten on time. After coming to kindergarten, he found the toy bricks very funny.\n\nHe has a special interest to create difficult problems for others to solve. This time, with many $1\\times 1\\times 1$ toy bricks, he builds up a 3-dimensional object. We can describe this object with a $n\\times m$ matrix, such that in each cell $(i,j)$ , there are $h_{i,j}$ bricks standing on the top of each other.\n\nHowever, Serval doesn't give you any $h_{i,j}$, and just give you the front view, left view, and the top view of this object, and he is now asking you to restore the object. Note that in the front view, there are $m$ columns, and in the $i$-th of them, the height is the maximum of $h_{1,i},h_{2,i},\\dots,h_{n,i}$. It is similar for the left view, where there are $n$ columns. And in the top view, there is an 𝑛×𝑚 matrix $t_{i,j}$, where $t_{i,j}$ is 0 or 1. If $t_{i,j}$ equals 1, that means $h_{i,j}$>0, otherwise, $h_{i,j}$=0.\n\nHowever, Serval is very lonely because others are bored about his unsolvable problems before, and refused to solve this one, although this time he promises there will be at least one object satisfying all the views. As his best friend, can you have a try?\n### Input\nThe first line contains two space-separated integers $n$ and $t$ (1≤$n$≤100, 1≤$t$≤$10^5$) $-$ the number of bus routes and the time Serval goes to the station.\n\nEach of the next $n$ lines contains two space-separated integers $s_i$ and $d_i$ (1≤$s_i,d_i$≤$10^5$) $-$ the time when the first bus of this route arrives and the interval between two buses of this route.\n\n### Output\nPrint one number $-$ what bus route Serval will use. If there are several possible answers, you can print any of them.\n\n### Examples\n\n#### input1\n\n3 7 3\n\n2 3 0 0 2 0 1\n\n2 1 3\n\n1 0 0 0 1 0 0\n\n0 0 0 0 0 0 1\n\n1 1 0 0 0 0 0\n\n#### output1\n\n1 0 0 0 2 0 0\n\n0 0 0 0 0 0 1\n\n2 3 0 0 0 0 0\n\n#### input2\n\n4 5 5\n\n3 5 2 0 4\n\n4 2 5 4\n\n0 0 0 0 1\n\n1 0 1 0 0\n\n0 1 0 0 0\n\n1 1 1 0 0\n\n#### output2\n\n0 0 0 0 4\n\n1 0 2 0 0\n\n0 5 0 0 0\n\n3 4 1 0 0\n\n### Note\n\n![](/img/cf_1153_b_1.png)\n\nThe graph above illustrates the object in the first example.\n\n![](/img/cf_1153_b_2.png)\n\nThe first graph illustrates the object in the example output for the second example, and the second graph shows the three-view drawing of it.\n\n### 题意\n\nzuhiul和妹子玩游戏，妹子搭了一个积木，然后zuhiul猜积木长啥样，zuhiul必然不会，于是小姐姐放过了他，告诉了他现在的主视图，侧视图和俯视图，然后让zuhiul猜，zuhiul还是不会，但是为了脸面不能说不会，然后来问你了。你需要输出一种可能的解满足这个三视图。\n\n### 分析\n\n告诉了主视图和左视图，相当于限制了最大值，告诉俯视图相当于告诉哪里可能有方块。然后枚举俯视图的每个位置，输出答案即可。\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nconst int maxm = 105;\nint hang[maxm],lie[maxm],nouse;\nint main(){\n\tcin>>n>>m>>nouse;\n\tfor(int i = 0;i<m;i++) cin>>hang[i];\n\tfor(int i = 0;i<n;i++) cin>>lie[i];\n\tfor(int i = 0;i<n;i++){\n\t\tfor(int j = 0,a;j<m;j++){\n\t\t\tcin>>a;\n\t\t\tif(a) cout<<min(lie[i],hang[j])<<' ';\n\t\t\telse cout<<0<<' ';\n\t\t}\n\t\tcout<<endl;\n\t}\n\treturn 0;\n}\n```\n\n## C. Serval and Parenthesis Sequence\n\n[开启传送门](http://codeforces.com/contest/1153/problem/C)\n\n### 题目描述\n\nServal soon said goodbye to Japari kindergarten, and began his life in Japari Primary School.\n\nIn his favorite math class, the teacher taught him the following interesting definitions.\n\nA parenthesis sequence is a string, containing only characters \"(\" and \")\".\n\nA correct parenthesis sequence is a parenthesis sequence that can be transformed into a correct arithmetic expression by inserting characters \"1\" and \"+\" between the original characters of the sequence. For example, parenthesis sequences \"()()\", \"(())\" are correct (the resulting expressions are: \"(1+1)+(1+1)\", \"((1+1)+1)\"), while \")(\" and \")\" are not. Note that the empty string is a correct parenthesis sequence by definition.\n\nWe define that $|s|$ as the length of string $s$. A strict prefix $s[1\\dots l]$ (1 ≤ $l$ < $|s|$) of a string $s=s_{1}s_{2}\\dots s_{|s|}$ is string $s_{1}s_{2}\\dots s_{l}$. Note that the empty string and the whole string are not strict prefixes of any string by the definition.\n\nHaving learned these definitions, he comes up with a new problem. He writes down a string $s$ containing only characters \"(\", \")\" and \"?\". And what he is going to do, is to replace each of the \"?\" in $s$ independently by one of \"(\" and \")\" to make all strict prefixes of the new sequence not a correct parenthesis sequence, while the new sequence should be a correct parenthesis sequence.\n\nAfter all, he is just a primary school student so this problem is too hard for him to solve. As his best friend, can you help him to replace the question marks? If there are many solutions, any of them is acceptable.\n\n### Input\n\nThe first line contains a single integer $|s|$ (1≤$|s|$≤$3\\cdot 10^5$), the length of the string.\n\nThe second line contains a string $s$, containing only \"(\", \")\" and \"?\".\n\n### Output\n\nA single line contains a string representing the answer.\n\nIf there are many solutions, any of them is acceptable.\n\nIf there is no answer, print a single line containing \":(\" (without the quotes).\n\n### Examples\n\n#### input1\n\n6\n(?????\n\n#### output1\n\n(()())\n\n#### input2\n\n10\n(???(???(?\n\n#### output2\n\n:(\n\n### Note\n\nIt can be proved that there is no solution for the second sample, so print \":(\".\n\n### 题意\n\n给你一堆左括号右括号和问号，问你能否把问号变成左括号或者右括号，使得这个变成一个括号匹配的序列，并且序列的任何前缀不是一个括号匹配序列。\n\n### 分析\n\n显然对于后一个条件，我们只需要让最左边的左括号和最右边的右括号匹配就行了，然后中间是一个括号匹配序列就行了。然后填充的时候贪心的让左边填充左括号,右边填充右括号,然后check一下就行了.\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint len;\nconst int maxm = 3e5+10;\nchar que[maxm];\nvoid NO(){\n\tcout<<\":(\"<<endl;\n\texit(0);\n}\nint main(){\n\tcin>>len>>que;\n\tif(len&1) NO();\n\tif(que[0]=='?') que[0] = '(';\n\tif(que[len-1]=='?') que[len-1] = ')';\n\tif(que[0]!='(') NO();\n\tif(que[len-1]!=')') NO();\n\tif(len==2) {\n\t\tputs(\"()\");\n\t\treturn 0;\n\t}\n\tint l = 0,r = 0,has = 0;\n\tfor(int i = 1;i<len-1;i++){\n\t\tif(que[i]=='(') l++;\n\t\telse if(que[i]==')') r++;\n\t\telse has++;\n\t}\n\tif(abs(l-r)>has) NO();\n\tl = (len-2)/2 - l;\n\tfor(int i = 1;i<len-1;i++){\n\t\tif(que[i]=='?') {\n\t\t\tif(l){\n\t\t\t\tque[i] = '(';\n\t\t\t\tl--;\n\t\t\t}else que[i] = ')';\n\t\t}\n\t}\n\n\thas = 0;\n\tfor(int i = 1;i<len-1;i++){\n\t\tif(que[i]=='(') has++;\n\t\telse has--;\n\t\tif(has<0) NO();\n\t}\n\tputs(que);\n\treturn 0;\n}\n```\n## D. Serval and Rooted Tree\n\n[开启传送门](http://codeforces.com/contest/1153/problem/D)\n\n### 题目描述\n\nNow Serval is a junior high school student in Japari Middle School, and he is still thrilled on math as before.\n\nAs a talented boy in mathematics, he likes to play with numbers. This time, he wants to play with numbers on a rooted tree.\n\nA tree is a connected graph without cycles. A rooted tree has a special vertex called the root. A parent of a node $v$ is the last different from $v$ vertex on the path from the root to the vertex $v$. Children of vertex $v$ are all nodes for which $v$ is the parent. A vertex is a leaf if it has no children.\n\nThe rooted tree Serval owns has $n$ nodes, node 1 is the root. Serval will write some numbers into all nodes of the tree. However, there are some restrictions. Each of the nodes except leaves has an operation max or min written in it, indicating that the number in this node should be equal to the maximum or minimum of all the numbers in its sons, respectively.\n\nAssume that there are $k$ leaves in the tree. Serval wants to put integers $1,2,\\dots,k$ to the $k$ leaves (each number should be used exactly once). He loves large numbers, so he wants to maximize the number in the root. As his best friend, can you help him?\n\n### Input\n\nThe first line contains an integer $n$ (2≤$n$≤$3\\cdot 10^5$), the size of the tree.\n\nThe second line contains $n$ integers, the $i$-th of them represents the operation in the node $i$. 0 represents min and 1 represents max. If the node is a leaf, there is still a number of 0 or 1, but you can ignore it.\n\nThe third line contains $n-1$ integers $f_2,f_3,\\dots,f_n$ (1≤$f_i≤$i-1$), where $f_i$ represents the parent of the node $i$.\n\n### Output\n\nOutput one integer $-$ the maximum possible number in the root of the tree.\n\n### Examples\n\n#### input1\n\n6\n\n1 0 1 1 0 1\n\n1 2 2 2 2\n\n#### output1\n\n1\n\n#### input2\n\n5\n\n1 0 1 0 1\n\n1 1 1 1\n\n#### output2\n\n4\n\n#### input3\n\n8\n\n1 0 0 1 0 1 1 0\n\n1 1 2 2 3 3 3\n\n#### output3\n\n4\n\n#### input4\n\n9\n\n1 1 0 0 1 0 1 0 1\n\n1 1 2 2 3 3 4 4\n\n#### output4\n\n5\n\n### Note\n\nPictures below explain the examples. The numbers written in the middle of the nodes are their indices, and the numbers written on the top are the numbers written in the nodes.\n\nIn the first example, no matter how you arrange the numbers, the answer is $1$.\n\n![](/img/cf_1153_d_1.png)\n\nIn the second example, no matter how you arrange the numbers, the answer is $4$.\n\n![](/img/cf_1153_d_2.png)\n\nIn the third example, one of the best solution to achieve $4$ is to arrange $4$ and $5$ to nodes $4$ and $5$.\n\n![](/img/cf_1153_d_3.png)\n\nIn the fourth example, the best solution is to arrange $5$ to node $5$.\n\n![](/img/cf_1153_d_4.png)\n\n### 题意\n\n给你一颗有根树，每个非叶节点上有一个函数，可能为min或者max，你需要在k个叶节点上填上$1,2,\\dots,k$,使得经过非叶节点的操作之后，根节点的值最大。\n\n### 分析\n\n显然是要分析函数的作用。\n\n如果是取max，说明所有的子节点中，我们可以把某一个子节点的值取到最大，然后其他的节点全塞垃圾值。\n\n如果是取min，说明所有子节点都起作用，说明我们对于每个子节点都要尽可能的大。\n\n然后就可以得到，max的策略是，找到孙子节点最少的子节点，填充大值，min的策略是，对所有子节点求和。\n\n然后这样得到的就是所有对答案有贡献的节点数，然后用总结点数减去贡献节点数就是答案。\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxm = 3e5+10;\nint n,cnt;\nint maxn[maxm];\nvector<int> son[maxm];\nint dfs(int a){\n\tif(son[a].size()==0){\n\t\tcnt++;\n\t\treturn 1;\n\t}\n\tif(maxn[a]){\n\t\tint minm = 1e8;\n\t\tfor(int i:son[a]) minm = min(minm,dfs(i));\n\t\treturn minm;\n\t}\n\tint sum = 0;\n\tfor(int i:son[a]) sum+=dfs(i);\n\treturn sum;\n}\nint main(){\n\tcin>>n;\n\tfor(int i = 1;i<=n;i++) cin>>maxn[i];\n\tfor(int i = 2,pre;i<=n;i++){\n\t\tcin>>pre;\n\t\tson[pre].push_back(i);\n\t}\n\tint nouse = dfs(1);\n\tcout<<cnt - nouse+1<<endl;\n\treturn 0;\n}\n```\n\n## E. Serval and Snake\n[开启传送门](http://codeforces.com/contest/1153/problem/E)\n\n### 题目描述\n\n*This is an interactive problem.*\n\nNow Serval is a senior high school student in Japari Middle School. However, on the way to the school, he must go across a pond, in which there is a dangerous snake. The pond can be represented as a $n\\times n$ grid. The snake has a head and a tail in different cells, and its body is a series of adjacent cells connecting the head and the tail without self-intersecting. If Serval hits its head or tail, the snake will bite him and he will die.\n\nLuckily, he has a special device which can answer the following question: you can pick a rectangle, it will tell you the number of times one needs to cross the border of the rectangle walking cell by cell along the snake from the head to the tail. The pictures below show a possible snake and a possible query to it, which will get an answer of $4$.\n\n![](/img/cf_1153_e_1.png)\n![](/img/cf_1153_e_2.png)\n\nToday Serval got up too late and only have time to make 2019 queries. As his best friend, can you help him find the positions of the head and the tail?\n\nNote that two cells are adjacent if and only if they have a common edge in the grid, and a snake can have a body of length 0, that means it only has adjacent head and tail.\n\nAlso note that the snake is sleeping, so it won't move while Serval using his device. And what's obvious is that the snake position does not depend on your queries.\n\n### Input\n\nThe first line contains a single integer $n$ (2≤$n$≤1000) $-$ the size of the grid.\n\n### Output\n\nWhen you are ready to answer, you should print **! x1 y1 x2 y2**, where $(x_1,y_1)$ represents the position of the head and $(x_2,y_2)$ represents the position of the tail. You can print head and tail in any order.\n\n### Interaction\n\nTo make a query, you should print **? x1 y1 x2 y2** (1≤$x_1$≤$x_2$≤𝑛, 1≤$y_1$≤$y_2$≤$n$), representing a rectangle consisting of all cells $(x,y)$ such that $x_1$≤$x$≤$x_2$ and $y_1$≤$y$≤$y_2$. You will get a single integer as the answer.\n\nAfter printing a query, do not forget to output the end of line and flush the output, otherwise you will get **Idleness limit exceeded**. To do this, use:\n\n- **fflush(stdout)** or **cout.flush()** in C++;\n- **System.out.flush()** in Java;\n- **flush(output)** in Pascal;\n- **stdout.flush()** in Python;\nsee documentation for other languages.\n\nAnswer $-1$ instead of a valid answer means that you made an invalid query or exceeded the maximum number of queries. Exit immediately after receiving $-1$ and you will see **Wrong answer** verdict. Otherwise you can get an arbitrary verdict because your solution will continue to read from a closed stream.\n\nIf your program cannot find out the head and tail of the snake correctly, you will also get a **Wrong Answer** verdict.\n\n### Hacks\n\nTo make a hack, print a single integer $n$ (2≤$n$≤1000) in the first line, indicating the size of the grid.\n\nThen print an integer $k$ (2≤$k$≤𝑛2) in the second line, indicating the length of the snake.\n\nIn the next $k$ lines, print $k$ pairs of integers $x_i,y_i$ (1≤$x_i,y_i$≤𝑛), each pair in a single line, indicating the $i$-th cell of snake, such that the adjacent pairs are adjacent, and all $k$ pairs are distinct.\n\n### Examples\n\n#### input1\n\n2\n\n1\n\n0\n\n0\n\n#### output1\n\n? 1 1 1 1\n\n? 1 2 1 2\n\n? 2 2 2 2\n\n! 1 1 2 1\n\n#### input2\n\n3\n\n2\n\n0\n\n#### output2\n\n? 2 2 2 2\n\n? 2 1 2 3\n\n! 2 1 2 3\n\n### Note\n\n![](/img/cf_1153_e_3.png)\n![](/img/cf_1153_e_4.png)\n![](/img/cf_1153_e_5.png)\n![](/img/cf_1153_e_6.png)\n\nThe pictures above show our queries and the answers in the first example. We first made a query for (1,1) and got an answer 1, then found that it must be connected to exactly one other cell. Then we made a query for (1,2) and got an answer of 0, then knew that the snake never entered it. So the cell connected to (1,1) must be (2,1). Then we made a query for (2,2) and got an answer 0, then knew that it never entered (2,2) as well. So the snake cannot leave (2,1), which implies that the answer is (1,1) and (2,1).\n\n![](/img/cf_1153_e_7.png)\n![](/img/cf_1153_e_8.png)\n![](/img/cf_1153_e_9.png)\n\nThe pictures above show our queries and the answers in the second example. By making query to (2,2) and receiving 2, we found that the snake occupies (2,2). And by making query to rectangle from (2,1) to (2,3) and receiving answer 0, we knew that it never goes out of the rectangle from (2,1) to (2,3). Since the first answer is 2, both (2,1) and (2,3) must be occupied but none of others, so the answer is (2,1) and (2,3).\n\n### 题意\n\n现在有一条蛇在一个方格图中，你可以给出不超过2019次询问，每次询问一个矩形，回答是，你用这个矩形去切蛇，可以得到这个蛇被切了多少刀，现在问你蛇头和蛇尾的位置。\n\n### 分析\n\n首先我们可以观察到，当一个矩形切下去之后发现切了奇数刀，那么可以有必然存在一个头或者尾在矩形中。\n\n然后我们可以用$(n-1)<<1$次询问得到所有的行和列对应的切的次数。\n\n然后可以证明的是，所有的数据中必然存在奇数。反证法易得。\n\n然后可以证明奇数对应的行或者列左右必然存在头或者尾。\n\n所以可以得到一个很直观的$O(6n)$的做法，$2n$用来寻找，剩下的$4n$来搜索答案。但是这必然会超过2019.\n\n考虑哪些步骤可以优化？\n\n$2n$不可优化，必然就只能优化搜索过程。\n\n需要注意的是，可能存在行或者列不存在奇数的情况，稍微分析可以得到这种情况的特点了，头和尾在同一行或者同一列中。\n\n我们考虑到，我们只用考虑奇偶的情况，而不用考虑具体值。\n\n因为奇偶的加减特性，我们可以二分这个答案。\n\n除此之外，如果行和列都有奇数值，那么可以得到行和列对应的四个点中，两个点是答案，枚举任何一个就可以得到答案。\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxm = 1005;\nint n;\nvector<int> r,c;\nint que(int u,int d,int l,int r){\n\tprintf(\"? %d %d %d %d\\n\",u,l,d,r);\n\tfflush(stdout);\n\tint nouse;\n\tscanf(\"%d\",&nouse);\n\treturn nouse&1;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i = 1;i<=n;i++) if(que(i,i,1,n)) r.push_back(i);\n\tfor(int i = 1;i<=n;i++) if(que(1,n,i,i)) c.push_back(i);\n\tassert(r.size()+c.size()>=2);\n\tif(c.empty()||r.empty()){\n\t\tbool change = false;\n\t\tif(c.empty()) {\n\t\t\tswap(r,c);\n\t\t\tchange = true;\n\t\t}\n\t\tint l = 1,r = n;\n\t\twhile(l<r){\n\t\t\tint mid = l+r>>1;\n\t\t\tint upper = l,down = mid,left = c[0],right = c[0];\n\t\t\tif(change) swap(left,upper),swap(down,right);\n\t\t\tif(que(upper,down,left,right)) r = mid;\n\t\t\telse l = mid+1;\n\t\t}\n\t\tif(!change) printf(\"! %d %d %d %d\\n\",l,c[1],l,c[0]);\n\t\telse printf(\"! %d %d %d %d\\n\",c[0],l,c[1],l);\n\t\tfflush(stdout);\n\t\treturn 0;\n\t}\n\tif(que(r[0],r[0],c[0],c[0])) printf(\"! %d %d %d %d\\n\",r[0],c[0],r[1],c[1]);\n\telse printf(\"! %d %d %d %d\\n\",r[0],c[1],r[1],c[0]);\n\tfflush(stdout);\n\treturn 0;\n}\n```\n\n## F. Serval and Bonus Problem\n\n[开启传送门](https://codeforces.com/contest/1153/problem/F)\n\n### 题目描述\n\nGetting closer and closer to a mathematician, Serval becomes a university student on math major in Japari University. On the Calculus class, his teacher taught him how to calculate the expected length of a random subsegment of a given segment. Then he left a bonus problem as homework, with the award of a garage kit from IOI. The bonus is to extend this problem to the general case as follows.\n\nYou are given a segment with length $l$. We randomly choose $n$ segments by choosing two points (maybe with non-integer coordinates) from the given segment equiprobably and the interval between the two points forms a segment. You are given the number of random segments $n$, and another integer $k$. The $2n$ endpoints of the chosen segments split the segment into ($2n+1$) intervals. Your task is to calculate the expected total length of those intervals that are covered by at least $k$ segments of the $n$ random segments.\n\nYou should find the answer modulo $998244353$.\n\n### Input\n\nFirst line contains three space-separated positive integers 𝑛, 𝑘 and 𝑙 ($1\\leq k\\leq n\\leq 2000,1\\leq l\\leq 10^9$).\n\n### Output\n\nOutput one integer — the expected total length of all the intervals covered by at least $k$ segments of the $n$ random segments modulo $998244353$.\n\nFormally, let $M=998244353$. It can be shown that the answer can be expressed as an irreducible fraction $\\frac{p}{q}$, where $p$ and $q$ are integers and $q\\not\\equiv0(modM)$. Output the integer equal to $p\\cdot q^{-1}mod\\ M$. In other words, output such an integer $x$ that $0\\leq x<M$ and $x\\cdot q\\equiv p(mod\\ M)$.\n\n### Examples\n\n#### inpus1\n\n1 1 1\n\n#### output1\n\n332748118\n\n#### input2\n\n6 2 1\n\n#### output2\n\n760234711\n\n#### input3\n\n7 5 3\n\n#### output3\n\n223383352\n\n#### input4\n\n97 31 9984524\n\n#### output4\n\n267137618\n\n### Note\n\nIn the first example, the expected total length is $\\int_0^1 \\int_0^1 |x-y|\\ dx\\ dy = \\frac{1}{3} $, and $\\frac{1}{3}$ modulo $998244353$ is $332748118$.\n\n### 题意\n\n长度为l的线段，随机选取n个线段，线段中至少被n个线段中k个线段覆盖的长度期望。\n\n### 分析\n\n说实话我当时没做出来，看了题解才知道怎么做的，所以强烈建议看官方的题解。我这里也贴出来，感兴趣的可以看一下。\n\nWithout loss of generality, assume that $l$=1. For a segment covering, the total length of the legal intervals is the probability that we choose another point $P$ on this segment randomly such that it is in the legal intervals. Since all $2n+1$ points ($P$ and the endpoints of each segment) are chosen randomly and independently, we only need to find the probability that point $P$ is in the legal intervals. Note that only the order of these $2n+1$ points make sense. Because the points are chosen in the segment, the probability that some of them coincide is $0$, so we can assume that all points do not coincide.\n\nNow the problem is, how to calculate the number of arrangements that $P$ is between at least $k$ pairs of endpoints. It can be solved by dynamic programming in time complexity of $O(n^2)$. We define $f(i,j,x)$ as the number of arrangements for the first $i$ positions, with $j$ points haven't been matched, and $P$ appeared $x$ times (obviously $x=0$ or $1$). So we can get three different types of transition for the $i$-th position below:\n\n- Place $P$ at $i$-th position (if $j\\geq k$): $f(i-1,j,0)\\rightarrow f(i,j,1)$\n- Start a new segment (if $i+j+x<2n$): $f(i-1,j-1,x)\\rightarrow f(i,j,x)$\n- Match a started segment, note that we have 𝑗 choices of segments:$f(i-1,j+1,x)\\times(j+1)\\rightarrow f(i,j,x)$\n\nThen $f(2n+1,0,1)$ is the number of legal arrangements. Obviously, the total number of arrangements is $(2n+1)!$. However, there are 𝑛 pairs of endpoints whose indices can be swapped, and the indices 𝑛 segments can be rearranged. So the final answer is $\\frac{f(2n+1,0,1)\\times n!\\times 2^n}{(2n+1)!}$.\n\n可能是受了题解的影响，后来也没想出来其他解法。\n\n这里讲一下题解怎么做的。\n\n首先我们可以发现，长度和答案成正比，也就是说如果长度为1的时候答案是a，那么长度为2的时候答案就是2a%mod.\n\n然后我们不妨设长度为1，最后答案乘上l就行了。\n\n然后因为我们要找到至少被线段覆盖k次的所有点，所以我们不如加上一个虚拟点，这样就一共有了$(n<<1|1)$个点，然后需要判断这个虚拟点被多少条线段覆盖了，如果覆盖次数超过k次，就说明可以统计进答案。然后就可以发现，所有点是随机取的，所以我们假设所有点不会重合，那么所有点就可以离散成一个序列。然后就可以统计k的覆盖次数。\n\n接下来就是dp，我们设$dp[i][j][flag]$表示序列中前i个点，其中到目前为止有j条线段左节点出线了，但是右节点没有出现，也就是说当前这个点被覆盖了j次，flag表示虚拟点是否出现了。然后考虑转移：\n\n - 当前节点是虚拟节点\n  - 如果这个需要统计进入答案，也就是说明当前节点需要被覆盖k次及以上，所以 $j\\geq k$\n  - $dp[i][j][1]+=dp[i-1][j][0]$\n - 当前节点是一个线段的左端点\n  - 也就是说左节点数量增加，被覆盖次数增加，但是不会影响虚拟节点的状态\n  - $dp[i][j+1][flag]+=dp[i-1][j][flag]$\n - 当前节点是一个线段的右端点\n  - 也就是说右节点数量增加，被覆盖次数减少，但是不会影响虚拟节点的状态,注意右端点可能会有j个可能\n  - $dp[i][j-1][flag]+=dp[i-1][j][flag]*j$\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst long long mod = 998244353;\nconst int maxm = 2345;\ninline long long add(long long a,long long b){return (a+b)%mod;}\ninline long long mul(long long a,long long b){return a*b%mod;}\ninline long long fac(long long a) {return a==1?1:mul(a,fac(a-1));}\ninline long long qpow(long long a,long long b = mod-2){/*{{{*/\n\tlong long ret = 1;\n\twhile(b){\n\t\tif(b&1) ret = mul(ret,a);\n\t\ta = mul(a,a);\n\t\tb>>=1;\n\t}\n\treturn ret;\n}/*}}}*/\nlong long n,k,l;\nlong long dp[maxm<<1][maxm][2];\nint main(){\n\tscanf(\"%lld%lld%lld\",&n,&k,&l);\n\tdp[0][0][0] = 1;\n\tfor(int i = 1;i<=(n<<1|1);i++)\n\t\tfor(int j = 0;j<=n;j++){\n\t\t\tif(j>=k) dp[i][j][1] = add(dp[i][j][1],dp[i-1][j][0]);\n\t\t\tfor(int flag = 0;flag<2;flag++)\n\t\t\t\tif(dp[i-1][j][flag]){\n\t\t\t\t\tif(j) dp[i][j-1][flag] = add(dp[i][j-1][flag],mul(dp[i-1][j][flag],j));\n\t\t\t\t\tif(i+(j+1)-(1-flag)<=(n<<1|1)) dp[i][j+1][flag] = add(dp[i][j+1][flag],dp[i-1][j][flag]);\n\t\t\t\t}\n\t\t}\n\tint ans = mul(dp[n<<1|1][0][1],qpow(2,n));\n\tans = mul(mul(ans,l),mul(fac(n),qpow(fac(n<<1|1))));\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n","source":"_posts/CF/Codeforces_Round_551.md","raw":"---\ntitle: \tCodeforces Round 551\ndate:\t\t2019-04-14\nauthor:\t\"zuhiul\" \ntags:\n  - CF\n---\n\n## A. Serval and Bus\n\n[开启传送门](http://codeforces.com/contest/1153/problem/A)\n\n<!-- more -->\n\n### 题目描述\nIt is raining heavily. But this is the first day for Serval, who just became 3 years old, to go to the kindergarten. Unfortunately, he lives far from kindergarten, and his father is too busy to drive him there. The only choice for this poor little boy is to wait for a bus on this rainy day. Under such circumstances, the poor boy will use the first bus he sees no matter where it goes. If several buses come at the same time, he will choose one randomly.\n\nServal will go to the bus station at time $t$, and there are $n$ bus routes which stop at this station. For the $i$-th bus route, the first bus arrives at time $s_i$ minutes, and each bus of this route comes $d_i$ minutes later than the previous one.\n\nAs Serval's best friend, you wonder which bus route will he get on. If several buses arrive at the same time, you can print any of them.\n\n### Input\nThe first line contains two space-separated integers $n$ and $t$ (1≤$n$≤100, 1≤$t$≤$10^5$) $-$ the number of bus routes and the time Serval goes to the station.\n\nEach of the next $n$ lines contains two space-separated integers $s_i$ and $d_i$ (1≤$s_i,d_i$≤$10^5$) $-$ the time when the first bus of this route arrives and the interval between two buses of this route.\n\n### Output\nPrint one number $-$ what bus route Serval will use. If there are several possible answers, you can print any of them.\n\n### Examples\n\n#### input1\n2 2\n\n6 4\n\n9 5\n\n#### output1\n\n1\n\n#### input2\n\n5 5\n\n3 3\n\n2 5\n\n5 6\n\n4 9\n\n6 1\n\n#### output2\n\n3\n\n#### input3\n\n3 7\n\n2 2\n\n2 3\n\n2 4\n\n#### output3\n\n1\n\n### 题意\n\nzuhiul很忙，他要约妹子，他一共有$n$个妹子要约，但是他$t$天后才有空，妹子们也不是每天都有时间，但是妹子都是周期性有时间，比如，第$i$个妹子，$s_i$天之后才有时间，而且每$d_i$天就会再次出线，现在问你，zuhiul最早会和哪个妹子约会，如果会和多个妹子约会，只需要输出任意一个妹子就行了。\n\n### 分析\n\n只需要枚举每个妹子，然后看一下这个妹子什么时候最早可以邀约，然后算一下min就可以了\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxm = 105;\nint s[maxm],d[maxm];\nint main(){\n\tint n,t;\n\tcin>>n>>t;\n\tint ind,sum = 1e8;\n\tfor(int i = 1;i<=n;i++){\n\t\tcin>>s[i]>>d[i];\n\t\tif(s[i]>=t){\n\t\t\tif(sum>s[i]){\n\t\t\t\tsum = s[i];\n\t\t\t\tind = i;\n\t\t\t}\n\t\t}else {\n\t\t\tint nee = t-s[i];\n\t\t\tif(nee%d[i]!=0) nee = (nee/d[i]+1)*d[i];\n\t\t\tnee+=s[i];\n\t\t\tif(nee<sum){\n\t\t\t\tsum = nee;\n\t\t\t\tind = i;\n\t\t\t}\n\t\t}\n\t}\n\tcout<<ind<<endl;\n\treturn 0;\n}\n```\n\n## B. Serval and Toy Bricks\n\n[开启传送门](http://codeforces.com/contest/1153/problem/B)\n\n### 题目描述\nLuckily, Serval got onto the right bus, and he came to the kindergarten on time. After coming to kindergarten, he found the toy bricks very funny.\n\nHe has a special interest to create difficult problems for others to solve. This time, with many $1\\times 1\\times 1$ toy bricks, he builds up a 3-dimensional object. We can describe this object with a $n\\times m$ matrix, such that in each cell $(i,j)$ , there are $h_{i,j}$ bricks standing on the top of each other.\n\nHowever, Serval doesn't give you any $h_{i,j}$, and just give you the front view, left view, and the top view of this object, and he is now asking you to restore the object. Note that in the front view, there are $m$ columns, and in the $i$-th of them, the height is the maximum of $h_{1,i},h_{2,i},\\dots,h_{n,i}$. It is similar for the left view, where there are $n$ columns. And in the top view, there is an 𝑛×𝑚 matrix $t_{i,j}$, where $t_{i,j}$ is 0 or 1. If $t_{i,j}$ equals 1, that means $h_{i,j}$>0, otherwise, $h_{i,j}$=0.\n\nHowever, Serval is very lonely because others are bored about his unsolvable problems before, and refused to solve this one, although this time he promises there will be at least one object satisfying all the views. As his best friend, can you have a try?\n### Input\nThe first line contains two space-separated integers $n$ and $t$ (1≤$n$≤100, 1≤$t$≤$10^5$) $-$ the number of bus routes and the time Serval goes to the station.\n\nEach of the next $n$ lines contains two space-separated integers $s_i$ and $d_i$ (1≤$s_i,d_i$≤$10^5$) $-$ the time when the first bus of this route arrives and the interval between two buses of this route.\n\n### Output\nPrint one number $-$ what bus route Serval will use. If there are several possible answers, you can print any of them.\n\n### Examples\n\n#### input1\n\n3 7 3\n\n2 3 0 0 2 0 1\n\n2 1 3\n\n1 0 0 0 1 0 0\n\n0 0 0 0 0 0 1\n\n1 1 0 0 0 0 0\n\n#### output1\n\n1 0 0 0 2 0 0\n\n0 0 0 0 0 0 1\n\n2 3 0 0 0 0 0\n\n#### input2\n\n4 5 5\n\n3 5 2 0 4\n\n4 2 5 4\n\n0 0 0 0 1\n\n1 0 1 0 0\n\n0 1 0 0 0\n\n1 1 1 0 0\n\n#### output2\n\n0 0 0 0 4\n\n1 0 2 0 0\n\n0 5 0 0 0\n\n3 4 1 0 0\n\n### Note\n\n![](/img/cf_1153_b_1.png)\n\nThe graph above illustrates the object in the first example.\n\n![](/img/cf_1153_b_2.png)\n\nThe first graph illustrates the object in the example output for the second example, and the second graph shows the three-view drawing of it.\n\n### 题意\n\nzuhiul和妹子玩游戏，妹子搭了一个积木，然后zuhiul猜积木长啥样，zuhiul必然不会，于是小姐姐放过了他，告诉了他现在的主视图，侧视图和俯视图，然后让zuhiul猜，zuhiul还是不会，但是为了脸面不能说不会，然后来问你了。你需要输出一种可能的解满足这个三视图。\n\n### 分析\n\n告诉了主视图和左视图，相当于限制了最大值，告诉俯视图相当于告诉哪里可能有方块。然后枚举俯视图的每个位置，输出答案即可。\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nconst int maxm = 105;\nint hang[maxm],lie[maxm],nouse;\nint main(){\n\tcin>>n>>m>>nouse;\n\tfor(int i = 0;i<m;i++) cin>>hang[i];\n\tfor(int i = 0;i<n;i++) cin>>lie[i];\n\tfor(int i = 0;i<n;i++){\n\t\tfor(int j = 0,a;j<m;j++){\n\t\t\tcin>>a;\n\t\t\tif(a) cout<<min(lie[i],hang[j])<<' ';\n\t\t\telse cout<<0<<' ';\n\t\t}\n\t\tcout<<endl;\n\t}\n\treturn 0;\n}\n```\n\n## C. Serval and Parenthesis Sequence\n\n[开启传送门](http://codeforces.com/contest/1153/problem/C)\n\n### 题目描述\n\nServal soon said goodbye to Japari kindergarten, and began his life in Japari Primary School.\n\nIn his favorite math class, the teacher taught him the following interesting definitions.\n\nA parenthesis sequence is a string, containing only characters \"(\" and \")\".\n\nA correct parenthesis sequence is a parenthesis sequence that can be transformed into a correct arithmetic expression by inserting characters \"1\" and \"+\" between the original characters of the sequence. For example, parenthesis sequences \"()()\", \"(())\" are correct (the resulting expressions are: \"(1+1)+(1+1)\", \"((1+1)+1)\"), while \")(\" and \")\" are not. Note that the empty string is a correct parenthesis sequence by definition.\n\nWe define that $|s|$ as the length of string $s$. A strict prefix $s[1\\dots l]$ (1 ≤ $l$ < $|s|$) of a string $s=s_{1}s_{2}\\dots s_{|s|}$ is string $s_{1}s_{2}\\dots s_{l}$. Note that the empty string and the whole string are not strict prefixes of any string by the definition.\n\nHaving learned these definitions, he comes up with a new problem. He writes down a string $s$ containing only characters \"(\", \")\" and \"?\". And what he is going to do, is to replace each of the \"?\" in $s$ independently by one of \"(\" and \")\" to make all strict prefixes of the new sequence not a correct parenthesis sequence, while the new sequence should be a correct parenthesis sequence.\n\nAfter all, he is just a primary school student so this problem is too hard for him to solve. As his best friend, can you help him to replace the question marks? If there are many solutions, any of them is acceptable.\n\n### Input\n\nThe first line contains a single integer $|s|$ (1≤$|s|$≤$3\\cdot 10^5$), the length of the string.\n\nThe second line contains a string $s$, containing only \"(\", \")\" and \"?\".\n\n### Output\n\nA single line contains a string representing the answer.\n\nIf there are many solutions, any of them is acceptable.\n\nIf there is no answer, print a single line containing \":(\" (without the quotes).\n\n### Examples\n\n#### input1\n\n6\n(?????\n\n#### output1\n\n(()())\n\n#### input2\n\n10\n(???(???(?\n\n#### output2\n\n:(\n\n### Note\n\nIt can be proved that there is no solution for the second sample, so print \":(\".\n\n### 题意\n\n给你一堆左括号右括号和问号，问你能否把问号变成左括号或者右括号，使得这个变成一个括号匹配的序列，并且序列的任何前缀不是一个括号匹配序列。\n\n### 分析\n\n显然对于后一个条件，我们只需要让最左边的左括号和最右边的右括号匹配就行了，然后中间是一个括号匹配序列就行了。然后填充的时候贪心的让左边填充左括号,右边填充右括号,然后check一下就行了.\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint len;\nconst int maxm = 3e5+10;\nchar que[maxm];\nvoid NO(){\n\tcout<<\":(\"<<endl;\n\texit(0);\n}\nint main(){\n\tcin>>len>>que;\n\tif(len&1) NO();\n\tif(que[0]=='?') que[0] = '(';\n\tif(que[len-1]=='?') que[len-1] = ')';\n\tif(que[0]!='(') NO();\n\tif(que[len-1]!=')') NO();\n\tif(len==2) {\n\t\tputs(\"()\");\n\t\treturn 0;\n\t}\n\tint l = 0,r = 0,has = 0;\n\tfor(int i = 1;i<len-1;i++){\n\t\tif(que[i]=='(') l++;\n\t\telse if(que[i]==')') r++;\n\t\telse has++;\n\t}\n\tif(abs(l-r)>has) NO();\n\tl = (len-2)/2 - l;\n\tfor(int i = 1;i<len-1;i++){\n\t\tif(que[i]=='?') {\n\t\t\tif(l){\n\t\t\t\tque[i] = '(';\n\t\t\t\tl--;\n\t\t\t}else que[i] = ')';\n\t\t}\n\t}\n\n\thas = 0;\n\tfor(int i = 1;i<len-1;i++){\n\t\tif(que[i]=='(') has++;\n\t\telse has--;\n\t\tif(has<0) NO();\n\t}\n\tputs(que);\n\treturn 0;\n}\n```\n## D. Serval and Rooted Tree\n\n[开启传送门](http://codeforces.com/contest/1153/problem/D)\n\n### 题目描述\n\nNow Serval is a junior high school student in Japari Middle School, and he is still thrilled on math as before.\n\nAs a talented boy in mathematics, he likes to play with numbers. This time, he wants to play with numbers on a rooted tree.\n\nA tree is a connected graph without cycles. A rooted tree has a special vertex called the root. A parent of a node $v$ is the last different from $v$ vertex on the path from the root to the vertex $v$. Children of vertex $v$ are all nodes for which $v$ is the parent. A vertex is a leaf if it has no children.\n\nThe rooted tree Serval owns has $n$ nodes, node 1 is the root. Serval will write some numbers into all nodes of the tree. However, there are some restrictions. Each of the nodes except leaves has an operation max or min written in it, indicating that the number in this node should be equal to the maximum or minimum of all the numbers in its sons, respectively.\n\nAssume that there are $k$ leaves in the tree. Serval wants to put integers $1,2,\\dots,k$ to the $k$ leaves (each number should be used exactly once). He loves large numbers, so he wants to maximize the number in the root. As his best friend, can you help him?\n\n### Input\n\nThe first line contains an integer $n$ (2≤$n$≤$3\\cdot 10^5$), the size of the tree.\n\nThe second line contains $n$ integers, the $i$-th of them represents the operation in the node $i$. 0 represents min and 1 represents max. If the node is a leaf, there is still a number of 0 or 1, but you can ignore it.\n\nThe third line contains $n-1$ integers $f_2,f_3,\\dots,f_n$ (1≤$f_i≤$i-1$), where $f_i$ represents the parent of the node $i$.\n\n### Output\n\nOutput one integer $-$ the maximum possible number in the root of the tree.\n\n### Examples\n\n#### input1\n\n6\n\n1 0 1 1 0 1\n\n1 2 2 2 2\n\n#### output1\n\n1\n\n#### input2\n\n5\n\n1 0 1 0 1\n\n1 1 1 1\n\n#### output2\n\n4\n\n#### input3\n\n8\n\n1 0 0 1 0 1 1 0\n\n1 1 2 2 3 3 3\n\n#### output3\n\n4\n\n#### input4\n\n9\n\n1 1 0 0 1 0 1 0 1\n\n1 1 2 2 3 3 4 4\n\n#### output4\n\n5\n\n### Note\n\nPictures below explain the examples. The numbers written in the middle of the nodes are their indices, and the numbers written on the top are the numbers written in the nodes.\n\nIn the first example, no matter how you arrange the numbers, the answer is $1$.\n\n![](/img/cf_1153_d_1.png)\n\nIn the second example, no matter how you arrange the numbers, the answer is $4$.\n\n![](/img/cf_1153_d_2.png)\n\nIn the third example, one of the best solution to achieve $4$ is to arrange $4$ and $5$ to nodes $4$ and $5$.\n\n![](/img/cf_1153_d_3.png)\n\nIn the fourth example, the best solution is to arrange $5$ to node $5$.\n\n![](/img/cf_1153_d_4.png)\n\n### 题意\n\n给你一颗有根树，每个非叶节点上有一个函数，可能为min或者max，你需要在k个叶节点上填上$1,2,\\dots,k$,使得经过非叶节点的操作之后，根节点的值最大。\n\n### 分析\n\n显然是要分析函数的作用。\n\n如果是取max，说明所有的子节点中，我们可以把某一个子节点的值取到最大，然后其他的节点全塞垃圾值。\n\n如果是取min，说明所有子节点都起作用，说明我们对于每个子节点都要尽可能的大。\n\n然后就可以得到，max的策略是，找到孙子节点最少的子节点，填充大值，min的策略是，对所有子节点求和。\n\n然后这样得到的就是所有对答案有贡献的节点数，然后用总结点数减去贡献节点数就是答案。\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxm = 3e5+10;\nint n,cnt;\nint maxn[maxm];\nvector<int> son[maxm];\nint dfs(int a){\n\tif(son[a].size()==0){\n\t\tcnt++;\n\t\treturn 1;\n\t}\n\tif(maxn[a]){\n\t\tint minm = 1e8;\n\t\tfor(int i:son[a]) minm = min(minm,dfs(i));\n\t\treturn minm;\n\t}\n\tint sum = 0;\n\tfor(int i:son[a]) sum+=dfs(i);\n\treturn sum;\n}\nint main(){\n\tcin>>n;\n\tfor(int i = 1;i<=n;i++) cin>>maxn[i];\n\tfor(int i = 2,pre;i<=n;i++){\n\t\tcin>>pre;\n\t\tson[pre].push_back(i);\n\t}\n\tint nouse = dfs(1);\n\tcout<<cnt - nouse+1<<endl;\n\treturn 0;\n}\n```\n\n## E. Serval and Snake\n[开启传送门](http://codeforces.com/contest/1153/problem/E)\n\n### 题目描述\n\n*This is an interactive problem.*\n\nNow Serval is a senior high school student in Japari Middle School. However, on the way to the school, he must go across a pond, in which there is a dangerous snake. The pond can be represented as a $n\\times n$ grid. The snake has a head and a tail in different cells, and its body is a series of adjacent cells connecting the head and the tail without self-intersecting. If Serval hits its head or tail, the snake will bite him and he will die.\n\nLuckily, he has a special device which can answer the following question: you can pick a rectangle, it will tell you the number of times one needs to cross the border of the rectangle walking cell by cell along the snake from the head to the tail. The pictures below show a possible snake and a possible query to it, which will get an answer of $4$.\n\n![](/img/cf_1153_e_1.png)\n![](/img/cf_1153_e_2.png)\n\nToday Serval got up too late and only have time to make 2019 queries. As his best friend, can you help him find the positions of the head and the tail?\n\nNote that two cells are adjacent if and only if they have a common edge in the grid, and a snake can have a body of length 0, that means it only has adjacent head and tail.\n\nAlso note that the snake is sleeping, so it won't move while Serval using his device. And what's obvious is that the snake position does not depend on your queries.\n\n### Input\n\nThe first line contains a single integer $n$ (2≤$n$≤1000) $-$ the size of the grid.\n\n### Output\n\nWhen you are ready to answer, you should print **! x1 y1 x2 y2**, where $(x_1,y_1)$ represents the position of the head and $(x_2,y_2)$ represents the position of the tail. You can print head and tail in any order.\n\n### Interaction\n\nTo make a query, you should print **? x1 y1 x2 y2** (1≤$x_1$≤$x_2$≤𝑛, 1≤$y_1$≤$y_2$≤$n$), representing a rectangle consisting of all cells $(x,y)$ such that $x_1$≤$x$≤$x_2$ and $y_1$≤$y$≤$y_2$. You will get a single integer as the answer.\n\nAfter printing a query, do not forget to output the end of line and flush the output, otherwise you will get **Idleness limit exceeded**. To do this, use:\n\n- **fflush(stdout)** or **cout.flush()** in C++;\n- **System.out.flush()** in Java;\n- **flush(output)** in Pascal;\n- **stdout.flush()** in Python;\nsee documentation for other languages.\n\nAnswer $-1$ instead of a valid answer means that you made an invalid query or exceeded the maximum number of queries. Exit immediately after receiving $-1$ and you will see **Wrong answer** verdict. Otherwise you can get an arbitrary verdict because your solution will continue to read from a closed stream.\n\nIf your program cannot find out the head and tail of the snake correctly, you will also get a **Wrong Answer** verdict.\n\n### Hacks\n\nTo make a hack, print a single integer $n$ (2≤$n$≤1000) in the first line, indicating the size of the grid.\n\nThen print an integer $k$ (2≤$k$≤𝑛2) in the second line, indicating the length of the snake.\n\nIn the next $k$ lines, print $k$ pairs of integers $x_i,y_i$ (1≤$x_i,y_i$≤𝑛), each pair in a single line, indicating the $i$-th cell of snake, such that the adjacent pairs are adjacent, and all $k$ pairs are distinct.\n\n### Examples\n\n#### input1\n\n2\n\n1\n\n0\n\n0\n\n#### output1\n\n? 1 1 1 1\n\n? 1 2 1 2\n\n? 2 2 2 2\n\n! 1 1 2 1\n\n#### input2\n\n3\n\n2\n\n0\n\n#### output2\n\n? 2 2 2 2\n\n? 2 1 2 3\n\n! 2 1 2 3\n\n### Note\n\n![](/img/cf_1153_e_3.png)\n![](/img/cf_1153_e_4.png)\n![](/img/cf_1153_e_5.png)\n![](/img/cf_1153_e_6.png)\n\nThe pictures above show our queries and the answers in the first example. We first made a query for (1,1) and got an answer 1, then found that it must be connected to exactly one other cell. Then we made a query for (1,2) and got an answer of 0, then knew that the snake never entered it. So the cell connected to (1,1) must be (2,1). Then we made a query for (2,2) and got an answer 0, then knew that it never entered (2,2) as well. So the snake cannot leave (2,1), which implies that the answer is (1,1) and (2,1).\n\n![](/img/cf_1153_e_7.png)\n![](/img/cf_1153_e_8.png)\n![](/img/cf_1153_e_9.png)\n\nThe pictures above show our queries and the answers in the second example. By making query to (2,2) and receiving 2, we found that the snake occupies (2,2). And by making query to rectangle from (2,1) to (2,3) and receiving answer 0, we knew that it never goes out of the rectangle from (2,1) to (2,3). Since the first answer is 2, both (2,1) and (2,3) must be occupied but none of others, so the answer is (2,1) and (2,3).\n\n### 题意\n\n现在有一条蛇在一个方格图中，你可以给出不超过2019次询问，每次询问一个矩形，回答是，你用这个矩形去切蛇，可以得到这个蛇被切了多少刀，现在问你蛇头和蛇尾的位置。\n\n### 分析\n\n首先我们可以观察到，当一个矩形切下去之后发现切了奇数刀，那么可以有必然存在一个头或者尾在矩形中。\n\n然后我们可以用$(n-1)<<1$次询问得到所有的行和列对应的切的次数。\n\n然后可以证明的是，所有的数据中必然存在奇数。反证法易得。\n\n然后可以证明奇数对应的行或者列左右必然存在头或者尾。\n\n所以可以得到一个很直观的$O(6n)$的做法，$2n$用来寻找，剩下的$4n$来搜索答案。但是这必然会超过2019.\n\n考虑哪些步骤可以优化？\n\n$2n$不可优化，必然就只能优化搜索过程。\n\n需要注意的是，可能存在行或者列不存在奇数的情况，稍微分析可以得到这种情况的特点了，头和尾在同一行或者同一列中。\n\n我们考虑到，我们只用考虑奇偶的情况，而不用考虑具体值。\n\n因为奇偶的加减特性，我们可以二分这个答案。\n\n除此之外，如果行和列都有奇数值，那么可以得到行和列对应的四个点中，两个点是答案，枚举任何一个就可以得到答案。\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxm = 1005;\nint n;\nvector<int> r,c;\nint que(int u,int d,int l,int r){\n\tprintf(\"? %d %d %d %d\\n\",u,l,d,r);\n\tfflush(stdout);\n\tint nouse;\n\tscanf(\"%d\",&nouse);\n\treturn nouse&1;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i = 1;i<=n;i++) if(que(i,i,1,n)) r.push_back(i);\n\tfor(int i = 1;i<=n;i++) if(que(1,n,i,i)) c.push_back(i);\n\tassert(r.size()+c.size()>=2);\n\tif(c.empty()||r.empty()){\n\t\tbool change = false;\n\t\tif(c.empty()) {\n\t\t\tswap(r,c);\n\t\t\tchange = true;\n\t\t}\n\t\tint l = 1,r = n;\n\t\twhile(l<r){\n\t\t\tint mid = l+r>>1;\n\t\t\tint upper = l,down = mid,left = c[0],right = c[0];\n\t\t\tif(change) swap(left,upper),swap(down,right);\n\t\t\tif(que(upper,down,left,right)) r = mid;\n\t\t\telse l = mid+1;\n\t\t}\n\t\tif(!change) printf(\"! %d %d %d %d\\n\",l,c[1],l,c[0]);\n\t\telse printf(\"! %d %d %d %d\\n\",c[0],l,c[1],l);\n\t\tfflush(stdout);\n\t\treturn 0;\n\t}\n\tif(que(r[0],r[0],c[0],c[0])) printf(\"! %d %d %d %d\\n\",r[0],c[0],r[1],c[1]);\n\telse printf(\"! %d %d %d %d\\n\",r[0],c[1],r[1],c[0]);\n\tfflush(stdout);\n\treturn 0;\n}\n```\n\n## F. Serval and Bonus Problem\n\n[开启传送门](https://codeforces.com/contest/1153/problem/F)\n\n### 题目描述\n\nGetting closer and closer to a mathematician, Serval becomes a university student on math major in Japari University. On the Calculus class, his teacher taught him how to calculate the expected length of a random subsegment of a given segment. Then he left a bonus problem as homework, with the award of a garage kit from IOI. The bonus is to extend this problem to the general case as follows.\n\nYou are given a segment with length $l$. We randomly choose $n$ segments by choosing two points (maybe with non-integer coordinates) from the given segment equiprobably and the interval between the two points forms a segment. You are given the number of random segments $n$, and another integer $k$. The $2n$ endpoints of the chosen segments split the segment into ($2n+1$) intervals. Your task is to calculate the expected total length of those intervals that are covered by at least $k$ segments of the $n$ random segments.\n\nYou should find the answer modulo $998244353$.\n\n### Input\n\nFirst line contains three space-separated positive integers 𝑛, 𝑘 and 𝑙 ($1\\leq k\\leq n\\leq 2000,1\\leq l\\leq 10^9$).\n\n### Output\n\nOutput one integer — the expected total length of all the intervals covered by at least $k$ segments of the $n$ random segments modulo $998244353$.\n\nFormally, let $M=998244353$. It can be shown that the answer can be expressed as an irreducible fraction $\\frac{p}{q}$, where $p$ and $q$ are integers and $q\\not\\equiv0(modM)$. Output the integer equal to $p\\cdot q^{-1}mod\\ M$. In other words, output such an integer $x$ that $0\\leq x<M$ and $x\\cdot q\\equiv p(mod\\ M)$.\n\n### Examples\n\n#### inpus1\n\n1 1 1\n\n#### output1\n\n332748118\n\n#### input2\n\n6 2 1\n\n#### output2\n\n760234711\n\n#### input3\n\n7 5 3\n\n#### output3\n\n223383352\n\n#### input4\n\n97 31 9984524\n\n#### output4\n\n267137618\n\n### Note\n\nIn the first example, the expected total length is $\\int_0^1 \\int_0^1 |x-y|\\ dx\\ dy = \\frac{1}{3} $, and $\\frac{1}{3}$ modulo $998244353$ is $332748118$.\n\n### 题意\n\n长度为l的线段，随机选取n个线段，线段中至少被n个线段中k个线段覆盖的长度期望。\n\n### 分析\n\n说实话我当时没做出来，看了题解才知道怎么做的，所以强烈建议看官方的题解。我这里也贴出来，感兴趣的可以看一下。\n\nWithout loss of generality, assume that $l$=1. For a segment covering, the total length of the legal intervals is the probability that we choose another point $P$ on this segment randomly such that it is in the legal intervals. Since all $2n+1$ points ($P$ and the endpoints of each segment) are chosen randomly and independently, we only need to find the probability that point $P$ is in the legal intervals. Note that only the order of these $2n+1$ points make sense. Because the points are chosen in the segment, the probability that some of them coincide is $0$, so we can assume that all points do not coincide.\n\nNow the problem is, how to calculate the number of arrangements that $P$ is between at least $k$ pairs of endpoints. It can be solved by dynamic programming in time complexity of $O(n^2)$. We define $f(i,j,x)$ as the number of arrangements for the first $i$ positions, with $j$ points haven't been matched, and $P$ appeared $x$ times (obviously $x=0$ or $1$). So we can get three different types of transition for the $i$-th position below:\n\n- Place $P$ at $i$-th position (if $j\\geq k$): $f(i-1,j,0)\\rightarrow f(i,j,1)$\n- Start a new segment (if $i+j+x<2n$): $f(i-1,j-1,x)\\rightarrow f(i,j,x)$\n- Match a started segment, note that we have 𝑗 choices of segments:$f(i-1,j+1,x)\\times(j+1)\\rightarrow f(i,j,x)$\n\nThen $f(2n+1,0,1)$ is the number of legal arrangements. Obviously, the total number of arrangements is $(2n+1)!$. However, there are 𝑛 pairs of endpoints whose indices can be swapped, and the indices 𝑛 segments can be rearranged. So the final answer is $\\frac{f(2n+1,0,1)\\times n!\\times 2^n}{(2n+1)!}$.\n\n可能是受了题解的影响，后来也没想出来其他解法。\n\n这里讲一下题解怎么做的。\n\n首先我们可以发现，长度和答案成正比，也就是说如果长度为1的时候答案是a，那么长度为2的时候答案就是2a%mod.\n\n然后我们不妨设长度为1，最后答案乘上l就行了。\n\n然后因为我们要找到至少被线段覆盖k次的所有点，所以我们不如加上一个虚拟点，这样就一共有了$(n<<1|1)$个点，然后需要判断这个虚拟点被多少条线段覆盖了，如果覆盖次数超过k次，就说明可以统计进答案。然后就可以发现，所有点是随机取的，所以我们假设所有点不会重合，那么所有点就可以离散成一个序列。然后就可以统计k的覆盖次数。\n\n接下来就是dp，我们设$dp[i][j][flag]$表示序列中前i个点，其中到目前为止有j条线段左节点出线了，但是右节点没有出现，也就是说当前这个点被覆盖了j次，flag表示虚拟点是否出现了。然后考虑转移：\n\n - 当前节点是虚拟节点\n  - 如果这个需要统计进入答案，也就是说明当前节点需要被覆盖k次及以上，所以 $j\\geq k$\n  - $dp[i][j][1]+=dp[i-1][j][0]$\n - 当前节点是一个线段的左端点\n  - 也就是说左节点数量增加，被覆盖次数增加，但是不会影响虚拟节点的状态\n  - $dp[i][j+1][flag]+=dp[i-1][j][flag]$\n - 当前节点是一个线段的右端点\n  - 也就是说右节点数量增加，被覆盖次数减少，但是不会影响虚拟节点的状态,注意右端点可能会有j个可能\n  - $dp[i][j-1][flag]+=dp[i-1][j][flag]*j$\n\n### 代码\n\n给大佬递上我奇丑无比的代码　(*/ω＼*)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst long long mod = 998244353;\nconst int maxm = 2345;\ninline long long add(long long a,long long b){return (a+b)%mod;}\ninline long long mul(long long a,long long b){return a*b%mod;}\ninline long long fac(long long a) {return a==1?1:mul(a,fac(a-1));}\ninline long long qpow(long long a,long long b = mod-2){/*{{{*/\n\tlong long ret = 1;\n\twhile(b){\n\t\tif(b&1) ret = mul(ret,a);\n\t\ta = mul(a,a);\n\t\tb>>=1;\n\t}\n\treturn ret;\n}/*}}}*/\nlong long n,k,l;\nlong long dp[maxm<<1][maxm][2];\nint main(){\n\tscanf(\"%lld%lld%lld\",&n,&k,&l);\n\tdp[0][0][0] = 1;\n\tfor(int i = 1;i<=(n<<1|1);i++)\n\t\tfor(int j = 0;j<=n;j++){\n\t\t\tif(j>=k) dp[i][j][1] = add(dp[i][j][1],dp[i-1][j][0]);\n\t\t\tfor(int flag = 0;flag<2;flag++)\n\t\t\t\tif(dp[i-1][j][flag]){\n\t\t\t\t\tif(j) dp[i][j-1][flag] = add(dp[i][j-1][flag],mul(dp[i-1][j][flag],j));\n\t\t\t\t\tif(i+(j+1)-(1-flag)<=(n<<1|1)) dp[i][j+1][flag] = add(dp[i][j+1][flag],dp[i-1][j][flag]);\n\t\t\t\t}\n\t\t}\n\tint ans = mul(dp[n<<1|1][0][1],qpow(2,n));\n\tans = mul(mul(ans,l),mul(fac(n),qpow(fac(n<<1|1))));\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n","slug":"CF/Codeforces_Round_551","published":1,"updated":"2019-07-22T09:58:57.206Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1j80031a6135181v0c2","content":"<h2 id=\"A-Serval-and-Bus\"><a href=\"#A-Serval-and-Bus\" class=\"headerlink\" title=\"A. Serval and Bus\"></a>A. Serval and Bus</h2><p><a href=\"http://codeforces.com/contest/1153/problem/A\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<a id=\"more\"></a>\n<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>It is raining heavily. But this is the first day for Serval, who just became 3 years old, to go to the kindergarten. Unfortunately, he lives far from kindergarten, and his father is too busy to drive him there. The only choice for this poor little boy is to wait for a bus on this rainy day. Under such circumstances, the poor boy will use the first bus he sees no matter where it goes. If several buses come at the same time, he will choose one randomly.</p>\n<p>Serval will go to the bus station at time $t$, and there are $n$ bus routes which stop at this station. For the $i$-th bus route, the first bus arrives at time $s_i$ minutes, and each bus of this route comes $d_i$ minutes later than the previous one.</p>\n<p>As Serval’s best friend, you wonder which bus route will he get on. If several buses arrive at the same time, you can print any of them.</p>\n<h3 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h3><p>The first line contains two space-separated integers $n$ and $t$ (1≤$n$≤100, 1≤$t$≤$10^5$) $-$ the number of bus routes and the time Serval goes to the station.</p>\n<p>Each of the next $n$ lines contains two space-separated integers $s_i$ and $d_i$ (1≤$s_i,d_i$≤$10^5$) $-$ the time when the first bus of this route arrives and the interval between two buses of this route.</p>\n<h3 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h3><p>Print one number $-$ what bus route Serval will use. If there are several possible answers, you can print any of them.</p>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"input1\"><a href=\"#input1\" class=\"headerlink\" title=\"input1\"></a>input1</h4><p>2 2</p>\n<p>6 4</p>\n<p>9 5</p>\n<h4 id=\"output1\"><a href=\"#output1\" class=\"headerlink\" title=\"output1\"></a>output1</h4><p>1</p>\n<h4 id=\"input2\"><a href=\"#input2\" class=\"headerlink\" title=\"input2\"></a>input2</h4><p>5 5</p>\n<p>3 3</p>\n<p>2 5</p>\n<p>5 6</p>\n<p>4 9</p>\n<p>6 1</p>\n<h4 id=\"output2\"><a href=\"#output2\" class=\"headerlink\" title=\"output2\"></a>output2</h4><p>3</p>\n<h4 id=\"input3\"><a href=\"#input3\" class=\"headerlink\" title=\"input3\"></a>input3</h4><p>3 7</p>\n<p>2 2</p>\n<p>2 3</p>\n<p>2 4</p>\n<h4 id=\"output3\"><a href=\"#output3\" class=\"headerlink\" title=\"output3\"></a>output3</h4><p>1</p>\n<h3 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>zuhiul很忙，他要约妹子，他一共有$n$个妹子要约，但是他$t$天后才有空，妹子们也不是每天都有时间，但是妹子都是周期性有时间，比如，第$i$个妹子，$s_i$天之后才有时间，而且每$d_i$天就会再次出线，现在问你，zuhiul最早会和哪个妹子约会，如果会和多个妹子约会，只需要输出任意一个妹子就行了。</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>只需要枚举每个妹子，然后看一下这个妹子什么时候最早可以邀约，然后算一下min就可以了</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">105</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> s[maxm],d[maxm];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n,t;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;t;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ind,sum = <span class=\"number\">1e8</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;s[i]&gt;&gt;d[i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(s[i]&gt;=t)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(sum&gt;s[i])&#123;</span><br><span class=\"line\">\t\t\t\tsum = s[i];</span><br><span class=\"line\">\t\t\t\tind = i;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> nee = t-s[i];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(nee%d[i]!=<span class=\"number\">0</span>) nee = (nee/d[i]+<span class=\"number\">1</span>)*d[i];</span><br><span class=\"line\">\t\t\tnee+=s[i];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(nee&lt;sum)&#123;</span><br><span class=\"line\">\t\t\t\tsum = nee;</span><br><span class=\"line\">\t\t\t\tind = i;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;ind&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"B-Serval-and-Toy-Bricks\"><a href=\"#B-Serval-and-Toy-Bricks\" class=\"headerlink\" title=\"B. Serval and Toy Bricks\"></a>B. Serval and Toy Bricks</h2><p><a href=\"http://codeforces.com/contest/1153/problem/B\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述-1\"><a href=\"#题目描述-1\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>Luckily, Serval got onto the right bus, and he came to the kindergarten on time. After coming to kindergarten, he found the toy bricks very funny.</p>\n<p>He has a special interest to create difficult problems for others to solve. This time, with many $1\\times 1\\times 1$ toy bricks, he builds up a 3-dimensional object. We can describe this object with a $n\\times m$ matrix, such that in each cell $(i,j)$ , there are $h_{i,j}$ bricks standing on the top of each other.</p>\n<p>However, Serval doesn’t give you any $h_{i,j}$, and just give you the front view, left view, and the top view of this object, and he is now asking you to restore the object. Note that in the front view, there are $m$ columns, and in the $i$-th of them, the height is the maximum of $h_{1,i},h_{2,i},\\dots,h_{n,i}$. It is similar for the left view, where there are $n$ columns. And in the top view, there is an 𝑛×𝑚 matrix $t_{i,j}$, where $t_{i,j}$ is 0 or 1. If $t_{i,j}$ equals 1, that means $h_{i,j}$&gt;0, otherwise, $h_{i,j}$=0.</p>\n<p>However, Serval is very lonely because others are bored about his unsolvable problems before, and refused to solve this one, although this time he promises there will be at least one object satisfying all the views. As his best friend, can you have a try?</p>\n<h3 id=\"Input-1\"><a href=\"#Input-1\" class=\"headerlink\" title=\"Input\"></a>Input</h3><p>The first line contains two space-separated integers $n$ and $t$ (1≤$n$≤100, 1≤$t$≤$10^5$) $-$ the number of bus routes and the time Serval goes to the station.</p>\n<p>Each of the next $n$ lines contains two space-separated integers $s_i$ and $d_i$ (1≤$s_i,d_i$≤$10^5$) $-$ the time when the first bus of this route arrives and the interval between two buses of this route.</p>\n<h3 id=\"Output-1\"><a href=\"#Output-1\" class=\"headerlink\" title=\"Output\"></a>Output</h3><p>Print one number $-$ what bus route Serval will use. If there are several possible answers, you can print any of them.</p>\n<h3 id=\"Examples-1\"><a href=\"#Examples-1\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"input1-1\"><a href=\"#input1-1\" class=\"headerlink\" title=\"input1\"></a>input1</h4><p>3 7 3</p>\n<p>2 3 0 0 2 0 1</p>\n<p>2 1 3</p>\n<p>1 0 0 0 1 0 0</p>\n<p>0 0 0 0 0 0 1</p>\n<p>1 1 0 0 0 0 0</p>\n<h4 id=\"output1-1\"><a href=\"#output1-1\" class=\"headerlink\" title=\"output1\"></a>output1</h4><p>1 0 0 0 2 0 0</p>\n<p>0 0 0 0 0 0 1</p>\n<p>2 3 0 0 0 0 0</p>\n<h4 id=\"input2-1\"><a href=\"#input2-1\" class=\"headerlink\" title=\"input2\"></a>input2</h4><p>4 5 5</p>\n<p>3 5 2 0 4</p>\n<p>4 2 5 4</p>\n<p>0 0 0 0 1</p>\n<p>1 0 1 0 0</p>\n<p>0 1 0 0 0</p>\n<p>1 1 1 0 0</p>\n<h4 id=\"output2-1\"><a href=\"#output2-1\" class=\"headerlink\" title=\"output2\"></a>output2</h4><p>0 0 0 0 4</p>\n<p>1 0 2 0 0</p>\n<p>0 5 0 0 0</p>\n<p>3 4 1 0 0</p>\n<h3 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h3><p><img src=\"/img/cf_1153_b_1.png\" alt=\"\"></p>\n<p>The graph above illustrates the object in the first example.</p>\n<p><img src=\"/img/cf_1153_b_2.png\" alt=\"\"></p>\n<p>The first graph illustrates the object in the example output for the second example, and the second graph shows the three-view drawing of it.</p>\n<h3 id=\"题意-1\"><a href=\"#题意-1\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>zuhiul和妹子玩游戏，妹子搭了一个积木，然后zuhiul猜积木长啥样，zuhiul必然不会，于是小姐姐放过了他，告诉了他现在的主视图，侧视图和俯视图，然后让zuhiul猜，zuhiul还是不会，但是为了脸面不能说不会，然后来问你了。你需要输出一种可能的解满足这个三视图。</p>\n<h3 id=\"分析-1\"><a href=\"#分析-1\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>告诉了主视图和左视图，相当于限制了最大值，告诉俯视图相当于告诉哪里可能有方块。然后枚举俯视图的每个位置，输出答案即可。</p>\n<h3 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">105</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> hang[maxm],lie[maxm],nouse;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;m&gt;&gt;nouse;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;m;i++) <span class=\"built_in\">cin</span>&gt;&gt;hang[i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;n;i++) <span class=\"built_in\">cin</span>&gt;&gt;lie[i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>,a;j&lt;m;j++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cin</span>&gt;&gt;a;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(a) <span class=\"built_in\">cout</span>&lt;&lt;min(lie[i],hang[j])&lt;&lt;<span class=\"string\">' '</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"number\">0</span>&lt;&lt;<span class=\"string\">' '</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"C-Serval-and-Parenthesis-Sequence\"><a href=\"#C-Serval-and-Parenthesis-Sequence\" class=\"headerlink\" title=\"C. Serval and Parenthesis Sequence\"></a>C. Serval and Parenthesis Sequence</h2><p><a href=\"http://codeforces.com/contest/1153/problem/C\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述-2\"><a href=\"#题目描述-2\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>Serval soon said goodbye to Japari kindergarten, and began his life in Japari Primary School.</p>\n<p>In his favorite math class, the teacher taught him the following interesting definitions.</p>\n<p>A parenthesis sequence is a string, containing only characters “(“ and “)”.</p>\n<p>A correct parenthesis sequence is a parenthesis sequence that can be transformed into a correct arithmetic expression by inserting characters “1” and “+” between the original characters of the sequence. For example, parenthesis sequences “()()”, “(())” are correct (the resulting expressions are: “(1+1)+(1+1)”, “((1+1)+1)”), while “)(“ and “)” are not. Note that the empty string is a correct parenthesis sequence by definition.</p>\n<p>We define that $|s|$ as the length of string $s$. A strict prefix $s[1\\dots l]$ (1 ≤ $l$ &lt; $|s|$) of a string $s=s_{1}s_{2}\\dots s_{|s|}$ is string $s_{1}s_{2}\\dots s_{l}$. Note that the empty string and the whole string are not strict prefixes of any string by the definition.</p>\n<p>Having learned these definitions, he comes up with a new problem. He writes down a string $s$ containing only characters “(“, “)” and “?”. And what he is going to do, is to replace each of the “?” in $s$ independently by one of “(“ and “)” to make all strict prefixes of the new sequence not a correct parenthesis sequence, while the new sequence should be a correct parenthesis sequence.</p>\n<p>After all, he is just a primary school student so this problem is too hard for him to solve. As his best friend, can you help him to replace the question marks? If there are many solutions, any of them is acceptable.</p>\n<h3 id=\"Input-2\"><a href=\"#Input-2\" class=\"headerlink\" title=\"Input\"></a>Input</h3><p>The first line contains a single integer $|s|$ (1≤$|s|$≤$3\\cdot 10^5$), the length of the string.</p>\n<p>The second line contains a string $s$, containing only “(“, “)” and “?”.</p>\n<h3 id=\"Output-2\"><a href=\"#Output-2\" class=\"headerlink\" title=\"Output\"></a>Output</h3><p>A single line contains a string representing the answer.</p>\n<p>If there are many solutions, any of them is acceptable.</p>\n<p>If there is no answer, print a single line containing “:(“ (without the quotes).</p>\n<h3 id=\"Examples-2\"><a href=\"#Examples-2\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"input1-2\"><a href=\"#input1-2\" class=\"headerlink\" title=\"input1\"></a>input1</h4><p>6<br>(?????</p>\n<h4 id=\"output1-2\"><a href=\"#output1-2\" class=\"headerlink\" title=\"output1\"></a>output1</h4><p>(()())</p>\n<h4 id=\"input2-2\"><a href=\"#input2-2\" class=\"headerlink\" title=\"input2\"></a>input2</h4><p>10<br>(???(???(?</p>\n<h4 id=\"output2-2\"><a href=\"#output2-2\" class=\"headerlink\" title=\"output2\"></a>output2</h4><p>:(</p>\n<h3 id=\"Note-1\"><a href=\"#Note-1\" class=\"headerlink\" title=\"Note\"></a>Note</h3><p>It can be proved that there is no solution for the second sample, so print “:(“.</p>\n<h3 id=\"题意-2\"><a href=\"#题意-2\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>给你一堆左括号右括号和问号，问你能否把问号变成左括号或者右括号，使得这个变成一个括号匹配的序列，并且序列的任何前缀不是一个括号匹配序列。</p>\n<h3 id=\"分析-2\"><a href=\"#分析-2\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>显然对于后一个条件，我们只需要让最左边的左括号和最右边的右括号匹配就行了，然后中间是一个括号匹配序列就行了。然后填充的时候贪心的让左边填充左括号,右边填充右括号,然后check一下就行了.</p>\n<h3 id=\"代码-2\"><a href=\"#代码-2\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> len;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">3e5</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">char</span> que[maxm];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">NO</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\":(\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;len&gt;&gt;que;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(len&amp;<span class=\"number\">1</span>) NO();</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(que[<span class=\"number\">0</span>]==<span class=\"string\">'?'</span>) que[<span class=\"number\">0</span>] = <span class=\"string\">'('</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(que[len<span class=\"number\">-1</span>]==<span class=\"string\">'?'</span>) que[len<span class=\"number\">-1</span>] = <span class=\"string\">')'</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(que[<span class=\"number\">0</span>]!=<span class=\"string\">'('</span>) NO();</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(que[len<span class=\"number\">-1</span>]!=<span class=\"string\">')'</span>) NO();</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(len==<span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">puts</span>(<span class=\"string\">\"()\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> l = <span class=\"number\">0</span>,r = <span class=\"number\">0</span>,has = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;len<span class=\"number\">-1</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(que[i]==<span class=\"string\">'('</span>) l++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(que[i]==<span class=\"string\">')'</span>) r++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> has++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"built_in\">abs</span>(l-r)&gt;has) NO();</span><br><span class=\"line\">\tl = (len<span class=\"number\">-2</span>)/<span class=\"number\">2</span> - l;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;len<span class=\"number\">-1</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(que[i]==<span class=\"string\">'?'</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(l)&#123;</span><br><span class=\"line\">\t\t\t\tque[i] = <span class=\"string\">'('</span>;</span><br><span class=\"line\">\t\t\t\tl--;</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span> que[i] = <span class=\"string\">')'</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\thas = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;len<span class=\"number\">-1</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(que[i]==<span class=\"string\">'('</span>) has++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> has--;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(has&lt;<span class=\"number\">0</span>) NO();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">puts</span>(que);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"D-Serval-and-Rooted-Tree\"><a href=\"#D-Serval-and-Rooted-Tree\" class=\"headerlink\" title=\"D. Serval and Rooted Tree\"></a>D. Serval and Rooted Tree</h2><p><a href=\"http://codeforces.com/contest/1153/problem/D\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述-3\"><a href=\"#题目描述-3\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>Now Serval is a junior high school student in Japari Middle School, and he is still thrilled on math as before.</p>\n<p>As a talented boy in mathematics, he likes to play with numbers. This time, he wants to play with numbers on a rooted tree.</p>\n<p>A tree is a connected graph without cycles. A rooted tree has a special vertex called the root. A parent of a node $v$ is the last different from $v$ vertex on the path from the root to the vertex $v$. Children of vertex $v$ are all nodes for which $v$ is the parent. A vertex is a leaf if it has no children.</p>\n<p>The rooted tree Serval owns has $n$ nodes, node 1 is the root. Serval will write some numbers into all nodes of the tree. However, there are some restrictions. Each of the nodes except leaves has an operation max or min written in it, indicating that the number in this node should be equal to the maximum or minimum of all the numbers in its sons, respectively.</p>\n<p>Assume that there are $k$ leaves in the tree. Serval wants to put integers $1,2,\\dots,k$ to the $k$ leaves (each number should be used exactly once). He loves large numbers, so he wants to maximize the number in the root. As his best friend, can you help him?</p>\n<h3 id=\"Input-3\"><a href=\"#Input-3\" class=\"headerlink\" title=\"Input\"></a>Input</h3><p>The first line contains an integer $n$ (2≤$n$≤$3\\cdot 10^5$), the size of the tree.</p>\n<p>The second line contains $n$ integers, the $i$-th of them represents the operation in the node $i$. 0 represents min and 1 represents max. If the node is a leaf, there is still a number of 0 or 1, but you can ignore it.</p>\n<p>The third line contains $n-1$ integers $f_2,f_3,\\dots,f_n$ (1≤$f_i≤$i-1$), where $f_i$ represents the parent of the node $i$.</p>\n<h3 id=\"Output-3\"><a href=\"#Output-3\" class=\"headerlink\" title=\"Output\"></a>Output</h3><p>Output one integer $-$ the maximum possible number in the root of the tree.</p>\n<h3 id=\"Examples-3\"><a href=\"#Examples-3\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"input1-3\"><a href=\"#input1-3\" class=\"headerlink\" title=\"input1\"></a>input1</h4><p>6</p>\n<p>1 0 1 1 0 1</p>\n<p>1 2 2 2 2</p>\n<h4 id=\"output1-3\"><a href=\"#output1-3\" class=\"headerlink\" title=\"output1\"></a>output1</h4><p>1</p>\n<h4 id=\"input2-3\"><a href=\"#input2-3\" class=\"headerlink\" title=\"input2\"></a>input2</h4><p>5</p>\n<p>1 0 1 0 1</p>\n<p>1 1 1 1</p>\n<h4 id=\"output2-3\"><a href=\"#output2-3\" class=\"headerlink\" title=\"output2\"></a>output2</h4><p>4</p>\n<h4 id=\"input3-1\"><a href=\"#input3-1\" class=\"headerlink\" title=\"input3\"></a>input3</h4><p>8</p>\n<p>1 0 0 1 0 1 1 0</p>\n<p>1 1 2 2 3 3 3</p>\n<h4 id=\"output3-1\"><a href=\"#output3-1\" class=\"headerlink\" title=\"output3\"></a>output3</h4><p>4</p>\n<h4 id=\"input4\"><a href=\"#input4\" class=\"headerlink\" title=\"input4\"></a>input4</h4><p>9</p>\n<p>1 1 0 0 1 0 1 0 1</p>\n<p>1 1 2 2 3 3 4 4</p>\n<h4 id=\"output4\"><a href=\"#output4\" class=\"headerlink\" title=\"output4\"></a>output4</h4><p>5</p>\n<h3 id=\"Note-2\"><a href=\"#Note-2\" class=\"headerlink\" title=\"Note\"></a>Note</h3><p>Pictures below explain the examples. The numbers written in the middle of the nodes are their indices, and the numbers written on the top are the numbers written in the nodes.</p>\n<p>In the first example, no matter how you arrange the numbers, the answer is $1$.</p>\n<p><img src=\"/img/cf_1153_d_1.png\" alt=\"\"></p>\n<p>In the second example, no matter how you arrange the numbers, the answer is $4$.</p>\n<p><img src=\"/img/cf_1153_d_2.png\" alt=\"\"></p>\n<p>In the third example, one of the best solution to achieve $4$ is to arrange $4$ and $5$ to nodes $4$ and $5$.</p>\n<p><img src=\"/img/cf_1153_d_3.png\" alt=\"\"></p>\n<p>In the fourth example, the best solution is to arrange $5$ to node $5$.</p>\n<p><img src=\"/img/cf_1153_d_4.png\" alt=\"\"></p>\n<h3 id=\"题意-3\"><a href=\"#题意-3\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>给你一颗有根树，每个非叶节点上有一个函数，可能为min或者max，你需要在k个叶节点上填上$1,2,\\dots,k$,使得经过非叶节点的操作之后，根节点的值最大。</p>\n<h3 id=\"分析-3\"><a href=\"#分析-3\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>显然是要分析函数的作用。</p>\n<p>如果是取max，说明所有的子节点中，我们可以把某一个子节点的值取到最大，然后其他的节点全塞垃圾值。</p>\n<p>如果是取min，说明所有子节点都起作用，说明我们对于每个子节点都要尽可能的大。</p>\n<p>然后就可以得到，max的策略是，找到孙子节点最少的子节点，填充大值，min的策略是，对所有子节点求和。</p>\n<p>然后这样得到的就是所有对答案有贡献的节点数，然后用总结点数减去贡献节点数就是答案。</p>\n<h3 id=\"代码-3\"><a href=\"#代码-3\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">3e5</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,cnt;</span><br><span class=\"line\"><span class=\"keyword\">int</span> maxn[maxm];</span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; son[maxm];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> a)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(son[a].size()==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\tcnt++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(maxn[a])&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> minm = <span class=\"number\">1e8</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i:son[a]) minm = min(minm,dfs(i));</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> minm;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i:son[a]) sum+=dfs(i);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=n;i++) <span class=\"built_in\">cin</span>&gt;&gt;maxn[i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>,pre;i&lt;=n;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;pre;</span><br><span class=\"line\">\t\tson[pre].push_back(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> nouse = dfs(<span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;cnt - nouse+<span class=\"number\">1</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"E-Serval-and-Snake\"><a href=\"#E-Serval-and-Snake\" class=\"headerlink\" title=\"E. Serval and Snake\"></a>E. Serval and Snake</h2><p><a href=\"http://codeforces.com/contest/1153/problem/E\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述-4\"><a href=\"#题目描述-4\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p><em>This is an interactive problem.</em></p>\n<p>Now Serval is a senior high school student in Japari Middle School. However, on the way to the school, he must go across a pond, in which there is a dangerous snake. The pond can be represented as a $n\\times n$ grid. The snake has a head and a tail in different cells, and its body is a series of adjacent cells connecting the head and the tail without self-intersecting. If Serval hits its head or tail, the snake will bite him and he will die.</p>\n<p>Luckily, he has a special device which can answer the following question: you can pick a rectangle, it will tell you the number of times one needs to cross the border of the rectangle walking cell by cell along the snake from the head to the tail. The pictures below show a possible snake and a possible query to it, which will get an answer of $4$.</p>\n<p><img src=\"/img/cf_1153_e_1.png\" alt=\"\"><br><img src=\"/img/cf_1153_e_2.png\" alt=\"\"></p>\n<p>Today Serval got up too late and only have time to make 2019 queries. As his best friend, can you help him find the positions of the head and the tail?</p>\n<p>Note that two cells are adjacent if and only if they have a common edge in the grid, and a snake can have a body of length 0, that means it only has adjacent head and tail.</p>\n<p>Also note that the snake is sleeping, so it won’t move while Serval using his device. And what’s obvious is that the snake position does not depend on your queries.</p>\n<h3 id=\"Input-4\"><a href=\"#Input-4\" class=\"headerlink\" title=\"Input\"></a>Input</h3><p>The first line contains a single integer $n$ (2≤$n$≤1000) $-$ the size of the grid.</p>\n<h3 id=\"Output-4\"><a href=\"#Output-4\" class=\"headerlink\" title=\"Output\"></a>Output</h3><p>When you are ready to answer, you should print <strong>! x1 y1 x2 y2</strong>, where $(x_1,y_1)$ represents the position of the head and $(x_2,y_2)$ represents the position of the tail. You can print head and tail in any order.</p>\n<h3 id=\"Interaction\"><a href=\"#Interaction\" class=\"headerlink\" title=\"Interaction\"></a>Interaction</h3><p>To make a query, you should print <strong>? x1 y1 x2 y2</strong> (1≤$x_1$≤$x_2$≤𝑛, 1≤$y_1$≤$y_2$≤$n$), representing a rectangle consisting of all cells $(x,y)$ such that $x_1$≤$x$≤$x_2$ and $y_1$≤$y$≤$y_2$. You will get a single integer as the answer.</p>\n<p>After printing a query, do not forget to output the end of line and flush the output, otherwise you will get <strong>Idleness limit exceeded</strong>. To do this, use:</p>\n<ul>\n<li><strong>fflush(stdout)</strong> or <strong>cout.flush()</strong> in C++;</li>\n<li><strong>System.out.flush()</strong> in Java;</li>\n<li><strong>flush(output)</strong> in Pascal;</li>\n<li><strong>stdout.flush()</strong> in Python;<br>see documentation for other languages.</li>\n</ul>\n<p>Answer $-1$ instead of a valid answer means that you made an invalid query or exceeded the maximum number of queries. Exit immediately after receiving $-1$ and you will see <strong>Wrong answer</strong> verdict. Otherwise you can get an arbitrary verdict because your solution will continue to read from a closed stream.</p>\n<p>If your program cannot find out the head and tail of the snake correctly, you will also get a <strong>Wrong Answer</strong> verdict.</p>\n<h3 id=\"Hacks\"><a href=\"#Hacks\" class=\"headerlink\" title=\"Hacks\"></a>Hacks</h3><p>To make a hack, print a single integer $n$ (2≤$n$≤1000) in the first line, indicating the size of the grid.</p>\n<p>Then print an integer $k$ (2≤$k$≤𝑛2) in the second line, indicating the length of the snake.</p>\n<p>In the next $k$ lines, print $k$ pairs of integers $x_i,y_i$ (1≤$x_i,y_i$≤𝑛), each pair in a single line, indicating the $i$-th cell of snake, such that the adjacent pairs are adjacent, and all $k$ pairs are distinct.</p>\n<h3 id=\"Examples-4\"><a href=\"#Examples-4\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"input1-4\"><a href=\"#input1-4\" class=\"headerlink\" title=\"input1\"></a>input1</h4><p>2</p>\n<p>1</p>\n<p>0</p>\n<p>0</p>\n<h4 id=\"output1-4\"><a href=\"#output1-4\" class=\"headerlink\" title=\"output1\"></a>output1</h4><p>? 1 1 1 1</p>\n<p>? 1 2 1 2</p>\n<p>? 2 2 2 2</p>\n<p>! 1 1 2 1</p>\n<h4 id=\"input2-4\"><a href=\"#input2-4\" class=\"headerlink\" title=\"input2\"></a>input2</h4><p>3</p>\n<p>2</p>\n<p>0</p>\n<h4 id=\"output2-4\"><a href=\"#output2-4\" class=\"headerlink\" title=\"output2\"></a>output2</h4><p>? 2 2 2 2</p>\n<p>? 2 1 2 3</p>\n<p>! 2 1 2 3</p>\n<h3 id=\"Note-3\"><a href=\"#Note-3\" class=\"headerlink\" title=\"Note\"></a>Note</h3><p><img src=\"/img/cf_1153_e_3.png\" alt=\"\"><br><img src=\"/img/cf_1153_e_4.png\" alt=\"\"><br><img src=\"/img/cf_1153_e_5.png\" alt=\"\"><br><img src=\"/img/cf_1153_e_6.png\" alt=\"\"></p>\n<p>The pictures above show our queries and the answers in the first example. We first made a query for (1,1) and got an answer 1, then found that it must be connected to exactly one other cell. Then we made a query for (1,2) and got an answer of 0, then knew that the snake never entered it. So the cell connected to (1,1) must be (2,1). Then we made a query for (2,2) and got an answer 0, then knew that it never entered (2,2) as well. So the snake cannot leave (2,1), which implies that the answer is (1,1) and (2,1).</p>\n<p><img src=\"/img/cf_1153_e_7.png\" alt=\"\"><br><img src=\"/img/cf_1153_e_8.png\" alt=\"\"><br><img src=\"/img/cf_1153_e_9.png\" alt=\"\"></p>\n<p>The pictures above show our queries and the answers in the second example. By making query to (2,2) and receiving 2, we found that the snake occupies (2,2). And by making query to rectangle from (2,1) to (2,3) and receiving answer 0, we knew that it never goes out of the rectangle from (2,1) to (2,3). Since the first answer is 2, both (2,1) and (2,3) must be occupied but none of others, so the answer is (2,1) and (2,3).</p>\n<h3 id=\"题意-4\"><a href=\"#题意-4\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>现在有一条蛇在一个方格图中，你可以给出不超过2019次询问，每次询问一个矩形，回答是，你用这个矩形去切蛇，可以得到这个蛇被切了多少刀，现在问你蛇头和蛇尾的位置。</p>\n<h3 id=\"分析-4\"><a href=\"#分析-4\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>首先我们可以观察到，当一个矩形切下去之后发现切了奇数刀，那么可以有必然存在一个头或者尾在矩形中。</p>\n<p>然后我们可以用$(n-1)&lt;&lt;1$次询问得到所有的行和列对应的切的次数。</p>\n<p>然后可以证明的是，所有的数据中必然存在奇数。反证法易得。</p>\n<p>然后可以证明奇数对应的行或者列左右必然存在头或者尾。</p>\n<p>所以可以得到一个很直观的$O(6n)$的做法，$2n$用来寻找，剩下的$4n$来搜索答案。但是这必然会超过2019.</p>\n<p>考虑哪些步骤可以优化？</p>\n<p>$2n$不可优化，必然就只能优化搜索过程。</p>\n<p>需要注意的是，可能存在行或者列不存在奇数的情况，稍微分析可以得到这种情况的特点了，头和尾在同一行或者同一列中。</p>\n<p>我们考虑到，我们只用考虑奇偶的情况，而不用考虑具体值。</p>\n<p>因为奇偶的加减特性，我们可以二分这个答案。</p>\n<p>除此之外，如果行和列都有奇数值，那么可以得到行和列对应的四个点中，两个点是答案，枚举任何一个就可以得到答案。</p>\n<h3 id=\"代码-4\"><a href=\"#代码-4\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">1005</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; r,c;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">que</span><span class=\"params\">(<span class=\"keyword\">int</span> u,<span class=\"keyword\">int</span> d,<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"? %d %d %d %d\\n\"</span>,u,l,d,r);</span><br><span class=\"line\">\tfflush(<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> nouse;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;nouse);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> nouse&amp;<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=n;i++) <span class=\"keyword\">if</span>(que(i,i,<span class=\"number\">1</span>,n)) r.push_back(i);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=n;i++) <span class=\"keyword\">if</span>(que(<span class=\"number\">1</span>,n,i,i)) c.push_back(i);</span><br><span class=\"line\">\tassert(r.size()+c.size()&gt;=<span class=\"number\">2</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(c.empty()||r.empty())&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">bool</span> change = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(c.empty()) &#123;</span><br><span class=\"line\">\t\t\tswap(r,c);</span><br><span class=\"line\">\t\t\tchange = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> l = <span class=\"number\">1</span>,r = n;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(l&lt;r)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> mid = l+r&gt;&gt;<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> upper = l,down = mid,left = c[<span class=\"number\">0</span>],right = c[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(change) swap(left,upper),swap(down,right);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(que(upper,down,left,right)) r = mid;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> l = mid+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!change) <span class=\"built_in\">printf</span>(<span class=\"string\">\"! %d %d %d %d\\n\"</span>,l,c[<span class=\"number\">1</span>],l,c[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">\"! %d %d %d %d\\n\"</span>,c[<span class=\"number\">0</span>],l,c[<span class=\"number\">1</span>],l);</span><br><span class=\"line\">\t\tfflush(<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(que(r[<span class=\"number\">0</span>],r[<span class=\"number\">0</span>],c[<span class=\"number\">0</span>],c[<span class=\"number\">0</span>])) <span class=\"built_in\">printf</span>(<span class=\"string\">\"! %d %d %d %d\\n\"</span>,r[<span class=\"number\">0</span>],c[<span class=\"number\">0</span>],r[<span class=\"number\">1</span>],c[<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">\"! %d %d %d %d\\n\"</span>,r[<span class=\"number\">0</span>],c[<span class=\"number\">1</span>],r[<span class=\"number\">1</span>],c[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\tfflush(<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"F-Serval-and-Bonus-Problem\"><a href=\"#F-Serval-and-Bonus-Problem\" class=\"headerlink\" title=\"F. Serval and Bonus Problem\"></a>F. Serval and Bonus Problem</h2><p><a href=\"https://codeforces.com/contest/1153/problem/F\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述-5\"><a href=\"#题目描述-5\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>Getting closer and closer to a mathematician, Serval becomes a university student on math major in Japari University. On the Calculus class, his teacher taught him how to calculate the expected length of a random subsegment of a given segment. Then he left a bonus problem as homework, with the award of a garage kit from IOI. The bonus is to extend this problem to the general case as follows.</p>\n<p>You are given a segment with length $l$. We randomly choose $n$ segments by choosing two points (maybe with non-integer coordinates) from the given segment equiprobably and the interval between the two points forms a segment. You are given the number of random segments $n$, and another integer $k$. The $2n$ endpoints of the chosen segments split the segment into ($2n+1$) intervals. Your task is to calculate the expected total length of those intervals that are covered by at least $k$ segments of the $n$ random segments.</p>\n<p>You should find the answer modulo $998244353$.</p>\n<h3 id=\"Input-5\"><a href=\"#Input-5\" class=\"headerlink\" title=\"Input\"></a>Input</h3><p>First line contains three space-separated positive integers 𝑛, 𝑘 and 𝑙 ($1\\leq k\\leq n\\leq 2000,1\\leq l\\leq 10^9$).</p>\n<h3 id=\"Output-5\"><a href=\"#Output-5\" class=\"headerlink\" title=\"Output\"></a>Output</h3><p>Output one integer — the expected total length of all the intervals covered by at least $k$ segments of the $n$ random segments modulo $998244353$.</p>\n<p>Formally, let $M=998244353$. It can be shown that the answer can be expressed as an irreducible fraction $\\frac{p}{q}$, where $p$ and $q$ are integers and $q\\not\\equiv0(modM)$. Output the integer equal to $p\\cdot q^{-1}mod\\ M$. In other words, output such an integer $x$ that $0\\leq x&lt;M$ and $x\\cdot q\\equiv p(mod\\ M)$.</p>\n<h3 id=\"Examples-5\"><a href=\"#Examples-5\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"inpus1\"><a href=\"#inpus1\" class=\"headerlink\" title=\"inpus1\"></a>inpus1</h4><p>1 1 1</p>\n<h4 id=\"output1-5\"><a href=\"#output1-5\" class=\"headerlink\" title=\"output1\"></a>output1</h4><p>332748118</p>\n<h4 id=\"input2-5\"><a href=\"#input2-5\" class=\"headerlink\" title=\"input2\"></a>input2</h4><p>6 2 1</p>\n<h4 id=\"output2-5\"><a href=\"#output2-5\" class=\"headerlink\" title=\"output2\"></a>output2</h4><p>760234711</p>\n<h4 id=\"input3-2\"><a href=\"#input3-2\" class=\"headerlink\" title=\"input3\"></a>input3</h4><p>7 5 3</p>\n<h4 id=\"output3-2\"><a href=\"#output3-2\" class=\"headerlink\" title=\"output3\"></a>output3</h4><p>223383352</p>\n<h4 id=\"input4-1\"><a href=\"#input4-1\" class=\"headerlink\" title=\"input4\"></a>input4</h4><p>97 31 9984524</p>\n<h4 id=\"output4-1\"><a href=\"#output4-1\" class=\"headerlink\" title=\"output4\"></a>output4</h4><p>267137618</p>\n<h3 id=\"Note-4\"><a href=\"#Note-4\" class=\"headerlink\" title=\"Note\"></a>Note</h3><p>In the first example, the expected total length is $\\int_0^1 \\int_0^1 |x-y|\\ dx\\ dy = \\frac{1}{3} $, and $\\frac{1}{3}$ modulo $998244353$ is $332748118$.</p>\n<h3 id=\"题意-5\"><a href=\"#题意-5\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>长度为l的线段，随机选取n个线段，线段中至少被n个线段中k个线段覆盖的长度期望。</p>\n<h3 id=\"分析-5\"><a href=\"#分析-5\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>说实话我当时没做出来，看了题解才知道怎么做的，所以强烈建议看官方的题解。我这里也贴出来，感兴趣的可以看一下。</p>\n<p>Without loss of generality, assume that $l$=1. For a segment covering, the total length of the legal intervals is the probability that we choose another point $P$ on this segment randomly such that it is in the legal intervals. Since all $2n+1$ points ($P$ and the endpoints of each segment) are chosen randomly and independently, we only need to find the probability that point $P$ is in the legal intervals. Note that only the order of these $2n+1$ points make sense. Because the points are chosen in the segment, the probability that some of them coincide is $0$, so we can assume that all points do not coincide.</p>\n<p>Now the problem is, how to calculate the number of arrangements that $P$ is between at least $k$ pairs of endpoints. It can be solved by dynamic programming in time complexity of $O(n^2)$. We define $f(i,j,x)$ as the number of arrangements for the first $i$ positions, with $j$ points haven’t been matched, and $P$ appeared $x$ times (obviously $x=0$ or $1$). So we can get three different types of transition for the $i$-th position below:</p>\n<ul>\n<li>Place $P$ at $i$-th position (if $j\\geq k$): $f(i-1,j,0)\\rightarrow f(i,j,1)$</li>\n<li>Start a new segment (if $i+j+x&lt;2n$): $f(i-1,j-1,x)\\rightarrow f(i,j,x)$</li>\n<li>Match a started segment, note that we have 𝑗 choices of segments:$f(i-1,j+1,x)\\times(j+1)\\rightarrow f(i,j,x)$</li>\n</ul>\n<p>Then $f(2n+1,0,1)$ is the number of legal arrangements. Obviously, the total number of arrangements is $(2n+1)!$. However, there are 𝑛 pairs of endpoints whose indices can be swapped, and the indices 𝑛 segments can be rearranged. So the final answer is $\\frac{f(2n+1,0,1)\\times n!\\times 2^n}{(2n+1)!}$.</p>\n<p>可能是受了题解的影响，后来也没想出来其他解法。</p>\n<p>这里讲一下题解怎么做的。</p>\n<p>首先我们可以发现，长度和答案成正比，也就是说如果长度为1的时候答案是a，那么长度为2的时候答案就是2a%mod.</p>\n<p>然后我们不妨设长度为1，最后答案乘上l就行了。</p>\n<p>然后因为我们要找到至少被线段覆盖k次的所有点，所以我们不如加上一个虚拟点，这样就一共有了$(n&lt;&lt;1|1)$个点，然后需要判断这个虚拟点被多少条线段覆盖了，如果覆盖次数超过k次，就说明可以统计进答案。然后就可以发现，所有点是随机取的，所以我们假设所有点不会重合，那么所有点就可以离散成一个序列。然后就可以统计k的覆盖次数。</p>\n<p>接下来就是dp，我们设$dp[i][j][flag]$表示序列中前i个点，其中到目前为止有j条线段左节点出线了，但是右节点没有出现，也就是说当前这个点被覆盖了j次，flag表示虚拟点是否出现了。然后考虑转移：</p>\n<ul>\n<li>当前节点是虚拟节点<ul>\n<li>如果这个需要统计进入答案，也就是说明当前节点需要被覆盖k次及以上，所以 $j\\geq k$</li>\n<li>$dp[i][j][1]+=dp[i-1][j][0]$</li>\n</ul>\n</li>\n<li>当前节点是一个线段的左端点<ul>\n<li>也就是说左节点数量增加，被覆盖次数增加，但是不会影响虚拟节点的状态</li>\n<li>$dp[i][j+1][flag]+=dp[i-1][j][flag]$</li>\n</ul>\n</li>\n<li>当前节点是一个线段的右端点<ul>\n<li>也就是说右节点数量增加，被覆盖次数减少，但是不会影响虚拟节点的状态,注意右端点可能会有j个可能</li>\n<li>$dp[i][j-1][flag]+=dp[i-1][j][flag]*j$</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"代码-5\"><a href=\"#代码-5\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> mod = <span class=\"number\">998244353</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">2345</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> b)</span></span>&#123;<span class=\"keyword\">return</span> (a+b)%mod;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">mul</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> b)</span></span>&#123;<span class=\"keyword\">return</span> a*b%mod;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">fac</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a)</span> </span>&#123;<span class=\"keyword\">return</span> a==<span class=\"number\">1</span>?<span class=\"number\">1</span>:mul(a,fac(a<span class=\"number\">-1</span>));&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">qpow</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> b = mod<span class=\"number\">-2</span>)</span></span>&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ret = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(b)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(b&amp;<span class=\"number\">1</span>) ret = mul(ret,a);</span><br><span class=\"line\">\t\ta = mul(a,a);</span><br><span class=\"line\">\t\tb&gt;&gt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> n,k,l;</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> dp[maxm&lt;&lt;<span class=\"number\">1</span>][maxm][<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lld%lld%lld\"</span>,&amp;n,&amp;k,&amp;l);</span><br><span class=\"line\">\tdp[<span class=\"number\">0</span>][<span class=\"number\">0</span>][<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=(n&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>);i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j&lt;=n;j++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(j&gt;=k) dp[i][j][<span class=\"number\">1</span>] = add(dp[i][j][<span class=\"number\">1</span>],dp[i<span class=\"number\">-1</span>][j][<span class=\"number\">0</span>]);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> flag = <span class=\"number\">0</span>;flag&lt;<span class=\"number\">2</span>;flag++)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(dp[i<span class=\"number\">-1</span>][j][flag])&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(j) dp[i][j<span class=\"number\">-1</span>][flag] = add(dp[i][j<span class=\"number\">-1</span>][flag],mul(dp[i<span class=\"number\">-1</span>][j][flag],j));</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(i+(j+<span class=\"number\">1</span>)-(<span class=\"number\">1</span>-flag)&lt;=(n&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>)) dp[i][j+<span class=\"number\">1</span>][flag] = add(dp[i][j+<span class=\"number\">1</span>][flag],dp[i<span class=\"number\">-1</span>][j][flag]);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ans = mul(dp[n&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>][<span class=\"number\">0</span>][<span class=\"number\">1</span>],qpow(<span class=\"number\">2</span>,n));</span><br><span class=\"line\">\tans = mul(mul(ans,l),mul(fac(n),qpow(fac(n&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>))));</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,ans);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"A-Serval-and-Bus\"><a href=\"#A-Serval-and-Bus\" class=\"headerlink\" title=\"A. Serval and Bus\"></a>A. Serval and Bus</h2><p><a href=\"http://codeforces.com/contest/1153/problem/A\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>","more":"<h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>It is raining heavily. But this is the first day for Serval, who just became 3 years old, to go to the kindergarten. Unfortunately, he lives far from kindergarten, and his father is too busy to drive him there. The only choice for this poor little boy is to wait for a bus on this rainy day. Under such circumstances, the poor boy will use the first bus he sees no matter where it goes. If several buses come at the same time, he will choose one randomly.</p>\n<p>Serval will go to the bus station at time $t$, and there are $n$ bus routes which stop at this station. For the $i$-th bus route, the first bus arrives at time $s_i$ minutes, and each bus of this route comes $d_i$ minutes later than the previous one.</p>\n<p>As Serval’s best friend, you wonder which bus route will he get on. If several buses arrive at the same time, you can print any of them.</p>\n<h3 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h3><p>The first line contains two space-separated integers $n$ and $t$ (1≤$n$≤100, 1≤$t$≤$10^5$) $-$ the number of bus routes and the time Serval goes to the station.</p>\n<p>Each of the next $n$ lines contains two space-separated integers $s_i$ and $d_i$ (1≤$s_i,d_i$≤$10^5$) $-$ the time when the first bus of this route arrives and the interval between two buses of this route.</p>\n<h3 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h3><p>Print one number $-$ what bus route Serval will use. If there are several possible answers, you can print any of them.</p>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"input1\"><a href=\"#input1\" class=\"headerlink\" title=\"input1\"></a>input1</h4><p>2 2</p>\n<p>6 4</p>\n<p>9 5</p>\n<h4 id=\"output1\"><a href=\"#output1\" class=\"headerlink\" title=\"output1\"></a>output1</h4><p>1</p>\n<h4 id=\"input2\"><a href=\"#input2\" class=\"headerlink\" title=\"input2\"></a>input2</h4><p>5 5</p>\n<p>3 3</p>\n<p>2 5</p>\n<p>5 6</p>\n<p>4 9</p>\n<p>6 1</p>\n<h4 id=\"output2\"><a href=\"#output2\" class=\"headerlink\" title=\"output2\"></a>output2</h4><p>3</p>\n<h4 id=\"input3\"><a href=\"#input3\" class=\"headerlink\" title=\"input3\"></a>input3</h4><p>3 7</p>\n<p>2 2</p>\n<p>2 3</p>\n<p>2 4</p>\n<h4 id=\"output3\"><a href=\"#output3\" class=\"headerlink\" title=\"output3\"></a>output3</h4><p>1</p>\n<h3 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>zuhiul很忙，他要约妹子，他一共有$n$个妹子要约，但是他$t$天后才有空，妹子们也不是每天都有时间，但是妹子都是周期性有时间，比如，第$i$个妹子，$s_i$天之后才有时间，而且每$d_i$天就会再次出线，现在问你，zuhiul最早会和哪个妹子约会，如果会和多个妹子约会，只需要输出任意一个妹子就行了。</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>只需要枚举每个妹子，然后看一下这个妹子什么时候最早可以邀约，然后算一下min就可以了</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">105</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> s[maxm],d[maxm];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n,t;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;t;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ind,sum = <span class=\"number\">1e8</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;s[i]&gt;&gt;d[i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(s[i]&gt;=t)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(sum&gt;s[i])&#123;</span><br><span class=\"line\">\t\t\t\tsum = s[i];</span><br><span class=\"line\">\t\t\t\tind = i;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> nee = t-s[i];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(nee%d[i]!=<span class=\"number\">0</span>) nee = (nee/d[i]+<span class=\"number\">1</span>)*d[i];</span><br><span class=\"line\">\t\t\tnee+=s[i];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(nee&lt;sum)&#123;</span><br><span class=\"line\">\t\t\t\tsum = nee;</span><br><span class=\"line\">\t\t\t\tind = i;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;ind&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"B-Serval-and-Toy-Bricks\"><a href=\"#B-Serval-and-Toy-Bricks\" class=\"headerlink\" title=\"B. Serval and Toy Bricks\"></a>B. Serval and Toy Bricks</h2><p><a href=\"http://codeforces.com/contest/1153/problem/B\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述-1\"><a href=\"#题目描述-1\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>Luckily, Serval got onto the right bus, and he came to the kindergarten on time. After coming to kindergarten, he found the toy bricks very funny.</p>\n<p>He has a special interest to create difficult problems for others to solve. This time, with many $1\\times 1\\times 1$ toy bricks, he builds up a 3-dimensional object. We can describe this object with a $n\\times m$ matrix, such that in each cell $(i,j)$ , there are $h_{i,j}$ bricks standing on the top of each other.</p>\n<p>However, Serval doesn’t give you any $h_{i,j}$, and just give you the front view, left view, and the top view of this object, and he is now asking you to restore the object. Note that in the front view, there are $m$ columns, and in the $i$-th of them, the height is the maximum of $h_{1,i},h_{2,i},\\dots,h_{n,i}$. It is similar for the left view, where there are $n$ columns. And in the top view, there is an 𝑛×𝑚 matrix $t_{i,j}$, where $t_{i,j}$ is 0 or 1. If $t_{i,j}$ equals 1, that means $h_{i,j}$&gt;0, otherwise, $h_{i,j}$=0.</p>\n<p>However, Serval is very lonely because others are bored about his unsolvable problems before, and refused to solve this one, although this time he promises there will be at least one object satisfying all the views. As his best friend, can you have a try?</p>\n<h3 id=\"Input-1\"><a href=\"#Input-1\" class=\"headerlink\" title=\"Input\"></a>Input</h3><p>The first line contains two space-separated integers $n$ and $t$ (1≤$n$≤100, 1≤$t$≤$10^5$) $-$ the number of bus routes and the time Serval goes to the station.</p>\n<p>Each of the next $n$ lines contains two space-separated integers $s_i$ and $d_i$ (1≤$s_i,d_i$≤$10^5$) $-$ the time when the first bus of this route arrives and the interval between two buses of this route.</p>\n<h3 id=\"Output-1\"><a href=\"#Output-1\" class=\"headerlink\" title=\"Output\"></a>Output</h3><p>Print one number $-$ what bus route Serval will use. If there are several possible answers, you can print any of them.</p>\n<h3 id=\"Examples-1\"><a href=\"#Examples-1\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"input1-1\"><a href=\"#input1-1\" class=\"headerlink\" title=\"input1\"></a>input1</h4><p>3 7 3</p>\n<p>2 3 0 0 2 0 1</p>\n<p>2 1 3</p>\n<p>1 0 0 0 1 0 0</p>\n<p>0 0 0 0 0 0 1</p>\n<p>1 1 0 0 0 0 0</p>\n<h4 id=\"output1-1\"><a href=\"#output1-1\" class=\"headerlink\" title=\"output1\"></a>output1</h4><p>1 0 0 0 2 0 0</p>\n<p>0 0 0 0 0 0 1</p>\n<p>2 3 0 0 0 0 0</p>\n<h4 id=\"input2-1\"><a href=\"#input2-1\" class=\"headerlink\" title=\"input2\"></a>input2</h4><p>4 5 5</p>\n<p>3 5 2 0 4</p>\n<p>4 2 5 4</p>\n<p>0 0 0 0 1</p>\n<p>1 0 1 0 0</p>\n<p>0 1 0 0 0</p>\n<p>1 1 1 0 0</p>\n<h4 id=\"output2-1\"><a href=\"#output2-1\" class=\"headerlink\" title=\"output2\"></a>output2</h4><p>0 0 0 0 4</p>\n<p>1 0 2 0 0</p>\n<p>0 5 0 0 0</p>\n<p>3 4 1 0 0</p>\n<h3 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h3><p><img src=\"/img/cf_1153_b_1.png\" alt=\"\"></p>\n<p>The graph above illustrates the object in the first example.</p>\n<p><img src=\"/img/cf_1153_b_2.png\" alt=\"\"></p>\n<p>The first graph illustrates the object in the example output for the second example, and the second graph shows the three-view drawing of it.</p>\n<h3 id=\"题意-1\"><a href=\"#题意-1\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>zuhiul和妹子玩游戏，妹子搭了一个积木，然后zuhiul猜积木长啥样，zuhiul必然不会，于是小姐姐放过了他，告诉了他现在的主视图，侧视图和俯视图，然后让zuhiul猜，zuhiul还是不会，但是为了脸面不能说不会，然后来问你了。你需要输出一种可能的解满足这个三视图。</p>\n<h3 id=\"分析-1\"><a href=\"#分析-1\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>告诉了主视图和左视图，相当于限制了最大值，告诉俯视图相当于告诉哪里可能有方块。然后枚举俯视图的每个位置，输出答案即可。</p>\n<h3 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">105</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> hang[maxm],lie[maxm],nouse;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;m&gt;&gt;nouse;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;m;i++) <span class=\"built_in\">cin</span>&gt;&gt;hang[i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;n;i++) <span class=\"built_in\">cin</span>&gt;&gt;lie[i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>,a;j&lt;m;j++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cin</span>&gt;&gt;a;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(a) <span class=\"built_in\">cout</span>&lt;&lt;min(lie[i],hang[j])&lt;&lt;<span class=\"string\">' '</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"number\">0</span>&lt;&lt;<span class=\"string\">' '</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"C-Serval-and-Parenthesis-Sequence\"><a href=\"#C-Serval-and-Parenthesis-Sequence\" class=\"headerlink\" title=\"C. Serval and Parenthesis Sequence\"></a>C. Serval and Parenthesis Sequence</h2><p><a href=\"http://codeforces.com/contest/1153/problem/C\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述-2\"><a href=\"#题目描述-2\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>Serval soon said goodbye to Japari kindergarten, and began his life in Japari Primary School.</p>\n<p>In his favorite math class, the teacher taught him the following interesting definitions.</p>\n<p>A parenthesis sequence is a string, containing only characters “(“ and “)”.</p>\n<p>A correct parenthesis sequence is a parenthesis sequence that can be transformed into a correct arithmetic expression by inserting characters “1” and “+” between the original characters of the sequence. For example, parenthesis sequences “()()”, “(())” are correct (the resulting expressions are: “(1+1)+(1+1)”, “((1+1)+1)”), while “)(“ and “)” are not. Note that the empty string is a correct parenthesis sequence by definition.</p>\n<p>We define that $|s|$ as the length of string $s$. A strict prefix $s[1\\dots l]$ (1 ≤ $l$ &lt; $|s|$) of a string $s=s_{1}s_{2}\\dots s_{|s|}$ is string $s_{1}s_{2}\\dots s_{l}$. Note that the empty string and the whole string are not strict prefixes of any string by the definition.</p>\n<p>Having learned these definitions, he comes up with a new problem. He writes down a string $s$ containing only characters “(“, “)” and “?”. And what he is going to do, is to replace each of the “?” in $s$ independently by one of “(“ and “)” to make all strict prefixes of the new sequence not a correct parenthesis sequence, while the new sequence should be a correct parenthesis sequence.</p>\n<p>After all, he is just a primary school student so this problem is too hard for him to solve. As his best friend, can you help him to replace the question marks? If there are many solutions, any of them is acceptable.</p>\n<h3 id=\"Input-2\"><a href=\"#Input-2\" class=\"headerlink\" title=\"Input\"></a>Input</h3><p>The first line contains a single integer $|s|$ (1≤$|s|$≤$3\\cdot 10^5$), the length of the string.</p>\n<p>The second line contains a string $s$, containing only “(“, “)” and “?”.</p>\n<h3 id=\"Output-2\"><a href=\"#Output-2\" class=\"headerlink\" title=\"Output\"></a>Output</h3><p>A single line contains a string representing the answer.</p>\n<p>If there are many solutions, any of them is acceptable.</p>\n<p>If there is no answer, print a single line containing “:(“ (without the quotes).</p>\n<h3 id=\"Examples-2\"><a href=\"#Examples-2\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"input1-2\"><a href=\"#input1-2\" class=\"headerlink\" title=\"input1\"></a>input1</h4><p>6<br>(?????</p>\n<h4 id=\"output1-2\"><a href=\"#output1-2\" class=\"headerlink\" title=\"output1\"></a>output1</h4><p>(()())</p>\n<h4 id=\"input2-2\"><a href=\"#input2-2\" class=\"headerlink\" title=\"input2\"></a>input2</h4><p>10<br>(???(???(?</p>\n<h4 id=\"output2-2\"><a href=\"#output2-2\" class=\"headerlink\" title=\"output2\"></a>output2</h4><p>:(</p>\n<h3 id=\"Note-1\"><a href=\"#Note-1\" class=\"headerlink\" title=\"Note\"></a>Note</h3><p>It can be proved that there is no solution for the second sample, so print “:(“.</p>\n<h3 id=\"题意-2\"><a href=\"#题意-2\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>给你一堆左括号右括号和问号，问你能否把问号变成左括号或者右括号，使得这个变成一个括号匹配的序列，并且序列的任何前缀不是一个括号匹配序列。</p>\n<h3 id=\"分析-2\"><a href=\"#分析-2\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>显然对于后一个条件，我们只需要让最左边的左括号和最右边的右括号匹配就行了，然后中间是一个括号匹配序列就行了。然后填充的时候贪心的让左边填充左括号,右边填充右括号,然后check一下就行了.</p>\n<h3 id=\"代码-2\"><a href=\"#代码-2\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> len;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">3e5</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">char</span> que[maxm];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">NO</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\":(\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;len&gt;&gt;que;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(len&amp;<span class=\"number\">1</span>) NO();</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(que[<span class=\"number\">0</span>]==<span class=\"string\">'?'</span>) que[<span class=\"number\">0</span>] = <span class=\"string\">'('</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(que[len<span class=\"number\">-1</span>]==<span class=\"string\">'?'</span>) que[len<span class=\"number\">-1</span>] = <span class=\"string\">')'</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(que[<span class=\"number\">0</span>]!=<span class=\"string\">'('</span>) NO();</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(que[len<span class=\"number\">-1</span>]!=<span class=\"string\">')'</span>) NO();</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(len==<span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">puts</span>(<span class=\"string\">\"()\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> l = <span class=\"number\">0</span>,r = <span class=\"number\">0</span>,has = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;len<span class=\"number\">-1</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(que[i]==<span class=\"string\">'('</span>) l++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(que[i]==<span class=\"string\">')'</span>) r++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> has++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"built_in\">abs</span>(l-r)&gt;has) NO();</span><br><span class=\"line\">\tl = (len<span class=\"number\">-2</span>)/<span class=\"number\">2</span> - l;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;len<span class=\"number\">-1</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(que[i]==<span class=\"string\">'?'</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(l)&#123;</span><br><span class=\"line\">\t\t\t\tque[i] = <span class=\"string\">'('</span>;</span><br><span class=\"line\">\t\t\t\tl--;</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span> que[i] = <span class=\"string\">')'</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\thas = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;len<span class=\"number\">-1</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(que[i]==<span class=\"string\">'('</span>) has++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> has--;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(has&lt;<span class=\"number\">0</span>) NO();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">puts</span>(que);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"D-Serval-and-Rooted-Tree\"><a href=\"#D-Serval-and-Rooted-Tree\" class=\"headerlink\" title=\"D. Serval and Rooted Tree\"></a>D. Serval and Rooted Tree</h2><p><a href=\"http://codeforces.com/contest/1153/problem/D\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述-3\"><a href=\"#题目描述-3\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>Now Serval is a junior high school student in Japari Middle School, and he is still thrilled on math as before.</p>\n<p>As a talented boy in mathematics, he likes to play with numbers. This time, he wants to play with numbers on a rooted tree.</p>\n<p>A tree is a connected graph without cycles. A rooted tree has a special vertex called the root. A parent of a node $v$ is the last different from $v$ vertex on the path from the root to the vertex $v$. Children of vertex $v$ are all nodes for which $v$ is the parent. A vertex is a leaf if it has no children.</p>\n<p>The rooted tree Serval owns has $n$ nodes, node 1 is the root. Serval will write some numbers into all nodes of the tree. However, there are some restrictions. Each of the nodes except leaves has an operation max or min written in it, indicating that the number in this node should be equal to the maximum or minimum of all the numbers in its sons, respectively.</p>\n<p>Assume that there are $k$ leaves in the tree. Serval wants to put integers $1,2,\\dots,k$ to the $k$ leaves (each number should be used exactly once). He loves large numbers, so he wants to maximize the number in the root. As his best friend, can you help him?</p>\n<h3 id=\"Input-3\"><a href=\"#Input-3\" class=\"headerlink\" title=\"Input\"></a>Input</h3><p>The first line contains an integer $n$ (2≤$n$≤$3\\cdot 10^5$), the size of the tree.</p>\n<p>The second line contains $n$ integers, the $i$-th of them represents the operation in the node $i$. 0 represents min and 1 represents max. If the node is a leaf, there is still a number of 0 or 1, but you can ignore it.</p>\n<p>The third line contains $n-1$ integers $f_2,f_3,\\dots,f_n$ (1≤$f_i≤$i-1$), where $f_i$ represents the parent of the node $i$.</p>\n<h3 id=\"Output-3\"><a href=\"#Output-3\" class=\"headerlink\" title=\"Output\"></a>Output</h3><p>Output one integer $-$ the maximum possible number in the root of the tree.</p>\n<h3 id=\"Examples-3\"><a href=\"#Examples-3\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"input1-3\"><a href=\"#input1-3\" class=\"headerlink\" title=\"input1\"></a>input1</h4><p>6</p>\n<p>1 0 1 1 0 1</p>\n<p>1 2 2 2 2</p>\n<h4 id=\"output1-3\"><a href=\"#output1-3\" class=\"headerlink\" title=\"output1\"></a>output1</h4><p>1</p>\n<h4 id=\"input2-3\"><a href=\"#input2-3\" class=\"headerlink\" title=\"input2\"></a>input2</h4><p>5</p>\n<p>1 0 1 0 1</p>\n<p>1 1 1 1</p>\n<h4 id=\"output2-3\"><a href=\"#output2-3\" class=\"headerlink\" title=\"output2\"></a>output2</h4><p>4</p>\n<h4 id=\"input3-1\"><a href=\"#input3-1\" class=\"headerlink\" title=\"input3\"></a>input3</h4><p>8</p>\n<p>1 0 0 1 0 1 1 0</p>\n<p>1 1 2 2 3 3 3</p>\n<h4 id=\"output3-1\"><a href=\"#output3-1\" class=\"headerlink\" title=\"output3\"></a>output3</h4><p>4</p>\n<h4 id=\"input4\"><a href=\"#input4\" class=\"headerlink\" title=\"input4\"></a>input4</h4><p>9</p>\n<p>1 1 0 0 1 0 1 0 1</p>\n<p>1 1 2 2 3 3 4 4</p>\n<h4 id=\"output4\"><a href=\"#output4\" class=\"headerlink\" title=\"output4\"></a>output4</h4><p>5</p>\n<h3 id=\"Note-2\"><a href=\"#Note-2\" class=\"headerlink\" title=\"Note\"></a>Note</h3><p>Pictures below explain the examples. The numbers written in the middle of the nodes are their indices, and the numbers written on the top are the numbers written in the nodes.</p>\n<p>In the first example, no matter how you arrange the numbers, the answer is $1$.</p>\n<p><img src=\"/img/cf_1153_d_1.png\" alt=\"\"></p>\n<p>In the second example, no matter how you arrange the numbers, the answer is $4$.</p>\n<p><img src=\"/img/cf_1153_d_2.png\" alt=\"\"></p>\n<p>In the third example, one of the best solution to achieve $4$ is to arrange $4$ and $5$ to nodes $4$ and $5$.</p>\n<p><img src=\"/img/cf_1153_d_3.png\" alt=\"\"></p>\n<p>In the fourth example, the best solution is to arrange $5$ to node $5$.</p>\n<p><img src=\"/img/cf_1153_d_4.png\" alt=\"\"></p>\n<h3 id=\"题意-3\"><a href=\"#题意-3\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>给你一颗有根树，每个非叶节点上有一个函数，可能为min或者max，你需要在k个叶节点上填上$1,2,\\dots,k$,使得经过非叶节点的操作之后，根节点的值最大。</p>\n<h3 id=\"分析-3\"><a href=\"#分析-3\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>显然是要分析函数的作用。</p>\n<p>如果是取max，说明所有的子节点中，我们可以把某一个子节点的值取到最大，然后其他的节点全塞垃圾值。</p>\n<p>如果是取min，说明所有子节点都起作用，说明我们对于每个子节点都要尽可能的大。</p>\n<p>然后就可以得到，max的策略是，找到孙子节点最少的子节点，填充大值，min的策略是，对所有子节点求和。</p>\n<p>然后这样得到的就是所有对答案有贡献的节点数，然后用总结点数减去贡献节点数就是答案。</p>\n<h3 id=\"代码-3\"><a href=\"#代码-3\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">3e5</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,cnt;</span><br><span class=\"line\"><span class=\"keyword\">int</span> maxn[maxm];</span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; son[maxm];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> a)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(son[a].size()==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\tcnt++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(maxn[a])&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> minm = <span class=\"number\">1e8</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i:son[a]) minm = min(minm,dfs(i));</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> minm;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i:son[a]) sum+=dfs(i);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=n;i++) <span class=\"built_in\">cin</span>&gt;&gt;maxn[i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>,pre;i&lt;=n;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;pre;</span><br><span class=\"line\">\t\tson[pre].push_back(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> nouse = dfs(<span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;cnt - nouse+<span class=\"number\">1</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"E-Serval-and-Snake\"><a href=\"#E-Serval-and-Snake\" class=\"headerlink\" title=\"E. Serval and Snake\"></a>E. Serval and Snake</h2><p><a href=\"http://codeforces.com/contest/1153/problem/E\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述-4\"><a href=\"#题目描述-4\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p><em>This is an interactive problem.</em></p>\n<p>Now Serval is a senior high school student in Japari Middle School. However, on the way to the school, he must go across a pond, in which there is a dangerous snake. The pond can be represented as a $n\\times n$ grid. The snake has a head and a tail in different cells, and its body is a series of adjacent cells connecting the head and the tail without self-intersecting. If Serval hits its head or tail, the snake will bite him and he will die.</p>\n<p>Luckily, he has a special device which can answer the following question: you can pick a rectangle, it will tell you the number of times one needs to cross the border of the rectangle walking cell by cell along the snake from the head to the tail. The pictures below show a possible snake and a possible query to it, which will get an answer of $4$.</p>\n<p><img src=\"/img/cf_1153_e_1.png\" alt=\"\"><br><img src=\"/img/cf_1153_e_2.png\" alt=\"\"></p>\n<p>Today Serval got up too late and only have time to make 2019 queries. As his best friend, can you help him find the positions of the head and the tail?</p>\n<p>Note that two cells are adjacent if and only if they have a common edge in the grid, and a snake can have a body of length 0, that means it only has adjacent head and tail.</p>\n<p>Also note that the snake is sleeping, so it won’t move while Serval using his device. And what’s obvious is that the snake position does not depend on your queries.</p>\n<h3 id=\"Input-4\"><a href=\"#Input-4\" class=\"headerlink\" title=\"Input\"></a>Input</h3><p>The first line contains a single integer $n$ (2≤$n$≤1000) $-$ the size of the grid.</p>\n<h3 id=\"Output-4\"><a href=\"#Output-4\" class=\"headerlink\" title=\"Output\"></a>Output</h3><p>When you are ready to answer, you should print <strong>! x1 y1 x2 y2</strong>, where $(x_1,y_1)$ represents the position of the head and $(x_2,y_2)$ represents the position of the tail. You can print head and tail in any order.</p>\n<h3 id=\"Interaction\"><a href=\"#Interaction\" class=\"headerlink\" title=\"Interaction\"></a>Interaction</h3><p>To make a query, you should print <strong>? x1 y1 x2 y2</strong> (1≤$x_1$≤$x_2$≤𝑛, 1≤$y_1$≤$y_2$≤$n$), representing a rectangle consisting of all cells $(x,y)$ such that $x_1$≤$x$≤$x_2$ and $y_1$≤$y$≤$y_2$. You will get a single integer as the answer.</p>\n<p>After printing a query, do not forget to output the end of line and flush the output, otherwise you will get <strong>Idleness limit exceeded</strong>. To do this, use:</p>\n<ul>\n<li><strong>fflush(stdout)</strong> or <strong>cout.flush()</strong> in C++;</li>\n<li><strong>System.out.flush()</strong> in Java;</li>\n<li><strong>flush(output)</strong> in Pascal;</li>\n<li><strong>stdout.flush()</strong> in Python;<br>see documentation for other languages.</li>\n</ul>\n<p>Answer $-1$ instead of a valid answer means that you made an invalid query or exceeded the maximum number of queries. Exit immediately after receiving $-1$ and you will see <strong>Wrong answer</strong> verdict. Otherwise you can get an arbitrary verdict because your solution will continue to read from a closed stream.</p>\n<p>If your program cannot find out the head and tail of the snake correctly, you will also get a <strong>Wrong Answer</strong> verdict.</p>\n<h3 id=\"Hacks\"><a href=\"#Hacks\" class=\"headerlink\" title=\"Hacks\"></a>Hacks</h3><p>To make a hack, print a single integer $n$ (2≤$n$≤1000) in the first line, indicating the size of the grid.</p>\n<p>Then print an integer $k$ (2≤$k$≤𝑛2) in the second line, indicating the length of the snake.</p>\n<p>In the next $k$ lines, print $k$ pairs of integers $x_i,y_i$ (1≤$x_i,y_i$≤𝑛), each pair in a single line, indicating the $i$-th cell of snake, such that the adjacent pairs are adjacent, and all $k$ pairs are distinct.</p>\n<h3 id=\"Examples-4\"><a href=\"#Examples-4\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"input1-4\"><a href=\"#input1-4\" class=\"headerlink\" title=\"input1\"></a>input1</h4><p>2</p>\n<p>1</p>\n<p>0</p>\n<p>0</p>\n<h4 id=\"output1-4\"><a href=\"#output1-4\" class=\"headerlink\" title=\"output1\"></a>output1</h4><p>? 1 1 1 1</p>\n<p>? 1 2 1 2</p>\n<p>? 2 2 2 2</p>\n<p>! 1 1 2 1</p>\n<h4 id=\"input2-4\"><a href=\"#input2-4\" class=\"headerlink\" title=\"input2\"></a>input2</h4><p>3</p>\n<p>2</p>\n<p>0</p>\n<h4 id=\"output2-4\"><a href=\"#output2-4\" class=\"headerlink\" title=\"output2\"></a>output2</h4><p>? 2 2 2 2</p>\n<p>? 2 1 2 3</p>\n<p>! 2 1 2 3</p>\n<h3 id=\"Note-3\"><a href=\"#Note-3\" class=\"headerlink\" title=\"Note\"></a>Note</h3><p><img src=\"/img/cf_1153_e_3.png\" alt=\"\"><br><img src=\"/img/cf_1153_e_4.png\" alt=\"\"><br><img src=\"/img/cf_1153_e_5.png\" alt=\"\"><br><img src=\"/img/cf_1153_e_6.png\" alt=\"\"></p>\n<p>The pictures above show our queries and the answers in the first example. We first made a query for (1,1) and got an answer 1, then found that it must be connected to exactly one other cell. Then we made a query for (1,2) and got an answer of 0, then knew that the snake never entered it. So the cell connected to (1,1) must be (2,1). Then we made a query for (2,2) and got an answer 0, then knew that it never entered (2,2) as well. So the snake cannot leave (2,1), which implies that the answer is (1,1) and (2,1).</p>\n<p><img src=\"/img/cf_1153_e_7.png\" alt=\"\"><br><img src=\"/img/cf_1153_e_8.png\" alt=\"\"><br><img src=\"/img/cf_1153_e_9.png\" alt=\"\"></p>\n<p>The pictures above show our queries and the answers in the second example. By making query to (2,2) and receiving 2, we found that the snake occupies (2,2). And by making query to rectangle from (2,1) to (2,3) and receiving answer 0, we knew that it never goes out of the rectangle from (2,1) to (2,3). Since the first answer is 2, both (2,1) and (2,3) must be occupied but none of others, so the answer is (2,1) and (2,3).</p>\n<h3 id=\"题意-4\"><a href=\"#题意-4\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>现在有一条蛇在一个方格图中，你可以给出不超过2019次询问，每次询问一个矩形，回答是，你用这个矩形去切蛇，可以得到这个蛇被切了多少刀，现在问你蛇头和蛇尾的位置。</p>\n<h3 id=\"分析-4\"><a href=\"#分析-4\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>首先我们可以观察到，当一个矩形切下去之后发现切了奇数刀，那么可以有必然存在一个头或者尾在矩形中。</p>\n<p>然后我们可以用$(n-1)&lt;&lt;1$次询问得到所有的行和列对应的切的次数。</p>\n<p>然后可以证明的是，所有的数据中必然存在奇数。反证法易得。</p>\n<p>然后可以证明奇数对应的行或者列左右必然存在头或者尾。</p>\n<p>所以可以得到一个很直观的$O(6n)$的做法，$2n$用来寻找，剩下的$4n$来搜索答案。但是这必然会超过2019.</p>\n<p>考虑哪些步骤可以优化？</p>\n<p>$2n$不可优化，必然就只能优化搜索过程。</p>\n<p>需要注意的是，可能存在行或者列不存在奇数的情况，稍微分析可以得到这种情况的特点了，头和尾在同一行或者同一列中。</p>\n<p>我们考虑到，我们只用考虑奇偶的情况，而不用考虑具体值。</p>\n<p>因为奇偶的加减特性，我们可以二分这个答案。</p>\n<p>除此之外，如果行和列都有奇数值，那么可以得到行和列对应的四个点中，两个点是答案，枚举任何一个就可以得到答案。</p>\n<h3 id=\"代码-4\"><a href=\"#代码-4\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">1005</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; r,c;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">que</span><span class=\"params\">(<span class=\"keyword\">int</span> u,<span class=\"keyword\">int</span> d,<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"? %d %d %d %d\\n\"</span>,u,l,d,r);</span><br><span class=\"line\">\tfflush(<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> nouse;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;nouse);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> nouse&amp;<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=n;i++) <span class=\"keyword\">if</span>(que(i,i,<span class=\"number\">1</span>,n)) r.push_back(i);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=n;i++) <span class=\"keyword\">if</span>(que(<span class=\"number\">1</span>,n,i,i)) c.push_back(i);</span><br><span class=\"line\">\tassert(r.size()+c.size()&gt;=<span class=\"number\">2</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(c.empty()||r.empty())&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">bool</span> change = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(c.empty()) &#123;</span><br><span class=\"line\">\t\t\tswap(r,c);</span><br><span class=\"line\">\t\t\tchange = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> l = <span class=\"number\">1</span>,r = n;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(l&lt;r)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> mid = l+r&gt;&gt;<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> upper = l,down = mid,left = c[<span class=\"number\">0</span>],right = c[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(change) swap(left,upper),swap(down,right);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(que(upper,down,left,right)) r = mid;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> l = mid+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!change) <span class=\"built_in\">printf</span>(<span class=\"string\">\"! %d %d %d %d\\n\"</span>,l,c[<span class=\"number\">1</span>],l,c[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">\"! %d %d %d %d\\n\"</span>,c[<span class=\"number\">0</span>],l,c[<span class=\"number\">1</span>],l);</span><br><span class=\"line\">\t\tfflush(<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(que(r[<span class=\"number\">0</span>],r[<span class=\"number\">0</span>],c[<span class=\"number\">0</span>],c[<span class=\"number\">0</span>])) <span class=\"built_in\">printf</span>(<span class=\"string\">\"! %d %d %d %d\\n\"</span>,r[<span class=\"number\">0</span>],c[<span class=\"number\">0</span>],r[<span class=\"number\">1</span>],c[<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">\"! %d %d %d %d\\n\"</span>,r[<span class=\"number\">0</span>],c[<span class=\"number\">1</span>],r[<span class=\"number\">1</span>],c[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\tfflush(<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"F-Serval-and-Bonus-Problem\"><a href=\"#F-Serval-and-Bonus-Problem\" class=\"headerlink\" title=\"F. Serval and Bonus Problem\"></a>F. Serval and Bonus Problem</h2><p><a href=\"https://codeforces.com/contest/1153/problem/F\" target=\"_blank\" rel=\"noopener\">开启传送门</a></p>\n<h3 id=\"题目描述-5\"><a href=\"#题目描述-5\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p>Getting closer and closer to a mathematician, Serval becomes a university student on math major in Japari University. On the Calculus class, his teacher taught him how to calculate the expected length of a random subsegment of a given segment. Then he left a bonus problem as homework, with the award of a garage kit from IOI. The bonus is to extend this problem to the general case as follows.</p>\n<p>You are given a segment with length $l$. We randomly choose $n$ segments by choosing two points (maybe with non-integer coordinates) from the given segment equiprobably and the interval between the two points forms a segment. You are given the number of random segments $n$, and another integer $k$. The $2n$ endpoints of the chosen segments split the segment into ($2n+1$) intervals. Your task is to calculate the expected total length of those intervals that are covered by at least $k$ segments of the $n$ random segments.</p>\n<p>You should find the answer modulo $998244353$.</p>\n<h3 id=\"Input-5\"><a href=\"#Input-5\" class=\"headerlink\" title=\"Input\"></a>Input</h3><p>First line contains three space-separated positive integers 𝑛, 𝑘 and 𝑙 ($1\\leq k\\leq n\\leq 2000,1\\leq l\\leq 10^9$).</p>\n<h3 id=\"Output-5\"><a href=\"#Output-5\" class=\"headerlink\" title=\"Output\"></a>Output</h3><p>Output one integer — the expected total length of all the intervals covered by at least $k$ segments of the $n$ random segments modulo $998244353$.</p>\n<p>Formally, let $M=998244353$. It can be shown that the answer can be expressed as an irreducible fraction $\\frac{p}{q}$, where $p$ and $q$ are integers and $q\\not\\equiv0(modM)$. Output the integer equal to $p\\cdot q^{-1}mod\\ M$. In other words, output such an integer $x$ that $0\\leq x&lt;M$ and $x\\cdot q\\equiv p(mod\\ M)$.</p>\n<h3 id=\"Examples-5\"><a href=\"#Examples-5\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"inpus1\"><a href=\"#inpus1\" class=\"headerlink\" title=\"inpus1\"></a>inpus1</h4><p>1 1 1</p>\n<h4 id=\"output1-5\"><a href=\"#output1-5\" class=\"headerlink\" title=\"output1\"></a>output1</h4><p>332748118</p>\n<h4 id=\"input2-5\"><a href=\"#input2-5\" class=\"headerlink\" title=\"input2\"></a>input2</h4><p>6 2 1</p>\n<h4 id=\"output2-5\"><a href=\"#output2-5\" class=\"headerlink\" title=\"output2\"></a>output2</h4><p>760234711</p>\n<h4 id=\"input3-2\"><a href=\"#input3-2\" class=\"headerlink\" title=\"input3\"></a>input3</h4><p>7 5 3</p>\n<h4 id=\"output3-2\"><a href=\"#output3-2\" class=\"headerlink\" title=\"output3\"></a>output3</h4><p>223383352</p>\n<h4 id=\"input4-1\"><a href=\"#input4-1\" class=\"headerlink\" title=\"input4\"></a>input4</h4><p>97 31 9984524</p>\n<h4 id=\"output4-1\"><a href=\"#output4-1\" class=\"headerlink\" title=\"output4\"></a>output4</h4><p>267137618</p>\n<h3 id=\"Note-4\"><a href=\"#Note-4\" class=\"headerlink\" title=\"Note\"></a>Note</h3><p>In the first example, the expected total length is $\\int_0^1 \\int_0^1 |x-y|\\ dx\\ dy = \\frac{1}{3} $, and $\\frac{1}{3}$ modulo $998244353$ is $332748118$.</p>\n<h3 id=\"题意-5\"><a href=\"#题意-5\" class=\"headerlink\" title=\"题意\"></a>题意</h3><p>长度为l的线段，随机选取n个线段，线段中至少被n个线段中k个线段覆盖的长度期望。</p>\n<h3 id=\"分析-5\"><a href=\"#分析-5\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>说实话我当时没做出来，看了题解才知道怎么做的，所以强烈建议看官方的题解。我这里也贴出来，感兴趣的可以看一下。</p>\n<p>Without loss of generality, assume that $l$=1. For a segment covering, the total length of the legal intervals is the probability that we choose another point $P$ on this segment randomly such that it is in the legal intervals. Since all $2n+1$ points ($P$ and the endpoints of each segment) are chosen randomly and independently, we only need to find the probability that point $P$ is in the legal intervals. Note that only the order of these $2n+1$ points make sense. Because the points are chosen in the segment, the probability that some of them coincide is $0$, so we can assume that all points do not coincide.</p>\n<p>Now the problem is, how to calculate the number of arrangements that $P$ is between at least $k$ pairs of endpoints. It can be solved by dynamic programming in time complexity of $O(n^2)$. We define $f(i,j,x)$ as the number of arrangements for the first $i$ positions, with $j$ points haven’t been matched, and $P$ appeared $x$ times (obviously $x=0$ or $1$). So we can get three different types of transition for the $i$-th position below:</p>\n<ul>\n<li>Place $P$ at $i$-th position (if $j\\geq k$): $f(i-1,j,0)\\rightarrow f(i,j,1)$</li>\n<li>Start a new segment (if $i+j+x&lt;2n$): $f(i-1,j-1,x)\\rightarrow f(i,j,x)$</li>\n<li>Match a started segment, note that we have 𝑗 choices of segments:$f(i-1,j+1,x)\\times(j+1)\\rightarrow f(i,j,x)$</li>\n</ul>\n<p>Then $f(2n+1,0,1)$ is the number of legal arrangements. Obviously, the total number of arrangements is $(2n+1)!$. However, there are 𝑛 pairs of endpoints whose indices can be swapped, and the indices 𝑛 segments can be rearranged. So the final answer is $\\frac{f(2n+1,0,1)\\times n!\\times 2^n}{(2n+1)!}$.</p>\n<p>可能是受了题解的影响，后来也没想出来其他解法。</p>\n<p>这里讲一下题解怎么做的。</p>\n<p>首先我们可以发现，长度和答案成正比，也就是说如果长度为1的时候答案是a，那么长度为2的时候答案就是2a%mod.</p>\n<p>然后我们不妨设长度为1，最后答案乘上l就行了。</p>\n<p>然后因为我们要找到至少被线段覆盖k次的所有点，所以我们不如加上一个虚拟点，这样就一共有了$(n&lt;&lt;1|1)$个点，然后需要判断这个虚拟点被多少条线段覆盖了，如果覆盖次数超过k次，就说明可以统计进答案。然后就可以发现，所有点是随机取的，所以我们假设所有点不会重合，那么所有点就可以离散成一个序列。然后就可以统计k的覆盖次数。</p>\n<p>接下来就是dp，我们设$dp[i][j][flag]$表示序列中前i个点，其中到目前为止有j条线段左节点出线了，但是右节点没有出现，也就是说当前这个点被覆盖了j次，flag表示虚拟点是否出现了。然后考虑转移：</p>\n<ul>\n<li>当前节点是虚拟节点<ul>\n<li>如果这个需要统计进入答案，也就是说明当前节点需要被覆盖k次及以上，所以 $j\\geq k$</li>\n<li>$dp[i][j][1]+=dp[i-1][j][0]$</li>\n</ul>\n</li>\n<li>当前节点是一个线段的左端点<ul>\n<li>也就是说左节点数量增加，被覆盖次数增加，但是不会影响虚拟节点的状态</li>\n<li>$dp[i][j+1][flag]+=dp[i-1][j][flag]$</li>\n</ul>\n</li>\n<li>当前节点是一个线段的右端点<ul>\n<li>也就是说右节点数量增加，被覆盖次数减少，但是不会影响虚拟节点的状态,注意右端点可能会有j个可能</li>\n<li>$dp[i][j-1][flag]+=dp[i-1][j][flag]*j$</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"代码-5\"><a href=\"#代码-5\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>给大佬递上我奇丑无比的代码　(<em>/ω＼</em>)</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> mod = <span class=\"number\">998244353</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxm = <span class=\"number\">2345</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> b)</span></span>&#123;<span class=\"keyword\">return</span> (a+b)%mod;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">mul</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> b)</span></span>&#123;<span class=\"keyword\">return</span> a*b%mod;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">fac</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a)</span> </span>&#123;<span class=\"keyword\">return</span> a==<span class=\"number\">1</span>?<span class=\"number\">1</span>:mul(a,fac(a<span class=\"number\">-1</span>));&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">qpow</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> b = mod<span class=\"number\">-2</span>)</span></span>&#123;<span class=\"comment\">/*&#123;&#123;&#123;*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ret = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(b)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(b&amp;<span class=\"number\">1</span>) ret = mul(ret,a);</span><br><span class=\"line\">\t\ta = mul(a,a);</span><br><span class=\"line\">\t\tb&gt;&gt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;<span class=\"comment\">/*&#125;&#125;&#125;*/</span></span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> n,k,l;</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> dp[maxm&lt;&lt;<span class=\"number\">1</span>][maxm][<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lld%lld%lld\"</span>,&amp;n,&amp;k,&amp;l);</span><br><span class=\"line\">\tdp[<span class=\"number\">0</span>][<span class=\"number\">0</span>][<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=(n&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>);i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j&lt;=n;j++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(j&gt;=k) dp[i][j][<span class=\"number\">1</span>] = add(dp[i][j][<span class=\"number\">1</span>],dp[i<span class=\"number\">-1</span>][j][<span class=\"number\">0</span>]);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> flag = <span class=\"number\">0</span>;flag&lt;<span class=\"number\">2</span>;flag++)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(dp[i<span class=\"number\">-1</span>][j][flag])&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(j) dp[i][j<span class=\"number\">-1</span>][flag] = add(dp[i][j<span class=\"number\">-1</span>][flag],mul(dp[i<span class=\"number\">-1</span>][j][flag],j));</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(i+(j+<span class=\"number\">1</span>)-(<span class=\"number\">1</span>-flag)&lt;=(n&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>)) dp[i][j+<span class=\"number\">1</span>][flag] = add(dp[i][j+<span class=\"number\">1</span>][flag],dp[i<span class=\"number\">-1</span>][j][flag]);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ans = mul(dp[n&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>][<span class=\"number\">0</span>][<span class=\"number\">1</span>],qpow(<span class=\"number\">2</span>,n));</span><br><span class=\"line\">\tans = mul(mul(ans,l),mul(fac(n),qpow(fac(n&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>))));</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,ans);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"日常吐槽20190626","date":"1019-06-25T15:54:17.000Z","author":"zuhiul","_content":"\n今天早上5.30就起了，好久都没有起这么早过了。\n\n除了周五的最后一个考试，这学期就算是结束了。\n\n这两天因为天天在学校玩，所以有很多时间想一些自己的事。这里索性总结一下吧。\n\n首先就是大学的日子，仔细想想，自己的大学貌似从大二毕业就已经死掉了。或者说从大一下半学期就已经死掉了。已经记不清自己逃了多少课，每次考试都是划水划过去的。大三上逃的课比上的都多。大三下直接就出来工作了。整个大学除了舍友和少数几个朋友，其他人真的只是点头之交。这其实和我刚入大学的想法还是很不一样的。曾经的我不是没有想过做一个学霸，但是出于种种原因，渐渐放弃了这个想法，不是天资不够，实在是努力不够，或者说努力的方向不一样。当时还是太喜欢打比赛了。说到底还是太想证明自己了。回头想了想，当时应该是因为高考成绩太差了，所以对成绩失望了，想找到一个方向，告诉自己我还行，不是那么差，所以找了一条人迹罕至的路。现在回头想想，没有后悔和失落，也没有欣喜和狂欢，只有默默的努力和玩乐。直到后来在这条路上渐行渐远的时候，我已经开始迷失了。其实大三上还是太颓废了，很多该学的东西都没有学好。现在就是各种踩坑啊啊啊啊。\n\n还有就是工作的事，今天得知比我晚来的实习生要走了，问了一下，他的想法是在这边学不到什么东西，而且时间实在是太紧了，让他抽不出时间来学习。这个问题其实我上个月就已经意识到了，然后找15级几个学长问了下，他们的意见是，大部分互联网公司都一个逼样，所以不用太过忧愁，毕竟是没有去过其他公司，所以暂时不知道具体现象是什么样。暂时就先留在这里吧，转正再说。\n\n然后就是考研的问题，现在时间上已经不足6个月了，我算是彻底放弃了，这个时间太不凑巧了，时间卡的太不好了，很多事都需要在这六个月里面完成，所以显然是来不及了。而且当时想考医学研究生显然是一时心血来潮，毕竟想和小姐姐再玩两年。后来想想还是算了，惹人厌烦。总给人一种逼宫的感觉，而且自己水平实在是不太够，虽然舍友每天都奶我，说我考必中，其实我知道无非是大家平时开玩笑之类的话罢了。随着年龄的增大，越来越不会嫉妒别人，因为我清楚的知道，每个人的努力和回报成正比，没有人能随随便便成功。虽然我不否认有些天才，但是没有不用付出的天才，不是吗？\n\n最后就是比赛了。因为和工作冲突的缘故，公司这边说是要8月底才能转正。但是如果9月才开始训练的话，三个月可能还是来不及，很可能还是和去年一个水平，那么我觉得浪费这三个月时间没有任何意义了。暂时还是没想好，看队友想法吧。我的话，自我感觉已经没有了大一刷题的激情了，还是老了，再也刷不动夜了，很多问题甚至是不想深究了，甚至是轻易的放过去了，导致大二结束到现在反而是水平跌落很多了。\n\n算了不说了，继续搬砖去了。\n","source":"_posts/diary/2019/06/20190626.md","raw":"---\ntitle: 日常吐槽20190626\ndate: 1019-06-26\nauthor: \"zuhiul\"\ntags:\n  - 日常吐槽\n---\n\n今天早上5.30就起了，好久都没有起这么早过了。\n\n除了周五的最后一个考试，这学期就算是结束了。\n\n这两天因为天天在学校玩，所以有很多时间想一些自己的事。这里索性总结一下吧。\n\n首先就是大学的日子，仔细想想，自己的大学貌似从大二毕业就已经死掉了。或者说从大一下半学期就已经死掉了。已经记不清自己逃了多少课，每次考试都是划水划过去的。大三上逃的课比上的都多。大三下直接就出来工作了。整个大学除了舍友和少数几个朋友，其他人真的只是点头之交。这其实和我刚入大学的想法还是很不一样的。曾经的我不是没有想过做一个学霸，但是出于种种原因，渐渐放弃了这个想法，不是天资不够，实在是努力不够，或者说努力的方向不一样。当时还是太喜欢打比赛了。说到底还是太想证明自己了。回头想了想，当时应该是因为高考成绩太差了，所以对成绩失望了，想找到一个方向，告诉自己我还行，不是那么差，所以找了一条人迹罕至的路。现在回头想想，没有后悔和失落，也没有欣喜和狂欢，只有默默的努力和玩乐。直到后来在这条路上渐行渐远的时候，我已经开始迷失了。其实大三上还是太颓废了，很多该学的东西都没有学好。现在就是各种踩坑啊啊啊啊。\n\n还有就是工作的事，今天得知比我晚来的实习生要走了，问了一下，他的想法是在这边学不到什么东西，而且时间实在是太紧了，让他抽不出时间来学习。这个问题其实我上个月就已经意识到了，然后找15级几个学长问了下，他们的意见是，大部分互联网公司都一个逼样，所以不用太过忧愁，毕竟是没有去过其他公司，所以暂时不知道具体现象是什么样。暂时就先留在这里吧，转正再说。\n\n然后就是考研的问题，现在时间上已经不足6个月了，我算是彻底放弃了，这个时间太不凑巧了，时间卡的太不好了，很多事都需要在这六个月里面完成，所以显然是来不及了。而且当时想考医学研究生显然是一时心血来潮，毕竟想和小姐姐再玩两年。后来想想还是算了，惹人厌烦。总给人一种逼宫的感觉，而且自己水平实在是不太够，虽然舍友每天都奶我，说我考必中，其实我知道无非是大家平时开玩笑之类的话罢了。随着年龄的增大，越来越不会嫉妒别人，因为我清楚的知道，每个人的努力和回报成正比，没有人能随随便便成功。虽然我不否认有些天才，但是没有不用付出的天才，不是吗？\n\n最后就是比赛了。因为和工作冲突的缘故，公司这边说是要8月底才能转正。但是如果9月才开始训练的话，三个月可能还是来不及，很可能还是和去年一个水平，那么我觉得浪费这三个月时间没有任何意义了。暂时还是没想好，看队友想法吧。我的话，自我感觉已经没有了大一刷题的激情了，还是老了，再也刷不动夜了，很多问题甚至是不想深究了，甚至是轻易的放过去了，导致大二结束到现在反而是水平跌落很多了。\n\n算了不说了，继续搬砖去了。\n","slug":"diary/2019/06/20190626","published":1,"updated":"2019-09-05T05:27:04.879Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1jl0033a613mtm7cv8b","content":"<p>今天早上5.30就起了，好久都没有起这么早过了。</p>\n<p>除了周五的最后一个考试，这学期就算是结束了。</p>\n<p>这两天因为天天在学校玩，所以有很多时间想一些自己的事。这里索性总结一下吧。</p>\n<p>首先就是大学的日子，仔细想想，自己的大学貌似从大二毕业就已经死掉了。或者说从大一下半学期就已经死掉了。已经记不清自己逃了多少课，每次考试都是划水划过去的。大三上逃的课比上的都多。大三下直接就出来工作了。整个大学除了舍友和少数几个朋友，其他人真的只是点头之交。这其实和我刚入大学的想法还是很不一样的。曾经的我不是没有想过做一个学霸，但是出于种种原因，渐渐放弃了这个想法，不是天资不够，实在是努力不够，或者说努力的方向不一样。当时还是太喜欢打比赛了。说到底还是太想证明自己了。回头想了想，当时应该是因为高考成绩太差了，所以对成绩失望了，想找到一个方向，告诉自己我还行，不是那么差，所以找了一条人迹罕至的路。现在回头想想，没有后悔和失落，也没有欣喜和狂欢，只有默默的努力和玩乐。直到后来在这条路上渐行渐远的时候，我已经开始迷失了。其实大三上还是太颓废了，很多该学的东西都没有学好。现在就是各种踩坑啊啊啊啊。</p>\n<p>还有就是工作的事，今天得知比我晚来的实习生要走了，问了一下，他的想法是在这边学不到什么东西，而且时间实在是太紧了，让他抽不出时间来学习。这个问题其实我上个月就已经意识到了，然后找15级几个学长问了下，他们的意见是，大部分互联网公司都一个逼样，所以不用太过忧愁，毕竟是没有去过其他公司，所以暂时不知道具体现象是什么样。暂时就先留在这里吧，转正再说。</p>\n<p>然后就是考研的问题，现在时间上已经不足6个月了，我算是彻底放弃了，这个时间太不凑巧了，时间卡的太不好了，很多事都需要在这六个月里面完成，所以显然是来不及了。而且当时想考医学研究生显然是一时心血来潮，毕竟想和小姐姐再玩两年。后来想想还是算了，惹人厌烦。总给人一种逼宫的感觉，而且自己水平实在是不太够，虽然舍友每天都奶我，说我考必中，其实我知道无非是大家平时开玩笑之类的话罢了。随着年龄的增大，越来越不会嫉妒别人，因为我清楚的知道，每个人的努力和回报成正比，没有人能随随便便成功。虽然我不否认有些天才，但是没有不用付出的天才，不是吗？</p>\n<p>最后就是比赛了。因为和工作冲突的缘故，公司这边说是要8月底才能转正。但是如果9月才开始训练的话，三个月可能还是来不及，很可能还是和去年一个水平，那么我觉得浪费这三个月时间没有任何意义了。暂时还是没想好，看队友想法吧。我的话，自我感觉已经没有了大一刷题的激情了，还是老了，再也刷不动夜了，很多问题甚至是不想深究了，甚至是轻易的放过去了，导致大二结束到现在反而是水平跌落很多了。</p>\n<p>算了不说了，继续搬砖去了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天早上5.30就起了，好久都没有起这么早过了。</p>\n<p>除了周五的最后一个考试，这学期就算是结束了。</p>\n<p>这两天因为天天在学校玩，所以有很多时间想一些自己的事。这里索性总结一下吧。</p>\n<p>首先就是大学的日子，仔细想想，自己的大学貌似从大二毕业就已经死掉了。或者说从大一下半学期就已经死掉了。已经记不清自己逃了多少课，每次考试都是划水划过去的。大三上逃的课比上的都多。大三下直接就出来工作了。整个大学除了舍友和少数几个朋友，其他人真的只是点头之交。这其实和我刚入大学的想法还是很不一样的。曾经的我不是没有想过做一个学霸，但是出于种种原因，渐渐放弃了这个想法，不是天资不够，实在是努力不够，或者说努力的方向不一样。当时还是太喜欢打比赛了。说到底还是太想证明自己了。回头想了想，当时应该是因为高考成绩太差了，所以对成绩失望了，想找到一个方向，告诉自己我还行，不是那么差，所以找了一条人迹罕至的路。现在回头想想，没有后悔和失落，也没有欣喜和狂欢，只有默默的努力和玩乐。直到后来在这条路上渐行渐远的时候，我已经开始迷失了。其实大三上还是太颓废了，很多该学的东西都没有学好。现在就是各种踩坑啊啊啊啊。</p>\n<p>还有就是工作的事，今天得知比我晚来的实习生要走了，问了一下，他的想法是在这边学不到什么东西，而且时间实在是太紧了，让他抽不出时间来学习。这个问题其实我上个月就已经意识到了，然后找15级几个学长问了下，他们的意见是，大部分互联网公司都一个逼样，所以不用太过忧愁，毕竟是没有去过其他公司，所以暂时不知道具体现象是什么样。暂时就先留在这里吧，转正再说。</p>\n<p>然后就是考研的问题，现在时间上已经不足6个月了，我算是彻底放弃了，这个时间太不凑巧了，时间卡的太不好了，很多事都需要在这六个月里面完成，所以显然是来不及了。而且当时想考医学研究生显然是一时心血来潮，毕竟想和小姐姐再玩两年。后来想想还是算了，惹人厌烦。总给人一种逼宫的感觉，而且自己水平实在是不太够，虽然舍友每天都奶我，说我考必中，其实我知道无非是大家平时开玩笑之类的话罢了。随着年龄的增大，越来越不会嫉妒别人，因为我清楚的知道，每个人的努力和回报成正比，没有人能随随便便成功。虽然我不否认有些天才，但是没有不用付出的天才，不是吗？</p>\n<p>最后就是比赛了。因为和工作冲突的缘故，公司这边说是要8月底才能转正。但是如果9月才开始训练的话，三个月可能还是来不及，很可能还是和去年一个水平，那么我觉得浪费这三个月时间没有任何意义了。暂时还是没想好，看队友想法吧。我的话，自我感觉已经没有了大一刷题的激情了，还是老了，再也刷不动夜了，很多问题甚至是不想深究了，甚至是轻易的放过去了，导致大二结束到现在反而是水平跌落很多了。</p>\n<p>算了不说了，继续搬砖去了。</p>\n"},{"title":"日常吐槽20190626","date":"1019-06-25T15:54:17.000Z","author":"zuhiul","_content":"\n今天终于是周五了，这周不知道为什么感觉特别的累，真的是由身到心的累。没有原因的那种。而且我感觉这周应该是7月最摸鱼的一周了，但是还是感觉很忙的感觉。\n\n然后昨天写了一下周报，看了一下我写的东西，看起来是挺多的，但是仔细想想其实都是杂货，没什么技术含量，主要就是各方沟通吧。\n\n其实应该在每个技术宅的眼里，默默写完自己的代码，然后run的很健壮，应该是一件很爽的事吧。\n","source":"_posts/diary/2019/08/20190802.md","raw":"---\ntitle: 日常吐槽20190626\ndate: 1019-06-26\nauthor: \"zuhiul\"\ntags:\n  - 日常吐槽\n---\n\n今天终于是周五了，这周不知道为什么感觉特别的累，真的是由身到心的累。没有原因的那种。而且我感觉这周应该是7月最摸鱼的一周了，但是还是感觉很忙的感觉。\n\n然后昨天写了一下周报，看了一下我写的东西，看起来是挺多的，但是仔细想想其实都是杂货，没什么技术含量，主要就是各方沟通吧。\n\n其实应该在每个技术宅的眼里，默默写完自己的代码，然后run的很健壮，应该是一件很爽的事吧。\n","slug":"diary/2019/08/20190802","published":1,"updated":"2019-08-03T15:45:49.728Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1jm0034a613k0t082gg","content":"<p>今天终于是周五了，这周不知道为什么感觉特别的累，真的是由身到心的累。没有原因的那种。而且我感觉这周应该是7月最摸鱼的一周了，但是还是感觉很忙的感觉。</p>\n<p>然后昨天写了一下周报，看了一下我写的东西，看起来是挺多的，但是仔细想想其实都是杂货，没什么技术含量，主要就是各方沟通吧。</p>\n<p>其实应该在每个技术宅的眼里，默默写完自己的代码，然后run的很健壮，应该是一件很爽的事吧。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天终于是周五了，这周不知道为什么感觉特别的累，真的是由身到心的累。没有原因的那种。而且我感觉这周应该是7月最摸鱼的一周了，但是还是感觉很忙的感觉。</p>\n<p>然后昨天写了一下周报，看了一下我写的东西，看起来是挺多的，但是仔细想想其实都是杂货，没什么技术含量，主要就是各方沟通吧。</p>\n<p>其实应该在每个技术宅的眼里，默默写完自己的代码，然后run的很健壮，应该是一件很爽的事吧。</p>\n"},{"title":"日常吐槽20190803","date":"1019-08-02T15:54:17.000Z","author":"zuhiul","_content":"\n今天刚看完了《哪吒之魔童降世》，颇有感触。\n\n实际上最打动我的那一幕就是哪吒白化前的那一幕，哪吒的父亲，愿意和哪吒换命。一个二十好几的大老爷们真的是在影院无声的哭了。真的是挺打动我的。突然间就想到了我的父亲。我仔细的思索了一番，如果换做是我的父亲，他会怎么做，我感觉他同样不会犹豫。当时想到这个就哭了出来。为人父母真的是挺不容易的。\n\n和哪吒一样，我从小一直很蠢。可能认识我的人都不会想到我曾经语文+数学都考不到60分。但是我小时候就是这个尿性。因为父母都是老师，同事的孩子也和我一般大。所以经常拿来做比较，因为父母很敬业，所以没有时间管教我，导致我小时候一直很差，不难想到父母因为我而失望过多少次。但是他们有放弃过我吗？没有，他们总是很有耐心的教育我。\n\n再后来，我开始渐渐明白人事。也就是那个叛逆的年纪，开始不懂事。总是有意无意的气父母，着实很不该。现在回想起来，真的是很后悔当初的所作所为。可能在父母眼里，我永远是一个长不大的孩子吧。\n\n想起来上周给家里打了个电话，我能明显感觉到母亲接到电话时那种欣喜的语气，反而让我感觉甚为羞愧。实在是想象不到，父母这个角色忍受了多少不该忍受的东西。那种不求回报的给予，真的很让人感到敬佩。\n\n其实我一直以来都算不上听话，想起来上次我母亲用个软件，弄了半天还是没有弄好，给我整着急了，我就很不耐烦了。后来有一天我母亲和我说，让我对她有点耐心，毕竟他们渐渐的老了，不像以前那样灵光了。就像他们小时候对我一样，多给他们一些耐心。听完这个之后，我就很难受了。我一直觉得我已经长大很多了，但是实际上呢？还是动不动就惹父母生气，实在是罪过。\n\n再回想一下，我是真的对父母的耐心很差了，他们也确实老了，而我呢？正处于上升期，很多时候都不太愿意听父母的建议。很多时候希望自己能拿主意，甚至很抵触父母的建议。但是大多数时候会发现他们的建议是对的，他们毕竟经历的比我们多多了。但是还是碍于面子，自己做决定了，现在回想一下还是真傻。在父母面前是最不用面子的。他们何曾求过我有一天能大富大贵呢？他们无非就是祈祷我能多回家看看罢了。然而这个愿望我在后面不知道还有多少日子的日子里，还能圆他们几次愿望呢？\n\n上次回家还是过年吧。总说自己忙忙忙，但是自己是真的忙吗？每天还有一个小时的时间用来打游戏，哪能算得上真忙呢？无非就是觉得他们很烦罢了吧？现在想想着实不该啊。为什么总是有这种幼稚、无聊的想法呢？\n\n不早了，先睡了。明天给家里打个电话吧。就这样，晚安。\n","source":"_posts/diary/2019/08/20190803.md","raw":"---\ntitle: 日常吐槽20190803\ndate: 1019-08-03\nauthor: \"zuhiul\"\ntags:\n  - 日常吐槽\n---\n\n今天刚看完了《哪吒之魔童降世》，颇有感触。\n\n实际上最打动我的那一幕就是哪吒白化前的那一幕，哪吒的父亲，愿意和哪吒换命。一个二十好几的大老爷们真的是在影院无声的哭了。真的是挺打动我的。突然间就想到了我的父亲。我仔细的思索了一番，如果换做是我的父亲，他会怎么做，我感觉他同样不会犹豫。当时想到这个就哭了出来。为人父母真的是挺不容易的。\n\n和哪吒一样，我从小一直很蠢。可能认识我的人都不会想到我曾经语文+数学都考不到60分。但是我小时候就是这个尿性。因为父母都是老师，同事的孩子也和我一般大。所以经常拿来做比较，因为父母很敬业，所以没有时间管教我，导致我小时候一直很差，不难想到父母因为我而失望过多少次。但是他们有放弃过我吗？没有，他们总是很有耐心的教育我。\n\n再后来，我开始渐渐明白人事。也就是那个叛逆的年纪，开始不懂事。总是有意无意的气父母，着实很不该。现在回想起来，真的是很后悔当初的所作所为。可能在父母眼里，我永远是一个长不大的孩子吧。\n\n想起来上周给家里打了个电话，我能明显感觉到母亲接到电话时那种欣喜的语气，反而让我感觉甚为羞愧。实在是想象不到，父母这个角色忍受了多少不该忍受的东西。那种不求回报的给予，真的很让人感到敬佩。\n\n其实我一直以来都算不上听话，想起来上次我母亲用个软件，弄了半天还是没有弄好，给我整着急了，我就很不耐烦了。后来有一天我母亲和我说，让我对她有点耐心，毕竟他们渐渐的老了，不像以前那样灵光了。就像他们小时候对我一样，多给他们一些耐心。听完这个之后，我就很难受了。我一直觉得我已经长大很多了，但是实际上呢？还是动不动就惹父母生气，实在是罪过。\n\n再回想一下，我是真的对父母的耐心很差了，他们也确实老了，而我呢？正处于上升期，很多时候都不太愿意听父母的建议。很多时候希望自己能拿主意，甚至很抵触父母的建议。但是大多数时候会发现他们的建议是对的，他们毕竟经历的比我们多多了。但是还是碍于面子，自己做决定了，现在回想一下还是真傻。在父母面前是最不用面子的。他们何曾求过我有一天能大富大贵呢？他们无非就是祈祷我能多回家看看罢了。然而这个愿望我在后面不知道还有多少日子的日子里，还能圆他们几次愿望呢？\n\n上次回家还是过年吧。总说自己忙忙忙，但是自己是真的忙吗？每天还有一个小时的时间用来打游戏，哪能算得上真忙呢？无非就是觉得他们很烦罢了吧？现在想想着实不该啊。为什么总是有这种幼稚、无聊的想法呢？\n\n不早了，先睡了。明天给家里打个电话吧。就这样，晚安。\n","slug":"diary/2019/08/20190803","published":1,"updated":"2019-08-03T15:44:14.848Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1jn0036a613iehbf77f","content":"<p>今天刚看完了《哪吒之魔童降世》，颇有感触。</p>\n<p>实际上最打动我的那一幕就是哪吒白化前的那一幕，哪吒的父亲，愿意和哪吒换命。一个二十好几的大老爷们真的是在影院无声的哭了。真的是挺打动我的。突然间就想到了我的父亲。我仔细的思索了一番，如果换做是我的父亲，他会怎么做，我感觉他同样不会犹豫。当时想到这个就哭了出来。为人父母真的是挺不容易的。</p>\n<p>和哪吒一样，我从小一直很蠢。可能认识我的人都不会想到我曾经语文+数学都考不到60分。但是我小时候就是这个尿性。因为父母都是老师，同事的孩子也和我一般大。所以经常拿来做比较，因为父母很敬业，所以没有时间管教我，导致我小时候一直很差，不难想到父母因为我而失望过多少次。但是他们有放弃过我吗？没有，他们总是很有耐心的教育我。</p>\n<p>再后来，我开始渐渐明白人事。也就是那个叛逆的年纪，开始不懂事。总是有意无意的气父母，着实很不该。现在回想起来，真的是很后悔当初的所作所为。可能在父母眼里，我永远是一个长不大的孩子吧。</p>\n<p>想起来上周给家里打了个电话，我能明显感觉到母亲接到电话时那种欣喜的语气，反而让我感觉甚为羞愧。实在是想象不到，父母这个角色忍受了多少不该忍受的东西。那种不求回报的给予，真的很让人感到敬佩。</p>\n<p>其实我一直以来都算不上听话，想起来上次我母亲用个软件，弄了半天还是没有弄好，给我整着急了，我就很不耐烦了。后来有一天我母亲和我说，让我对她有点耐心，毕竟他们渐渐的老了，不像以前那样灵光了。就像他们小时候对我一样，多给他们一些耐心。听完这个之后，我就很难受了。我一直觉得我已经长大很多了，但是实际上呢？还是动不动就惹父母生气，实在是罪过。</p>\n<p>再回想一下，我是真的对父母的耐心很差了，他们也确实老了，而我呢？正处于上升期，很多时候都不太愿意听父母的建议。很多时候希望自己能拿主意，甚至很抵触父母的建议。但是大多数时候会发现他们的建议是对的，他们毕竟经历的比我们多多了。但是还是碍于面子，自己做决定了，现在回想一下还是真傻。在父母面前是最不用面子的。他们何曾求过我有一天能大富大贵呢？他们无非就是祈祷我能多回家看看罢了。然而这个愿望我在后面不知道还有多少日子的日子里，还能圆他们几次愿望呢？</p>\n<p>上次回家还是过年吧。总说自己忙忙忙，但是自己是真的忙吗？每天还有一个小时的时间用来打游戏，哪能算得上真忙呢？无非就是觉得他们很烦罢了吧？现在想想着实不该啊。为什么总是有这种幼稚、无聊的想法呢？</p>\n<p>不早了，先睡了。明天给家里打个电话吧。就这样，晚安。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天刚看完了《哪吒之魔童降世》，颇有感触。</p>\n<p>实际上最打动我的那一幕就是哪吒白化前的那一幕，哪吒的父亲，愿意和哪吒换命。一个二十好几的大老爷们真的是在影院无声的哭了。真的是挺打动我的。突然间就想到了我的父亲。我仔细的思索了一番，如果换做是我的父亲，他会怎么做，我感觉他同样不会犹豫。当时想到这个就哭了出来。为人父母真的是挺不容易的。</p>\n<p>和哪吒一样，我从小一直很蠢。可能认识我的人都不会想到我曾经语文+数学都考不到60分。但是我小时候就是这个尿性。因为父母都是老师，同事的孩子也和我一般大。所以经常拿来做比较，因为父母很敬业，所以没有时间管教我，导致我小时候一直很差，不难想到父母因为我而失望过多少次。但是他们有放弃过我吗？没有，他们总是很有耐心的教育我。</p>\n<p>再后来，我开始渐渐明白人事。也就是那个叛逆的年纪，开始不懂事。总是有意无意的气父母，着实很不该。现在回想起来，真的是很后悔当初的所作所为。可能在父母眼里，我永远是一个长不大的孩子吧。</p>\n<p>想起来上周给家里打了个电话，我能明显感觉到母亲接到电话时那种欣喜的语气，反而让我感觉甚为羞愧。实在是想象不到，父母这个角色忍受了多少不该忍受的东西。那种不求回报的给予，真的很让人感到敬佩。</p>\n<p>其实我一直以来都算不上听话，想起来上次我母亲用个软件，弄了半天还是没有弄好，给我整着急了，我就很不耐烦了。后来有一天我母亲和我说，让我对她有点耐心，毕竟他们渐渐的老了，不像以前那样灵光了。就像他们小时候对我一样，多给他们一些耐心。听完这个之后，我就很难受了。我一直觉得我已经长大很多了，但是实际上呢？还是动不动就惹父母生气，实在是罪过。</p>\n<p>再回想一下，我是真的对父母的耐心很差了，他们也确实老了，而我呢？正处于上升期，很多时候都不太愿意听父母的建议。很多时候希望自己能拿主意，甚至很抵触父母的建议。但是大多数时候会发现他们的建议是对的，他们毕竟经历的比我们多多了。但是还是碍于面子，自己做决定了，现在回想一下还是真傻。在父母面前是最不用面子的。他们何曾求过我有一天能大富大贵呢？他们无非就是祈祷我能多回家看看罢了。然而这个愿望我在后面不知道还有多少日子的日子里，还能圆他们几次愿望呢？</p>\n<p>上次回家还是过年吧。总说自己忙忙忙，但是自己是真的忙吗？每天还有一个小时的时间用来打游戏，哪能算得上真忙呢？无非就是觉得他们很烦罢了吧？现在想想着实不该啊。为什么总是有这种幼稚、无聊的想法呢？</p>\n<p>不早了，先睡了。明天给家里打个电话吧。就这样，晚安。</p>\n"},{"title":"日常吐槽20190807","date":"1019-08-06T15:54:17.000Z","author":"zuhiul","_content":"\n听说今天是七夕，所以说也是我老爸的生日。\n\n公司这边实在是太忙了，暂时没有时间想对象的事。刚刚给爸爸打了个电话，谁知道他已经睡了。确实有点晚了。\n\n然后就是这个月底如果转正顺利的话，可能就要考虑回家一趟了。确实是好久没有回家了。\n","source":"_posts/diary/2019/08/20190807.md","raw":"---\ntitle: 日常吐槽20190807\ndate: 1019-08-07\nauthor: \"zuhiul\"\ntags:\n  - 日常吐槽\n---\n\n听说今天是七夕，所以说也是我老爸的生日。\n\n公司这边实在是太忙了，暂时没有时间想对象的事。刚刚给爸爸打了个电话，谁知道他已经睡了。确实有点晚了。\n\n然后就是这个月底如果转正顺利的话，可能就要考虑回家一趟了。确实是好久没有回家了。\n","slug":"diary/2019/08/20190807","published":1,"updated":"2019-08-07T14:41:37.215Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1jn0037a613wot4c47i","content":"<p>听说今天是七夕，所以说也是我老爸的生日。</p>\n<p>公司这边实在是太忙了，暂时没有时间想对象的事。刚刚给爸爸打了个电话，谁知道他已经睡了。确实有点晚了。</p>\n<p>然后就是这个月底如果转正顺利的话，可能就要考虑回家一趟了。确实是好久没有回家了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>听说今天是七夕，所以说也是我老爸的生日。</p>\n<p>公司这边实在是太忙了，暂时没有时间想对象的事。刚刚给爸爸打了个电话，谁知道他已经睡了。确实有点晚了。</p>\n<p>然后就是这个月底如果转正顺利的话，可能就要考虑回家一趟了。确实是好久没有回家了。</p>\n"},{"title":"日常吐槽20190812","date":"1019-08-11T15:54:17.000Z","author":"zuhiul","_content":"\n今天在清理历史消息的时候，突然发现一个事，那就是HR，5月份的时候拉了个群，意思是这个群里都是有实力转正的，但是没有我，直到7月底的时候才把我拉进去，这样我就不开心了。\n\n不是，我就不懂了，这个意思是我不行呗？反正很不爽，突然就不想干活了，真的想一走了之，管他什么呢。\n\n然后就直接找老大聊了一下，老大说他知道这个事，和我解释说，老大们没有对齐标准导致的。\n\n好吧，我勉强能接受这个解释，但是说实话，我真的略失望。反正这样做搞的人很不爽。不开心，不开心，不开心！\n\n就这样吧。\n\n可能有一天，等我攒够了失望就会离开。\n","source":"_posts/diary/2019/08/20190812.md","raw":"---\ntitle: 日常吐槽20190812\ndate: 1019-08-12\nauthor: \"zuhiul\"\ntags:\n  - 日常吐槽\n---\n\n今天在清理历史消息的时候，突然发现一个事，那就是HR，5月份的时候拉了个群，意思是这个群里都是有实力转正的，但是没有我，直到7月底的时候才把我拉进去，这样我就不开心了。\n\n不是，我就不懂了，这个意思是我不行呗？反正很不爽，突然就不想干活了，真的想一走了之，管他什么呢。\n\n然后就直接找老大聊了一下，老大说他知道这个事，和我解释说，老大们没有对齐标准导致的。\n\n好吧，我勉强能接受这个解释，但是说实话，我真的略失望。反正这样做搞的人很不爽。不开心，不开心，不开心！\n\n就这样吧。\n\n可能有一天，等我攒够了失望就会离开。\n","slug":"diary/2019/08/20190812","published":1,"updated":"2019-08-12T15:02:38.929Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1jo0038a613lbpkgyaw","content":"<p>今天在清理历史消息的时候，突然发现一个事，那就是HR，5月份的时候拉了个群，意思是这个群里都是有实力转正的，但是没有我，直到7月底的时候才把我拉进去，这样我就不开心了。</p>\n<p>不是，我就不懂了，这个意思是我不行呗？反正很不爽，突然就不想干活了，真的想一走了之，管他什么呢。</p>\n<p>然后就直接找老大聊了一下，老大说他知道这个事，和我解释说，老大们没有对齐标准导致的。</p>\n<p>好吧，我勉强能接受这个解释，但是说实话，我真的略失望。反正这样做搞的人很不爽。不开心，不开心，不开心！</p>\n<p>就这样吧。</p>\n<p>可能有一天，等我攒够了失望就会离开。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天在清理历史消息的时候，突然发现一个事，那就是HR，5月份的时候拉了个群，意思是这个群里都是有实力转正的，但是没有我，直到7月底的时候才把我拉进去，这样我就不开心了。</p>\n<p>不是，我就不懂了，这个意思是我不行呗？反正很不爽，突然就不想干活了，真的想一走了之，管他什么呢。</p>\n<p>然后就直接找老大聊了一下，老大说他知道这个事，和我解释说，老大们没有对齐标准导致的。</p>\n<p>好吧，我勉强能接受这个解释，但是说实话，我真的略失望。反正这样做搞的人很不爽。不开心，不开心，不开心！</p>\n<p>就这样吧。</p>\n<p>可能有一天，等我攒够了失望就会离开。</p>\n"},{"title":"日常吐槽20190816","date":"1019-08-15T15:54:17.000Z","author":"zuhiul","_content":"\n昨天晚上和大哥哥打了个电话，他和我说了很多事，我突然明白一个道理，一个人的无心之失真的会对一个人造成那么大的影响。\n\n都是自己当时太年轻了，居然会犯那么傻屌的错误，还渐渐的遗忘了，实在是罪过。最近找个时间弥补一下吧。不然真的会后悔一辈子吧。\n\n明确未来要做的三件事\n\n1.等待\n\n2.事业\n\n3.毕业\n\n加油吧，努力成长，静待怒放。\n","source":"_posts/diary/2019/08/20190816.md","raw":"---\ntitle: 日常吐槽20190816\ndate: 1019-08-16\nauthor: \"zuhiul\"\ntags:\n  - 日常吐槽\n---\n\n昨天晚上和大哥哥打了个电话，他和我说了很多事，我突然明白一个道理，一个人的无心之失真的会对一个人造成那么大的影响。\n\n都是自己当时太年轻了，居然会犯那么傻屌的错误，还渐渐的遗忘了，实在是罪过。最近找个时间弥补一下吧。不然真的会后悔一辈子吧。\n\n明确未来要做的三件事\n\n1.等待\n\n2.事业\n\n3.毕业\n\n加油吧，努力成长，静待怒放。\n","slug":"diary/2019/08/20190816","published":1,"updated":"2019-08-16T03:06:10.309Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1jo003ba613mt2yzzus","content":"<p>昨天晚上和大哥哥打了个电话，他和我说了很多事，我突然明白一个道理，一个人的无心之失真的会对一个人造成那么大的影响。</p>\n<p>都是自己当时太年轻了，居然会犯那么傻屌的错误，还渐渐的遗忘了，实在是罪过。最近找个时间弥补一下吧。不然真的会后悔一辈子吧。</p>\n<p>明确未来要做的三件事</p>\n<p>1.等待</p>\n<p>2.事业</p>\n<p>3.毕业</p>\n<p>加油吧，努力成长，静待怒放。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>昨天晚上和大哥哥打了个电话，他和我说了很多事，我突然明白一个道理，一个人的无心之失真的会对一个人造成那么大的影响。</p>\n<p>都是自己当时太年轻了，居然会犯那么傻屌的错误，还渐渐的遗忘了，实在是罪过。最近找个时间弥补一下吧。不然真的会后悔一辈子吧。</p>\n<p>明确未来要做的三件事</p>\n<p>1.等待</p>\n<p>2.事业</p>\n<p>3.毕业</p>\n<p>加油吧，努力成长，静待怒放。</p>\n"},{"title":"日常吐槽20190702","date":"1019-07-01T15:54:17.000Z","author":"zuhiul","_content":"\n今天上午已知在忙学校的事，真的被学校的事折磨死了，带我们小学期的老师感觉还不好说话。\n\n我就不懂了，为什么每次好不容易被工作搞的有一点激情了，紧接着就被学校的破事消耗殆尽，甚至搞的身心俱疲。\n\n学校那些死板的规定，天知道是哪一天定下来的，这么长时间没有被修改过了，恐怕已经被无数人诟病了，为什么就不能修改一下呢？我至今任不明白，学校到底是在培养什么样的人？从前的我一直以为是对社会有用的人，后来想想恐怕不是。为什么社会都承认的人，在学校还因为一些傻屌规定频频受阻？教育的病态性已经不容多说了，一直很好奇这种涉及到国家未来的事会一拖再拖？现在还提不出一个有效的方案？算了，无力吐槽了，毕竟这么多年来，都是我这样无病呻吟，没有权力导致碌碌无为的人，毕业了之后就没精力去改变什么了，说到底我也是作恶者罢了。\n","source":"_posts/diary/2019/07/20190702.md","raw":"---\ntitle: 日常吐槽20190702\ndate: 1019-07-02\nauthor: \"zuhiul\"\ntags:\n  - 日常吐槽\n---\n\n今天上午已知在忙学校的事，真的被学校的事折磨死了，带我们小学期的老师感觉还不好说话。\n\n我就不懂了，为什么每次好不容易被工作搞的有一点激情了，紧接着就被学校的破事消耗殆尽，甚至搞的身心俱疲。\n\n学校那些死板的规定，天知道是哪一天定下来的，这么长时间没有被修改过了，恐怕已经被无数人诟病了，为什么就不能修改一下呢？我至今任不明白，学校到底是在培养什么样的人？从前的我一直以为是对社会有用的人，后来想想恐怕不是。为什么社会都承认的人，在学校还因为一些傻屌规定频频受阻？教育的病态性已经不容多说了，一直很好奇这种涉及到国家未来的事会一拖再拖？现在还提不出一个有效的方案？算了，无力吐槽了，毕竟这么多年来，都是我这样无病呻吟，没有权力导致碌碌无为的人，毕业了之后就没精力去改变什么了，说到底我也是作恶者罢了。\n","slug":"diary/2019/07/20190702","published":1,"updated":"2019-07-02T05:16:40.100Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1jq003da613szthj57d","content":"<p>今天上午已知在忙学校的事，真的被学校的事折磨死了，带我们小学期的老师感觉还不好说话。</p>\n<p>我就不懂了，为什么每次好不容易被工作搞的有一点激情了，紧接着就被学校的破事消耗殆尽，甚至搞的身心俱疲。</p>\n<p>学校那些死板的规定，天知道是哪一天定下来的，这么长时间没有被修改过了，恐怕已经被无数人诟病了，为什么就不能修改一下呢？我至今任不明白，学校到底是在培养什么样的人？从前的我一直以为是对社会有用的人，后来想想恐怕不是。为什么社会都承认的人，在学校还因为一些傻屌规定频频受阻？教育的病态性已经不容多说了，一直很好奇这种涉及到国家未来的事会一拖再拖？现在还提不出一个有效的方案？算了，无力吐槽了，毕竟这么多年来，都是我这样无病呻吟，没有权力导致碌碌无为的人，毕业了之后就没精力去改变什么了，说到底我也是作恶者罢了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天上午已知在忙学校的事，真的被学校的事折磨死了，带我们小学期的老师感觉还不好说话。</p>\n<p>我就不懂了，为什么每次好不容易被工作搞的有一点激情了，紧接着就被学校的破事消耗殆尽，甚至搞的身心俱疲。</p>\n<p>学校那些死板的规定，天知道是哪一天定下来的，这么长时间没有被修改过了，恐怕已经被无数人诟病了，为什么就不能修改一下呢？我至今任不明白，学校到底是在培养什么样的人？从前的我一直以为是对社会有用的人，后来想想恐怕不是。为什么社会都承认的人，在学校还因为一些傻屌规定频频受阻？教育的病态性已经不容多说了，一直很好奇这种涉及到国家未来的事会一拖再拖？现在还提不出一个有效的方案？算了，无力吐槽了，毕竟这么多年来，都是我这样无病呻吟，没有权力导致碌碌无为的人，毕业了之后就没精力去改变什么了，说到底我也是作恶者罢了。</p>\n"},{"title":"日常吐槽20190825","date":"1019-08-24T15:54:17.000Z","author":"zuhiul","_content":"\n今天看到一个人，虽然我从来没有和他说过话，但是我对他很反感，我突然间想到一件事，为什么我会对一个从来没有交流过的人，没有任何交集的人感到反感？\n\n仔细的思考了一下，大概原因是我是通过了我比较信任的人的描述，而产生了我脑补自己对他印象的现象。无论这个印象是否真实，但是一旦产生几乎不可更改。导致了我后来对他产生的反感。\n\n想明白这一点之后，突然就感觉到可怕。人言可畏啊，很多时候都不用众口铄金，很多时候听了一个人的意见，就足以产生很大的印象。感觉以后很多事情需要有更多自己的思考。记录于此，引以为戒。\n","source":"_posts/diary/2019/08/20190825.md","raw":"---\ntitle: 日常吐槽20190825\ndate: 1019-08-25\nauthor: \"zuhiul\"\ntags:\n  - 日常吐槽\n---\n\n今天看到一个人，虽然我从来没有和他说过话，但是我对他很反感，我突然间想到一件事，为什么我会对一个从来没有交流过的人，没有任何交集的人感到反感？\n\n仔细的思考了一下，大概原因是我是通过了我比较信任的人的描述，而产生了我脑补自己对他印象的现象。无论这个印象是否真实，但是一旦产生几乎不可更改。导致了我后来对他产生的反感。\n\n想明白这一点之后，突然就感觉到可怕。人言可畏啊，很多时候都不用众口铄金，很多时候听了一个人的意见，就足以产生很大的印象。感觉以后很多事情需要有更多自己的思考。记录于此，引以为戒。\n","slug":"diary/2019/08/20190825","published":1,"updated":"2019-08-25T07:11:16.223Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1jr003ga613b1lgb8e6","content":"<p>今天看到一个人，虽然我从来没有和他说过话，但是我对他很反感，我突然间想到一件事，为什么我会对一个从来没有交流过的人，没有任何交集的人感到反感？</p>\n<p>仔细的思考了一下，大概原因是我是通过了我比较信任的人的描述，而产生了我脑补自己对他印象的现象。无论这个印象是否真实，但是一旦产生几乎不可更改。导致了我后来对他产生的反感。</p>\n<p>想明白这一点之后，突然就感觉到可怕。人言可畏啊，很多时候都不用众口铄金，很多时候听了一个人的意见，就足以产生很大的印象。感觉以后很多事情需要有更多自己的思考。记录于此，引以为戒。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天看到一个人，虽然我从来没有和他说过话，但是我对他很反感，我突然间想到一件事，为什么我会对一个从来没有交流过的人，没有任何交集的人感到反感？</p>\n<p>仔细的思考了一下，大概原因是我是通过了我比较信任的人的描述，而产生了我脑补自己对他印象的现象。无论这个印象是否真实，但是一旦产生几乎不可更改。导致了我后来对他产生的反感。</p>\n<p>想明白这一点之后，突然就感觉到可怕。人言可畏啊，很多时候都不用众口铄金，很多时候听了一个人的意见，就足以产生很大的印象。感觉以后很多事情需要有更多自己的思考。记录于此，引以为戒。</p>\n"},{"title":"日常吐槽20190714","date":"1019-07-13T15:54:17.000Z","author":"zuhiul","_content":"\n昨天晚上给家里打了个电话，说了关于回学校继续比赛的事，实在是没想到家里人的反应会那么大，母亲的意思是，坚决反对我回学校打比赛。导致我昨天晚上想了很久关于是否回学校的事。\n\n然后我回想了一下当时我们三个人讨论的事情，毫无疑问，我是主张不回去打比赛的，那么为什么让我动摇了呢？是因为他们两个都要回去吗？我一向自诩为遵从内心，自由生长。为何此刻就一直摇摆不定？\n\n我现在无非担心的两件事就是：我没有回去，他们打金了；我回去了，结果和去年一样。\n\n毫无疑问，我其实更担心后者。\n\n昨天问了一下奇哥，关于金牌和sp的把握，分别是75%和80%，其实在我心里分别是50%,60%，说真的，我不知道从那一刻开始，对很多东西不抱有希望了，很多时候都没有当初入学的那种激情了。正是这种激情的缺失，导致我一度不想回学校打比赛。奇哥的意思是，为什么不去尝试更多可能？可能我回学校发现那种激情又回来了？我对这种想法持怀疑态度。我感觉还是过早接触了不该接触的东西，导致我现在心思已经完全不在这上面了。就像淌过的时间之水，一去不返了。\n\n然后奇哥说，如果我不回去，他还是有可能会去打比赛。我仔细思考了一下母亲说的，我是学校最厉害的人吗？虽然我一度这么觉得，但是结果是显然的——我不是。那么在三个人六个月没训练的情况下，他们完全足够和任何人进行磨合，而且结果不会太差。如此说来，我不回去其实没有我想的那么愧疚。哎，这糟心事。\n","source":"_posts/diary/2019/07/20190714.md","raw":"---\ntitle: 日常吐槽20190714\ndate: 1019-07-14\nauthor: \"zuhiul\"\ntags:\n  - 日常吐槽\n---\n\n昨天晚上给家里打了个电话，说了关于回学校继续比赛的事，实在是没想到家里人的反应会那么大，母亲的意思是，坚决反对我回学校打比赛。导致我昨天晚上想了很久关于是否回学校的事。\n\n然后我回想了一下当时我们三个人讨论的事情，毫无疑问，我是主张不回去打比赛的，那么为什么让我动摇了呢？是因为他们两个都要回去吗？我一向自诩为遵从内心，自由生长。为何此刻就一直摇摆不定？\n\n我现在无非担心的两件事就是：我没有回去，他们打金了；我回去了，结果和去年一样。\n\n毫无疑问，我其实更担心后者。\n\n昨天问了一下奇哥，关于金牌和sp的把握，分别是75%和80%，其实在我心里分别是50%,60%，说真的，我不知道从那一刻开始，对很多东西不抱有希望了，很多时候都没有当初入学的那种激情了。正是这种激情的缺失，导致我一度不想回学校打比赛。奇哥的意思是，为什么不去尝试更多可能？可能我回学校发现那种激情又回来了？我对这种想法持怀疑态度。我感觉还是过早接触了不该接触的东西，导致我现在心思已经完全不在这上面了。就像淌过的时间之水，一去不返了。\n\n然后奇哥说，如果我不回去，他还是有可能会去打比赛。我仔细思考了一下母亲说的，我是学校最厉害的人吗？虽然我一度这么觉得，但是结果是显然的——我不是。那么在三个人六个月没训练的情况下，他们完全足够和任何人进行磨合，而且结果不会太差。如此说来，我不回去其实没有我想的那么愧疚。哎，这糟心事。\n","slug":"diary/2019/07/20190714","published":1,"updated":"2019-07-14T02:09:59.073Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1js003ia6132phxqm4u","content":"<p>昨天晚上给家里打了个电话，说了关于回学校继续比赛的事，实在是没想到家里人的反应会那么大，母亲的意思是，坚决反对我回学校打比赛。导致我昨天晚上想了很久关于是否回学校的事。</p>\n<p>然后我回想了一下当时我们三个人讨论的事情，毫无疑问，我是主张不回去打比赛的，那么为什么让我动摇了呢？是因为他们两个都要回去吗？我一向自诩为遵从内心，自由生长。为何此刻就一直摇摆不定？</p>\n<p>我现在无非担心的两件事就是：我没有回去，他们打金了；我回去了，结果和去年一样。</p>\n<p>毫无疑问，我其实更担心后者。</p>\n<p>昨天问了一下奇哥，关于金牌和sp的把握，分别是75%和80%，其实在我心里分别是50%,60%，说真的，我不知道从那一刻开始，对很多东西不抱有希望了，很多时候都没有当初入学的那种激情了。正是这种激情的缺失，导致我一度不想回学校打比赛。奇哥的意思是，为什么不去尝试更多可能？可能我回学校发现那种激情又回来了？我对这种想法持怀疑态度。我感觉还是过早接触了不该接触的东西，导致我现在心思已经完全不在这上面了。就像淌过的时间之水，一去不返了。</p>\n<p>然后奇哥说，如果我不回去，他还是有可能会去打比赛。我仔细思考了一下母亲说的，我是学校最厉害的人吗？虽然我一度这么觉得，但是结果是显然的——我不是。那么在三个人六个月没训练的情况下，他们完全足够和任何人进行磨合，而且结果不会太差。如此说来，我不回去其实没有我想的那么愧疚。哎，这糟心事。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>昨天晚上给家里打了个电话，说了关于回学校继续比赛的事，实在是没想到家里人的反应会那么大，母亲的意思是，坚决反对我回学校打比赛。导致我昨天晚上想了很久关于是否回学校的事。</p>\n<p>然后我回想了一下当时我们三个人讨论的事情，毫无疑问，我是主张不回去打比赛的，那么为什么让我动摇了呢？是因为他们两个都要回去吗？我一向自诩为遵从内心，自由生长。为何此刻就一直摇摆不定？</p>\n<p>我现在无非担心的两件事就是：我没有回去，他们打金了；我回去了，结果和去年一样。</p>\n<p>毫无疑问，我其实更担心后者。</p>\n<p>昨天问了一下奇哥，关于金牌和sp的把握，分别是75%和80%，其实在我心里分别是50%,60%，说真的，我不知道从那一刻开始，对很多东西不抱有希望了，很多时候都没有当初入学的那种激情了。正是这种激情的缺失，导致我一度不想回学校打比赛。奇哥的意思是，为什么不去尝试更多可能？可能我回学校发现那种激情又回来了？我对这种想法持怀疑态度。我感觉还是过早接触了不该接触的东西，导致我现在心思已经完全不在这上面了。就像淌过的时间之水，一去不返了。</p>\n<p>然后奇哥说，如果我不回去，他还是有可能会去打比赛。我仔细思考了一下母亲说的，我是学校最厉害的人吗？虽然我一度这么觉得，但是结果是显然的——我不是。那么在三个人六个月没训练的情况下，他们完全足够和任何人进行磨合，而且结果不会太差。如此说来，我不回去其实没有我想的那么愧疚。哎，这糟心事。</p>\n"},{"title":"日常吐槽20191011","date":"1019-10-10T15:54:17.000Z","author":"zuhiul","_content":"\n今天又被老大喷了，老大的意思是我效率太低了。其实这几天我认为是没有很重要的事，所以这几天我基本都是在摸鱼，大部分时间是在刷题，虽然mentor看到了，但是可能是他觉得这段时间确实没事，所以没管我，因为刚好三个方向，他们三个正式工吧。然后就没我啥事了。于是我也就心安理得的再摸鱼。结果被老大看出来了。自然是被喷了。\n\n然后我仔细思考了一下，我为什么会变成这样，然后我突然醒悟过来，我的想法还停留在我有无限的可能的层面，因为我一直觉得我未来不一定属于这里，我可能会去任何一家公司，所以这段时间，尤其是在十一假期期间，什么事都没有放在心上。现在回想一下，其实挺愚蠢的。我忽略了一个重要的事，那就是我做事的时候，我也在成长。忽略了这个细节，导致我潜意识里始终觉得，做事是亏了。愚蠢至极！\n\n接下来一段时间要安安心心做事了。\n","source":"_posts/diary/2019/10/20191011.md","raw":"---\ntitle: 日常吐槽20191011\ndate: 1019-10-11\nauthor: \"zuhiul\"\ntags:\n  - 日常吐槽\n---\n\n今天又被老大喷了，老大的意思是我效率太低了。其实这几天我认为是没有很重要的事，所以这几天我基本都是在摸鱼，大部分时间是在刷题，虽然mentor看到了，但是可能是他觉得这段时间确实没事，所以没管我，因为刚好三个方向，他们三个正式工吧。然后就没我啥事了。于是我也就心安理得的再摸鱼。结果被老大看出来了。自然是被喷了。\n\n然后我仔细思考了一下，我为什么会变成这样，然后我突然醒悟过来，我的想法还停留在我有无限的可能的层面，因为我一直觉得我未来不一定属于这里，我可能会去任何一家公司，所以这段时间，尤其是在十一假期期间，什么事都没有放在心上。现在回想一下，其实挺愚蠢的。我忽略了一个重要的事，那就是我做事的时候，我也在成长。忽略了这个细节，导致我潜意识里始终觉得，做事是亏了。愚蠢至极！\n\n接下来一段时间要安安心心做事了。\n","slug":"diary/2019/10/20191011","published":1,"updated":"2019-10-11T03:34:21.703Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1js003ka61383r1tnjh","content":"<p>今天又被老大喷了，老大的意思是我效率太低了。其实这几天我认为是没有很重要的事，所以这几天我基本都是在摸鱼，大部分时间是在刷题，虽然mentor看到了，但是可能是他觉得这段时间确实没事，所以没管我，因为刚好三个方向，他们三个正式工吧。然后就没我啥事了。于是我也就心安理得的再摸鱼。结果被老大看出来了。自然是被喷了。</p>\n<p>然后我仔细思考了一下，我为什么会变成这样，然后我突然醒悟过来，我的想法还停留在我有无限的可能的层面，因为我一直觉得我未来不一定属于这里，我可能会去任何一家公司，所以这段时间，尤其是在十一假期期间，什么事都没有放在心上。现在回想一下，其实挺愚蠢的。我忽略了一个重要的事，那就是我做事的时候，我也在成长。忽略了这个细节，导致我潜意识里始终觉得，做事是亏了。愚蠢至极！</p>\n<p>接下来一段时间要安安心心做事了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天又被老大喷了，老大的意思是我效率太低了。其实这几天我认为是没有很重要的事，所以这几天我基本都是在摸鱼，大部分时间是在刷题，虽然mentor看到了，但是可能是他觉得这段时间确实没事，所以没管我，因为刚好三个方向，他们三个正式工吧。然后就没我啥事了。于是我也就心安理得的再摸鱼。结果被老大看出来了。自然是被喷了。</p>\n<p>然后我仔细思考了一下，我为什么会变成这样，然后我突然醒悟过来，我的想法还停留在我有无限的可能的层面，因为我一直觉得我未来不一定属于这里，我可能会去任何一家公司，所以这段时间，尤其是在十一假期期间，什么事都没有放在心上。现在回想一下，其实挺愚蠢的。我忽略了一个重要的事，那就是我做事的时候，我也在成长。忽略了这个细节，导致我潜意识里始终觉得，做事是亏了。愚蠢至极！</p>\n<p>接下来一段时间要安安心心做事了。</p>\n"},{"title":"日常吐槽20191024","date":"1019-10-23T15:54:17.000Z","author":"zuhiul","_content":"\n这段时间要拍类似于毕业证上的照片这种东西，然后我就去拍了一下，在高曝光下，看到了自己气色好差。这段时间熬夜实在太多了。感觉以后要早点休息了。然后这几天每天保证12点之前睡觉。可能是之前熬夜太多了，这段时间虽然睡的很足，但是精神头还是不是很好。感觉以后真的需要好好休息了。\n\n然后学校的学习还是遥遥无期，这周末应该要抽空写一下学校的作业了。也该看看操作系统的书了。水平还是太菜了。\n","source":"_posts/diary/2019/10/20191024.md","raw":"---\ntitle: 日常吐槽20191024\ndate: 1019-10-24\nauthor: \"zuhiul\"\ntags:\n  - 日常吐槽\n---\n\n这段时间要拍类似于毕业证上的照片这种东西，然后我就去拍了一下，在高曝光下，看到了自己气色好差。这段时间熬夜实在太多了。感觉以后要早点休息了。然后这几天每天保证12点之前睡觉。可能是之前熬夜太多了，这段时间虽然睡的很足，但是精神头还是不是很好。感觉以后真的需要好好休息了。\n\n然后学校的学习还是遥遥无期，这周末应该要抽空写一下学校的作业了。也该看看操作系统的书了。水平还是太菜了。\n","slug":"diary/2019/10/20191024","published":1,"updated":"2019-10-24T13:35:03.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1jt003ma613ezcvqpck","content":"<p>这段时间要拍类似于毕业证上的照片这种东西，然后我就去拍了一下，在高曝光下，看到了自己气色好差。这段时间熬夜实在太多了。感觉以后要早点休息了。然后这几天每天保证12点之前睡觉。可能是之前熬夜太多了，这段时间虽然睡的很足，但是精神头还是不是很好。感觉以后真的需要好好休息了。</p>\n<p>然后学校的学习还是遥遥无期，这周末应该要抽空写一下学校的作业了。也该看看操作系统的书了。水平还是太菜了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>这段时间要拍类似于毕业证上的照片这种东西，然后我就去拍了一下，在高曝光下，看到了自己气色好差。这段时间熬夜实在太多了。感觉以后要早点休息了。然后这几天每天保证12点之前睡觉。可能是之前熬夜太多了，这段时间虽然睡的很足，但是精神头还是不是很好。感觉以后真的需要好好休息了。</p>\n<p>然后学校的学习还是遥遥无期，这周末应该要抽空写一下学校的作业了。也该看看操作系统的书了。水平还是太菜了。</p>\n"},{"title":"日常吐槽20191010","date":"1019-10-09T15:54:17.000Z","author":"zuhiul","_content":"\n今天水到cf_784E，看到了熟悉的数字电路处理。但是最后还是模拟过的。想电路图化简来着，然而立马发现，自己啥都不会了。突然一种悲哀油然而生。自己的大学到底学了一坨什么东西？很多课程已经忘的干干净净了，这是自己想要的吗？\n","source":"_posts/diary/2019/10/20191010.md","raw":"---\ntitle: 日常吐槽20191010\ndate: 1019-10-10\nauthor: \"zuhiul\"\ntags:\n  - 日常吐槽\n---\n\n今天水到cf_784E，看到了熟悉的数字电路处理。但是最后还是模拟过的。想电路图化简来着，然而立马发现，自己啥都不会了。突然一种悲哀油然而生。自己的大学到底学了一坨什么东西？很多课程已经忘的干干净净了，这是自己想要的吗？\n","slug":"diary/2019/10/20191010","published":1,"updated":"2019-10-11T03:25:40.889Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1jt003oa613r2ia61nz","content":"<p>今天水到cf_784E，看到了熟悉的数字电路处理。但是最后还是模拟过的。想电路图化简来着，然而立马发现，自己啥都不会了。突然一种悲哀油然而生。自己的大学到底学了一坨什么东西？很多课程已经忘的干干净净了，这是自己想要的吗？</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天水到cf_784E，看到了熟悉的数字电路处理。但是最后还是模拟过的。想电路图化简来着，然而立马发现，自己啥都不会了。突然一种悲哀油然而生。自己的大学到底学了一坨什么东西？很多课程已经忘的干干净净了，这是自己想要的吗？</p>\n"},{"title":"日常吐槽20191010","date":"1019-10-09T15:54:17.000Z","author":"zuhiul","_content":"\n今天有点难受，一个需求因为一些奇奇怪怪的原因没有达到预期效果。同事没有直接喷我，但是我从他的表情中读出了不情愿。\n\n感觉是时候离开了，我的精力被分散的太厉害了，而我的能力并不足以支撑我去想太多东西。\n\n或者说这一两个月以来，我过的并不开心，但是谁又会在意你开不开心呢？或许我该考虑一下，自己是否真的适合这份工作呢？我感觉现在的自己陷入了一个恶性循环。太多的时候过的浑浑噩噩了。每天非但没有进步，反而状态在不断的下滑。我也不知道自己是否真的哪一天就绷不住了。\n\n其实我也知道，一直是我自己的问题导致现在很多，嗯，应该说是不是很好的结果。\n\n很多时候是因为我似乎总是在逃避什么？大多数的时候给自己的借口是：我不会。我可能一直没想清楚一个问题是：别人不会给你太多时间让你成长。他们会不断的push你，让你做这做那。我又不好意思拒绝，以至于很多时候甚至压得我踹不过气。我从前一直劝解自己，没事，熬过这段就好了。但是有时候又感觉像是压死骆驼的最后一根稻草，不知道自己是不是某一天突然就绷不住了。\n\n有时候又感觉生活挺难的。以前自己没有感受到生活的压力的时候还没什么，现在自己才一个人就有点顶不住了。\n","source":"_posts/diary/2019/10/20191031.md","raw":"---\ntitle: 日常吐槽20191010\ndate: 1019-10-10\nauthor: \"zuhiul\"\ntags:\n  - 日常吐槽\n---\n\n今天有点难受，一个需求因为一些奇奇怪怪的原因没有达到预期效果。同事没有直接喷我，但是我从他的表情中读出了不情愿。\n\n感觉是时候离开了，我的精力被分散的太厉害了，而我的能力并不足以支撑我去想太多东西。\n\n或者说这一两个月以来，我过的并不开心，但是谁又会在意你开不开心呢？或许我该考虑一下，自己是否真的适合这份工作呢？我感觉现在的自己陷入了一个恶性循环。太多的时候过的浑浑噩噩了。每天非但没有进步，反而状态在不断的下滑。我也不知道自己是否真的哪一天就绷不住了。\n\n其实我也知道，一直是我自己的问题导致现在很多，嗯，应该说是不是很好的结果。\n\n很多时候是因为我似乎总是在逃避什么？大多数的时候给自己的借口是：我不会。我可能一直没想清楚一个问题是：别人不会给你太多时间让你成长。他们会不断的push你，让你做这做那。我又不好意思拒绝，以至于很多时候甚至压得我踹不过气。我从前一直劝解自己，没事，熬过这段就好了。但是有时候又感觉像是压死骆驼的最后一根稻草，不知道自己是不是某一天突然就绷不住了。\n\n有时候又感觉生活挺难的。以前自己没有感受到生活的压力的时候还没什么，现在自己才一个人就有点顶不住了。\n","slug":"diary/2019/10/20191031","published":1,"updated":"2019-10-31T14:34:14.430Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1ju003qa613rsrj46jr","content":"<p>今天有点难受，一个需求因为一些奇奇怪怪的原因没有达到预期效果。同事没有直接喷我，但是我从他的表情中读出了不情愿。</p>\n<p>感觉是时候离开了，我的精力被分散的太厉害了，而我的能力并不足以支撑我去想太多东西。</p>\n<p>或者说这一两个月以来，我过的并不开心，但是谁又会在意你开不开心呢？或许我该考虑一下，自己是否真的适合这份工作呢？我感觉现在的自己陷入了一个恶性循环。太多的时候过的浑浑噩噩了。每天非但没有进步，反而状态在不断的下滑。我也不知道自己是否真的哪一天就绷不住了。</p>\n<p>其实我也知道，一直是我自己的问题导致现在很多，嗯，应该说是不是很好的结果。</p>\n<p>很多时候是因为我似乎总是在逃避什么？大多数的时候给自己的借口是：我不会。我可能一直没想清楚一个问题是：别人不会给你太多时间让你成长。他们会不断的push你，让你做这做那。我又不好意思拒绝，以至于很多时候甚至压得我踹不过气。我从前一直劝解自己，没事，熬过这段就好了。但是有时候又感觉像是压死骆驼的最后一根稻草，不知道自己是不是某一天突然就绷不住了。</p>\n<p>有时候又感觉生活挺难的。以前自己没有感受到生活的压力的时候还没什么，现在自己才一个人就有点顶不住了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天有点难受，一个需求因为一些奇奇怪怪的原因没有达到预期效果。同事没有直接喷我，但是我从他的表情中读出了不情愿。</p>\n<p>感觉是时候离开了，我的精力被分散的太厉害了，而我的能力并不足以支撑我去想太多东西。</p>\n<p>或者说这一两个月以来，我过的并不开心，但是谁又会在意你开不开心呢？或许我该考虑一下，自己是否真的适合这份工作呢？我感觉现在的自己陷入了一个恶性循环。太多的时候过的浑浑噩噩了。每天非但没有进步，反而状态在不断的下滑。我也不知道自己是否真的哪一天就绷不住了。</p>\n<p>其实我也知道，一直是我自己的问题导致现在很多，嗯，应该说是不是很好的结果。</p>\n<p>很多时候是因为我似乎总是在逃避什么？大多数的时候给自己的借口是：我不会。我可能一直没想清楚一个问题是：别人不会给你太多时间让你成长。他们会不断的push你，让你做这做那。我又不好意思拒绝，以至于很多时候甚至压得我踹不过气。我从前一直劝解自己，没事，熬过这段就好了。但是有时候又感觉像是压死骆驼的最后一根稻草，不知道自己是不是某一天突然就绷不住了。</p>\n<p>有时候又感觉生活挺难的。以前自己没有感受到生活的压力的时候还没什么，现在自己才一个人就有点顶不住了。</p>\n"},{"title":"日常吐槽20190905","date":"1019-09-04T15:54:17.000Z","author":"zuhiul","_content":"\n从3.6到今天刚好半年时间，不知不觉已经来北京半年了，感慨挺多的。期间发生了很多事，下面一一总结。\n\n首先就是比赛的事，虽然是上上个月就已经决定了，但是还是很多想说的。我之前一直觉得不回学校打比赛是因为父母的缘故，后来仔细想了想，可能不止于此吧。可能更多的是自己的想法。不怪队友，真的是自己没有了当年的激情了，或许真像水先生说的那样，自己已经被温水煮青蛙了。可能几年后再来回想这件事可能会有不同的看法吧。\n\n其次就是自己在头条这边的成长，说句公道话，我没去过别的地方，所以暂时不做对比，单说头条。首先对于一个刚毕业或者说还没毕业的人来说，头条还算是比较肝的了，但是我始终觉得这种肝对于一个没有任何工程能力的人来说是非常有意义的。其次，头条这边的环境真的很好，尤其给我最深的一点体会就是，大家都是想把某个东西做好，且不说每个人出力多少，但是所有人朝着一个方向迈进，总会有所成就不是吗？最后就是：头条的伙食真的很好，我已经胖了10斤了。俨然是一个看起来20多，实际上刚20的中年油腻大叔，哈哈哈哈。\n\n然后就是自己的脾气，真的是好了很多，可能是因为工程能力太菜了的缘故，很多时候都是陈述自己的意见，那种强迫奇哥接受我的想法的日子，一去不复返了。哈哈哈哈哈。对不起奇哥。\n\n还有就是挺感谢头条给我的六个月，尤其是老大。初入职的第一个老大真的是非常重要了。我眼里一个完美老大的样子，不是他技术有多牛（当然，我老大也很厉害），而是他现在的样子，是否是你追求的样子，或者说，你想成为他那样的人吗？如果你“不幸”遇到了，那真的是能爽一辈子的事。真不巧，我老大就是这样。哈哈哈哈。\n\n然后就是见了相见的小姐姐。还是挺爽的。没怎么出门玩过的人，可能稍显木讷，感觉被嫌弃了。orz。 还有108天，等着呗，很快的。\n\n还没答辩就溜了，实在是太累了，没时间写ppt 啊啊啊。\n\n昨天收拾东西的时候第一次感受到了六个月时间有多长，大概就是，刚来北京的时候我穿的是羽绒服，厚外套。昨天收拾东西的时候，我一个大男人的衣服硬生生有两个箱子+一书包？\n","source":"_posts/diary/2019/09/20190905.md","raw":"---\ntitle: 日常吐槽20190905\ndate: 1019-09-05\nauthor: \"zuhiul\"\ntags:\n  - 个人总结\n---\n\n从3.6到今天刚好半年时间，不知不觉已经来北京半年了，感慨挺多的。期间发生了很多事，下面一一总结。\n\n首先就是比赛的事，虽然是上上个月就已经决定了，但是还是很多想说的。我之前一直觉得不回学校打比赛是因为父母的缘故，后来仔细想了想，可能不止于此吧。可能更多的是自己的想法。不怪队友，真的是自己没有了当年的激情了，或许真像水先生说的那样，自己已经被温水煮青蛙了。可能几年后再来回想这件事可能会有不同的看法吧。\n\n其次就是自己在头条这边的成长，说句公道话，我没去过别的地方，所以暂时不做对比，单说头条。首先对于一个刚毕业或者说还没毕业的人来说，头条还算是比较肝的了，但是我始终觉得这种肝对于一个没有任何工程能力的人来说是非常有意义的。其次，头条这边的环境真的很好，尤其给我最深的一点体会就是，大家都是想把某个东西做好，且不说每个人出力多少，但是所有人朝着一个方向迈进，总会有所成就不是吗？最后就是：头条的伙食真的很好，我已经胖了10斤了。俨然是一个看起来20多，实际上刚20的中年油腻大叔，哈哈哈哈。\n\n然后就是自己的脾气，真的是好了很多，可能是因为工程能力太菜了的缘故，很多时候都是陈述自己的意见，那种强迫奇哥接受我的想法的日子，一去不复返了。哈哈哈哈哈。对不起奇哥。\n\n还有就是挺感谢头条给我的六个月，尤其是老大。初入职的第一个老大真的是非常重要了。我眼里一个完美老大的样子，不是他技术有多牛（当然，我老大也很厉害），而是他现在的样子，是否是你追求的样子，或者说，你想成为他那样的人吗？如果你“不幸”遇到了，那真的是能爽一辈子的事。真不巧，我老大就是这样。哈哈哈哈。\n\n然后就是见了相见的小姐姐。还是挺爽的。没怎么出门玩过的人，可能稍显木讷，感觉被嫌弃了。orz。 还有108天，等着呗，很快的。\n\n还没答辩就溜了，实在是太累了，没时间写ppt 啊啊啊。\n\n昨天收拾东西的时候第一次感受到了六个月时间有多长，大概就是，刚来北京的时候我穿的是羽绒服，厚外套。昨天收拾东西的时候，我一个大男人的衣服硬生生有两个箱子+一书包？\n","slug":"diary/2019/09/20190905","published":1,"updated":"2019-09-05T05:52:21.633Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1jv003sa613nnc020h1","content":"<p>从3.6到今天刚好半年时间，不知不觉已经来北京半年了，感慨挺多的。期间发生了很多事，下面一一总结。</p>\n<p>首先就是比赛的事，虽然是上上个月就已经决定了，但是还是很多想说的。我之前一直觉得不回学校打比赛是因为父母的缘故，后来仔细想了想，可能不止于此吧。可能更多的是自己的想法。不怪队友，真的是自己没有了当年的激情了，或许真像水先生说的那样，自己已经被温水煮青蛙了。可能几年后再来回想这件事可能会有不同的看法吧。</p>\n<p>其次就是自己在头条这边的成长，说句公道话，我没去过别的地方，所以暂时不做对比，单说头条。首先对于一个刚毕业或者说还没毕业的人来说，头条还算是比较肝的了，但是我始终觉得这种肝对于一个没有任何工程能力的人来说是非常有意义的。其次，头条这边的环境真的很好，尤其给我最深的一点体会就是，大家都是想把某个东西做好，且不说每个人出力多少，但是所有人朝着一个方向迈进，总会有所成就不是吗？最后就是：头条的伙食真的很好，我已经胖了10斤了。俨然是一个看起来20多，实际上刚20的中年油腻大叔，哈哈哈哈。</p>\n<p>然后就是自己的脾气，真的是好了很多，可能是因为工程能力太菜了的缘故，很多时候都是陈述自己的意见，那种强迫奇哥接受我的想法的日子，一去不复返了。哈哈哈哈哈。对不起奇哥。</p>\n<p>还有就是挺感谢头条给我的六个月，尤其是老大。初入职的第一个老大真的是非常重要了。我眼里一个完美老大的样子，不是他技术有多牛（当然，我老大也很厉害），而是他现在的样子，是否是你追求的样子，或者说，你想成为他那样的人吗？如果你“不幸”遇到了，那真的是能爽一辈子的事。真不巧，我老大就是这样。哈哈哈哈。</p>\n<p>然后就是见了相见的小姐姐。还是挺爽的。没怎么出门玩过的人，可能稍显木讷，感觉被嫌弃了。orz。 还有108天，等着呗，很快的。</p>\n<p>还没答辩就溜了，实在是太累了，没时间写ppt 啊啊啊。</p>\n<p>昨天收拾东西的时候第一次感受到了六个月时间有多长，大概就是，刚来北京的时候我穿的是羽绒服，厚外套。昨天收拾东西的时候，我一个大男人的衣服硬生生有两个箱子+一书包？</p>\n","site":{"data":{}},"excerpt":"","more":"<p>从3.6到今天刚好半年时间，不知不觉已经来北京半年了，感慨挺多的。期间发生了很多事，下面一一总结。</p>\n<p>首先就是比赛的事，虽然是上上个月就已经决定了，但是还是很多想说的。我之前一直觉得不回学校打比赛是因为父母的缘故，后来仔细想了想，可能不止于此吧。可能更多的是自己的想法。不怪队友，真的是自己没有了当年的激情了，或许真像水先生说的那样，自己已经被温水煮青蛙了。可能几年后再来回想这件事可能会有不同的看法吧。</p>\n<p>其次就是自己在头条这边的成长，说句公道话，我没去过别的地方，所以暂时不做对比，单说头条。首先对于一个刚毕业或者说还没毕业的人来说，头条还算是比较肝的了，但是我始终觉得这种肝对于一个没有任何工程能力的人来说是非常有意义的。其次，头条这边的环境真的很好，尤其给我最深的一点体会就是，大家都是想把某个东西做好，且不说每个人出力多少，但是所有人朝着一个方向迈进，总会有所成就不是吗？最后就是：头条的伙食真的很好，我已经胖了10斤了。俨然是一个看起来20多，实际上刚20的中年油腻大叔，哈哈哈哈。</p>\n<p>然后就是自己的脾气，真的是好了很多，可能是因为工程能力太菜了的缘故，很多时候都是陈述自己的意见，那种强迫奇哥接受我的想法的日子，一去不复返了。哈哈哈哈哈。对不起奇哥。</p>\n<p>还有就是挺感谢头条给我的六个月，尤其是老大。初入职的第一个老大真的是非常重要了。我眼里一个完美老大的样子，不是他技术有多牛（当然，我老大也很厉害），而是他现在的样子，是否是你追求的样子，或者说，你想成为他那样的人吗？如果你“不幸”遇到了，那真的是能爽一辈子的事。真不巧，我老大就是这样。哈哈哈哈。</p>\n<p>然后就是见了相见的小姐姐。还是挺爽的。没怎么出门玩过的人，可能稍显木讷，感觉被嫌弃了。orz。 还有108天，等着呗，很快的。</p>\n<p>还没答辩就溜了，实在是太累了，没时间写ppt 啊啊啊。</p>\n<p>昨天收拾东西的时候第一次感受到了六个月时间有多长，大概就是，刚来北京的时候我穿的是羽绒服，厚外套。昨天收拾东西的时候，我一个大男人的衣服硬生生有两个箱子+一书包？</p>\n"},{"title":"日常吐槽20190909","date":"1019-09-08T15:54:17.000Z","author":"zuhiul","_content":"\n这几天请假回学校玩了几天，感到很是堕落，每天的事都是今天拖明天，明天拖后天，感觉拖延症都上来了。不像以前的我。说实话这几天都不知道该干啥。当时回来之前给自己的定位是养老，但是真的养老的时候反而感觉到不适应。难道是因为真的不适合养老吗?\n\n很多时候明明很慌，但是为什么又不想努力呢?到底说还是自己太懒了。然后实在是不想等下去了。明天处理完这边的事就准备回家了。\n\n回家其实也没有太多事。不知道干啥。\n\n其实我主要想说的是，我这段时间突然有点迷茫，不知道自己到底想要的是什么，很多时候我都会说想搞很多很多钱，但是我后来渐渐发现，我要的可能不是这个，因为这种想法往往禁不起后一步 推敲，比如进一步问我:搞了很多钱，然后呢?说实话我答不上来。我真的不知道自己想要的到底是什么。\n\n我一直觉得，一个人又仔细想要的东西是一件很美好的事，他能让一个人有奋斗的目标，但是一旦你发现这个目标没有意义的时候，你就非常难受了。你会突然发现一切的努力没有了意义。\n\n不说了，后天走的话，明天事还挺多的，先打游戏去了。\n","source":"_posts/diary/2019/09/20190909.md","raw":"---\ntitle: 日常吐槽20190909\ndate: 1019-09-09\nauthor: \"zuhiul\"\ntags:\n  - 日常吐槽\n---\n\n这几天请假回学校玩了几天，感到很是堕落，每天的事都是今天拖明天，明天拖后天，感觉拖延症都上来了。不像以前的我。说实话这几天都不知道该干啥。当时回来之前给自己的定位是养老，但是真的养老的时候反而感觉到不适应。难道是因为真的不适合养老吗?\n\n很多时候明明很慌，但是为什么又不想努力呢?到底说还是自己太懒了。然后实在是不想等下去了。明天处理完这边的事就准备回家了。\n\n回家其实也没有太多事。不知道干啥。\n\n其实我主要想说的是，我这段时间突然有点迷茫，不知道自己到底想要的是什么，很多时候我都会说想搞很多很多钱，但是我后来渐渐发现，我要的可能不是这个，因为这种想法往往禁不起后一步 推敲，比如进一步问我:搞了很多钱，然后呢?说实话我答不上来。我真的不知道自己想要的到底是什么。\n\n我一直觉得，一个人又仔细想要的东西是一件很美好的事，他能让一个人有奋斗的目标，但是一旦你发现这个目标没有意义的时候，你就非常难受了。你会突然发现一切的努力没有了意义。\n\n不说了，后天走的话，明天事还挺多的，先打游戏去了。\n","slug":"diary/2019/09/20190909","published":1,"updated":"2019-09-09T15:12:36.700Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1jy003ua613ji3ub9ab","content":"<p>这几天请假回学校玩了几天，感到很是堕落，每天的事都是今天拖明天，明天拖后天，感觉拖延症都上来了。不像以前的我。说实话这几天都不知道该干啥。当时回来之前给自己的定位是养老，但是真的养老的时候反而感觉到不适应。难道是因为真的不适合养老吗?</p>\n<p>很多时候明明很慌，但是为什么又不想努力呢?到底说还是自己太懒了。然后实在是不想等下去了。明天处理完这边的事就准备回家了。</p>\n<p>回家其实也没有太多事。不知道干啥。</p>\n<p>其实我主要想说的是，我这段时间突然有点迷茫，不知道自己到底想要的是什么，很多时候我都会说想搞很多很多钱，但是我后来渐渐发现，我要的可能不是这个，因为这种想法往往禁不起后一步 推敲，比如进一步问我:搞了很多钱，然后呢?说实话我答不上来。我真的不知道自己想要的到底是什么。</p>\n<p>我一直觉得，一个人又仔细想要的东西是一件很美好的事，他能让一个人有奋斗的目标，但是一旦你发现这个目标没有意义的时候，你就非常难受了。你会突然发现一切的努力没有了意义。</p>\n<p>不说了，后天走的话，明天事还挺多的，先打游戏去了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>这几天请假回学校玩了几天，感到很是堕落，每天的事都是今天拖明天，明天拖后天，感觉拖延症都上来了。不像以前的我。说实话这几天都不知道该干啥。当时回来之前给自己的定位是养老，但是真的养老的时候反而感觉到不适应。难道是因为真的不适合养老吗?</p>\n<p>很多时候明明很慌，但是为什么又不想努力呢?到底说还是自己太懒了。然后实在是不想等下去了。明天处理完这边的事就准备回家了。</p>\n<p>回家其实也没有太多事。不知道干啥。</p>\n<p>其实我主要想说的是，我这段时间突然有点迷茫，不知道自己到底想要的是什么，很多时候我都会说想搞很多很多钱，但是我后来渐渐发现，我要的可能不是这个，因为这种想法往往禁不起后一步 推敲，比如进一步问我:搞了很多钱，然后呢?说实话我答不上来。我真的不知道自己想要的到底是什么。</p>\n<p>我一直觉得，一个人又仔细想要的东西是一件很美好的事，他能让一个人有奋斗的目标，但是一旦你发现这个目标没有意义的时候，你就非常难受了。你会突然发现一切的努力没有了意义。</p>\n<p>不说了，后天走的话，明天事还挺多的，先打游戏去了。</p>\n"},{"title":"日常吐槽20190901","date":"1019-08-31T15:54:17.000Z","author":"zuhiul","_content":"\n这几周实在是忙昏了头，周报都没写，实在是有点懒了。\n\n这几周有点迷茫了，很多东西都想学，但是还是一如既往的懒，好多东西都是想学的，但是因为懒，还用了没有时间作为了借口，实在是不应该啊。\n\n然后这周四可能要回学校养老了，实在是需要时间来整理整理自己的东西了。\n\n每天忙忙忙也不是个事。\n","source":"_posts/diary/2019/09/20190901.md","raw":"---\ntitle: 日常吐槽20190901\ndate: 1019-09-01\nauthor: \"zuhiul\"\ntags:\n  - 日常吐槽\n---\n\n这几周实在是忙昏了头，周报都没写，实在是有点懒了。\n\n这几周有点迷茫了，很多东西都想学，但是还是一如既往的懒，好多东西都是想学的，但是因为懒，还用了没有时间作为了借口，实在是不应该啊。\n\n然后这周四可能要回学校养老了，实在是需要时间来整理整理自己的东西了。\n\n每天忙忙忙也不是个事。\n","slug":"diary/2019/09/20190901","published":1,"updated":"2019-09-02T04:14:38.785Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1jz003xa613tqqygxin","content":"<p>这几周实在是忙昏了头，周报都没写，实在是有点懒了。</p>\n<p>这几周有点迷茫了，很多东西都想学，但是还是一如既往的懒，好多东西都是想学的，但是因为懒，还用了没有时间作为了借口，实在是不应该啊。</p>\n<p>然后这周四可能要回学校养老了，实在是需要时间来整理整理自己的东西了。</p>\n<p>每天忙忙忙也不是个事。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>这几周实在是忙昏了头，周报都没写，实在是有点懒了。</p>\n<p>这几周有点迷茫了，很多东西都想学，但是还是一如既往的懒，好多东西都是想学的，但是因为懒，还用了没有时间作为了借口，实在是不应该啊。</p>\n<p>然后这周四可能要回学校养老了，实在是需要时间来整理整理自己的东西了。</p>\n<p>每天忙忙忙也不是个事。</p>\n"},{"title":"日常吐槽20190915","date":"1019-09-14T15:54:17.000Z","author":"zuhiul","_content":"\n今天老妈非拉着我去给我买了两条裤子，我们在路上闲聊的时候，她又扯到我的小姐姐身上了，然后她就疯狂问我关于她的各种问题。我就各种说不知道。\n\n我是真的不知道，她家里干什么的，她家里有几个孩子，她家里有一年挣多少，她家里父母文化水平是多少。\n\n我是真的不知道，也不关心，我现在依然觉得，我喜欢的是她，不是吗？我自认为自己的水平还算不错，无论她家里什么情况，我都欣然接受，因为我觉得你要和她在一起的时候，无论她家里怎么样，你都至少可以改变自己不是吗？\n\n嗯，就酱紫，要和小姐姐谈一场甜甜的恋爱。\n","source":"_posts/diary/2019/09/20190915.md","raw":"---\ntitle: 日常吐槽20190915\ndate: 1019-09-15\nauthor: \"zuhiul\"\ntags:\n  - HER\n---\n\n今天老妈非拉着我去给我买了两条裤子，我们在路上闲聊的时候，她又扯到我的小姐姐身上了，然后她就疯狂问我关于她的各种问题。我就各种说不知道。\n\n我是真的不知道，她家里干什么的，她家里有几个孩子，她家里有一年挣多少，她家里父母文化水平是多少。\n\n我是真的不知道，也不关心，我现在依然觉得，我喜欢的是她，不是吗？我自认为自己的水平还算不错，无论她家里什么情况，我都欣然接受，因为我觉得你要和她在一起的时候，无论她家里怎么样，你都至少可以改变自己不是吗？\n\n嗯，就酱紫，要和小姐姐谈一场甜甜的恋爱。\n","slug":"diary/2019/09/20190915","published":1,"updated":"2019-09-15T13:39:47.101Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1k0003za613e013l8qq","content":"<p>今天老妈非拉着我去给我买了两条裤子，我们在路上闲聊的时候，她又扯到我的小姐姐身上了，然后她就疯狂问我关于她的各种问题。我就各种说不知道。</p>\n<p>我是真的不知道，她家里干什么的，她家里有几个孩子，她家里有一年挣多少，她家里父母文化水平是多少。</p>\n<p>我是真的不知道，也不关心，我现在依然觉得，我喜欢的是她，不是吗？我自认为自己的水平还算不错，无论她家里什么情况，我都欣然接受，因为我觉得你要和她在一起的时候，无论她家里怎么样，你都至少可以改变自己不是吗？</p>\n<p>嗯，就酱紫，要和小姐姐谈一场甜甜的恋爱。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天老妈非拉着我去给我买了两条裤子，我们在路上闲聊的时候，她又扯到我的小姐姐身上了，然后她就疯狂问我关于她的各种问题。我就各种说不知道。</p>\n<p>我是真的不知道，她家里干什么的，她家里有几个孩子，她家里有一年挣多少，她家里父母文化水平是多少。</p>\n<p>我是真的不知道，也不关心，我现在依然觉得，我喜欢的是她，不是吗？我自认为自己的水平还算不错，无论她家里什么情况，我都欣然接受，因为我觉得你要和她在一起的时候，无论她家里怎么样，你都至少可以改变自己不是吗？</p>\n<p>嗯，就酱紫，要和小姐姐谈一场甜甜的恋爱。</p>\n"},{"title":"日常吐槽20190919","date":"1019-09-18T15:54:17.000Z","author":"zuhiul","_content":"\n今天生日啊！\n\n昨天交完房租，今天就灰溜溜的来上班了。生活所迫，没办法啊。\n\n刚来就需求评审。有点累。\n\n找奇哥借了5000。手上有20000，但是房租18000，交完房租我基本就是个废人了。\n\n这就是成年人的世界吗？手上小几万，一天就没了。啊，我死了。\n\n加油加油！\n","source":"_posts/diary/2019/09/20190919.md","raw":"---\ntitle: 日常吐槽20190919\ndate: 1019-09-19\nauthor: \"zuhiul\"\ntags:\n  - 日常吐槽\n---\n\n今天生日啊！\n\n昨天交完房租，今天就灰溜溜的来上班了。生活所迫，没办法啊。\n\n刚来就需求评审。有点累。\n\n找奇哥借了5000。手上有20000，但是房租18000，交完房租我基本就是个废人了。\n\n这就是成年人的世界吗？手上小几万，一天就没了。啊，我死了。\n\n加油加油！\n","slug":"diary/2019/09/20190919","published":1,"updated":"2019-09-19T03:37:42.016Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1k00041a61393kdtq3n","content":"<p>今天生日啊！</p>\n<p>昨天交完房租，今天就灰溜溜的来上班了。生活所迫，没办法啊。</p>\n<p>刚来就需求评审。有点累。</p>\n<p>找奇哥借了5000。手上有20000，但是房租18000，交完房租我基本就是个废人了。</p>\n<p>这就是成年人的世界吗？手上小几万，一天就没了。啊，我死了。</p>\n<p>加油加油！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天生日啊！</p>\n<p>昨天交完房租，今天就灰溜溜的来上班了。生活所迫，没办法啊。</p>\n<p>刚来就需求评审。有点累。</p>\n<p>找奇哥借了5000。手上有20000，但是房租18000，交完房租我基本就是个废人了。</p>\n<p>这就是成年人的世界吗？手上小几万，一天就没了。啊，我死了。</p>\n<p>加油加油！</p>\n"},{"title":"日常吐槽20190923","date":"1019-09-22T15:54:17.000Z","author":"zuhiul","_content":"\n昨天被子送算是到了，算是彻底安顿下来了。\n\n过生日，饭都没吃，还加班到晚上，第二天照常上班。\n\n我居然会觉得很正常，可能这就是长大的代价？\n\n答辩的时间遥遥无期，想点的技能点太多，但是自己又太懒。这几天的状态不是很好，希望接下来的双月能调整好状态。\n","source":"_posts/diary/2019/09/20190923.md","raw":"---\ntitle: 日常吐槽20190923\ndate: 1019-09-23\nauthor: \"zuhiul\"\ntags:\n  - 日常吐槽\n---\n\n昨天被子送算是到了，算是彻底安顿下来了。\n\n过生日，饭都没吃，还加班到晚上，第二天照常上班。\n\n我居然会觉得很正常，可能这就是长大的代价？\n\n答辩的时间遥遥无期，想点的技能点太多，但是自己又太懒。这几天的状态不是很好，希望接下来的双月能调整好状态。\n","slug":"diary/2019/09/20190923","published":1,"updated":"2019-09-23T03:30:00.414Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1k10044a613a3pue7ua","content":"<p>昨天被子送算是到了，算是彻底安顿下来了。</p>\n<p>过生日，饭都没吃，还加班到晚上，第二天照常上班。</p>\n<p>我居然会觉得很正常，可能这就是长大的代价？</p>\n<p>答辩的时间遥遥无期，想点的技能点太多，但是自己又太懒。这几天的状态不是很好，希望接下来的双月能调整好状态。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>昨天被子送算是到了，算是彻底安顿下来了。</p>\n<p>过生日，饭都没吃，还加班到晚上，第二天照常上班。</p>\n<p>我居然会觉得很正常，可能这就是长大的代价？</p>\n<p>答辩的时间遥遥无期，想点的技能点太多，但是自己又太懒。这几天的状态不是很好，希望接下来的双月能调整好状态。</p>\n"},{"title":"2019半年总结(20190306-20191128)","date":"1019-11-27T15:54:17.000Z","author":"zuhiul","_content":"\n从今年三月六号到现在，一直在头条这边实习，已经过去大半年了，是时候写个总结了。\n\n真的很感激头条给的这个机会，能在这里学到很多东西，真的感觉自己成长了很多。明白了自己不会的东西还有很多，还需要继续努力。了解了做工程和打比赛不一样的地方。\n\n本来有很多话想说的，突然噎住了。。。。上次想了很多，突然忘了。。。。。\n\n我觉得对我个人而言影响最大的就是老大说的一句话：任何时候，你都需要具备一种快速解决问题的能力，无论你最后是不是写代码的人，这种能力都会让你在各行各界混得开。这句话说的真的挺对的，我其实在相当长的时间里面陷入了一个误区，那就是我这辈子都干程序员了，然后我一直觉得代码写的好看就够了。现在回想起来这个想法其实很蠢的。更多的时候，公司需要的不仅仅是你打代码的能力，更多的是一种解决问题的素质。而公司里面的问题，可不仅仅包括写代码。\n\n还有就是时机。其实我理解一个约成熟的公司，机会应该是越多，但是反而很多展示自我的机会都被我自己浪费了。我在相当长的一段时间里面，都认为我和公司是雇佣关系，所以我来这边只是为了帮公司解决问题的，所以很多时候解决问题就完事了，很多东西都没有深入思考，或者说没有自己的见解。后来渐渐明白一件事，我和公司更多的应该是一种合作关系，我在帮公司做事的同时，我其实可以接触到更多的东西，不仅对公司的收益是个正增长，而且对个人成长也是有很大帮助的。可惜的是，等我想明白这一点的时候，就基本到了我离开的时候了。\n\n最后就是环境，头条这边给我的感觉是一种很舒心的感觉。虽然偶尔也会加班。但是这种东西就和打比赛一样一样的，也分两种，一种是你宁可加班也要搞好，而且搞好了很有成就感，另外一种就是宁愿给我钱我也不相干的，至少头条这边大多数时候加班时间是前者。虽然偶尔会觉得累，但是开心的时候会更多。\n\n接下来一部分用来回顾我的大学。\n\n其实我一直觉得，除了高考没考好这件事没法改变以外，我从出生到现在，一直觉得自己是一个很幸运的人，或者说是幸运的部分大于了我努力的部分。初中及其以前的事就不说了，从高中开始讲起。\n\n因为家里管的比较严的缘故，所以高中时候基本没怎么出去浪，更多的时候都是老老实实的好好学习。（整个高中没去过一次网吧的98年学生，你敢信？）该好好玩的时候，高一高二好好玩了，用功还行，努力真说不上。该努力的时候我也真的是玩命了。想想自己每天晚上刷题到12点，挺感激那时候的自己。\n\n高考没考好其实是一件塞翁失马的事。现在回头看，可能好的成分居多：来到了一个看得过去的学校，认识了一群和蔼可亲的老师，有一宿舍的哥们，取得了以前不敢想的比赛成绩，有几个关系贼好的队友。就差一个如花似玉的对象和一个所向披靡的学习成绩，哇，简直人赢有没有？\n\n这辈子为数不多的做过几件我觉得不算蠢的事就是，我会提前想自己要的是什么，然后做好规划，初中知道自己读理，高二知道自己学计算机，大一知道自己要打比赛，大三知道自己要找工作。其实也说不上规划，中间有一大部分的阴差阳错。所以很多时候还挺怕自己活在梦里。。。。\n\n大学正儿八经在学校的时间可能也就三年不到，如果在上课才算在上大学的话，可能一年半？惭愧惭愧，读书实在是不行，怪我怪我。\n\n不太清楚别人对努力的定义是什么，个人理解是：主动把事情推向更好的方向。所以高一高二按部就班的上课写作业考试，真的说不上努力，更多的是在被推着走，或者说过的浑浑噩噩更多一些。仔细回想一下，努力的时候应该只能算高三和大二，这两段时光真的是努力了。也只有那个时候我是真的清楚自己在做什么，为了什么而做，意义何在，结果如何。\n\n如果说大学有什么遗憾的话，最大的遗憾应该是没有找个对象，其次就是没有好好打比赛，然后就是没有好好学习，剩下的，我觉得没有遗憾了。个人来说，我脾气其实很不好，到了大学收敛了很多，更多的时候是自己一个人生闷气，所以自问没有得罪别人，如果有，那我也不认！哈哈哈哈哈哈。\n\n未来努力的方向：看更多的书吧，大学看的书有点少了，或者说很多东西没有钻透，书到用时方恨少啊。\n\n就这样，下棋下棋！\n","source":"_posts/diary/2019/11/20191128.md","raw":"---\ntitle: 2019半年总结(20190306-20191128)\ndate: 1019-11-28\nauthor: \"zuhiul\"\ntags:\n  - summary\n---\n\n从今年三月六号到现在，一直在头条这边实习，已经过去大半年了，是时候写个总结了。\n\n真的很感激头条给的这个机会，能在这里学到很多东西，真的感觉自己成长了很多。明白了自己不会的东西还有很多，还需要继续努力。了解了做工程和打比赛不一样的地方。\n\n本来有很多话想说的，突然噎住了。。。。上次想了很多，突然忘了。。。。。\n\n我觉得对我个人而言影响最大的就是老大说的一句话：任何时候，你都需要具备一种快速解决问题的能力，无论你最后是不是写代码的人，这种能力都会让你在各行各界混得开。这句话说的真的挺对的，我其实在相当长的时间里面陷入了一个误区，那就是我这辈子都干程序员了，然后我一直觉得代码写的好看就够了。现在回想起来这个想法其实很蠢的。更多的时候，公司需要的不仅仅是你打代码的能力，更多的是一种解决问题的素质。而公司里面的问题，可不仅仅包括写代码。\n\n还有就是时机。其实我理解一个约成熟的公司，机会应该是越多，但是反而很多展示自我的机会都被我自己浪费了。我在相当长的一段时间里面，都认为我和公司是雇佣关系，所以我来这边只是为了帮公司解决问题的，所以很多时候解决问题就完事了，很多东西都没有深入思考，或者说没有自己的见解。后来渐渐明白一件事，我和公司更多的应该是一种合作关系，我在帮公司做事的同时，我其实可以接触到更多的东西，不仅对公司的收益是个正增长，而且对个人成长也是有很大帮助的。可惜的是，等我想明白这一点的时候，就基本到了我离开的时候了。\n\n最后就是环境，头条这边给我的感觉是一种很舒心的感觉。虽然偶尔也会加班。但是这种东西就和打比赛一样一样的，也分两种，一种是你宁可加班也要搞好，而且搞好了很有成就感，另外一种就是宁愿给我钱我也不相干的，至少头条这边大多数时候加班时间是前者。虽然偶尔会觉得累，但是开心的时候会更多。\n\n接下来一部分用来回顾我的大学。\n\n其实我一直觉得，除了高考没考好这件事没法改变以外，我从出生到现在，一直觉得自己是一个很幸运的人，或者说是幸运的部分大于了我努力的部分。初中及其以前的事就不说了，从高中开始讲起。\n\n因为家里管的比较严的缘故，所以高中时候基本没怎么出去浪，更多的时候都是老老实实的好好学习。（整个高中没去过一次网吧的98年学生，你敢信？）该好好玩的时候，高一高二好好玩了，用功还行，努力真说不上。该努力的时候我也真的是玩命了。想想自己每天晚上刷题到12点，挺感激那时候的自己。\n\n高考没考好其实是一件塞翁失马的事。现在回头看，可能好的成分居多：来到了一个看得过去的学校，认识了一群和蔼可亲的老师，有一宿舍的哥们，取得了以前不敢想的比赛成绩，有几个关系贼好的队友。就差一个如花似玉的对象和一个所向披靡的学习成绩，哇，简直人赢有没有？\n\n这辈子为数不多的做过几件我觉得不算蠢的事就是，我会提前想自己要的是什么，然后做好规划，初中知道自己读理，高二知道自己学计算机，大一知道自己要打比赛，大三知道自己要找工作。其实也说不上规划，中间有一大部分的阴差阳错。所以很多时候还挺怕自己活在梦里。。。。\n\n大学正儿八经在学校的时间可能也就三年不到，如果在上课才算在上大学的话，可能一年半？惭愧惭愧，读书实在是不行，怪我怪我。\n\n不太清楚别人对努力的定义是什么，个人理解是：主动把事情推向更好的方向。所以高一高二按部就班的上课写作业考试，真的说不上努力，更多的是在被推着走，或者说过的浑浑噩噩更多一些。仔细回想一下，努力的时候应该只能算高三和大二，这两段时光真的是努力了。也只有那个时候我是真的清楚自己在做什么，为了什么而做，意义何在，结果如何。\n\n如果说大学有什么遗憾的话，最大的遗憾应该是没有找个对象，其次就是没有好好打比赛，然后就是没有好好学习，剩下的，我觉得没有遗憾了。个人来说，我脾气其实很不好，到了大学收敛了很多，更多的时候是自己一个人生闷气，所以自问没有得罪别人，如果有，那我也不认！哈哈哈哈哈哈。\n\n未来努力的方向：看更多的书吧，大学看的书有点少了，或者说很多东西没有钻透，书到用时方恨少啊。\n\n就这样，下棋下棋！\n","slug":"diary/2019/11/20191128","published":1,"updated":"2019-11-28T13:07:11.707Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1k20046a613m4zggr3y","content":"<p>从今年三月六号到现在，一直在头条这边实习，已经过去大半年了，是时候写个总结了。</p>\n<p>真的很感激头条给的这个机会，能在这里学到很多东西，真的感觉自己成长了很多。明白了自己不会的东西还有很多，还需要继续努力。了解了做工程和打比赛不一样的地方。</p>\n<p>本来有很多话想说的，突然噎住了。。。。上次想了很多，突然忘了。。。。。</p>\n<p>我觉得对我个人而言影响最大的就是老大说的一句话：任何时候，你都需要具备一种快速解决问题的能力，无论你最后是不是写代码的人，这种能力都会让你在各行各界混得开。这句话说的真的挺对的，我其实在相当长的时间里面陷入了一个误区，那就是我这辈子都干程序员了，然后我一直觉得代码写的好看就够了。现在回想起来这个想法其实很蠢的。更多的时候，公司需要的不仅仅是你打代码的能力，更多的是一种解决问题的素质。而公司里面的问题，可不仅仅包括写代码。</p>\n<p>还有就是时机。其实我理解一个约成熟的公司，机会应该是越多，但是反而很多展示自我的机会都被我自己浪费了。我在相当长的一段时间里面，都认为我和公司是雇佣关系，所以我来这边只是为了帮公司解决问题的，所以很多时候解决问题就完事了，很多东西都没有深入思考，或者说没有自己的见解。后来渐渐明白一件事，我和公司更多的应该是一种合作关系，我在帮公司做事的同时，我其实可以接触到更多的东西，不仅对公司的收益是个正增长，而且对个人成长也是有很大帮助的。可惜的是，等我想明白这一点的时候，就基本到了我离开的时候了。</p>\n<p>最后就是环境，头条这边给我的感觉是一种很舒心的感觉。虽然偶尔也会加班。但是这种东西就和打比赛一样一样的，也分两种，一种是你宁可加班也要搞好，而且搞好了很有成就感，另外一种就是宁愿给我钱我也不相干的，至少头条这边大多数时候加班时间是前者。虽然偶尔会觉得累，但是开心的时候会更多。</p>\n<p>接下来一部分用来回顾我的大学。</p>\n<p>其实我一直觉得，除了高考没考好这件事没法改变以外，我从出生到现在，一直觉得自己是一个很幸运的人，或者说是幸运的部分大于了我努力的部分。初中及其以前的事就不说了，从高中开始讲起。</p>\n<p>因为家里管的比较严的缘故，所以高中时候基本没怎么出去浪，更多的时候都是老老实实的好好学习。（整个高中没去过一次网吧的98年学生，你敢信？）该好好玩的时候，高一高二好好玩了，用功还行，努力真说不上。该努力的时候我也真的是玩命了。想想自己每天晚上刷题到12点，挺感激那时候的自己。</p>\n<p>高考没考好其实是一件塞翁失马的事。现在回头看，可能好的成分居多：来到了一个看得过去的学校，认识了一群和蔼可亲的老师，有一宿舍的哥们，取得了以前不敢想的比赛成绩，有几个关系贼好的队友。就差一个如花似玉的对象和一个所向披靡的学习成绩，哇，简直人赢有没有？</p>\n<p>这辈子为数不多的做过几件我觉得不算蠢的事就是，我会提前想自己要的是什么，然后做好规划，初中知道自己读理，高二知道自己学计算机，大一知道自己要打比赛，大三知道自己要找工作。其实也说不上规划，中间有一大部分的阴差阳错。所以很多时候还挺怕自己活在梦里。。。。</p>\n<p>大学正儿八经在学校的时间可能也就三年不到，如果在上课才算在上大学的话，可能一年半？惭愧惭愧，读书实在是不行，怪我怪我。</p>\n<p>不太清楚别人对努力的定义是什么，个人理解是：主动把事情推向更好的方向。所以高一高二按部就班的上课写作业考试，真的说不上努力，更多的是在被推着走，或者说过的浑浑噩噩更多一些。仔细回想一下，努力的时候应该只能算高三和大二，这两段时光真的是努力了。也只有那个时候我是真的清楚自己在做什么，为了什么而做，意义何在，结果如何。</p>\n<p>如果说大学有什么遗憾的话，最大的遗憾应该是没有找个对象，其次就是没有好好打比赛，然后就是没有好好学习，剩下的，我觉得没有遗憾了。个人来说，我脾气其实很不好，到了大学收敛了很多，更多的时候是自己一个人生闷气，所以自问没有得罪别人，如果有，那我也不认！哈哈哈哈哈哈。</p>\n<p>未来努力的方向：看更多的书吧，大学看的书有点少了，或者说很多东西没有钻透，书到用时方恨少啊。</p>\n<p>就这样，下棋下棋！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>从今年三月六号到现在，一直在头条这边实习，已经过去大半年了，是时候写个总结了。</p>\n<p>真的很感激头条给的这个机会，能在这里学到很多东西，真的感觉自己成长了很多。明白了自己不会的东西还有很多，还需要继续努力。了解了做工程和打比赛不一样的地方。</p>\n<p>本来有很多话想说的，突然噎住了。。。。上次想了很多，突然忘了。。。。。</p>\n<p>我觉得对我个人而言影响最大的就是老大说的一句话：任何时候，你都需要具备一种快速解决问题的能力，无论你最后是不是写代码的人，这种能力都会让你在各行各界混得开。这句话说的真的挺对的，我其实在相当长的时间里面陷入了一个误区，那就是我这辈子都干程序员了，然后我一直觉得代码写的好看就够了。现在回想起来这个想法其实很蠢的。更多的时候，公司需要的不仅仅是你打代码的能力，更多的是一种解决问题的素质。而公司里面的问题，可不仅仅包括写代码。</p>\n<p>还有就是时机。其实我理解一个约成熟的公司，机会应该是越多，但是反而很多展示自我的机会都被我自己浪费了。我在相当长的一段时间里面，都认为我和公司是雇佣关系，所以我来这边只是为了帮公司解决问题的，所以很多时候解决问题就完事了，很多东西都没有深入思考，或者说没有自己的见解。后来渐渐明白一件事，我和公司更多的应该是一种合作关系，我在帮公司做事的同时，我其实可以接触到更多的东西，不仅对公司的收益是个正增长，而且对个人成长也是有很大帮助的。可惜的是，等我想明白这一点的时候，就基本到了我离开的时候了。</p>\n<p>最后就是环境，头条这边给我的感觉是一种很舒心的感觉。虽然偶尔也会加班。但是这种东西就和打比赛一样一样的，也分两种，一种是你宁可加班也要搞好，而且搞好了很有成就感，另外一种就是宁愿给我钱我也不相干的，至少头条这边大多数时候加班时间是前者。虽然偶尔会觉得累，但是开心的时候会更多。</p>\n<p>接下来一部分用来回顾我的大学。</p>\n<p>其实我一直觉得，除了高考没考好这件事没法改变以外，我从出生到现在，一直觉得自己是一个很幸运的人，或者说是幸运的部分大于了我努力的部分。初中及其以前的事就不说了，从高中开始讲起。</p>\n<p>因为家里管的比较严的缘故，所以高中时候基本没怎么出去浪，更多的时候都是老老实实的好好学习。（整个高中没去过一次网吧的98年学生，你敢信？）该好好玩的时候，高一高二好好玩了，用功还行，努力真说不上。该努力的时候我也真的是玩命了。想想自己每天晚上刷题到12点，挺感激那时候的自己。</p>\n<p>高考没考好其实是一件塞翁失马的事。现在回头看，可能好的成分居多：来到了一个看得过去的学校，认识了一群和蔼可亲的老师，有一宿舍的哥们，取得了以前不敢想的比赛成绩，有几个关系贼好的队友。就差一个如花似玉的对象和一个所向披靡的学习成绩，哇，简直人赢有没有？</p>\n<p>这辈子为数不多的做过几件我觉得不算蠢的事就是，我会提前想自己要的是什么，然后做好规划，初中知道自己读理，高二知道自己学计算机，大一知道自己要打比赛，大三知道自己要找工作。其实也说不上规划，中间有一大部分的阴差阳错。所以很多时候还挺怕自己活在梦里。。。。</p>\n<p>大学正儿八经在学校的时间可能也就三年不到，如果在上课才算在上大学的话，可能一年半？惭愧惭愧，读书实在是不行，怪我怪我。</p>\n<p>不太清楚别人对努力的定义是什么，个人理解是：主动把事情推向更好的方向。所以高一高二按部就班的上课写作业考试，真的说不上努力，更多的是在被推着走，或者说过的浑浑噩噩更多一些。仔细回想一下，努力的时候应该只能算高三和大二，这两段时光真的是努力了。也只有那个时候我是真的清楚自己在做什么，为了什么而做，意义何在，结果如何。</p>\n<p>如果说大学有什么遗憾的话，最大的遗憾应该是没有找个对象，其次就是没有好好打比赛，然后就是没有好好学习，剩下的，我觉得没有遗憾了。个人来说，我脾气其实很不好，到了大学收敛了很多，更多的时候是自己一个人生闷气，所以自问没有得罪别人，如果有，那我也不认！哈哈哈哈哈哈。</p>\n<p>未来努力的方向：看更多的书吧，大学看的书有点少了，或者说很多东西没有钻透，书到用时方恨少啊。</p>\n<p>就这样，下棋下棋！</p>\n"},{"title":"日常吐槽20190926","date":"1019-09-25T15:54:17.000Z","author":"zuhiul","_content":"\n今天突然想到一个问题，我这段时间是否太过于被动了，很多时候都是自我被动成长。居然已经很久都没有主动学习了。\n\n很多时候都想着准备好了再上，但是仔细回想一下，很多时候都不会让你准备好了再上。所以更多的时候，我们应该做的是，努力准备，一旦发生，快速解决。\n\n首先就是积累，没有积累，没有成长。其次是，认可自己，觉得自己可以。最后就是努力做好，不要想当然的觉得可行就ok。\n\n对自己要求高一点，不要60分就满足，甚至50分就满足，追求更优解。\n","source":"_posts/diary/2019/09/20190926.md","raw":"---\ntitle: 日常吐槽20190926\ndate: 1019-09-26\nauthor: \"zuhiul\"\ntags:\n  - 日常吐槽\n---\n\n今天突然想到一个问题，我这段时间是否太过于被动了，很多时候都是自我被动成长。居然已经很久都没有主动学习了。\n\n很多时候都想着准备好了再上，但是仔细回想一下，很多时候都不会让你准备好了再上。所以更多的时候，我们应该做的是，努力准备，一旦发生，快速解决。\n\n首先就是积累，没有积累，没有成长。其次是，认可自己，觉得自己可以。最后就是努力做好，不要想当然的觉得可行就ok。\n\n对自己要求高一点，不要60分就满足，甚至50分就满足，追求更优解。\n","slug":"diary/2019/09/20190926","published":1,"updated":"2019-09-26T05:11:15.164Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1k30048a613ve4ikfcv","content":"<p>今天突然想到一个问题，我这段时间是否太过于被动了，很多时候都是自我被动成长。居然已经很久都没有主动学习了。</p>\n<p>很多时候都想着准备好了再上，但是仔细回想一下，很多时候都不会让你准备好了再上。所以更多的时候，我们应该做的是，努力准备，一旦发生，快速解决。</p>\n<p>首先就是积累，没有积累，没有成长。其次是，认可自己，觉得自己可以。最后就是努力做好，不要想当然的觉得可行就ok。</p>\n<p>对自己要求高一点，不要60分就满足，甚至50分就满足，追求更优解。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天突然想到一个问题，我这段时间是否太过于被动了，很多时候都是自我被动成长。居然已经很久都没有主动学习了。</p>\n<p>很多时候都想着准备好了再上，但是仔细回想一下，很多时候都不会让你准备好了再上。所以更多的时候，我们应该做的是，努力准备，一旦发生，快速解决。</p>\n<p>首先就是积累，没有积累，没有成长。其次是，认可自己，觉得自己可以。最后就是努力做好，不要想当然的觉得可行就ok。</p>\n<p>对自己要求高一点，不要60分就满足，甚至50分就满足，追求更优解。</p>\n"},{"title":"日常吐槽20191017","date":"1019-10-16T15:54:17.000Z","author":"zuhiul","_content":"\n明天提测，所以今天在赶进度，因为我的原因，导致几个问题的跟进都堆积在同组其他人手中。导致我们进度失衡。\n\n反思了一下，大部分是我的原因，有时候不怎么想跟进问题，觉得和他人沟通是一件很麻烦的事。此外，技术问题也很关键，不能第一时间反应出问题的根源在哪。主要是之前做的那一套没有吃透。后面也没有花时间补。导致自己没有很快速的处理问题。\n\n难受是有一点的，后面继续努力吧。\n\n还有就是关于最后一门必修课的事，还是有点慌，老师不是很好说话，所以可能答辩完就想回学校养老了。看情况，这几周的面试都不是很理想，可以说基本都凉了。老老实实搬砖吧。\n","source":"_posts/diary/2019/10/20191017.md","raw":"---\ntitle: 日常吐槽20191017\ndate: 1019-10-17\nauthor: \"zuhiul\"\ntags:\n  - 日常吐槽\n---\n\n明天提测，所以今天在赶进度，因为我的原因，导致几个问题的跟进都堆积在同组其他人手中。导致我们进度失衡。\n\n反思了一下，大部分是我的原因，有时候不怎么想跟进问题，觉得和他人沟通是一件很麻烦的事。此外，技术问题也很关键，不能第一时间反应出问题的根源在哪。主要是之前做的那一套没有吃透。后面也没有花时间补。导致自己没有很快速的处理问题。\n\n难受是有一点的，后面继续努力吧。\n\n还有就是关于最后一门必修课的事，还是有点慌，老师不是很好说话，所以可能答辩完就想回学校养老了。看情况，这几周的面试都不是很理想，可以说基本都凉了。老老实实搬砖吧。\n","slug":"diary/2019/10/20191017","published":1,"updated":"2019-10-17T04:26:22.406Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1k3004ba6137j5k8aw3","content":"<p>明天提测，所以今天在赶进度，因为我的原因，导致几个问题的跟进都堆积在同组其他人手中。导致我们进度失衡。</p>\n<p>反思了一下，大部分是我的原因，有时候不怎么想跟进问题，觉得和他人沟通是一件很麻烦的事。此外，技术问题也很关键，不能第一时间反应出问题的根源在哪。主要是之前做的那一套没有吃透。后面也没有花时间补。导致自己没有很快速的处理问题。</p>\n<p>难受是有一点的，后面继续努力吧。</p>\n<p>还有就是关于最后一门必修课的事，还是有点慌，老师不是很好说话，所以可能答辩完就想回学校养老了。看情况，这几周的面试都不是很理想，可以说基本都凉了。老老实实搬砖吧。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>明天提测，所以今天在赶进度，因为我的原因，导致几个问题的跟进都堆积在同组其他人手中。导致我们进度失衡。</p>\n<p>反思了一下，大部分是我的原因，有时候不怎么想跟进问题，觉得和他人沟通是一件很麻烦的事。此外，技术问题也很关键，不能第一时间反应出问题的根源在哪。主要是之前做的那一套没有吃透。后面也没有花时间补。导致自己没有很快速的处理问题。</p>\n<p>难受是有一点的，后面继续努力吧。</p>\n<p>还有就是关于最后一门必修课的事，还是有点慌，老师不是很好说话，所以可能答辩完就想回学校养老了。看情况，这几周的面试都不是很理想，可以说基本都凉了。老老实实搬砖吧。</p>\n"},{"title":"日常吐槽20190925","date":"1019-09-24T15:54:17.000Z","author":"zuhiul","_content":"\n今天仔细想了想，我是否有我想象中的那么努力。很多时候，被别人吹捧了一下，难免会飘飘然。这个时候，很难冷静的思考一下。今天突然意识到这个问题。\n\n我是否有自己想想的那么努力呢？显然没有，我仔细回忆了大学这几年，说实话，幸运的程度高于努力。\n\n似乎自从高考失利之后，一直都比较幸运。幸运的参加了ACM，幸运的取得了比较理想的成绩，幸运的面试过了几家公司，幸运的遇到了一个比较好的老大。\n\n然后看看自己的努力？\n\n算不上多努力罢了。因为自己懒，所以比赛也没有好好打。因为懒，每天空闲时间也没有学习，反而用来打游戏。因为懒，很多事情都被自己搁浅了。这种程度的努力，真的不值一提。\n\n以后要更加努力啊。游戏小说什么的，还是适可而止吧。现在也一个人一个房间了，接下来的目标：早睡早起。\n","source":"_posts/diary/2019/09/20190925.md","raw":"---\ntitle: 日常吐槽20190925\ndate: 1019-09-25\nauthor: \"zuhiul\"\ntags:\n  - 日常吐槽\n---\n\n今天仔细想了想，我是否有我想象中的那么努力。很多时候，被别人吹捧了一下，难免会飘飘然。这个时候，很难冷静的思考一下。今天突然意识到这个问题。\n\n我是否有自己想想的那么努力呢？显然没有，我仔细回忆了大学这几年，说实话，幸运的程度高于努力。\n\n似乎自从高考失利之后，一直都比较幸运。幸运的参加了ACM，幸运的取得了比较理想的成绩，幸运的面试过了几家公司，幸运的遇到了一个比较好的老大。\n\n然后看看自己的努力？\n\n算不上多努力罢了。因为自己懒，所以比赛也没有好好打。因为懒，每天空闲时间也没有学习，反而用来打游戏。因为懒，很多事情都被自己搁浅了。这种程度的努力，真的不值一提。\n\n以后要更加努力啊。游戏小说什么的，还是适可而止吧。现在也一个人一个房间了，接下来的目标：早睡早起。\n","slug":"diary/2019/09/20190925","published":1,"updated":"2019-09-25T06:50:34.726Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1k4004da613f4roedx8","content":"<p>今天仔细想了想，我是否有我想象中的那么努力。很多时候，被别人吹捧了一下，难免会飘飘然。这个时候，很难冷静的思考一下。今天突然意识到这个问题。</p>\n<p>我是否有自己想想的那么努力呢？显然没有，我仔细回忆了大学这几年，说实话，幸运的程度高于努力。</p>\n<p>似乎自从高考失利之后，一直都比较幸运。幸运的参加了ACM，幸运的取得了比较理想的成绩，幸运的面试过了几家公司，幸运的遇到了一个比较好的老大。</p>\n<p>然后看看自己的努力？</p>\n<p>算不上多努力罢了。因为自己懒，所以比赛也没有好好打。因为懒，每天空闲时间也没有学习，反而用来打游戏。因为懒，很多事情都被自己搁浅了。这种程度的努力，真的不值一提。</p>\n<p>以后要更加努力啊。游戏小说什么的，还是适可而止吧。现在也一个人一个房间了，接下来的目标：早睡早起。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天仔细想了想，我是否有我想象中的那么努力。很多时候，被别人吹捧了一下，难免会飘飘然。这个时候，很难冷静的思考一下。今天突然意识到这个问题。</p>\n<p>我是否有自己想想的那么努力呢？显然没有，我仔细回忆了大学这几年，说实话，幸运的程度高于努力。</p>\n<p>似乎自从高考失利之后，一直都比较幸运。幸运的参加了ACM，幸运的取得了比较理想的成绩，幸运的面试过了几家公司，幸运的遇到了一个比较好的老大。</p>\n<p>然后看看自己的努力？</p>\n<p>算不上多努力罢了。因为自己懒，所以比赛也没有好好打。因为懒，每天空闲时间也没有学习，反而用来打游戏。因为懒，很多事情都被自己搁浅了。这种程度的努力，真的不值一提。</p>\n<p>以后要更加努力啊。游戏小说什么的，还是适可而止吧。现在也一个人一个房间了，接下来的目标：早睡早起。</p>\n"},{"title":"就怕我感动了自己，却没有感动你","author":"zuhiul","date":"1019-04-30T15:54:17.000Z","_content":"\n我爱你，像蚁溃洪堤，一泻千里。\n\n<!-- more -->\n\n## 201905\n\n### 20190501\n\n#### 20190501 09:00 AM update\n\n今天开始我想记录下和她的所有故事。\n\n#### 20190501 06:15 PM update\n\n今天终于见到了心仪的小姐姐了，然后在天津逛了一大圈，刚下高铁，吃了个饭，然后逛了会街，然后就去听相声，然后逛了逛他们学校，在图书馆坐了一会就这样，哈哈哈哈哈哈哈，巨开心\n\n#### 20190501 11:52 PM update\n\n下午的时候和她一起去吃了个饭。然后我回宾馆把东西放下后就拉着她各种溜达，但是感觉她兴致不高。可能是她要考研的缘故。确实，感觉拉着一个想考研的人也挺罪恶的。但是我是真的很开心，哇，真的是只要想到和她一起，真的是压马路都巨开心*^_^* \n\n### 20190502\n\n#### 20190502 00:31 AM update\n\n君子爱玉如将帅熬鹰，我不急，对你我有无限的耐心。\n\n#### 20190502 09:56 AM update\n\n看来你昨天是真的累了，以至于你现在才醒，我倒是挺担心的，7点半就醒了，然后给你发消息没回，就知道你是累着了。哎，心疼。准备去找你的，被你拒绝了。非说你来找我，也行吧。\n\n有时候我还挺惶恐的，万一就是南柯一梦就尴尬了，不过我现在是真的开心呀呀呀呀呀呀。\n\n#### 20190502 11:26 PM update\n\n晚上约你吃晚饭，然后顺其自然的表白了？说实话是准备留到明天说的，但是一不小心漏嘴了，天真以为会挺顺利的。自认为还是不错的？但是好像有点出乎意料？巨难受？ \n\n### 20190503\n\n#### 20190503 00:42 AM update\n\n还是没想明白到底是哪个环节出问题了？而且我都明说了不逼你？我可以等234天啊啊啊啊啊啊啊啊啊啊，难受！\n\n#### 20190503 10:04 AM update\n\n混进了你们学校，然后又混进了你们图书馆，哈哈哈哈，当时门卫看了我一眼我都有一种做贼的感觉，真刺激。坐在图书馆写下这一段文字，还是略难受？反正还没缓过来？其实吧，你之前拒绝我的时候我都安慰自己，我还不够优秀啊，我要更优秀一点，所以我之前一直很怂啊，这段时间才敢和你说话，但是好像啊，你还是这样啊，说明啊，我还得努力啊，冲鸭。\n\n#### 20190503 10:26 AM update\n\n还记得昨天去失恋博物展，记得当时我两感受都相同，别人的故事始终是别人的故事，打动不了自己，现在想来就是这种感受，一直都是我的一厢情愿，还奢望你的回应，说到底还是自己感动了自己，却没有感动你。\n\n#### 20190503 06:52 PM update\n\n你去上厕所去了，我偷偷码一点。\n\n每每想到你连一点妄想都不给我就巨难受，看着你画了一下午的画，你认真画画的样子真的很美。但是我还是不知道你到底是啥意思，还是单纯的难过。\n\n#### 20190503 09:08 PM update\n\n09:05开的高铁，我们8:55还没看到车站，我估计是赶不上了，当时我们两一起在大马路上跑，我真的有一种私奔的感觉。当时过安检的时候，我真的好难受，感觉自己像失去了你一样，但是都没有得到过何谈失去呢？\n\n我当时就想啊，如果我还能赶上车，那就是老天真的不帮我了，如果赶不上我就赖上你了，但是好死不活晚点了？真的是气哭了。看来还是我心急了，贼老天都不帮我了，所以爱情这东西啊，还得时间沉淀，所以啊，我不急啊，所以啊，我可以等啊，所以啊，我唯一怕的就是你不见了啊。\n\n就这样吧，再见了。\n\n### 20190504\n\n#### 20190504 00:54 AM update\n\n估计你睡了，写好的东西最后还是发给你了，也不管你看不看了，反正肺腑之言，不吐不快。\n\n果然你没睡着，和你说了两句，看你没兴趣我就溜了。\n\n#### 20190504 1:37 AM update\n\n看了你是真的了，今天就不等了，毕竟我又不是你的谁，劳累你三天了，本来就挺过意不去的，就这样也好，是你说的，好歹还能保存美好的回忆不是？\n\n让你填志愿和考完研和我说一声，不知道你会不会说，232天，会有多少变数呢？谁都不知道，我现在唯一能做的就是更努力吧。\n\n#### 20190504 01:00 PM update\n\n队友看我实在是太难受了，拉着我去打球了，打了一个小时，我实在是不想动了。就拉着他回公司了，码下这一段了，你猜我想开需要多久？估计你不敢和我打赌了？\n\n#### 20190504 05:44 PM update\n\n我现在突然挺后悔当时没有定三晚上酒店，那样的话，我们至少还能多待一起一天不是吗？虽然可能没那么开心，但是至少还能看到你不是吗？我现在真的是啥都不想干了。\n\n#### 20190504 10:45 PM update\n\n我现在挺想和你打个赌的，你猜232天能否冲淡我对你的想法呢？我赌不会。如果真的淡了，我也不知道该说好还是不好，ok，我现在就数日子等我赢，刚刚给你发了日报，没有别的意思，只是希望你每天能整理整理，希望你好，（可能也有不甘心作祟？），不知道啦，我也很茫然的好伐。\n\n### 20190505\n\n#### 20190505 10:24 AM update\n\n劝自己暂时放下，安心搬砖，好好学习。唯一能让我安慰的就是我们组另外一个人表白也被拒绝了，但是我还是很难受，我果然是个loser，连同组的人都和我一样惨，哭了。\n\n#### 20190505 12:13 AM update\n\nemmmm,前几天，天天中午吃饭很早，以至于我现在饿了，但是还有半个小时才吃饭，饿得不行。哇，我还想和你一起吃饭。231天，我要是约饭，你不来，打你呦。\n\n#### 20190505 12:57 AM update\n\n刚刚和老大他们聊了一下，他们的意思都是劝我放弃，说我还年轻，不值得，同样的人还会遇到很多，但是我目前还不这样想，有时间确实需要好好整理一下，并不知道自己到底想要的是什么，这不像我，我一直以为自己想要的东西很明确，但是这件事上，确实还有疑惑的地方。让我想到了以前看到的一句话：\n\n\"无论是朋友，工作还是恋爱，如果你感到与对方特别契合，沟通愉悦甚至时时让你灵光乍现，你知道这说明什么吗？\n\n99%的可能是你遇到了阅历智商情商都在你之上的人，而且对方因为什么目的在向下兼容而已，只要TA愿意，TA可以和每个跟你一样级别的人，打到这种心有灵犀，\n\n剩下的1%就是你遇到了SOULMATE。\"\n\n我并不知道我遇到的到底是什么，按照你前几天的意思是：我对你了解太多了，所以你的意思是我是你的99%？可能吧，可能只有我觉得我们是那1%，我一直以为我们不需要言语的交流是默契，现在看来可能不是？可能只是大家见的多了，就明白了，懂得察言观色？我并不知道，但是我很习惯这种感觉。\n\n他们都说，人这个东西啊，很奇怪，可能你现在看到的人，喜欢的人，愿意放弃一切为了的人，可能过几年再看就不过如此了。我不知道，但是我现在确实很放不下。我一直觉得，这种人，可能十年都遇不到一个，放弃太难了。我想过几次，到底是为啥，你会拒绝，我暂时的理解是，我还不够优秀，所以我还要努力。他们说，等你变的优秀了，你就会明白，什么才是你想要的人。说真的，我不懂，不知道谁说的是对的。所以我选择让时间筛选，没有什么是时间搞不定的。231天后，一切都会有答案，如果你真的讨厌我，我就离开了，就当做是一场年少无知的梦。\n\n#### 20190505 04:47 PM update\n\n他们说让我忙起来，忙起来就不会想你了，但是我现在好闲啊，也不想忙起来，今天有比赛，但是已经没心情打了，怪只怪自己太年轻了，以前居然会觉得比赛比你有意思。老大说，错过了就是错过了，有些时候不能强求，我不知道，不知道该怎么做，不敢强求。\n\n#### 20190505 09:36 PM update\n\n开发的东西很快就做完了，所以今天一直很闲，然后复习的事也就随便搞了搞，反正也不怎么想搞学习了，然后和队友商量了一下考研的事，他们建议不要冲动读医，说是时间可能耽误不起，不太清楚，感觉涉及到他们的利益问题了，所以谁都说不清楚。然后下午到现在都在杂七杂八的看，配了配博客，看了看latex，看了看vim，学了学haskell，反而是感觉啥都没干，其实我还挺怕这种感觉的，挺怕时间真的将我们冲淡了，很奇怪的是，我今天很平静，异常平静，没有难受也没有开心，我不知道这是不是变淡的原因，反正时间真的在一点点冲淡吧，然后后天有考试，索性把明天的假也给请了，明天好好休息一下，有些东西也确实需要理一理。\n\nemmmm，但是说自己对医学感兴趣是骗你的，是因为我对你感兴趣罢了，但是我确实是真的耐着性子读了一半的卫生统计学，无论是简单还是难，我都耐着性子读了。在你拒绝我两次之后，那本书就放在角落接灰了。确实提不起兴趣读下去。偶尔想想自己目的性其实也很强的，emmmm，可能是功利性很强，没有用的事情就不做了。暂时还不清楚，可能等着这三周考完试之后会重新捡起来接着读？然后整理整理笔记？然后假装很早之前整理的，然后发给你？然后试图感动你？呵呵，渣男！反正现在暂时是这么想的吧。妈呀，从来没想过为了哄一个女孩子开心，我居然这么有心机，太恐怖了。\n\n哎，反正这两天想的挺多的，暂时也不知道自己在想啥，很多时候都是没想明白搞得错，反正以后三思而行吧，也不敢太打扰你了，日报今天还是决定接着发，发21天就溜了，能对你造成多少好的坏的影响我也不知道，我也不敢说这一套在你这是否是对的，只求心安罢了。\n\n### 20190506\n\n#### 20190506 10:44 AM update\n\n今天虽然请假了，还是来公司玩了会，刚喝了口水，现在开始码这段文字。\n\n这几天睡眠质量特别不好，应该是从5.1晚上开始的，可能是担心你身体状态，我应该和你说过，当时第二天我六点就行了，怎么也睡不着，也不敢给你发消息，怕你还在休息，我以为只是这个原因，现在看来不是，已经三天没见你了，但是还是基本六点多就醒了，然后也不怎么睡得着，因为队友还在睡觉也不敢起床，偶尔躺在床上会背背单词，偶尔也会想想你，偶尔也不知道自己在干啥。\n\n五点钟的票回学校，暂时还没定下来啥时候走，我应该和你说过，我不想赶路，所以一般会有预留，地铁大概是一个小时，所以我打算提前两个小时走，就算走错了，好歹还有挽回的余地。\n\n哎，其实一个人赶路还挺无聊的，还是两个人在一起比较好玩，旅途寂寞鸭。昨天给你发日报了，你还是没回我，可能是把我拉黑了？不知道，没有别的意思，只是想让你养成一个（我也不知道是好是坏的）习惯罢了。别太敏感啊。\n\n#### 20190506 03:53 PM update\n\n现在闲下来了，就等高铁了，然后就想了想之前几天发生的事，其实我还是觉得挺玄学的，首先就是失恋博物展的那个球，说好都是脱单呢，怎么就咱两是单身了，不过说的也对，12.23才考完研，今年是不指望脱单了。\n\n还有就是单车那个事，都10点四十了，还有四十分钟的路程，显然是赶不回去的啊，怎们回事啊，居然还能遇到各种单车，还有就是我为啥骑车那么慢，你真的不知道？怎么可能是因为累了，还不是不像你回学校吗。这样好歹有一晚上的时间，哪怕是纯聊聊天也行啊，你咋回事啊，看不出来？哇，就两三分钟就进不去了，你可真的赶啊，话说我还真不知道你是不懂还是装不懂，可能二者兼有，不清楚啊。但是我宁愿是前者吧。\n\n230天，我离你又进了一步，但是你退后了多少呢？\n\n#### 20190506 10:05 PM update\n\n马上就要到学校了，想到了当时去你们学校的时候，当时在你们图书馆歇息的时候，你应该是真的困了，都怪我当时不知道关心，让你受累了。现在想想当时怎么着也得让你休息休息啊。真的是迂腐之极。哇，不行了，想起的细节越多，越觉得自己是真的蠢。\n\n今天一天都在赶路，所以整个人的状态不是很好。而且也不太喜欢这种放松的感觉，但是还是不想学习。话说现在心态真的是变了好多了，今天我队友还在劝我放弃，我不知道，可能还是当局者迷的缘故，但是还是没和你说，今天还是照旧把日报发给你了，今天是第三天，还剩18天，然后就应该不会给你发消息了，让你安心考研了，考完研有的是时间不是吗？\n\n### 20190507\n\n#### 20190507 10:35 AM update\n\n229天了，今天突然有一种报复心理，我一定要让你后悔。\n\n突然想到当时和你一起听相声的时候那个哥说了一句“我对于这种人，没有羡慕没有嫉妒，只有恨”，哈哈哈，说实话，这就是传说中的由爱生恨吗？反正我现在挺难受的，突然也想让你难受一下，哈哈哈，开个玩笑。\n\n最后悔莫过于因为年少无能而放下。我拼命成长不过是为了你回眸一笑。他们说等你以后长大了会遇到不一样的人，不一样的景，而我只想记住每一个不一样的你。\n\n### 20190508\n\n#### 20190508 10:38 AM update\n\n228天。\n\n昨天晚上的时候，你终于是回复我了，说是怕我考试有影响，这件事怎么说呢，你要是早点回复我的话，我可能还会开心一点。但是还是挺开心的，好歹回复我了。\n\n昨天晚上聊了一下，应该再不会打扰你了，然后以后真有啥想说的，就更新到这里了，确实不该打扰你的，扰菇凉良久，菇凉莫怪啊。\n\n昨天你和我说，哎，算了不评价，怎么说呢，大家都在慢慢成长吧。\n\n不过有句话你说的还是挺对的，等待会让东西变质，或许应该换句话说：时间会让东西变质。没有什么可以敌得过时间。我深知我也不行，但是我觉得200+天还是不难的吧。\n\n还有就是你说的对，拒绝就应该拒绝到底，你做的很好，但是我还是很难过，毕竟当一个人真正拒绝你的帮助的时候就是真的想和你断了吧。至少没有钓着你的心思，或许我应该开心？\n\n后来仔细思考了这段时间的经历，感觉确实有些自作多情了，很多时候都是自己一厢情愿罢了。\n\nemmmm，大概就是这样了，可能真的是告一段落了，也不会找你聊天了，大家都松口气，如果真的是有缘，再见吧。\n\n当我码下这段文字，无悲无喜，甚至有一种完成任务的感觉，轻松？算不上吧。只是觉得暂时放下了一些东西，可以安心前行了。\n\n可能也和我老大说的对，他说我纯粹是大学时候没干什么，然后大学快结束了想干点什么，我不知道，当然也可能是自己飘了，觉得世界尽在掌握中，所以开始有恃无恐了。还好，你让我明白，自己还有很多的努力方向，还是不够优秀啊。所以继续努力吧。\n\n现在也不敢随便立flag了，但是还是想说一下，如果你真的准备二战的话，我就准备考研了，和你一起，哪怕你不理我，我也要强求一把。当然如果你真的考上了的话，我也要准备跳槽了，反正能近一点就近一点吧。真的是怕了。\n\n#### 20190508 12:55 PM update\n\n刚刚吃饭聊了一下，反正我感觉我还好啊，没有你说的那种腼腆的感觉，可能很多时候在想事情所以没怎么说话，或者说是很多话不太好意思说，或者是感觉说出来不好，可能你觉得我在欲言又止？或者说是“腼腆”。不太清楚，哇，第一天我可是嗓子都说哑了，你居然会觉得我腼腆。不过说真的，刚见到你的一瞬间真的是有好多话想说但是真的是，虽有千万肺腑之言，却又无语凌噎。emmmm，刚见到你的时候是在瓷房子门口，当时还挺想抱你一下的，但是当时咱们前面有一个围栏，不知道你注意了没有，然后就放弃了。哎，还是太怂了。\n\n昨天你给我发消息之后真的是好晚才睡着，本来12点钟就放下手机啦，硬是拉着舍友聊天，聊我和你，硬拉这聊到了一点半。哎，回想这几天发生的事，还是有些地方没有做好。还是有很多事挺后悔的，用我队友的话来说就是我太怂了。很多时候都过于胆怯。\n\n我脑子里突然蹦出一个词来——自卑，其实仔细回想一下，很多时候我大概都是自卑心作祟。你也说了，你觉得我很优秀，其实我一直不这么觉得，反正每次觉得自己还行的时候总能遇到一些吊人，然后看看他们的经历，然后就觉得自己还有很多地方需要努力。\n\n还有就是你觉得我把你美化了，这个不好评价，自古有云：情人眼里出西施。我不知道是不是因为某些奇奇怪怪的原因导致的。所以暂不做评价。但是真的是觉得你是个挺好的菇凉啊，一直觉得你值得世间上最美好的东西。有时候，看着你皱眉头真的是还略有难受？反正感觉你要是真能无忧无虑的生活还是挺好的。这段时间你应该是为我烦了，我也就暂时不打扰你了，等你安心考完研吧。反正这个事不急，咱们还年轻，有大把时间可以挥霍。哈哈哈哈哈。\n\n还有就是这段时间准备开始锻炼了，主要是当时第一天我们都走累了，我想了一下，要不要公主抱你，后来估计了一下自己的身体状态，还是觉得太虚了，所以这段时间准备好好锻炼一下。还有就是学习的事，这段时间我考试实在是太多了，工作时间也压得很紧，所以暂时不考虑接着读卫统了，先把考试糊弄过去再说，之前看过的一半也没有整理笔记，题目也是杂七杂八做了，没有系统的整理，还是准备从头开始读，然后顺便整理整理笔记，题目也暂时不做了。先读完再说。感觉东西不是很难，所以希望你不要着急，慢慢复习就行。现在时间虽说不多了，但是也不用太着急，估计你这几天都没有在12点之前睡过觉，还是要早些歇息为好。\n\n对了，你画的那幅画，我暂时还没有挂起来，因为房间里的那幅画是竖的，你画的是横的，不太好弄，所以准备抽时间去买个钉子，重新钉一下，然后再挂起来，不过你也别担心会弄坏了，我保存的老好了。偶尔学习累了会看看那幅画，你画的真好看，当然，你也好看。\n\n还有就是那天我真的没有占你便宜啊，我说的都是心里话，你不是也没反驳吗？我就当你默许了。反正等你考完研我就非要缠着你，和你一起准备复试。至于我考研？暂时还没定，等省赛结束之后再说吧。看省赛情况，其实吧，我还挺想省赛打的不太好的，这样就能安心学习了。感觉比赛真的已经没有了当年的激情了。\n\n还有就是舍友昨天晚上和我聊了关于感情会随着时间的延长而降低。他说如果你真是我对象，可能两个月我就没有了现在的感觉了。我不知道，但是你看你，就做的很好啊，直接拒绝了我，让我有时间去思考和解释这件事，等我想的差不多了，咱们就在一起了？\n\n说到底还是得抽时间想一想这件事，下周就省赛了，省赛结束应该会有时间思考这个问题，就这样。\n\n#### 20190508 06:22 PM update\n\n今天活干完了，现在算是比较闲了，不知道干啥了。\n\n所以就过来bb两句。这两天的状态不是很好，一部分是舟车劳顿的缘故，另外一部分原因就是突然有了迷茫的感觉：突然不知道了自己真正想要的是什么。是工作？是考研？是恋爱？我不知道，一直以来都很讨厌这种感觉，不知道自己想要什么可能是一种病态的迷茫，也很容易变成空洞的人。其实我还挺羡慕你的目的性的，能知道自己想要什么真的是一种很好的状态。它会至少让你有个目标，然后剩下要做的就很简单了，细化目标，完成目标。\n\n好像说这些在这里不合适，说一点和你有关的。\n\n你说我很多时候能一眼看穿你，emmm，这件事怎么说呢，我的解释是，咱两有天然的默契，这种默契与生俱来，不用培养，不用磨合。我最爱的就是这种状态。我一直以为这种情况是天作之合，很少有人能这样默契吧？这辈子能遇到一个真的很不容易，或许没了这份默契就不那么喜欢你了？我不知道，但是我是真的喜欢这种默契，你也知道，我情商很低，说明咱两都没耍心眼，所以这种与生俱来的默契难道不值得被珍惜吗？反正我是不打算就这么错过了。他们说这种默契，一个人一辈子会遇到很多，我不信，真的不信。反正这一次，我一定要抓住。\n\n#### 20190508 7:24 PM update\n\n他们说的其实挺对的，人啊一旦忙起来什么都忘了，所以当时他们劝我忙起来就好了，这几天确实渐渐忙起来了。但是偶尔还是做事做到一半被打断，然后就神游太虚了。。。当然也可能是还不够忙。就是偶尔闲下来连个聊天的人都没有，还是挺难受的，之前还能和你聊聊天，现在都不敢给你发消息了。就这样吧。真有啥想说的，我就写这里了。\n\n其实我一直都没想好 自己到底为啥要写这个东西，或者说写这个东西的目的是什么，虽然不怎么花时间，一天大概也就半小时，但是确实不明白写这个的目的是啥，写给50年后的自己看？那也太矫情了。还是写给228天后的你看？那也太无耻了。暂时没想好，只是单纯的觉得，能遇见你还是一件挺幸运的事，挺值得怀恋和回忆的事，所以就这样记录下来了，就算以后真的不能在一起了，想到以前喜欢过这么可爱一个菇凉，也是一件随时回忆起来都能让人开心的事吧？\n\n#### 20190508 11:30 PM update\n\n还好当时没有公主抱你，突然感觉自己好虚啊，不行了，接下来一段时间准备好好锻炼一下了，等下一次见面给你一个惊喜，到时候抱你没跑。\n\n### 20190509\n\n#### 20190509 09:19 AM update\n\n今天早起了，背了会单词，然后就来公司学习了，复习时间就剩下今天和明天了。\n\n早上的时候看到公交车让了一个老人过马路，不禁想起了我从天津回来的时候，当时晚上11点多了，我其实还挺累的，当时我后面是一对夫妻，带着两个孩子，两个孩子都睡着了，当时因为你拒绝我，我真的挺难受的，犹豫了一段时间还是让他们排在我前面，当时我想了好长时间，我都这么惨了，为啥还要对世界抱有善意？再后来，也就是上周考完试了，我回北京的时候，当时我身上还有一点现金，北京地铁现在好像还不让用微信？反正一个人在那干着急，想了想还是帮助了一下。我真的不清楚，为啥自己还要对陌生人抱有善意，真的是，自己过的就已经够惨了。后来想想还是为自己积福吧。所以我就想啊，我都以德报怨了，你总不能拒绝一个商量的小男孩吧。\n\n今天北京天气很好，早上八点钟就已经有了太阳，真的很想出去逛逛，后来想想一个人还是挺无聊的。突然想到了当时给你打伞的日子，哈哈，我记得当时有一段时间，当时人流拥挤，你头都不回就往前冲，哇，当时还是太怂了，当时就应该拉住你，让你等等我的，后来好像因为打伞不及时被你吐槽了？哈哈，感觉你当时委屈的抱怨的时候的样子真的很可爱。哎，当时太直男了。\n\n#### 20190509 07:22 PM update\n\n今天和一个考研的神仙聊了一下，他说我不该五一的时候去找你玩的，他说这个时候大家都开始准备考研了，我这样做，非但没有帮你解决问题，反而是抛给你一个问题，让你困惑更多，尤其是我那些若有若无的帮助更是显得愚蠢至极。我其实觉得他说的挺有道理的，我并不知道考研原来压力那么大，我其实一直觉得考研和期末考试没啥区别，看来是我年轻了，很多时候都把事情想简单了，尤其是想得到你的回应这件事上，真的是蠢了。\n\n仔细想了想确实不该这个时候去打扰你的，我还天真以为这对你不会有啥影响，今天才明白过来确实是副作用更大一下。但是我还是希望你压力不要那么大，还是要放轻松一些的，这段时间感觉你睡觉都挺晚的，一点钟还没睡觉，感觉这样还是对身体不太好，建议你每天早睡一点，毕竟晚睡了早上精神会不好，你们又都是需要背书的课，晚睡学习不如早起学习。\n\n其实每天都有好多有意思的事情分享给你，但是实在是不忍心打扰你，很多东西又不太好记在这里，所以很多都写成了日记，等你有机会了，到时候咱两可以一起读读？\n\n还有就是，我其实不怎么想告诉别人咱两之间的事，没有别的意思，一是咱两毕竟还没成不是，还有就是很多人问起来给我一种听故事的感觉，不像是帮我分析问题的样子，让我有一种”我有这种经历，我是不是很厉害“的炫耀的感觉，这种感觉让我很反感，不知道为啥，这种感觉会让我觉得，这份感情变得不那么纯粹了，就像一个小孩在炫耀自己的经历一样，幼稚而无趣。\n\n#### 20190509 07:57 PM update\n\n刚刚吃完饭，突然想到一件事，突然就难过起来了。\n\n就是五一期间的时候我们吃饭都特别早，所以刚回北京的时候我六点钟就饿了，但是这才六天过去了，我的作息又和公司一样了，可能这就是人们常说的时间会磨平一切？慢慢的，你给我造成的影响会渐渐的淡化？真的还是挺难受的，就像你留给我的东西，被别人抢走了一样。偏偏我还不知道能做什么才能留下你留给我的东西。真的很怕，有一天再听到你的名字，没有了现在这种心慌或者说是心动，反倒是无悲也无喜。\n\n### 20190510 \n\n#### 20190510 08:45 AM update\n\n今天还是这个点起床了，昨天锻炼有点过猛了，现在浑身酸痛。。。。早上六点多醒了一次，一度怀疑自己手断了。现在就像被人揍了一顿一样。。。。\n\n早上刚醒的时候仔细思考了一下，目前知道的人有：我两个现任队友，一个前队友，父母。果然是每个人注意点都是自己的利益问题，现队友给的意见是，别浪费时间，不值得。前队友给的意见比较中肯，让我想好，想好了就别放弃了。父母啥都没说，他们也没说啥，就是怕我想不开。同样的道理，我也听取了对自己有利的方向而忽视了现队友的意见。\n\n还记得我和你说的吗？一旦有些东西涉及到了利益问题，就会少很多人情味，尤其是工作以后，感觉大家看待问题的方向都很不一样了。昨天前队友和我聊了一下，他的意思是，他从来没有为自己而活过，都是按照别人的想法来做事。然后我就发现，我还是挺幸福的，我一直以来都是啥开心做啥，暂时还没人约束过我。以前觉得读书有意思就好好读书，不怎么玩。大学觉得比赛有意思就不怎么学习，学习很差。真的想不到，自己有一天会需要顾及方方面面而变得畏畏缩缩的时候，该是何种可怕模样。\n\n#### 20190510 05:31 PM update\n\n突然发现，说我变腼腆了，好像不止你说过，虽然我很不想承认这一点，但是好像很多之前的同学都这么说，让我不得不思考这个问题，可能这几年过的过于漫长了，让我已经不记得我高中时候的样子了。或者说我高中的时候很膨胀？记不清了，可能是自己的感受，自己的成长，自己的变化反而自己不太了解吧。话说我高中的时候确实很膨胀，感觉一切都在自己手中。可能是大学时候认识了太多神仙了，就已经不敢过于高调了，很多时候反而是低调再低调。感觉自己还有很多不会的东西，所以一直在努力学习吧。\n\n还有就是我把你画的画拍成了照片挂在公司内部聊天软件的头像上，他们都说挺好看的，那是，不看是谁画的。。。。其实准备换成qq或者微信头像的，想想还是算了，你能看到，不想影响你的心绪了。给你时间吧。\n\n还有关于你说我说话风格很像山东人，这件事怎么说呢，感觉与其说是山东对我的影响很大，不如说是山东学长对我的影响很大，因为很多时候都是待在实验室，待在实验室的时间应该不少于在宿舍的时间，这还是算上睡觉的时间的情况下，所以我说话的风格应该是更偏向于实验室学长的风格。至于这点滴的潜移默化的变化，我还真感觉不出来。反正感觉自己一直都是这样。\n\n#### 20190510 10:02 PM update\n\n明天就溜了，要回学校打省赛了，希望好运吧，还记得去年的时候省赛冠军，当时老膨胀了，总感觉世界在我手上，没有我搞不定的事，后来就慢慢放弃了这个无知的想法。突然想到了我之前和老大说的一句话，有异曲同工之妙--\"世间上任何问题都可以转化成数学问题\"。直到你拒绝了我好多次，我才渐渐明白过来，很多东西并不是那么简单的问题，不是我能掌控的，也不能转换成数学问题，他没有固定的公式，更没有通用的解法。因人而定，因事而转。\n\n嘿，说真的，我一直以为，我会悲伤好长时间，但是不知道为啥，我就这么快想开了，突然就不难过了？反正这几天还是挺开心的，偶尔搞搞问题，偶尔和组里人开开玩笑，但是偶尔沉寂下来的时候才会感到悲伤。这可能就是我喜欢晚上而非闹市的原因？“黑夜给了所有人黑色的眼睛，他们用来寻找光明，而我用来寻找你的美”。现在唯一感到遗憾的就是当时你画画的时候没有偷拍你。让我只能在回忆里寻找你。\n\n226天，此去经年，应是良辰好景虚设。\n\n### 20190512\n\n#### 20190512 11:14 PM update\n\n今天是母亲节，刚打完省赛，刚到学校，估计老妈已经睡了，不敢打扰，就偷偷来更新一点。\n\n今年省赛，果然还是没有打冠军，最后第五了，不行了，老了老了，精力不敌当年了。说到底还是缺少一点锐气，很多时候还是考虑太多，或者说是顾虑太多了。不过也从侧面说明了一件事，世界不是掌握在我手中，很多东西暂时还是不能掌控的。然后认真考虑了一下关于考研的事，这件事听的意见有点多了，反而自己没有搞清楚，然后你说想上中山大学医学院，然后了解了一下，感觉中山大学计算机学院还是挺强的，现在唯一的难点就是初试了，感觉只要初试过了，复试不是问题。大多数时候还是感觉自己很菜，但是好像是在一个不怎么激烈的范围里面，好像有点安逸了。温水煮青蛙，最坏莫过如此。说到底还是很多东西没有勇气舍弃罢了，工作也好，比赛也好，搞钱也好，很多东西让我迷醉了，尤其是在一个自我感觉良好的氛围里，感觉好多时候甚至不想努力了。还是很危险的。\n\n感觉还是要安心下来正儿八经搞件事，这学期算是废了，肯定是要搞到正式offer的。然后就差不多到了暑假了，然后看情况暑假是回学校比赛还是安心准备考研了。主要是还没想清楚，自己读研到底是为了学知识，还是为了接近你？感觉这个事情还是需要想明白，不然很多时候感觉可能会努力错了方向。反正学习这种事来说，感觉还是欠缺很多，很多东西都没有系统的学好，现在想捡起来又感觉时间不太够，感觉还是自制力不够，是像我说你的一样：执行力不足。当时我和你说的是真的，没有人的执行力很强，执行力强的人都遇不到，说到底人还是一个很懒的动物。毕竟懒是第一生产力嘛。\n\n224天，一念起，万水千山。\n\n### 20190513\n\n#### 20190513 07:54 PM update\n\n今天早晨起床，差点没反应过来，恍如隔世的感觉，真的有那种黄粱一梦的感觉，感觉一切都是假的，去北京市假的，去找你也是假的，只是做了一个很真实又很虚妄的梦。\n\n 其实大多数时候应该是，觉得自己实力还行，但是没有得到预期的结果的一种心有不甘吧。尤其是大家都是优秀的人，都觉得自己是掌控世界的一群人，如果真的违背预期的话，总会有点失落或者不甘心的感觉吧。只是这种期望长时间得不到满足的话，往往只有两种结果？对心爱之人的刻意美化或者恶意丑化？哇，不行了，感觉可以抽时间拜读一下弗洛伊德的巨作了，总感觉会受到启发。\n\n总感觉这几天心太浮躁了，对事也好，对你也好。总感觉不够冷静和理智，容易冲动。不太清楚是不是这两周堆的事情太多的缘故。其实仔细想想，自己还挺自私的，很多事情自己都没有想清楚，然后就说了，总感觉是不吐不快，但是很多时候都是自己爽完了，然后就不管了，总感觉自己能收拾好自己处理的烂摊子，但是想想到现在都还是总用事情很多这种破借口，没有时间理清这件事。不知道是怕想清楚之后拿到了自己不想要的结果的不甘心，因此一直在逃避结果，还是自己真的很忙，所以找不到时间。可能前者居多？\n\n溜了溜了，这两天身心俱疲，不想多说了。就这样，希望远方的你遇事不急，早睡早起。\n\n223天，世间有两苦，一是得不到之苦，二是钟情之苦。\n\n### 20190515\n\n#### 20190515 00:20 AM update\n\n已经是第二天了，晚上11点多的时候才陪舍友吃完饭。\n\n昨天这个时候和我妈妈聊了一下，我妈妈对你还是挺满意的，我就和她说，你对别人菇凉满意没用啊，别人菇凉不中意你儿子啊。不过说真的，我妈妈好像真对你挺感兴趣的，你要不考虑一下今年过年和我一起回家？\n\n然后今天晚上准备给你电话的，然后尝试给你发了个消息，大不了你再拒绝我，我明天就以喝多了为借口呗。但是你好像直接没鸟我了。。。emmmmm，想说的话就被憋回去了。其实也没有啥大不了的事，就是这段时间很多问题没有想清楚，所以想问问你的意见，但是你好像不怎么给面子啊。不知道，估计以你的个性，明天可能也不会回我？其实有时候感觉你还是挺好的，至少没有掉着我啊。\n\n然后我妈妈好像还是挺激动的，反正一直催我去撩你，说什么，有时间就关心关心人家，给人家尽可能的帮助啥的，反正给我的感觉就是，你要是来了，你就真是她闺女了，但是我是不是真儿子，那可不一定。然后我爸爸的话，不用考虑，我们家里人都挺好说话的，再说了，有我罩着你呢。不对，按照我妈妈这个态度，应该是你罩着我才对，哈哈哈哈哈。\n\n突然想到我的耳机到了，但是明天才能用到，然后今天去网易云音乐上去看了一下，《空空如也》这首歌，不知不觉已经听了500多遍了，还是略恐怖的。人生寂寞如雪啊。\n\n对了，今天不想学习主要是有一个比较奇怪的原因。从我读大学到现在，我一共有三件事让我可以奋不顾身，宁愿抛弃一切都要做，第一就是我想做一个特效爆炸的游戏，不好玩也无所谓。这个想法是大二的时候，真的是让我魂牵梦绕，让我想了好长时间，第二就是想去见你，那是来了北京之后的想法，让我很多时候都不能集中精力搞正事，直到五一，我和你说的都是真的，我是真的觉得一切都值得。无论是你想做什么，我都愿意陪着你。然后今天突然有了第三件事，我想来一次说走就走的旅行，今天看了一天地图，一直在想去哪去哪，但是具体的旅行地点还没定下来，不过抱歉的事是：这个计划没有你，本来想完之后说要不要计划加上你，后来想想太矫情了。这个计划没有你，我只想一个人看最美的景，当然如果那个时候你能在我身边的话，我会更开心。计划还没计划好，估计应该是12月份左右开始执行，应该是11月之前会规划好，到时候做两份计划吧，看你愿不愿意。\n\n#### 20190515 07:53 PM update\n\n上午就是纯赶路了。大概中午到宿舍，洗了个澡就去公司了。今天一整天都不是很舒服。\n\n昨天晚上的时候，我和你说过了，我陪舍友吃饭了，当时喝了点酒，当然没醉，尝试着给你发了个消息，但是你没回复我，今天早上你说你是睡着了。其实吧，昨天没有啥别的意思，就是想问你点事，让你给个意见而已，但是你好像兴趣不高，所以就没打扰你了。其实就是想问问你，觉得我到底是考研好，还是找工作好，还是打比赛好，自己现在没什么主见，问了问老妈，好像也没改出啥建设性意见，所以准备问问你，但是你好像是睡了。就算了。估计你八成是想我读研，所以想问问你读研的话啥时候开始准备比较好，因为目前一段时间还是比较忙，暂时是没时间开始准备，舍友的意见是不急，暑假开始准备就行了，反正他们对我的信心比他们对自己的信心都足，不知道是为啥。\n\n还有就是今天发工资了，准备换个手机了，但是还有点舍不得，微信暂时没有不同设备登录，聊天记录同步的功能（还是说我没找到？），所以换了手机之后可能聊天记录都没了？所以我今天翻完了我们所有的聊天记录，然后截图了，看今天晚上拷贝一下，感觉还是一个挺美好的回忆的。然后觉得比较过分的就是为啥聊天记录都是我一个人在发言呢？反正基本都是一片绿，然后见着一点白。哇，难受。可能是我手速比较快的缘故，感觉不见得，你好像挺不想和我分享每天发生了啥一样。我这个人就这样，闲不下来，反正只要是有趣的事都喜欢分享给你，但是你很多时候好像是不感兴趣，所以没怎么回复我，假装你是忙吧。也只能这样安慰自己了。\n\n221天，万物皆有其时，耐心等待。\n\n### 20190516\n\n#### 20190516 10:00 PM update\n\n今天头疼了一天，应该还是没有休息好的缘故。\n\n昨天开始渐渐开始给你发消息了，不然我是真的怕有一天把你忘了。说心里话，我不知道我到底是需要一个倾诉的对象还是对象。可能是前者居多？因为我很少主动开启一个话题，所以不怎么喜欢找人聊天，所以很多时候有些事都不知道找谁说，所以个人觉得还是更缺少一个倾诉的对象？不过我觉得现在的状态挺好的，每天和你分享一点或开心或难过的事，也不算太打扰你？但是还是和以前一样吧，都是我输出较多，你还是很少回我，但是我还是很开心啊啊啊啊啊，真的很怕你不理我了。\n\n今天看了一下，如果你决定读研读中山的话，我就准备考虑华南理工了，感觉考上不是很难，而且看了一下知乎，都说华南理工的就业氛围很好，所以可以考虑读一下，然后我们组的一个人说，读中山啊，中山妹子多，可以给你压力，哈哈哈哈哈，不知道啊，问了一下舍友，他们说这两个学校的考试难度几乎相当，所以暂时还没决定，应该是今年暑假就开始准备了，暑假感觉可以回一波家，感觉还是更倾向于考研吧，暂时还是不知道队友之间的态度，感觉大概率会玩完，所以更倾向于读研。今天和组里人聊了一下搞钱的事，他们都说读研好，搞钱不急，而且前几年基本是搞不了多少钱，就算搞到钱了也存不下来，所以暂时不考虑这个，但是如果能转正的话，不是不可以考虑一波，但是看老大对我的态度，大概率不会成功，所以暂时更倾向于考研，但是还没定下来，这周六感觉可以考虑一下具体的想法。或者这周二考完试，下午的时候好好想想。\n\n这周开始就继续锻炼了，对了，看了一下前两天你的体测报告，感觉很厉害啊，不行了，我也要好好锻炼了，话说5.1那段时间去玩的时候我脚上磨了一个泡，前两天才消下去，太虚了。还是缺乏锻炼了，还是因为怎么吃都不胖的缘故，这段时间就疯狂的偷懒，感觉最近越来越虚了。反正现在要好好锻炼了，怎么说也得公主抱吧，不能太虚了。下学期应该是回学校了，有时间锻炼，但是我健身教练的舍友好像要全身心考研了，感觉不会带我，到时候看情况是拉队友过去，还是自己锻炼，其实我觉得吧，做事这种东西，一个人做永远是最无聊的，虽然多个人效率不一定高，但是一定是不容易累的，老话怎么说来着？男女搭配，干活不累。说真的，五一那几天我是真的不累，3号的时候其实就是想故意气气你，我生气了，哈哈哈哈哈。你都看出来了还不哄哄我，难受，居然还让我去买水？居然想支开我，你也太坏了。\n\n还有就是那天晚饭的时候，我一直叫你“小老弟”，你好像挺反感的，没有别的意思，只是觉得这个称呼很有意思而已，而且那个时候感觉叫你啥都不好啊。总不能继续叫你“小姐姐”吧？\n\n220天，既然不好意思说晚安，那就祝你晚不安，最好今夜有梦，梦里有我。\n\n### 20190517\n\n#### 20190517 10:30 AM update\n\n刚刚去水了一发日记，感觉还是挺惭愧的，日记是真的一天不落全都有，但是这个故事还断了几天，看了一下，大概是省赛少了，还有就是那天准备复习和陪舍友喝酒少了。现在日记被彻底拆成了三部分：工作日报，这个故事，生活琐事。等离职之后可能工作日报和生活琐事并一下，但是这个故事还是单独成为一个故事吧，以为觉得这个是真正值得回忆的事，而不是记流水账。\n\n其实这两天仔细考虑了一下，你其实应该不是没有看懂暗示，而是假装没看懂暗示。更多的时候你应该是不想看懂，假装看不懂，然后就可以搪塞我?还是说你觉得我脸皮不够厚，不敢瞎说话？可能让你失算了，我最后还是捅开了，但是好像努力错了方向，最后搞得大家都不怎么愉快了。emmmm，其实我觉得这样还挺好的，至少比你看破不说破好一点，这样大家长痛不如短痛啊。我也没有一下乱七八糟的小心思，你也可以安心考研了。就这样独自安好了。\n\n#### 20190517 07:52 PM update\n\n不行了，今天晚上实在忍不住了，想和你商量一下关于明年的安排。emmm，用自己不知道未来的想法去寻求你的帮助应该不算过分吧。感觉还是不甘心在作祟。还是想挣扎一下？因为这两天实在是太忙了，所以今天想早点走了，因为明天就放假了。所以现在开始动心思准备出去玩了。明天看情况出去逛逛。\n\n这段时间渐渐忙起来了，主要是因为现在考试也告一段落，剩下的时间比较多，以前的时候有时间就摸鱼，现在不怎么想摸鱼了，一来是感谢老大的栽培，二来是想让自己忙一点，别天天去想一些乱七八糟的东西。你看，现在随着时间的推移，我对你忘得越来越多了不是？很多东西都想不起来了。还是说不想想起来？\n\n话说第一天的时候，当时逛瓷房子的时候我还是挺不开心的，这种时候难道不是应该两个人找一个幽静的咖啡厅，然后一起老朋友叙叙旧吗？说真的，当时逛的时候直接把我准备好的好多话憋回去了。。。。本来想找个地方聊会天的。。。。然后以为中午有机会，结果你也知道了，中午的时候不止两个人，说真的吃饭那个地方环境还挺好的，多适合说心里话啊。不过我当时想啊，我有的是时间不是吗？所以不急。结果不急不急就真的没机会急了。\n\n219天，愿你贪吃不胖，愿你懒惰不丑。愿我的深情不被辜负，愿我的余生都有你陪。\n\n### 20190518\n\n#### 20190518 04:49 PM update\n\n昨天晚上给你打了个电话，咨询了一下关于下半年到底是考研，工作还是打比赛的问题。但是你好像兴致不高，其实吧，你要是明确给出一个意见，我一定会去做吧。我是真的不知道到底怎么选，不是故意找个由头和你打电话的。你最后好像也只是帮我干掉了一个选择：就是不要去工作。然后你好像是更倾向于比赛，其实你这样说我反而是更倾向于考研了。如果你中山大学定下来的话，我就可以着手准备考西南理工大学。然后就问了你一下中山定下来了没有，但是你好像还是在动摇，所以这件事就暂一搁浅了。\n\n我还是那句话，感觉很多事情还是早早定下来比较好，我这段时间就因为思考各种利弊关系搞得我很焦虑，很多时候甚至不能安心思考了。但是我现在应该没有资格去给你出主意了，毕竟我自己都没有想好到底选什么，甚至去你那里问想法了。\n\n今天又刷了一遍大鱼海棠，我以为我会有啥感同身受的感觉呢，结果还是那样，别人的故事毕竟是别人的故事吧。不过有句话还是挺打动我的：\n\n\"生命是一场旅程。我们等了多少个轮回，才有机会去享受这一次旅程。短短的一生，我们最终都会失去，你不妨大胆一些，爱一个人，攀一座山，追一个梦。\"\n\n这种事怎么说呢，其实大多数人是没机会追寻自己的梦的，很多时候还是不得不屈服于现实不是吗？更多的时候是人力不可抗的因素，就像你现在不喜欢我一样，可能越努力越反感了？或许现在唯一能做的就是偶尔找你聊聊天，听听你最近一段时间的吐槽，给你出一两个狗头军师的意见。但是你好像不怎么有兴趣找我聊天，一般都是我主动的多。可能还是对我戒心比较大？\n\n218天，命里有时终须有，命里无时莫强求。\n\n### 20190519\n\n#### 20190519 09:33 PM update\n\n今天和你聊了一下关于晚睡的问题，其实一直以来都想说，你好像睡觉一直挺不规律的，我是真的觉得作息不规律对身体很不好，虽然我也没有每天早睡，但是基本都是12点之前睡觉了，太晚睡真的是对身体不好，不仅是休息不好的缘故，反正整个人的精力都不好了，一天都会没有精神。还有就是这个年龄段，尤其是在学校的日子，没有什么事是值得你为之熬夜的。至少我目前还没发现什么事是非要我晚上之前搞定的，第二天干就会出问题了？\n\n还有就是你说你在学校发现了一个地方写有你的名字，我居然没有吃醋鸭，只是觉得挺有趣的，因为有一个人暗恋着你，还不敢偷偷告诉你，还居然是舍友先发现的，这就太尴尬了，当然不排除有个男生写了告诉你舍友了。然后试探试探你的态度，但是我是真的觉得很有意思，反而没有吃醋的感觉，可能是对自己有足够的自信？当然还是挺羡慕你的，其实有一个人在背后默默祝福你的感觉真的挺好的。\n\n然后你就开玩笑说下次去青岛给我写满，我是真的当真了，就像我说的，虽然下一次不知道是什么时候，但是只要有下一次，多久都值得不是吗？到时候你可别赖账啊，不写满不准你离开我了。\n\n217天，我们都足够成熟，也足够理智，没有人愿意用自己的感情和青春去赌个不确定的未来。但因为那个人是你，所以我愿意。\n\n### 20190520\n\n#### 20190520 10:40 AM update\n\n今天出门的时候，阳光正好，微风不热，一切正如刚见你时候的样子，真的很美。我刚去的时候，我是真的有说不完的话想和你说，但是啊，你真的是没有怎么回应我，导致我阻塞了。所以啊，想念这种东西，还真不能是单向的，不然啊，就像负重前行，总该是会累的吧。\n\n#### 20190520 11:05 PM update\n\n明天考试，我还没开始复习，但是我还是更想和你说话，不想复习。\n\n今天是520鸭，真的很想和你说话啊，但是又怕你戒心太重了，就没怎么和你说话，就是吐槽了一下今天网易云给我推荐了一堆情歌，评论全是别人的甜美爱情故事。你好像只是单纯的同情我，哇，这个时候不应该是咱们偷偷做一天情侣吗？你要是真的这样说，我说不定真的会把票退了不考试了，直接去找你玩，算了，还是自己想想就好了，别想多了。这段时间咋回事啊，天天做白日梦啊。不过真的想和你谈恋爱啊啊啊，哪怕一天也好啊。你想做什么都行，我都可以陪着你，想到只要可以静静看着你，就很开心了。\n\n还有就是那天画画的时候，我不是觉得无聊了，而是我困了，那天睡的挺晚的，没睡好，但是又不好意思睡觉，早上又很早就醒了，然后睡不着，一直在想前一天晚饭的事，所以下午的时候很困了，真的不是无聊了。哇，我当时累的不行了，就想休息一下，但是还是想和你说话，结果你居然让我去买水。当时真的是被你蠢哭了。但是莫名觉得你还挺可爱的？这段时间没见你了，也没有理由找你要照片，所以更多的时间就去看那幅画，不管怎么说，也是你几个小时的战果啊。最后我还是没给他挂起来，我怕弄坏了，万一不小心刮花了我心都会碎的。\n\n216天，深深的话要浅浅的说，长长的路要挥霍的走，大大的世界要率真的感受。\n\n### 20190522\n\n#### 20190522 10:48 AM update\n\n昨天和前天都找你聊了会天还挺满足的？今天好像是我妈生日？感觉今天该打个电话回去了。\n\n214天，网易云里面的评论有999+，我也不敢打出你的名字。\n\n### 20190523\n\n#### 20190523 12:30 PM update\n\n今天突然听到了《好久不见》，感觉真的好久不见了，甚是想念，现在学校的事情算是终于搞定了，现在可以安心搞其他的事了。这段时间算是真正忙起来了，每天都是干不完的活。\n\n对了，关于上次你说高考考完数学后我对你说了什么话，我是真的忘了，你说的对，只有自己会记得自己说过什么，我去问了李思慧一下，她也不记得了，看来这彻底成了你一个人的秘密了。我这几天都在努力的回忆，如果有这件事的话，我大概想起来了一部分，当时我们是在一中考试的？而非孟宗，然后我们都是从小学那个门口出来的，然后你是在那个上坡的时候哭了？然后我无非就是可能说了两种话：要么是嘲讽你了，要么是安慰你了，以我高中的尿性，应该是带了嘲讽的安慰，多半是会说：没事我考的比你还差，我都没哭，你怕啥啊？类似的话。因为我记得我语文考的更差，所以可能说了一句我作文都跑题了，你怂啥啊。应该就是类似的话吧。反正感觉顶多是用让你很不爽的话怼你了，让你暂时忘却了考的不好的悲痛？其实回头来看，你都比我考的好多了。\n\n而且你看，当初我们拼命挣扎，痛的撕心裂肺的事现在看来还不是淡然了吗？你现在回忆起来还是有意思居多吧？反正我觉得吧，考试这种东西，努力了就好啊，别太心急。\n\n然后就是这段时间考研的事了。我舍友这段时间又吵架了，反正我不在就闹腾起来了。其实在我看来九成九是因为考研的事，我才渐渐知道，考研的人压力是真的大，所以这段时间我都只敢和你分享有意思的事，看出你有心情不好的时候就安慰你一下。\n\n还有就是关于你刷微博的事，你说你是喜欢做一个倾听者，实际上我觉得是因为你已经是个消费者，而懒得去做生产者，以至于很多时候你甚至不能好好的表达自己，但是没时间去改正，所以你现在都是喜欢听别人的故事。所以啊，我得配合你啊，我就老老实实给你说我发生了啥啊，至少这样我们两个人之间没那么无聊啊。\n\n213天，这一生，我会遇到一切比你都好的，但我已经没有精力，不顾一切去再爱一次了。\n\n### 20190524\n\n#### 20190524 10:19 AM update\n\n今天早上奇哥和我说他失恋了，这次是真的，这让我不得不开始思考一个问题，我是不是恋爱绝缘体啊。为啥我周围的人都失恋了呢？巨难受。其实我想的更多的是他失恋的原因：他对象想要结婚了，但是他现在处于上升期，至少是两年之内不可能结婚的。说到底就是我给不了你想要的，所以不如就此别过了。当他说完这个事实的时候，我也跟着挺难受的，让我想起了我初恋，当时是同样的情况，我给不了她想要的，所以大家就此别过了。现在回头来看，只能说是挺可惜的。\n\n其实，当时犹豫了很久才去见你是同样的问题，就是怕自己没有放弃一些东西的勇气，所以一直不敢见你，当我下定决心了之后，还是被你拒绝了，其实，无论是比赛还是考研还是找工作，我都拿得起，为你我也确信自己放得下，但是你都没有给我机会去证明这一点，还是有点难受的。他们说：这辈子最后悔的一件事就是，在错的时间遇上了对的人，但是却没有能力或者说没有勇气去抓住。我们应该就是这种情况，说到底我其实还是没有准备好吧。自认为自己掌控着一切，可以随便牺牲，在哪个方向都能做到很出色，但是实际上却不是这样，很多时候还是太怂了，很多东西不是说放下就能放下的。\n\n我后来才渐渐明白，我身上承载的不仅有我的梦，还有很多人的期许。虽然说我做不到背叛全世界，但是我真的愿意去争取听从你的意见，所以大多数时候我还是挺想听听你的意见的，但是从上次就可以看出来，你不怎么想给我意见。其实我还挺倾向于考研的，但是队友失恋了，很可能就能安心打比赛了，所以又陷入了一个个不确定中。就这样了，上次说过了，这种问题得不到答案的时候，反复思索只会陷入焦虑。今天和队友聊一下，倒时候再决定吧。\n\n#### 20190524 04:51 PM update\n\n刚刚和你聊了一下，关于谈恋爱和结婚的事，我们好像持有一部分不同的观点，可能是我经历稍多一点的缘故吧。\n\n不过让我真正感兴趣的事是你发给我的表情包，哇，真的想不到，你会用这种表情包，简直人设崩塌啊，是真的，哇，你可是小仙女啊，怎么能用哪种表情包呢？然后就奶了你一句，然后就赶紧跑了，哇，说真的，现在突然有了一种恋爱的感觉，彻底不想干活了，翻来覆去看了两三遍记录才平静下来。啧啧啧，不得了不得了。\n\n#### 20190524 05:24 PM update\n\n不过话说回来，恋爱这件事对于20出头的年轻人来说真的是一件很奢靡的事，但是对于女生来说是一件不得不考虑的事，现在回想起来还是挺残酷的。但是我还是没办法给你承诺不是吗？毕竟我自己对自己都没有多大的把握，谁知道未来会发生什么呢？可能真正让我着迷的是那一瞬间的欢乐？但是你知道这种欢乐是不能过一辈子的不是吗？我觉得如果不考虑清楚自己喜欢的到底是什么就草草的说喜欢，草草的给承诺会显得很可笑。\n\n其实吧，让你和自己谈恋爱，何尝不是我自私了呢？何尝不是为了怕你有一天累了，却没有找到我，被别人乘虚而入了，所以让你自己一个人罢了。哇，太有心急了。但是我是真的想：当你想恋爱的时候，想到的是我。\n\n212天，“归属感”是你强烈地想和他在一起。 “安全感”是你觉得他强烈地想和你在一起。 “幸福感”是彼此都强烈的想在一起而最终走在了一起。\n\n我想要“幸福感”呢，对，和你！\n\n### 20190526 \n\n#### 20190526 10:15 PM update\n\n好吧，昨天看来是太累了，又没有更新。我还挺怕我现在的状态和写日记一样，马上就没有动力了，甚至是没有感觉了。你看，我现在开始都为自己找借口不写这个玩意了。你说再过两百天，我回头看这个东西实际上只更新了十来天，会不会嘲笑自己当初的想法呢？我不知道。\n\n对了，在偷偷懒了好几天之后，我今天终于下定决心去健身了，但是我真的是太虚了，跑了大概五公里就不行了，啊啊啊啊，好难受啊，说好到时候见你的时候一定要公主抱你，感觉离目标还有好远啊啊啊啊。不行了，以后每周我要保证运动量了。\n\n对了，我想起来了上周的时候，我舍友和我说，让我这段时间学一个技能，为了你学个技能，无论什么都好，最好是乐器什么之类的，说到时候表白的时候一定会用到，我想了想不是不可以整一个，到时候看一下，感觉可以安排一下，然后突然就想到了吉他，这段时间考虑整一个了，手机什么的去他妈，暂时没时间想了，然后，你不是说你学过一段时间放弃了吗？我感觉我学会了也可以教你啊，但是不知道时间成本如何，因为毕竟还是拿不出来整块的时间，尤其是拿不出正常时间的整块时间，毕竟我不能10点下班，11点洗完澡之后开始学，你说是吧？早上的话实在是太懒了，感觉后续可以利用一下。\n\n还有就是，当初买耳机说是为了早上背单词，不吵舍友，结果后来就忘了，感觉还是自控力不够啊。而且这几个月接触的东西有点多了，感觉心有点杂了。还有就是上次说的端午节的事，当时的想法是端午节回一次家，就是湖北，但是看了一下路线，时间点都不是很好，然后票价也不是很便宜，所以暂时不考虑回家了，但是显然是不能找你玩了，所以暂时还不知道干啥。看情况约一下呗，然后现在在北京的四小只应该除了我都可能回家，所以暂时还没有安排那几天干啥。\n\n从下周开始应该就是独立干活了，可能还要自己去和pm吵架，所以可能会更加焦头烂额，不知道会不会以此为借口不更新了。感觉这段时间工作还是挺煎熬的，每天都不知道自己干啥，反正只想搞一些自己感兴趣的东西。哎，必然是没有和你一起玩开心啊。\n\n~~然后这两天回想了一下，好像当时和你一起出去玩的时候，你好像并不开心，还是说你在学校都是这个样子？不怎么爱笑？感觉都是我一个人在那里傻开心。~~哎，还是太矫情了，可能以后我看到这段会删掉吧，暂时先加个删除线。好了，没啥想说的了。就这样，晚安。\n\n今天又听了一遍《风花雪月》，自己写了一段。\n\n风是你的头发抚摸我的脸庞的痒，花是我初见你时惊为天人的笑靥，雪是我进不去的你洁白无瑕的心，月是不曾一起走过的世间的美景。\n\n210天，风花雪月，就是我想和你谈个恋爱。\n\n### 20190527\n\n#### 20190527 05:30 PM update\n\n今天看到了一句话，我不知道说的对不对：当一个女孩拒绝一个男孩后，通常男孩会更加难以放弃，不为别的，只是单纯的不甘心。\n\n嘿，别说，我感觉我还是不甘心作祟多一点。我是真的很喜欢你吗？是真的那种寻死觅活的喜欢吗？没有吧。所以说到底应该是不甘心作祟多一点喽。\n\n209天，愿你有高跟鞋也有跑鞋，喝茶也喝酒。愿你有勇敢的朋友，牛逼的对手。愿你对过往的一切情深意重，但从不回头。愿你特别美丽，特别平静，特别凶狠，也特别温柔。\n\n### 20190528\n\n#### 20190528 10:04 AM update\n\n不行了，这几天实在是太忙了，忙的我甚至都没时间写日记了。\n\n今天看到一句话，人难免天生有自怜的情绪。大部分人看似的努力，不过是愚蠢导致的。\n\n觉得这句话说的挺对的，然后就仔细思考了一下，这段时间确实漂了。甚至都觉得自己还行了，可怕啊。\n\n208天，我嫉妒你身边每一个无关紧要的人，能够轻而易举的见到我朝思暮想的你。\n\n### 20190530\n\n#### 20190530 06:56 PM update\n\n昨天让你把网易云ID发给我，但是你拒绝了。然后我就想到了，当分享歌曲的时候后缀有一个uid=xxxxxxxxxx，然后在好奇心之下我把这个后缀删掉了，但是还是能打开，而且是同一个网页，我瞬间就明白了，这个是userID，既然userID会暴露出来，那么显然是可以利用的，然后就用浏览器打开了个人网页，后缀上就是uid=xxxxxxxxxx，然后随便换了一个uid，果然能打开别人的个人主页。然后自然就是用打赌来刺激你让你分享一首歌给我喽。哈哈哈哈哈，我好坏啊。\n\n开始的时候我还以为你不会吃我这一套，没想到你居然还真的分享了，哈哈哈哈，你居然还不信。你刚刚发我的时候我还在开会，当时真的是好久都没有感受过那种心砰砰砰跳的感觉了。哇，当时真的是激动的不行，会都不想开了，直接开始瞎搞了，然后就自然搜到了你的个人主页了。哈哈哈。哇，不行了，我现在还平静不了。真的是，好久都没这么爽过了，怎么说呢，就像小孩子耍赖皮拿到了自己心爱的玩具，这种感觉你知道吧。真的是好爽啊啊啊啊啊。\n\n#### 20190530 09:19 PM update\n\n我就猜准了你会来问我怎么几分钟搞出来你的账号的。本来想告诉你的，忍住了。然后就调侃你，让我端午节去找你玩，必然会被你拒绝啊，就是随便调侃一下。\n\n突然想起来你上次提到，为啥我每次都是很了解你的样子，其实我想说的是，如果你想了解一个人，总是有各种各样的方式去了解他（她），你说是吧？无非就是把拿来想自己事情的时间拿来想另外一个人而已，然后站在一个旁观者的角度，总能看清楚很多事情不是吗？但是很多时候还是不够冷静，所以大多数时候都是猜错罢了。其实，哪存在一个人把一个人猜准这种情况呢？可不都是我想了解你，然后尝试去接触你罢了。如果对你不感兴趣的话 ，又怎么会去想了解你呢？\n\n哇，当你发给我“哼”的时候，真的是整个人都化了。哇，我都能想象到你假装生气的样子，真的是想当面哄你一下啊啊啊啊。算了算了，自己还是太怂了，如果真的下一次见到你的话，真的是不想分开了。一定要黏着你。哇，不行了，真的想坐最后一趟火车过去了，我查一下。\n\n206天，嘻嘻，有没有觉得我敲级好？让我们一起牵手走完整个宇宙吧~~\n\n## 201906\n\n### 20190608\n\n#### 20190608 05:37 PM update\n\n昨天你突然和我说了，高考结束的事，也就是考完数学的时候，我和你说的话，还是蛮意外的。emmmmm，说实话是无心之言，不知道对你造成成了何种影响。而且但是是真的没有别的意思，也不是习惯你想和你有什么关系之类的。只是单纯的询问。可能是觉得好看的小姐姐不能那么难过是吧。\n\n其实当你昨天和我说完这件事的时候，我就有一种预感，你好像看到这篇算不上日记的东西？不太清楚是否是这样，可能就是一种单纯的直觉吧。就像上次。\n\n197天，你是一场无关风月的红尘， 成全了我一厢情愿的认真。\n\n## 201907\n\n### 20190717\n\n#### 20190717 10:37 AM update\n\n昨天晚上做梦梦到你了，梦到你来找我玩，你不排斥我了，我们一起压马路，然后你说饿了，我们就去吃东西，开心到冒泡。点完餐，你在那安安静静的做着，我看着你，你问我“看啥”（傲娇脸）， 然后我就笑了。再后来，我去取餐，让你在这乖乖等我，等我回来的时候，看到一个小哥在搭讪你，我就很气，然后，然后，然后就和那个小哥打起来了。然后我就醒了。气死我了，都怪那个小哥，不然好歹我能看你吃碗面不是？\n\n## 201910\n\n### 20191029\n\n#### 20191029 2:34 PM update\n\n表达爱意最好的时机是，三年前到现在的陪伴，其次是现在。\n\n# Her\n\n199808062050 \n\n![](/img/something.jpg)\n\n另外一部分原因是，我想和你报考一个学校，在你考完的那个时候，能第一时间看到你。\n","source":"_posts/story.md","raw":"---\ntitle: 就怕我感动了自己，却没有感动你\nauthor: \"zuhiul\"\ndate: 1019-05-01\ntags:\n  - story\n---\n\n我爱你，像蚁溃洪堤，一泻千里。\n\n<!-- more -->\n\n## 201905\n\n### 20190501\n\n#### 20190501 09:00 AM update\n\n今天开始我想记录下和她的所有故事。\n\n#### 20190501 06:15 PM update\n\n今天终于见到了心仪的小姐姐了，然后在天津逛了一大圈，刚下高铁，吃了个饭，然后逛了会街，然后就去听相声，然后逛了逛他们学校，在图书馆坐了一会就这样，哈哈哈哈哈哈哈，巨开心\n\n#### 20190501 11:52 PM update\n\n下午的时候和她一起去吃了个饭。然后我回宾馆把东西放下后就拉着她各种溜达，但是感觉她兴致不高。可能是她要考研的缘故。确实，感觉拉着一个想考研的人也挺罪恶的。但是我是真的很开心，哇，真的是只要想到和她一起，真的是压马路都巨开心*^_^* \n\n### 20190502\n\n#### 20190502 00:31 AM update\n\n君子爱玉如将帅熬鹰，我不急，对你我有无限的耐心。\n\n#### 20190502 09:56 AM update\n\n看来你昨天是真的累了，以至于你现在才醒，我倒是挺担心的，7点半就醒了，然后给你发消息没回，就知道你是累着了。哎，心疼。准备去找你的，被你拒绝了。非说你来找我，也行吧。\n\n有时候我还挺惶恐的，万一就是南柯一梦就尴尬了，不过我现在是真的开心呀呀呀呀呀呀。\n\n#### 20190502 11:26 PM update\n\n晚上约你吃晚饭，然后顺其自然的表白了？说实话是准备留到明天说的，但是一不小心漏嘴了，天真以为会挺顺利的。自认为还是不错的？但是好像有点出乎意料？巨难受？ \n\n### 20190503\n\n#### 20190503 00:42 AM update\n\n还是没想明白到底是哪个环节出问题了？而且我都明说了不逼你？我可以等234天啊啊啊啊啊啊啊啊啊啊，难受！\n\n#### 20190503 10:04 AM update\n\n混进了你们学校，然后又混进了你们图书馆，哈哈哈哈，当时门卫看了我一眼我都有一种做贼的感觉，真刺激。坐在图书馆写下这一段文字，还是略难受？反正还没缓过来？其实吧，你之前拒绝我的时候我都安慰自己，我还不够优秀啊，我要更优秀一点，所以我之前一直很怂啊，这段时间才敢和你说话，但是好像啊，你还是这样啊，说明啊，我还得努力啊，冲鸭。\n\n#### 20190503 10:26 AM update\n\n还记得昨天去失恋博物展，记得当时我两感受都相同，别人的故事始终是别人的故事，打动不了自己，现在想来就是这种感受，一直都是我的一厢情愿，还奢望你的回应，说到底还是自己感动了自己，却没有感动你。\n\n#### 20190503 06:52 PM update\n\n你去上厕所去了，我偷偷码一点。\n\n每每想到你连一点妄想都不给我就巨难受，看着你画了一下午的画，你认真画画的样子真的很美。但是我还是不知道你到底是啥意思，还是单纯的难过。\n\n#### 20190503 09:08 PM update\n\n09:05开的高铁，我们8:55还没看到车站，我估计是赶不上了，当时我们两一起在大马路上跑，我真的有一种私奔的感觉。当时过安检的时候，我真的好难受，感觉自己像失去了你一样，但是都没有得到过何谈失去呢？\n\n我当时就想啊，如果我还能赶上车，那就是老天真的不帮我了，如果赶不上我就赖上你了，但是好死不活晚点了？真的是气哭了。看来还是我心急了，贼老天都不帮我了，所以爱情这东西啊，还得时间沉淀，所以啊，我不急啊，所以啊，我可以等啊，所以啊，我唯一怕的就是你不见了啊。\n\n就这样吧，再见了。\n\n### 20190504\n\n#### 20190504 00:54 AM update\n\n估计你睡了，写好的东西最后还是发给你了，也不管你看不看了，反正肺腑之言，不吐不快。\n\n果然你没睡着，和你说了两句，看你没兴趣我就溜了。\n\n#### 20190504 1:37 AM update\n\n看了你是真的了，今天就不等了，毕竟我又不是你的谁，劳累你三天了，本来就挺过意不去的，就这样也好，是你说的，好歹还能保存美好的回忆不是？\n\n让你填志愿和考完研和我说一声，不知道你会不会说，232天，会有多少变数呢？谁都不知道，我现在唯一能做的就是更努力吧。\n\n#### 20190504 01:00 PM update\n\n队友看我实在是太难受了，拉着我去打球了，打了一个小时，我实在是不想动了。就拉着他回公司了，码下这一段了，你猜我想开需要多久？估计你不敢和我打赌了？\n\n#### 20190504 05:44 PM update\n\n我现在突然挺后悔当时没有定三晚上酒店，那样的话，我们至少还能多待一起一天不是吗？虽然可能没那么开心，但是至少还能看到你不是吗？我现在真的是啥都不想干了。\n\n#### 20190504 10:45 PM update\n\n我现在挺想和你打个赌的，你猜232天能否冲淡我对你的想法呢？我赌不会。如果真的淡了，我也不知道该说好还是不好，ok，我现在就数日子等我赢，刚刚给你发了日报，没有别的意思，只是希望你每天能整理整理，希望你好，（可能也有不甘心作祟？），不知道啦，我也很茫然的好伐。\n\n### 20190505\n\n#### 20190505 10:24 AM update\n\n劝自己暂时放下，安心搬砖，好好学习。唯一能让我安慰的就是我们组另外一个人表白也被拒绝了，但是我还是很难受，我果然是个loser，连同组的人都和我一样惨，哭了。\n\n#### 20190505 12:13 AM update\n\nemmmm,前几天，天天中午吃饭很早，以至于我现在饿了，但是还有半个小时才吃饭，饿得不行。哇，我还想和你一起吃饭。231天，我要是约饭，你不来，打你呦。\n\n#### 20190505 12:57 AM update\n\n刚刚和老大他们聊了一下，他们的意思都是劝我放弃，说我还年轻，不值得，同样的人还会遇到很多，但是我目前还不这样想，有时间确实需要好好整理一下，并不知道自己到底想要的是什么，这不像我，我一直以为自己想要的东西很明确，但是这件事上，确实还有疑惑的地方。让我想到了以前看到的一句话：\n\n\"无论是朋友，工作还是恋爱，如果你感到与对方特别契合，沟通愉悦甚至时时让你灵光乍现，你知道这说明什么吗？\n\n99%的可能是你遇到了阅历智商情商都在你之上的人，而且对方因为什么目的在向下兼容而已，只要TA愿意，TA可以和每个跟你一样级别的人，打到这种心有灵犀，\n\n剩下的1%就是你遇到了SOULMATE。\"\n\n我并不知道我遇到的到底是什么，按照你前几天的意思是：我对你了解太多了，所以你的意思是我是你的99%？可能吧，可能只有我觉得我们是那1%，我一直以为我们不需要言语的交流是默契，现在看来可能不是？可能只是大家见的多了，就明白了，懂得察言观色？我并不知道，但是我很习惯这种感觉。\n\n他们都说，人这个东西啊，很奇怪，可能你现在看到的人，喜欢的人，愿意放弃一切为了的人，可能过几年再看就不过如此了。我不知道，但是我现在确实很放不下。我一直觉得，这种人，可能十年都遇不到一个，放弃太难了。我想过几次，到底是为啥，你会拒绝，我暂时的理解是，我还不够优秀，所以我还要努力。他们说，等你变的优秀了，你就会明白，什么才是你想要的人。说真的，我不懂，不知道谁说的是对的。所以我选择让时间筛选，没有什么是时间搞不定的。231天后，一切都会有答案，如果你真的讨厌我，我就离开了，就当做是一场年少无知的梦。\n\n#### 20190505 04:47 PM update\n\n他们说让我忙起来，忙起来就不会想你了，但是我现在好闲啊，也不想忙起来，今天有比赛，但是已经没心情打了，怪只怪自己太年轻了，以前居然会觉得比赛比你有意思。老大说，错过了就是错过了，有些时候不能强求，我不知道，不知道该怎么做，不敢强求。\n\n#### 20190505 09:36 PM update\n\n开发的东西很快就做完了，所以今天一直很闲，然后复习的事也就随便搞了搞，反正也不怎么想搞学习了，然后和队友商量了一下考研的事，他们建议不要冲动读医，说是时间可能耽误不起，不太清楚，感觉涉及到他们的利益问题了，所以谁都说不清楚。然后下午到现在都在杂七杂八的看，配了配博客，看了看latex，看了看vim，学了学haskell，反而是感觉啥都没干，其实我还挺怕这种感觉的，挺怕时间真的将我们冲淡了，很奇怪的是，我今天很平静，异常平静，没有难受也没有开心，我不知道这是不是变淡的原因，反正时间真的在一点点冲淡吧，然后后天有考试，索性把明天的假也给请了，明天好好休息一下，有些东西也确实需要理一理。\n\nemmmm，但是说自己对医学感兴趣是骗你的，是因为我对你感兴趣罢了，但是我确实是真的耐着性子读了一半的卫生统计学，无论是简单还是难，我都耐着性子读了。在你拒绝我两次之后，那本书就放在角落接灰了。确实提不起兴趣读下去。偶尔想想自己目的性其实也很强的，emmmm，可能是功利性很强，没有用的事情就不做了。暂时还不清楚，可能等着这三周考完试之后会重新捡起来接着读？然后整理整理笔记？然后假装很早之前整理的，然后发给你？然后试图感动你？呵呵，渣男！反正现在暂时是这么想的吧。妈呀，从来没想过为了哄一个女孩子开心，我居然这么有心机，太恐怖了。\n\n哎，反正这两天想的挺多的，暂时也不知道自己在想啥，很多时候都是没想明白搞得错，反正以后三思而行吧，也不敢太打扰你了，日报今天还是决定接着发，发21天就溜了，能对你造成多少好的坏的影响我也不知道，我也不敢说这一套在你这是否是对的，只求心安罢了。\n\n### 20190506\n\n#### 20190506 10:44 AM update\n\n今天虽然请假了，还是来公司玩了会，刚喝了口水，现在开始码这段文字。\n\n这几天睡眠质量特别不好，应该是从5.1晚上开始的，可能是担心你身体状态，我应该和你说过，当时第二天我六点就行了，怎么也睡不着，也不敢给你发消息，怕你还在休息，我以为只是这个原因，现在看来不是，已经三天没见你了，但是还是基本六点多就醒了，然后也不怎么睡得着，因为队友还在睡觉也不敢起床，偶尔躺在床上会背背单词，偶尔也会想想你，偶尔也不知道自己在干啥。\n\n五点钟的票回学校，暂时还没定下来啥时候走，我应该和你说过，我不想赶路，所以一般会有预留，地铁大概是一个小时，所以我打算提前两个小时走，就算走错了，好歹还有挽回的余地。\n\n哎，其实一个人赶路还挺无聊的，还是两个人在一起比较好玩，旅途寂寞鸭。昨天给你发日报了，你还是没回我，可能是把我拉黑了？不知道，没有别的意思，只是想让你养成一个（我也不知道是好是坏的）习惯罢了。别太敏感啊。\n\n#### 20190506 03:53 PM update\n\n现在闲下来了，就等高铁了，然后就想了想之前几天发生的事，其实我还是觉得挺玄学的，首先就是失恋博物展的那个球，说好都是脱单呢，怎么就咱两是单身了，不过说的也对，12.23才考完研，今年是不指望脱单了。\n\n还有就是单车那个事，都10点四十了，还有四十分钟的路程，显然是赶不回去的啊，怎们回事啊，居然还能遇到各种单车，还有就是我为啥骑车那么慢，你真的不知道？怎么可能是因为累了，还不是不像你回学校吗。这样好歹有一晚上的时间，哪怕是纯聊聊天也行啊，你咋回事啊，看不出来？哇，就两三分钟就进不去了，你可真的赶啊，话说我还真不知道你是不懂还是装不懂，可能二者兼有，不清楚啊。但是我宁愿是前者吧。\n\n230天，我离你又进了一步，但是你退后了多少呢？\n\n#### 20190506 10:05 PM update\n\n马上就要到学校了，想到了当时去你们学校的时候，当时在你们图书馆歇息的时候，你应该是真的困了，都怪我当时不知道关心，让你受累了。现在想想当时怎么着也得让你休息休息啊。真的是迂腐之极。哇，不行了，想起的细节越多，越觉得自己是真的蠢。\n\n今天一天都在赶路，所以整个人的状态不是很好。而且也不太喜欢这种放松的感觉，但是还是不想学习。话说现在心态真的是变了好多了，今天我队友还在劝我放弃，我不知道，可能还是当局者迷的缘故，但是还是没和你说，今天还是照旧把日报发给你了，今天是第三天，还剩18天，然后就应该不会给你发消息了，让你安心考研了，考完研有的是时间不是吗？\n\n### 20190507\n\n#### 20190507 10:35 AM update\n\n229天了，今天突然有一种报复心理，我一定要让你后悔。\n\n突然想到当时和你一起听相声的时候那个哥说了一句“我对于这种人，没有羡慕没有嫉妒，只有恨”，哈哈哈，说实话，这就是传说中的由爱生恨吗？反正我现在挺难受的，突然也想让你难受一下，哈哈哈，开个玩笑。\n\n最后悔莫过于因为年少无能而放下。我拼命成长不过是为了你回眸一笑。他们说等你以后长大了会遇到不一样的人，不一样的景，而我只想记住每一个不一样的你。\n\n### 20190508\n\n#### 20190508 10:38 AM update\n\n228天。\n\n昨天晚上的时候，你终于是回复我了，说是怕我考试有影响，这件事怎么说呢，你要是早点回复我的话，我可能还会开心一点。但是还是挺开心的，好歹回复我了。\n\n昨天晚上聊了一下，应该再不会打扰你了，然后以后真有啥想说的，就更新到这里了，确实不该打扰你的，扰菇凉良久，菇凉莫怪啊。\n\n昨天你和我说，哎，算了不评价，怎么说呢，大家都在慢慢成长吧。\n\n不过有句话你说的还是挺对的，等待会让东西变质，或许应该换句话说：时间会让东西变质。没有什么可以敌得过时间。我深知我也不行，但是我觉得200+天还是不难的吧。\n\n还有就是你说的对，拒绝就应该拒绝到底，你做的很好，但是我还是很难过，毕竟当一个人真正拒绝你的帮助的时候就是真的想和你断了吧。至少没有钓着你的心思，或许我应该开心？\n\n后来仔细思考了这段时间的经历，感觉确实有些自作多情了，很多时候都是自己一厢情愿罢了。\n\nemmmm，大概就是这样了，可能真的是告一段落了，也不会找你聊天了，大家都松口气，如果真的是有缘，再见吧。\n\n当我码下这段文字，无悲无喜，甚至有一种完成任务的感觉，轻松？算不上吧。只是觉得暂时放下了一些东西，可以安心前行了。\n\n可能也和我老大说的对，他说我纯粹是大学时候没干什么，然后大学快结束了想干点什么，我不知道，当然也可能是自己飘了，觉得世界尽在掌握中，所以开始有恃无恐了。还好，你让我明白，自己还有很多的努力方向，还是不够优秀啊。所以继续努力吧。\n\n现在也不敢随便立flag了，但是还是想说一下，如果你真的准备二战的话，我就准备考研了，和你一起，哪怕你不理我，我也要强求一把。当然如果你真的考上了的话，我也要准备跳槽了，反正能近一点就近一点吧。真的是怕了。\n\n#### 20190508 12:55 PM update\n\n刚刚吃饭聊了一下，反正我感觉我还好啊，没有你说的那种腼腆的感觉，可能很多时候在想事情所以没怎么说话，或者说是很多话不太好意思说，或者是感觉说出来不好，可能你觉得我在欲言又止？或者说是“腼腆”。不太清楚，哇，第一天我可是嗓子都说哑了，你居然会觉得我腼腆。不过说真的，刚见到你的一瞬间真的是有好多话想说但是真的是，虽有千万肺腑之言，却又无语凌噎。emmmm，刚见到你的时候是在瓷房子门口，当时还挺想抱你一下的，但是当时咱们前面有一个围栏，不知道你注意了没有，然后就放弃了。哎，还是太怂了。\n\n昨天你给我发消息之后真的是好晚才睡着，本来12点钟就放下手机啦，硬是拉着舍友聊天，聊我和你，硬拉这聊到了一点半。哎，回想这几天发生的事，还是有些地方没有做好。还是有很多事挺后悔的，用我队友的话来说就是我太怂了。很多时候都过于胆怯。\n\n我脑子里突然蹦出一个词来——自卑，其实仔细回想一下，很多时候我大概都是自卑心作祟。你也说了，你觉得我很优秀，其实我一直不这么觉得，反正每次觉得自己还行的时候总能遇到一些吊人，然后看看他们的经历，然后就觉得自己还有很多地方需要努力。\n\n还有就是你觉得我把你美化了，这个不好评价，自古有云：情人眼里出西施。我不知道是不是因为某些奇奇怪怪的原因导致的。所以暂不做评价。但是真的是觉得你是个挺好的菇凉啊，一直觉得你值得世间上最美好的东西。有时候，看着你皱眉头真的是还略有难受？反正感觉你要是真能无忧无虑的生活还是挺好的。这段时间你应该是为我烦了，我也就暂时不打扰你了，等你安心考完研吧。反正这个事不急，咱们还年轻，有大把时间可以挥霍。哈哈哈哈哈。\n\n还有就是这段时间准备开始锻炼了，主要是当时第一天我们都走累了，我想了一下，要不要公主抱你，后来估计了一下自己的身体状态，还是觉得太虚了，所以这段时间准备好好锻炼一下。还有就是学习的事，这段时间我考试实在是太多了，工作时间也压得很紧，所以暂时不考虑接着读卫统了，先把考试糊弄过去再说，之前看过的一半也没有整理笔记，题目也是杂七杂八做了，没有系统的整理，还是准备从头开始读，然后顺便整理整理笔记，题目也暂时不做了。先读完再说。感觉东西不是很难，所以希望你不要着急，慢慢复习就行。现在时间虽说不多了，但是也不用太着急，估计你这几天都没有在12点之前睡过觉，还是要早些歇息为好。\n\n对了，你画的那幅画，我暂时还没有挂起来，因为房间里的那幅画是竖的，你画的是横的，不太好弄，所以准备抽时间去买个钉子，重新钉一下，然后再挂起来，不过你也别担心会弄坏了，我保存的老好了。偶尔学习累了会看看那幅画，你画的真好看，当然，你也好看。\n\n还有就是那天我真的没有占你便宜啊，我说的都是心里话，你不是也没反驳吗？我就当你默许了。反正等你考完研我就非要缠着你，和你一起准备复试。至于我考研？暂时还没定，等省赛结束之后再说吧。看省赛情况，其实吧，我还挺想省赛打的不太好的，这样就能安心学习了。感觉比赛真的已经没有了当年的激情了。\n\n还有就是舍友昨天晚上和我聊了关于感情会随着时间的延长而降低。他说如果你真是我对象，可能两个月我就没有了现在的感觉了。我不知道，但是你看你，就做的很好啊，直接拒绝了我，让我有时间去思考和解释这件事，等我想的差不多了，咱们就在一起了？\n\n说到底还是得抽时间想一想这件事，下周就省赛了，省赛结束应该会有时间思考这个问题，就这样。\n\n#### 20190508 06:22 PM update\n\n今天活干完了，现在算是比较闲了，不知道干啥了。\n\n所以就过来bb两句。这两天的状态不是很好，一部分是舟车劳顿的缘故，另外一部分原因就是突然有了迷茫的感觉：突然不知道了自己真正想要的是什么。是工作？是考研？是恋爱？我不知道，一直以来都很讨厌这种感觉，不知道自己想要什么可能是一种病态的迷茫，也很容易变成空洞的人。其实我还挺羡慕你的目的性的，能知道自己想要什么真的是一种很好的状态。它会至少让你有个目标，然后剩下要做的就很简单了，细化目标，完成目标。\n\n好像说这些在这里不合适，说一点和你有关的。\n\n你说我很多时候能一眼看穿你，emmm，这件事怎么说呢，我的解释是，咱两有天然的默契，这种默契与生俱来，不用培养，不用磨合。我最爱的就是这种状态。我一直以为这种情况是天作之合，很少有人能这样默契吧？这辈子能遇到一个真的很不容易，或许没了这份默契就不那么喜欢你了？我不知道，但是我是真的喜欢这种默契，你也知道，我情商很低，说明咱两都没耍心眼，所以这种与生俱来的默契难道不值得被珍惜吗？反正我是不打算就这么错过了。他们说这种默契，一个人一辈子会遇到很多，我不信，真的不信。反正这一次，我一定要抓住。\n\n#### 20190508 7:24 PM update\n\n他们说的其实挺对的，人啊一旦忙起来什么都忘了，所以当时他们劝我忙起来就好了，这几天确实渐渐忙起来了。但是偶尔还是做事做到一半被打断，然后就神游太虚了。。。当然也可能是还不够忙。就是偶尔闲下来连个聊天的人都没有，还是挺难受的，之前还能和你聊聊天，现在都不敢给你发消息了。就这样吧。真有啥想说的，我就写这里了。\n\n其实我一直都没想好 自己到底为啥要写这个东西，或者说写这个东西的目的是什么，虽然不怎么花时间，一天大概也就半小时，但是确实不明白写这个的目的是啥，写给50年后的自己看？那也太矫情了。还是写给228天后的你看？那也太无耻了。暂时没想好，只是单纯的觉得，能遇见你还是一件挺幸运的事，挺值得怀恋和回忆的事，所以就这样记录下来了，就算以后真的不能在一起了，想到以前喜欢过这么可爱一个菇凉，也是一件随时回忆起来都能让人开心的事吧？\n\n#### 20190508 11:30 PM update\n\n还好当时没有公主抱你，突然感觉自己好虚啊，不行了，接下来一段时间准备好好锻炼一下了，等下一次见面给你一个惊喜，到时候抱你没跑。\n\n### 20190509\n\n#### 20190509 09:19 AM update\n\n今天早起了，背了会单词，然后就来公司学习了，复习时间就剩下今天和明天了。\n\n早上的时候看到公交车让了一个老人过马路，不禁想起了我从天津回来的时候，当时晚上11点多了，我其实还挺累的，当时我后面是一对夫妻，带着两个孩子，两个孩子都睡着了，当时因为你拒绝我，我真的挺难受的，犹豫了一段时间还是让他们排在我前面，当时我想了好长时间，我都这么惨了，为啥还要对世界抱有善意？再后来，也就是上周考完试了，我回北京的时候，当时我身上还有一点现金，北京地铁现在好像还不让用微信？反正一个人在那干着急，想了想还是帮助了一下。我真的不清楚，为啥自己还要对陌生人抱有善意，真的是，自己过的就已经够惨了。后来想想还是为自己积福吧。所以我就想啊，我都以德报怨了，你总不能拒绝一个商量的小男孩吧。\n\n今天北京天气很好，早上八点钟就已经有了太阳，真的很想出去逛逛，后来想想一个人还是挺无聊的。突然想到了当时给你打伞的日子，哈哈，我记得当时有一段时间，当时人流拥挤，你头都不回就往前冲，哇，当时还是太怂了，当时就应该拉住你，让你等等我的，后来好像因为打伞不及时被你吐槽了？哈哈，感觉你当时委屈的抱怨的时候的样子真的很可爱。哎，当时太直男了。\n\n#### 20190509 07:22 PM update\n\n今天和一个考研的神仙聊了一下，他说我不该五一的时候去找你玩的，他说这个时候大家都开始准备考研了，我这样做，非但没有帮你解决问题，反而是抛给你一个问题，让你困惑更多，尤其是我那些若有若无的帮助更是显得愚蠢至极。我其实觉得他说的挺有道理的，我并不知道考研原来压力那么大，我其实一直觉得考研和期末考试没啥区别，看来是我年轻了，很多时候都把事情想简单了，尤其是想得到你的回应这件事上，真的是蠢了。\n\n仔细想了想确实不该这个时候去打扰你的，我还天真以为这对你不会有啥影响，今天才明白过来确实是副作用更大一下。但是我还是希望你压力不要那么大，还是要放轻松一些的，这段时间感觉你睡觉都挺晚的，一点钟还没睡觉，感觉这样还是对身体不太好，建议你每天早睡一点，毕竟晚睡了早上精神会不好，你们又都是需要背书的课，晚睡学习不如早起学习。\n\n其实每天都有好多有意思的事情分享给你，但是实在是不忍心打扰你，很多东西又不太好记在这里，所以很多都写成了日记，等你有机会了，到时候咱两可以一起读读？\n\n还有就是，我其实不怎么想告诉别人咱两之间的事，没有别的意思，一是咱两毕竟还没成不是，还有就是很多人问起来给我一种听故事的感觉，不像是帮我分析问题的样子，让我有一种”我有这种经历，我是不是很厉害“的炫耀的感觉，这种感觉让我很反感，不知道为啥，这种感觉会让我觉得，这份感情变得不那么纯粹了，就像一个小孩在炫耀自己的经历一样，幼稚而无趣。\n\n#### 20190509 07:57 PM update\n\n刚刚吃完饭，突然想到一件事，突然就难过起来了。\n\n就是五一期间的时候我们吃饭都特别早，所以刚回北京的时候我六点钟就饿了，但是这才六天过去了，我的作息又和公司一样了，可能这就是人们常说的时间会磨平一切？慢慢的，你给我造成的影响会渐渐的淡化？真的还是挺难受的，就像你留给我的东西，被别人抢走了一样。偏偏我还不知道能做什么才能留下你留给我的东西。真的很怕，有一天再听到你的名字，没有了现在这种心慌或者说是心动，反倒是无悲也无喜。\n\n### 20190510 \n\n#### 20190510 08:45 AM update\n\n今天还是这个点起床了，昨天锻炼有点过猛了，现在浑身酸痛。。。。早上六点多醒了一次，一度怀疑自己手断了。现在就像被人揍了一顿一样。。。。\n\n早上刚醒的时候仔细思考了一下，目前知道的人有：我两个现任队友，一个前队友，父母。果然是每个人注意点都是自己的利益问题，现队友给的意见是，别浪费时间，不值得。前队友给的意见比较中肯，让我想好，想好了就别放弃了。父母啥都没说，他们也没说啥，就是怕我想不开。同样的道理，我也听取了对自己有利的方向而忽视了现队友的意见。\n\n还记得我和你说的吗？一旦有些东西涉及到了利益问题，就会少很多人情味，尤其是工作以后，感觉大家看待问题的方向都很不一样了。昨天前队友和我聊了一下，他的意思是，他从来没有为自己而活过，都是按照别人的想法来做事。然后我就发现，我还是挺幸福的，我一直以来都是啥开心做啥，暂时还没人约束过我。以前觉得读书有意思就好好读书，不怎么玩。大学觉得比赛有意思就不怎么学习，学习很差。真的想不到，自己有一天会需要顾及方方面面而变得畏畏缩缩的时候，该是何种可怕模样。\n\n#### 20190510 05:31 PM update\n\n突然发现，说我变腼腆了，好像不止你说过，虽然我很不想承认这一点，但是好像很多之前的同学都这么说，让我不得不思考这个问题，可能这几年过的过于漫长了，让我已经不记得我高中时候的样子了。或者说我高中的时候很膨胀？记不清了，可能是自己的感受，自己的成长，自己的变化反而自己不太了解吧。话说我高中的时候确实很膨胀，感觉一切都在自己手中。可能是大学时候认识了太多神仙了，就已经不敢过于高调了，很多时候反而是低调再低调。感觉自己还有很多不会的东西，所以一直在努力学习吧。\n\n还有就是我把你画的画拍成了照片挂在公司内部聊天软件的头像上，他们都说挺好看的，那是，不看是谁画的。。。。其实准备换成qq或者微信头像的，想想还是算了，你能看到，不想影响你的心绪了。给你时间吧。\n\n还有关于你说我说话风格很像山东人，这件事怎么说呢，感觉与其说是山东对我的影响很大，不如说是山东学长对我的影响很大，因为很多时候都是待在实验室，待在实验室的时间应该不少于在宿舍的时间，这还是算上睡觉的时间的情况下，所以我说话的风格应该是更偏向于实验室学长的风格。至于这点滴的潜移默化的变化，我还真感觉不出来。反正感觉自己一直都是这样。\n\n#### 20190510 10:02 PM update\n\n明天就溜了，要回学校打省赛了，希望好运吧，还记得去年的时候省赛冠军，当时老膨胀了，总感觉世界在我手上，没有我搞不定的事，后来就慢慢放弃了这个无知的想法。突然想到了我之前和老大说的一句话，有异曲同工之妙--\"世间上任何问题都可以转化成数学问题\"。直到你拒绝了我好多次，我才渐渐明白过来，很多东西并不是那么简单的问题，不是我能掌控的，也不能转换成数学问题，他没有固定的公式，更没有通用的解法。因人而定，因事而转。\n\n嘿，说真的，我一直以为，我会悲伤好长时间，但是不知道为啥，我就这么快想开了，突然就不难过了？反正这几天还是挺开心的，偶尔搞搞问题，偶尔和组里人开开玩笑，但是偶尔沉寂下来的时候才会感到悲伤。这可能就是我喜欢晚上而非闹市的原因？“黑夜给了所有人黑色的眼睛，他们用来寻找光明，而我用来寻找你的美”。现在唯一感到遗憾的就是当时你画画的时候没有偷拍你。让我只能在回忆里寻找你。\n\n226天，此去经年，应是良辰好景虚设。\n\n### 20190512\n\n#### 20190512 11:14 PM update\n\n今天是母亲节，刚打完省赛，刚到学校，估计老妈已经睡了，不敢打扰，就偷偷来更新一点。\n\n今年省赛，果然还是没有打冠军，最后第五了，不行了，老了老了，精力不敌当年了。说到底还是缺少一点锐气，很多时候还是考虑太多，或者说是顾虑太多了。不过也从侧面说明了一件事，世界不是掌握在我手中，很多东西暂时还是不能掌控的。然后认真考虑了一下关于考研的事，这件事听的意见有点多了，反而自己没有搞清楚，然后你说想上中山大学医学院，然后了解了一下，感觉中山大学计算机学院还是挺强的，现在唯一的难点就是初试了，感觉只要初试过了，复试不是问题。大多数时候还是感觉自己很菜，但是好像是在一个不怎么激烈的范围里面，好像有点安逸了。温水煮青蛙，最坏莫过如此。说到底还是很多东西没有勇气舍弃罢了，工作也好，比赛也好，搞钱也好，很多东西让我迷醉了，尤其是在一个自我感觉良好的氛围里，感觉好多时候甚至不想努力了。还是很危险的。\n\n感觉还是要安心下来正儿八经搞件事，这学期算是废了，肯定是要搞到正式offer的。然后就差不多到了暑假了，然后看情况暑假是回学校比赛还是安心准备考研了。主要是还没想清楚，自己读研到底是为了学知识，还是为了接近你？感觉这个事情还是需要想明白，不然很多时候感觉可能会努力错了方向。反正学习这种事来说，感觉还是欠缺很多，很多东西都没有系统的学好，现在想捡起来又感觉时间不太够，感觉还是自制力不够，是像我说你的一样：执行力不足。当时我和你说的是真的，没有人的执行力很强，执行力强的人都遇不到，说到底人还是一个很懒的动物。毕竟懒是第一生产力嘛。\n\n224天，一念起，万水千山。\n\n### 20190513\n\n#### 20190513 07:54 PM update\n\n今天早晨起床，差点没反应过来，恍如隔世的感觉，真的有那种黄粱一梦的感觉，感觉一切都是假的，去北京市假的，去找你也是假的，只是做了一个很真实又很虚妄的梦。\n\n 其实大多数时候应该是，觉得自己实力还行，但是没有得到预期的结果的一种心有不甘吧。尤其是大家都是优秀的人，都觉得自己是掌控世界的一群人，如果真的违背预期的话，总会有点失落或者不甘心的感觉吧。只是这种期望长时间得不到满足的话，往往只有两种结果？对心爱之人的刻意美化或者恶意丑化？哇，不行了，感觉可以抽时间拜读一下弗洛伊德的巨作了，总感觉会受到启发。\n\n总感觉这几天心太浮躁了，对事也好，对你也好。总感觉不够冷静和理智，容易冲动。不太清楚是不是这两周堆的事情太多的缘故。其实仔细想想，自己还挺自私的，很多事情自己都没有想清楚，然后就说了，总感觉是不吐不快，但是很多时候都是自己爽完了，然后就不管了，总感觉自己能收拾好自己处理的烂摊子，但是想想到现在都还是总用事情很多这种破借口，没有时间理清这件事。不知道是怕想清楚之后拿到了自己不想要的结果的不甘心，因此一直在逃避结果，还是自己真的很忙，所以找不到时间。可能前者居多？\n\n溜了溜了，这两天身心俱疲，不想多说了。就这样，希望远方的你遇事不急，早睡早起。\n\n223天，世间有两苦，一是得不到之苦，二是钟情之苦。\n\n### 20190515\n\n#### 20190515 00:20 AM update\n\n已经是第二天了，晚上11点多的时候才陪舍友吃完饭。\n\n昨天这个时候和我妈妈聊了一下，我妈妈对你还是挺满意的，我就和她说，你对别人菇凉满意没用啊，别人菇凉不中意你儿子啊。不过说真的，我妈妈好像真对你挺感兴趣的，你要不考虑一下今年过年和我一起回家？\n\n然后今天晚上准备给你电话的，然后尝试给你发了个消息，大不了你再拒绝我，我明天就以喝多了为借口呗。但是你好像直接没鸟我了。。。emmmmm，想说的话就被憋回去了。其实也没有啥大不了的事，就是这段时间很多问题没有想清楚，所以想问问你的意见，但是你好像不怎么给面子啊。不知道，估计以你的个性，明天可能也不会回我？其实有时候感觉你还是挺好的，至少没有掉着我啊。\n\n然后我妈妈好像还是挺激动的，反正一直催我去撩你，说什么，有时间就关心关心人家，给人家尽可能的帮助啥的，反正给我的感觉就是，你要是来了，你就真是她闺女了，但是我是不是真儿子，那可不一定。然后我爸爸的话，不用考虑，我们家里人都挺好说话的，再说了，有我罩着你呢。不对，按照我妈妈这个态度，应该是你罩着我才对，哈哈哈哈哈。\n\n突然想到我的耳机到了，但是明天才能用到，然后今天去网易云音乐上去看了一下，《空空如也》这首歌，不知不觉已经听了500多遍了，还是略恐怖的。人生寂寞如雪啊。\n\n对了，今天不想学习主要是有一个比较奇怪的原因。从我读大学到现在，我一共有三件事让我可以奋不顾身，宁愿抛弃一切都要做，第一就是我想做一个特效爆炸的游戏，不好玩也无所谓。这个想法是大二的时候，真的是让我魂牵梦绕，让我想了好长时间，第二就是想去见你，那是来了北京之后的想法，让我很多时候都不能集中精力搞正事，直到五一，我和你说的都是真的，我是真的觉得一切都值得。无论是你想做什么，我都愿意陪着你。然后今天突然有了第三件事，我想来一次说走就走的旅行，今天看了一天地图，一直在想去哪去哪，但是具体的旅行地点还没定下来，不过抱歉的事是：这个计划没有你，本来想完之后说要不要计划加上你，后来想想太矫情了。这个计划没有你，我只想一个人看最美的景，当然如果那个时候你能在我身边的话，我会更开心。计划还没计划好，估计应该是12月份左右开始执行，应该是11月之前会规划好，到时候做两份计划吧，看你愿不愿意。\n\n#### 20190515 07:53 PM update\n\n上午就是纯赶路了。大概中午到宿舍，洗了个澡就去公司了。今天一整天都不是很舒服。\n\n昨天晚上的时候，我和你说过了，我陪舍友吃饭了，当时喝了点酒，当然没醉，尝试着给你发了个消息，但是你没回复我，今天早上你说你是睡着了。其实吧，昨天没有啥别的意思，就是想问你点事，让你给个意见而已，但是你好像兴趣不高，所以就没打扰你了。其实就是想问问你，觉得我到底是考研好，还是找工作好，还是打比赛好，自己现在没什么主见，问了问老妈，好像也没改出啥建设性意见，所以准备问问你，但是你好像是睡了。就算了。估计你八成是想我读研，所以想问问你读研的话啥时候开始准备比较好，因为目前一段时间还是比较忙，暂时是没时间开始准备，舍友的意见是不急，暑假开始准备就行了，反正他们对我的信心比他们对自己的信心都足，不知道是为啥。\n\n还有就是今天发工资了，准备换个手机了，但是还有点舍不得，微信暂时没有不同设备登录，聊天记录同步的功能（还是说我没找到？），所以换了手机之后可能聊天记录都没了？所以我今天翻完了我们所有的聊天记录，然后截图了，看今天晚上拷贝一下，感觉还是一个挺美好的回忆的。然后觉得比较过分的就是为啥聊天记录都是我一个人在发言呢？反正基本都是一片绿，然后见着一点白。哇，难受。可能是我手速比较快的缘故，感觉不见得，你好像挺不想和我分享每天发生了啥一样。我这个人就这样，闲不下来，反正只要是有趣的事都喜欢分享给你，但是你很多时候好像是不感兴趣，所以没怎么回复我，假装你是忙吧。也只能这样安慰自己了。\n\n221天，万物皆有其时，耐心等待。\n\n### 20190516\n\n#### 20190516 10:00 PM update\n\n今天头疼了一天，应该还是没有休息好的缘故。\n\n昨天开始渐渐开始给你发消息了，不然我是真的怕有一天把你忘了。说心里话，我不知道我到底是需要一个倾诉的对象还是对象。可能是前者居多？因为我很少主动开启一个话题，所以不怎么喜欢找人聊天，所以很多时候有些事都不知道找谁说，所以个人觉得还是更缺少一个倾诉的对象？不过我觉得现在的状态挺好的，每天和你分享一点或开心或难过的事，也不算太打扰你？但是还是和以前一样吧，都是我输出较多，你还是很少回我，但是我还是很开心啊啊啊啊啊，真的很怕你不理我了。\n\n今天看了一下，如果你决定读研读中山的话，我就准备考虑华南理工了，感觉考上不是很难，而且看了一下知乎，都说华南理工的就业氛围很好，所以可以考虑读一下，然后我们组的一个人说，读中山啊，中山妹子多，可以给你压力，哈哈哈哈哈，不知道啊，问了一下舍友，他们说这两个学校的考试难度几乎相当，所以暂时还没决定，应该是今年暑假就开始准备了，暑假感觉可以回一波家，感觉还是更倾向于考研吧，暂时还是不知道队友之间的态度，感觉大概率会玩完，所以更倾向于读研。今天和组里人聊了一下搞钱的事，他们都说读研好，搞钱不急，而且前几年基本是搞不了多少钱，就算搞到钱了也存不下来，所以暂时不考虑这个，但是如果能转正的话，不是不可以考虑一波，但是看老大对我的态度，大概率不会成功，所以暂时更倾向于考研，但是还没定下来，这周六感觉可以考虑一下具体的想法。或者这周二考完试，下午的时候好好想想。\n\n这周开始就继续锻炼了，对了，看了一下前两天你的体测报告，感觉很厉害啊，不行了，我也要好好锻炼了，话说5.1那段时间去玩的时候我脚上磨了一个泡，前两天才消下去，太虚了。还是缺乏锻炼了，还是因为怎么吃都不胖的缘故，这段时间就疯狂的偷懒，感觉最近越来越虚了。反正现在要好好锻炼了，怎么说也得公主抱吧，不能太虚了。下学期应该是回学校了，有时间锻炼，但是我健身教练的舍友好像要全身心考研了，感觉不会带我，到时候看情况是拉队友过去，还是自己锻炼，其实我觉得吧，做事这种东西，一个人做永远是最无聊的，虽然多个人效率不一定高，但是一定是不容易累的，老话怎么说来着？男女搭配，干活不累。说真的，五一那几天我是真的不累，3号的时候其实就是想故意气气你，我生气了，哈哈哈哈哈。你都看出来了还不哄哄我，难受，居然还让我去买水？居然想支开我，你也太坏了。\n\n还有就是那天晚饭的时候，我一直叫你“小老弟”，你好像挺反感的，没有别的意思，只是觉得这个称呼很有意思而已，而且那个时候感觉叫你啥都不好啊。总不能继续叫你“小姐姐”吧？\n\n220天，既然不好意思说晚安，那就祝你晚不安，最好今夜有梦，梦里有我。\n\n### 20190517\n\n#### 20190517 10:30 AM update\n\n刚刚去水了一发日记，感觉还是挺惭愧的，日记是真的一天不落全都有，但是这个故事还断了几天，看了一下，大概是省赛少了，还有就是那天准备复习和陪舍友喝酒少了。现在日记被彻底拆成了三部分：工作日报，这个故事，生活琐事。等离职之后可能工作日报和生活琐事并一下，但是这个故事还是单独成为一个故事吧，以为觉得这个是真正值得回忆的事，而不是记流水账。\n\n其实这两天仔细考虑了一下，你其实应该不是没有看懂暗示，而是假装没看懂暗示。更多的时候你应该是不想看懂，假装看不懂，然后就可以搪塞我?还是说你觉得我脸皮不够厚，不敢瞎说话？可能让你失算了，我最后还是捅开了，但是好像努力错了方向，最后搞得大家都不怎么愉快了。emmmm，其实我觉得这样还挺好的，至少比你看破不说破好一点，这样大家长痛不如短痛啊。我也没有一下乱七八糟的小心思，你也可以安心考研了。就这样独自安好了。\n\n#### 20190517 07:52 PM update\n\n不行了，今天晚上实在忍不住了，想和你商量一下关于明年的安排。emmm，用自己不知道未来的想法去寻求你的帮助应该不算过分吧。感觉还是不甘心在作祟。还是想挣扎一下？因为这两天实在是太忙了，所以今天想早点走了，因为明天就放假了。所以现在开始动心思准备出去玩了。明天看情况出去逛逛。\n\n这段时间渐渐忙起来了，主要是因为现在考试也告一段落，剩下的时间比较多，以前的时候有时间就摸鱼，现在不怎么想摸鱼了，一来是感谢老大的栽培，二来是想让自己忙一点，别天天去想一些乱七八糟的东西。你看，现在随着时间的推移，我对你忘得越来越多了不是？很多东西都想不起来了。还是说不想想起来？\n\n话说第一天的时候，当时逛瓷房子的时候我还是挺不开心的，这种时候难道不是应该两个人找一个幽静的咖啡厅，然后一起老朋友叙叙旧吗？说真的，当时逛的时候直接把我准备好的好多话憋回去了。。。。本来想找个地方聊会天的。。。。然后以为中午有机会，结果你也知道了，中午的时候不止两个人，说真的吃饭那个地方环境还挺好的，多适合说心里话啊。不过我当时想啊，我有的是时间不是吗？所以不急。结果不急不急就真的没机会急了。\n\n219天，愿你贪吃不胖，愿你懒惰不丑。愿我的深情不被辜负，愿我的余生都有你陪。\n\n### 20190518\n\n#### 20190518 04:49 PM update\n\n昨天晚上给你打了个电话，咨询了一下关于下半年到底是考研，工作还是打比赛的问题。但是你好像兴致不高，其实吧，你要是明确给出一个意见，我一定会去做吧。我是真的不知道到底怎么选，不是故意找个由头和你打电话的。你最后好像也只是帮我干掉了一个选择：就是不要去工作。然后你好像是更倾向于比赛，其实你这样说我反而是更倾向于考研了。如果你中山大学定下来的话，我就可以着手准备考西南理工大学。然后就问了你一下中山定下来了没有，但是你好像还是在动摇，所以这件事就暂一搁浅了。\n\n我还是那句话，感觉很多事情还是早早定下来比较好，我这段时间就因为思考各种利弊关系搞得我很焦虑，很多时候甚至不能安心思考了。但是我现在应该没有资格去给你出主意了，毕竟我自己都没有想好到底选什么，甚至去你那里问想法了。\n\n今天又刷了一遍大鱼海棠，我以为我会有啥感同身受的感觉呢，结果还是那样，别人的故事毕竟是别人的故事吧。不过有句话还是挺打动我的：\n\n\"生命是一场旅程。我们等了多少个轮回，才有机会去享受这一次旅程。短短的一生，我们最终都会失去，你不妨大胆一些，爱一个人，攀一座山，追一个梦。\"\n\n这种事怎么说呢，其实大多数人是没机会追寻自己的梦的，很多时候还是不得不屈服于现实不是吗？更多的时候是人力不可抗的因素，就像你现在不喜欢我一样，可能越努力越反感了？或许现在唯一能做的就是偶尔找你聊聊天，听听你最近一段时间的吐槽，给你出一两个狗头军师的意见。但是你好像不怎么有兴趣找我聊天，一般都是我主动的多。可能还是对我戒心比较大？\n\n218天，命里有时终须有，命里无时莫强求。\n\n### 20190519\n\n#### 20190519 09:33 PM update\n\n今天和你聊了一下关于晚睡的问题，其实一直以来都想说，你好像睡觉一直挺不规律的，我是真的觉得作息不规律对身体很不好，虽然我也没有每天早睡，但是基本都是12点之前睡觉了，太晚睡真的是对身体不好，不仅是休息不好的缘故，反正整个人的精力都不好了，一天都会没有精神。还有就是这个年龄段，尤其是在学校的日子，没有什么事是值得你为之熬夜的。至少我目前还没发现什么事是非要我晚上之前搞定的，第二天干就会出问题了？\n\n还有就是你说你在学校发现了一个地方写有你的名字，我居然没有吃醋鸭，只是觉得挺有趣的，因为有一个人暗恋着你，还不敢偷偷告诉你，还居然是舍友先发现的，这就太尴尬了，当然不排除有个男生写了告诉你舍友了。然后试探试探你的态度，但是我是真的觉得很有意思，反而没有吃醋的感觉，可能是对自己有足够的自信？当然还是挺羡慕你的，其实有一个人在背后默默祝福你的感觉真的挺好的。\n\n然后你就开玩笑说下次去青岛给我写满，我是真的当真了，就像我说的，虽然下一次不知道是什么时候，但是只要有下一次，多久都值得不是吗？到时候你可别赖账啊，不写满不准你离开我了。\n\n217天，我们都足够成熟，也足够理智，没有人愿意用自己的感情和青春去赌个不确定的未来。但因为那个人是你，所以我愿意。\n\n### 20190520\n\n#### 20190520 10:40 AM update\n\n今天出门的时候，阳光正好，微风不热，一切正如刚见你时候的样子，真的很美。我刚去的时候，我是真的有说不完的话想和你说，但是啊，你真的是没有怎么回应我，导致我阻塞了。所以啊，想念这种东西，还真不能是单向的，不然啊，就像负重前行，总该是会累的吧。\n\n#### 20190520 11:05 PM update\n\n明天考试，我还没开始复习，但是我还是更想和你说话，不想复习。\n\n今天是520鸭，真的很想和你说话啊，但是又怕你戒心太重了，就没怎么和你说话，就是吐槽了一下今天网易云给我推荐了一堆情歌，评论全是别人的甜美爱情故事。你好像只是单纯的同情我，哇，这个时候不应该是咱们偷偷做一天情侣吗？你要是真的这样说，我说不定真的会把票退了不考试了，直接去找你玩，算了，还是自己想想就好了，别想多了。这段时间咋回事啊，天天做白日梦啊。不过真的想和你谈恋爱啊啊啊，哪怕一天也好啊。你想做什么都行，我都可以陪着你，想到只要可以静静看着你，就很开心了。\n\n还有就是那天画画的时候，我不是觉得无聊了，而是我困了，那天睡的挺晚的，没睡好，但是又不好意思睡觉，早上又很早就醒了，然后睡不着，一直在想前一天晚饭的事，所以下午的时候很困了，真的不是无聊了。哇，我当时累的不行了，就想休息一下，但是还是想和你说话，结果你居然让我去买水。当时真的是被你蠢哭了。但是莫名觉得你还挺可爱的？这段时间没见你了，也没有理由找你要照片，所以更多的时间就去看那幅画，不管怎么说，也是你几个小时的战果啊。最后我还是没给他挂起来，我怕弄坏了，万一不小心刮花了我心都会碎的。\n\n216天，深深的话要浅浅的说，长长的路要挥霍的走，大大的世界要率真的感受。\n\n### 20190522\n\n#### 20190522 10:48 AM update\n\n昨天和前天都找你聊了会天还挺满足的？今天好像是我妈生日？感觉今天该打个电话回去了。\n\n214天，网易云里面的评论有999+，我也不敢打出你的名字。\n\n### 20190523\n\n#### 20190523 12:30 PM update\n\n今天突然听到了《好久不见》，感觉真的好久不见了，甚是想念，现在学校的事情算是终于搞定了，现在可以安心搞其他的事了。这段时间算是真正忙起来了，每天都是干不完的活。\n\n对了，关于上次你说高考考完数学后我对你说了什么话，我是真的忘了，你说的对，只有自己会记得自己说过什么，我去问了李思慧一下，她也不记得了，看来这彻底成了你一个人的秘密了。我这几天都在努力的回忆，如果有这件事的话，我大概想起来了一部分，当时我们是在一中考试的？而非孟宗，然后我们都是从小学那个门口出来的，然后你是在那个上坡的时候哭了？然后我无非就是可能说了两种话：要么是嘲讽你了，要么是安慰你了，以我高中的尿性，应该是带了嘲讽的安慰，多半是会说：没事我考的比你还差，我都没哭，你怕啥啊？类似的话。因为我记得我语文考的更差，所以可能说了一句我作文都跑题了，你怂啥啊。应该就是类似的话吧。反正感觉顶多是用让你很不爽的话怼你了，让你暂时忘却了考的不好的悲痛？其实回头来看，你都比我考的好多了。\n\n而且你看，当初我们拼命挣扎，痛的撕心裂肺的事现在看来还不是淡然了吗？你现在回忆起来还是有意思居多吧？反正我觉得吧，考试这种东西，努力了就好啊，别太心急。\n\n然后就是这段时间考研的事了。我舍友这段时间又吵架了，反正我不在就闹腾起来了。其实在我看来九成九是因为考研的事，我才渐渐知道，考研的人压力是真的大，所以这段时间我都只敢和你分享有意思的事，看出你有心情不好的时候就安慰你一下。\n\n还有就是关于你刷微博的事，你说你是喜欢做一个倾听者，实际上我觉得是因为你已经是个消费者，而懒得去做生产者，以至于很多时候你甚至不能好好的表达自己，但是没时间去改正，所以你现在都是喜欢听别人的故事。所以啊，我得配合你啊，我就老老实实给你说我发生了啥啊，至少这样我们两个人之间没那么无聊啊。\n\n213天，这一生，我会遇到一切比你都好的，但我已经没有精力，不顾一切去再爱一次了。\n\n### 20190524\n\n#### 20190524 10:19 AM update\n\n今天早上奇哥和我说他失恋了，这次是真的，这让我不得不开始思考一个问题，我是不是恋爱绝缘体啊。为啥我周围的人都失恋了呢？巨难受。其实我想的更多的是他失恋的原因：他对象想要结婚了，但是他现在处于上升期，至少是两年之内不可能结婚的。说到底就是我给不了你想要的，所以不如就此别过了。当他说完这个事实的时候，我也跟着挺难受的，让我想起了我初恋，当时是同样的情况，我给不了她想要的，所以大家就此别过了。现在回头来看，只能说是挺可惜的。\n\n其实，当时犹豫了很久才去见你是同样的问题，就是怕自己没有放弃一些东西的勇气，所以一直不敢见你，当我下定决心了之后，还是被你拒绝了，其实，无论是比赛还是考研还是找工作，我都拿得起，为你我也确信自己放得下，但是你都没有给我机会去证明这一点，还是有点难受的。他们说：这辈子最后悔的一件事就是，在错的时间遇上了对的人，但是却没有能力或者说没有勇气去抓住。我们应该就是这种情况，说到底我其实还是没有准备好吧。自认为自己掌控着一切，可以随便牺牲，在哪个方向都能做到很出色，但是实际上却不是这样，很多时候还是太怂了，很多东西不是说放下就能放下的。\n\n我后来才渐渐明白，我身上承载的不仅有我的梦，还有很多人的期许。虽然说我做不到背叛全世界，但是我真的愿意去争取听从你的意见，所以大多数时候我还是挺想听听你的意见的，但是从上次就可以看出来，你不怎么想给我意见。其实我还挺倾向于考研的，但是队友失恋了，很可能就能安心打比赛了，所以又陷入了一个个不确定中。就这样了，上次说过了，这种问题得不到答案的时候，反复思索只会陷入焦虑。今天和队友聊一下，倒时候再决定吧。\n\n#### 20190524 04:51 PM update\n\n刚刚和你聊了一下，关于谈恋爱和结婚的事，我们好像持有一部分不同的观点，可能是我经历稍多一点的缘故吧。\n\n不过让我真正感兴趣的事是你发给我的表情包，哇，真的想不到，你会用这种表情包，简直人设崩塌啊，是真的，哇，你可是小仙女啊，怎么能用哪种表情包呢？然后就奶了你一句，然后就赶紧跑了，哇，说真的，现在突然有了一种恋爱的感觉，彻底不想干活了，翻来覆去看了两三遍记录才平静下来。啧啧啧，不得了不得了。\n\n#### 20190524 05:24 PM update\n\n不过话说回来，恋爱这件事对于20出头的年轻人来说真的是一件很奢靡的事，但是对于女生来说是一件不得不考虑的事，现在回想起来还是挺残酷的。但是我还是没办法给你承诺不是吗？毕竟我自己对自己都没有多大的把握，谁知道未来会发生什么呢？可能真正让我着迷的是那一瞬间的欢乐？但是你知道这种欢乐是不能过一辈子的不是吗？我觉得如果不考虑清楚自己喜欢的到底是什么就草草的说喜欢，草草的给承诺会显得很可笑。\n\n其实吧，让你和自己谈恋爱，何尝不是我自私了呢？何尝不是为了怕你有一天累了，却没有找到我，被别人乘虚而入了，所以让你自己一个人罢了。哇，太有心急了。但是我是真的想：当你想恋爱的时候，想到的是我。\n\n212天，“归属感”是你强烈地想和他在一起。 “安全感”是你觉得他强烈地想和你在一起。 “幸福感”是彼此都强烈的想在一起而最终走在了一起。\n\n我想要“幸福感”呢，对，和你！\n\n### 20190526 \n\n#### 20190526 10:15 PM update\n\n好吧，昨天看来是太累了，又没有更新。我还挺怕我现在的状态和写日记一样，马上就没有动力了，甚至是没有感觉了。你看，我现在开始都为自己找借口不写这个玩意了。你说再过两百天，我回头看这个东西实际上只更新了十来天，会不会嘲笑自己当初的想法呢？我不知道。\n\n对了，在偷偷懒了好几天之后，我今天终于下定决心去健身了，但是我真的是太虚了，跑了大概五公里就不行了，啊啊啊啊，好难受啊，说好到时候见你的时候一定要公主抱你，感觉离目标还有好远啊啊啊啊。不行了，以后每周我要保证运动量了。\n\n对了，我想起来了上周的时候，我舍友和我说，让我这段时间学一个技能，为了你学个技能，无论什么都好，最好是乐器什么之类的，说到时候表白的时候一定会用到，我想了想不是不可以整一个，到时候看一下，感觉可以安排一下，然后突然就想到了吉他，这段时间考虑整一个了，手机什么的去他妈，暂时没时间想了，然后，你不是说你学过一段时间放弃了吗？我感觉我学会了也可以教你啊，但是不知道时间成本如何，因为毕竟还是拿不出来整块的时间，尤其是拿不出正常时间的整块时间，毕竟我不能10点下班，11点洗完澡之后开始学，你说是吧？早上的话实在是太懒了，感觉后续可以利用一下。\n\n还有就是，当初买耳机说是为了早上背单词，不吵舍友，结果后来就忘了，感觉还是自控力不够啊。而且这几个月接触的东西有点多了，感觉心有点杂了。还有就是上次说的端午节的事，当时的想法是端午节回一次家，就是湖北，但是看了一下路线，时间点都不是很好，然后票价也不是很便宜，所以暂时不考虑回家了，但是显然是不能找你玩了，所以暂时还不知道干啥。看情况约一下呗，然后现在在北京的四小只应该除了我都可能回家，所以暂时还没有安排那几天干啥。\n\n从下周开始应该就是独立干活了，可能还要自己去和pm吵架，所以可能会更加焦头烂额，不知道会不会以此为借口不更新了。感觉这段时间工作还是挺煎熬的，每天都不知道自己干啥，反正只想搞一些自己感兴趣的东西。哎，必然是没有和你一起玩开心啊。\n\n~~然后这两天回想了一下，好像当时和你一起出去玩的时候，你好像并不开心，还是说你在学校都是这个样子？不怎么爱笑？感觉都是我一个人在那里傻开心。~~哎，还是太矫情了，可能以后我看到这段会删掉吧，暂时先加个删除线。好了，没啥想说的了。就这样，晚安。\n\n今天又听了一遍《风花雪月》，自己写了一段。\n\n风是你的头发抚摸我的脸庞的痒，花是我初见你时惊为天人的笑靥，雪是我进不去的你洁白无瑕的心，月是不曾一起走过的世间的美景。\n\n210天，风花雪月，就是我想和你谈个恋爱。\n\n### 20190527\n\n#### 20190527 05:30 PM update\n\n今天看到了一句话，我不知道说的对不对：当一个女孩拒绝一个男孩后，通常男孩会更加难以放弃，不为别的，只是单纯的不甘心。\n\n嘿，别说，我感觉我还是不甘心作祟多一点。我是真的很喜欢你吗？是真的那种寻死觅活的喜欢吗？没有吧。所以说到底应该是不甘心作祟多一点喽。\n\n209天，愿你有高跟鞋也有跑鞋，喝茶也喝酒。愿你有勇敢的朋友，牛逼的对手。愿你对过往的一切情深意重，但从不回头。愿你特别美丽，特别平静，特别凶狠，也特别温柔。\n\n### 20190528\n\n#### 20190528 10:04 AM update\n\n不行了，这几天实在是太忙了，忙的我甚至都没时间写日记了。\n\n今天看到一句话，人难免天生有自怜的情绪。大部分人看似的努力，不过是愚蠢导致的。\n\n觉得这句话说的挺对的，然后就仔细思考了一下，这段时间确实漂了。甚至都觉得自己还行了，可怕啊。\n\n208天，我嫉妒你身边每一个无关紧要的人，能够轻而易举的见到我朝思暮想的你。\n\n### 20190530\n\n#### 20190530 06:56 PM update\n\n昨天让你把网易云ID发给我，但是你拒绝了。然后我就想到了，当分享歌曲的时候后缀有一个uid=xxxxxxxxxx，然后在好奇心之下我把这个后缀删掉了，但是还是能打开，而且是同一个网页，我瞬间就明白了，这个是userID，既然userID会暴露出来，那么显然是可以利用的，然后就用浏览器打开了个人网页，后缀上就是uid=xxxxxxxxxx，然后随便换了一个uid，果然能打开别人的个人主页。然后自然就是用打赌来刺激你让你分享一首歌给我喽。哈哈哈哈哈，我好坏啊。\n\n开始的时候我还以为你不会吃我这一套，没想到你居然还真的分享了，哈哈哈哈，你居然还不信。你刚刚发我的时候我还在开会，当时真的是好久都没有感受过那种心砰砰砰跳的感觉了。哇，当时真的是激动的不行，会都不想开了，直接开始瞎搞了，然后就自然搜到了你的个人主页了。哈哈哈。哇，不行了，我现在还平静不了。真的是，好久都没这么爽过了，怎么说呢，就像小孩子耍赖皮拿到了自己心爱的玩具，这种感觉你知道吧。真的是好爽啊啊啊啊啊。\n\n#### 20190530 09:19 PM update\n\n我就猜准了你会来问我怎么几分钟搞出来你的账号的。本来想告诉你的，忍住了。然后就调侃你，让我端午节去找你玩，必然会被你拒绝啊，就是随便调侃一下。\n\n突然想起来你上次提到，为啥我每次都是很了解你的样子，其实我想说的是，如果你想了解一个人，总是有各种各样的方式去了解他（她），你说是吧？无非就是把拿来想自己事情的时间拿来想另外一个人而已，然后站在一个旁观者的角度，总能看清楚很多事情不是吗？但是很多时候还是不够冷静，所以大多数时候都是猜错罢了。其实，哪存在一个人把一个人猜准这种情况呢？可不都是我想了解你，然后尝试去接触你罢了。如果对你不感兴趣的话 ，又怎么会去想了解你呢？\n\n哇，当你发给我“哼”的时候，真的是整个人都化了。哇，我都能想象到你假装生气的样子，真的是想当面哄你一下啊啊啊啊。算了算了，自己还是太怂了，如果真的下一次见到你的话，真的是不想分开了。一定要黏着你。哇，不行了，真的想坐最后一趟火车过去了，我查一下。\n\n206天，嘻嘻，有没有觉得我敲级好？让我们一起牵手走完整个宇宙吧~~\n\n## 201906\n\n### 20190608\n\n#### 20190608 05:37 PM update\n\n昨天你突然和我说了，高考结束的事，也就是考完数学的时候，我和你说的话，还是蛮意外的。emmmmm，说实话是无心之言，不知道对你造成成了何种影响。而且但是是真的没有别的意思，也不是习惯你想和你有什么关系之类的。只是单纯的询问。可能是觉得好看的小姐姐不能那么难过是吧。\n\n其实当你昨天和我说完这件事的时候，我就有一种预感，你好像看到这篇算不上日记的东西？不太清楚是否是这样，可能就是一种单纯的直觉吧。就像上次。\n\n197天，你是一场无关风月的红尘， 成全了我一厢情愿的认真。\n\n## 201907\n\n### 20190717\n\n#### 20190717 10:37 AM update\n\n昨天晚上做梦梦到你了，梦到你来找我玩，你不排斥我了，我们一起压马路，然后你说饿了，我们就去吃东西，开心到冒泡。点完餐，你在那安安静静的做着，我看着你，你问我“看啥”（傲娇脸）， 然后我就笑了。再后来，我去取餐，让你在这乖乖等我，等我回来的时候，看到一个小哥在搭讪你，我就很气，然后，然后，然后就和那个小哥打起来了。然后我就醒了。气死我了，都怪那个小哥，不然好歹我能看你吃碗面不是？\n\n## 201910\n\n### 20191029\n\n#### 20191029 2:34 PM update\n\n表达爱意最好的时机是，三年前到现在的陪伴，其次是现在。\n\n# Her\n\n199808062050 \n\n![](/img/something.jpg)\n\n另外一部分原因是，我想和你报考一个学校，在你考完的那个时候，能第一时间看到你。\n","slug":"story","published":1,"updated":"2019-10-29T06:34:57.140Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3iqj1k9004ja613s5l8ma7y","content":"<p>我爱你，像蚁溃洪堤，一泻千里。</p>\n<a id=\"more\"></a>\n<h2 id=\"201905\"><a href=\"#201905\" class=\"headerlink\" title=\"201905\"></a>201905</h2><h3 id=\"20190501\"><a href=\"#20190501\" class=\"headerlink\" title=\"20190501\"></a>20190501</h3><h4 id=\"20190501-09-00-AM-update\"><a href=\"#20190501-09-00-AM-update\" class=\"headerlink\" title=\"20190501 09:00 AM update\"></a>20190501 09:00 AM update</h4><p>今天开始我想记录下和她的所有故事。</p>\n<h4 id=\"20190501-06-15-PM-update\"><a href=\"#20190501-06-15-PM-update\" class=\"headerlink\" title=\"20190501 06:15 PM update\"></a>20190501 06:15 PM update</h4><p>今天终于见到了心仪的小姐姐了，然后在天津逛了一大圈，刚下高铁，吃了个饭，然后逛了会街，然后就去听相声，然后逛了逛他们学校，在图书馆坐了一会就这样，哈哈哈哈哈哈哈，巨开心</p>\n<h4 id=\"20190501-11-52-PM-update\"><a href=\"#20190501-11-52-PM-update\" class=\"headerlink\" title=\"20190501 11:52 PM update\"></a>20190501 11:52 PM update</h4><p>下午的时候和她一起去吃了个饭。然后我回宾馆把东西放下后就拉着她各种溜达，但是感觉她兴致不高。可能是她要考研的缘故。确实，感觉拉着一个想考研的人也挺罪恶的。但是我是真的很开心，哇，真的是只要想到和她一起，真的是压马路都巨开心<em>^_^</em> </p>\n<h3 id=\"20190502\"><a href=\"#20190502\" class=\"headerlink\" title=\"20190502\"></a>20190502</h3><h4 id=\"20190502-00-31-AM-update\"><a href=\"#20190502-00-31-AM-update\" class=\"headerlink\" title=\"20190502 00:31 AM update\"></a>20190502 00:31 AM update</h4><p>君子爱玉如将帅熬鹰，我不急，对你我有无限的耐心。</p>\n<h4 id=\"20190502-09-56-AM-update\"><a href=\"#20190502-09-56-AM-update\" class=\"headerlink\" title=\"20190502 09:56 AM update\"></a>20190502 09:56 AM update</h4><p>看来你昨天是真的累了，以至于你现在才醒，我倒是挺担心的，7点半就醒了，然后给你发消息没回，就知道你是累着了。哎，心疼。准备去找你的，被你拒绝了。非说你来找我，也行吧。</p>\n<p>有时候我还挺惶恐的，万一就是南柯一梦就尴尬了，不过我现在是真的开心呀呀呀呀呀呀。</p>\n<h4 id=\"20190502-11-26-PM-update\"><a href=\"#20190502-11-26-PM-update\" class=\"headerlink\" title=\"20190502 11:26 PM update\"></a>20190502 11:26 PM update</h4><p>晚上约你吃晚饭，然后顺其自然的表白了？说实话是准备留到明天说的，但是一不小心漏嘴了，天真以为会挺顺利的。自认为还是不错的？但是好像有点出乎意料？巨难受？ </p>\n<h3 id=\"20190503\"><a href=\"#20190503\" class=\"headerlink\" title=\"20190503\"></a>20190503</h3><h4 id=\"20190503-00-42-AM-update\"><a href=\"#20190503-00-42-AM-update\" class=\"headerlink\" title=\"20190503 00:42 AM update\"></a>20190503 00:42 AM update</h4><p>还是没想明白到底是哪个环节出问题了？而且我都明说了不逼你？我可以等234天啊啊啊啊啊啊啊啊啊啊，难受！</p>\n<h4 id=\"20190503-10-04-AM-update\"><a href=\"#20190503-10-04-AM-update\" class=\"headerlink\" title=\"20190503 10:04 AM update\"></a>20190503 10:04 AM update</h4><p>混进了你们学校，然后又混进了你们图书馆，哈哈哈哈，当时门卫看了我一眼我都有一种做贼的感觉，真刺激。坐在图书馆写下这一段文字，还是略难受？反正还没缓过来？其实吧，你之前拒绝我的时候我都安慰自己，我还不够优秀啊，我要更优秀一点，所以我之前一直很怂啊，这段时间才敢和你说话，但是好像啊，你还是这样啊，说明啊，我还得努力啊，冲鸭。</p>\n<h4 id=\"20190503-10-26-AM-update\"><a href=\"#20190503-10-26-AM-update\" class=\"headerlink\" title=\"20190503 10:26 AM update\"></a>20190503 10:26 AM update</h4><p>还记得昨天去失恋博物展，记得当时我两感受都相同，别人的故事始终是别人的故事，打动不了自己，现在想来就是这种感受，一直都是我的一厢情愿，还奢望你的回应，说到底还是自己感动了自己，却没有感动你。</p>\n<h4 id=\"20190503-06-52-PM-update\"><a href=\"#20190503-06-52-PM-update\" class=\"headerlink\" title=\"20190503 06:52 PM update\"></a>20190503 06:52 PM update</h4><p>你去上厕所去了，我偷偷码一点。</p>\n<p>每每想到你连一点妄想都不给我就巨难受，看着你画了一下午的画，你认真画画的样子真的很美。但是我还是不知道你到底是啥意思，还是单纯的难过。</p>\n<h4 id=\"20190503-09-08-PM-update\"><a href=\"#20190503-09-08-PM-update\" class=\"headerlink\" title=\"20190503 09:08 PM update\"></a>20190503 09:08 PM update</h4><p>09:05开的高铁，我们8:55还没看到车站，我估计是赶不上了，当时我们两一起在大马路上跑，我真的有一种私奔的感觉。当时过安检的时候，我真的好难受，感觉自己像失去了你一样，但是都没有得到过何谈失去呢？</p>\n<p>我当时就想啊，如果我还能赶上车，那就是老天真的不帮我了，如果赶不上我就赖上你了，但是好死不活晚点了？真的是气哭了。看来还是我心急了，贼老天都不帮我了，所以爱情这东西啊，还得时间沉淀，所以啊，我不急啊，所以啊，我可以等啊，所以啊，我唯一怕的就是你不见了啊。</p>\n<p>就这样吧，再见了。</p>\n<h3 id=\"20190504\"><a href=\"#20190504\" class=\"headerlink\" title=\"20190504\"></a>20190504</h3><h4 id=\"20190504-00-54-AM-update\"><a href=\"#20190504-00-54-AM-update\" class=\"headerlink\" title=\"20190504 00:54 AM update\"></a>20190504 00:54 AM update</h4><p>估计你睡了，写好的东西最后还是发给你了，也不管你看不看了，反正肺腑之言，不吐不快。</p>\n<p>果然你没睡着，和你说了两句，看你没兴趣我就溜了。</p>\n<h4 id=\"20190504-1-37-AM-update\"><a href=\"#20190504-1-37-AM-update\" class=\"headerlink\" title=\"20190504 1:37 AM update\"></a>20190504 1:37 AM update</h4><p>看了你是真的了，今天就不等了，毕竟我又不是你的谁，劳累你三天了，本来就挺过意不去的，就这样也好，是你说的，好歹还能保存美好的回忆不是？</p>\n<p>让你填志愿和考完研和我说一声，不知道你会不会说，232天，会有多少变数呢？谁都不知道，我现在唯一能做的就是更努力吧。</p>\n<h4 id=\"20190504-01-00-PM-update\"><a href=\"#20190504-01-00-PM-update\" class=\"headerlink\" title=\"20190504 01:00 PM update\"></a>20190504 01:00 PM update</h4><p>队友看我实在是太难受了，拉着我去打球了，打了一个小时，我实在是不想动了。就拉着他回公司了，码下这一段了，你猜我想开需要多久？估计你不敢和我打赌了？</p>\n<h4 id=\"20190504-05-44-PM-update\"><a href=\"#20190504-05-44-PM-update\" class=\"headerlink\" title=\"20190504 05:44 PM update\"></a>20190504 05:44 PM update</h4><p>我现在突然挺后悔当时没有定三晚上酒店，那样的话，我们至少还能多待一起一天不是吗？虽然可能没那么开心，但是至少还能看到你不是吗？我现在真的是啥都不想干了。</p>\n<h4 id=\"20190504-10-45-PM-update\"><a href=\"#20190504-10-45-PM-update\" class=\"headerlink\" title=\"20190504 10:45 PM update\"></a>20190504 10:45 PM update</h4><p>我现在挺想和你打个赌的，你猜232天能否冲淡我对你的想法呢？我赌不会。如果真的淡了，我也不知道该说好还是不好，ok，我现在就数日子等我赢，刚刚给你发了日报，没有别的意思，只是希望你每天能整理整理，希望你好，（可能也有不甘心作祟？），不知道啦，我也很茫然的好伐。</p>\n<h3 id=\"20190505\"><a href=\"#20190505\" class=\"headerlink\" title=\"20190505\"></a>20190505</h3><h4 id=\"20190505-10-24-AM-update\"><a href=\"#20190505-10-24-AM-update\" class=\"headerlink\" title=\"20190505 10:24 AM update\"></a>20190505 10:24 AM update</h4><p>劝自己暂时放下，安心搬砖，好好学习。唯一能让我安慰的就是我们组另外一个人表白也被拒绝了，但是我还是很难受，我果然是个loser，连同组的人都和我一样惨，哭了。</p>\n<h4 id=\"20190505-12-13-AM-update\"><a href=\"#20190505-12-13-AM-update\" class=\"headerlink\" title=\"20190505 12:13 AM update\"></a>20190505 12:13 AM update</h4><p>emmmm,前几天，天天中午吃饭很早，以至于我现在饿了，但是还有半个小时才吃饭，饿得不行。哇，我还想和你一起吃饭。231天，我要是约饭，你不来，打你呦。</p>\n<h4 id=\"20190505-12-57-AM-update\"><a href=\"#20190505-12-57-AM-update\" class=\"headerlink\" title=\"20190505 12:57 AM update\"></a>20190505 12:57 AM update</h4><p>刚刚和老大他们聊了一下，他们的意思都是劝我放弃，说我还年轻，不值得，同样的人还会遇到很多，但是我目前还不这样想，有时间确实需要好好整理一下，并不知道自己到底想要的是什么，这不像我，我一直以为自己想要的东西很明确，但是这件事上，确实还有疑惑的地方。让我想到了以前看到的一句话：</p>\n<p>“无论是朋友，工作还是恋爱，如果你感到与对方特别契合，沟通愉悦甚至时时让你灵光乍现，你知道这说明什么吗？</p>\n<p>99%的可能是你遇到了阅历智商情商都在你之上的人，而且对方因为什么目的在向下兼容而已，只要TA愿意，TA可以和每个跟你一样级别的人，打到这种心有灵犀，</p>\n<p>剩下的1%就是你遇到了SOULMATE。”</p>\n<p>我并不知道我遇到的到底是什么，按照你前几天的意思是：我对你了解太多了，所以你的意思是我是你的99%？可能吧，可能只有我觉得我们是那1%，我一直以为我们不需要言语的交流是默契，现在看来可能不是？可能只是大家见的多了，就明白了，懂得察言观色？我并不知道，但是我很习惯这种感觉。</p>\n<p>他们都说，人这个东西啊，很奇怪，可能你现在看到的人，喜欢的人，愿意放弃一切为了的人，可能过几年再看就不过如此了。我不知道，但是我现在确实很放不下。我一直觉得，这种人，可能十年都遇不到一个，放弃太难了。我想过几次，到底是为啥，你会拒绝，我暂时的理解是，我还不够优秀，所以我还要努力。他们说，等你变的优秀了，你就会明白，什么才是你想要的人。说真的，我不懂，不知道谁说的是对的。所以我选择让时间筛选，没有什么是时间搞不定的。231天后，一切都会有答案，如果你真的讨厌我，我就离开了，就当做是一场年少无知的梦。</p>\n<h4 id=\"20190505-04-47-PM-update\"><a href=\"#20190505-04-47-PM-update\" class=\"headerlink\" title=\"20190505 04:47 PM update\"></a>20190505 04:47 PM update</h4><p>他们说让我忙起来，忙起来就不会想你了，但是我现在好闲啊，也不想忙起来，今天有比赛，但是已经没心情打了，怪只怪自己太年轻了，以前居然会觉得比赛比你有意思。老大说，错过了就是错过了，有些时候不能强求，我不知道，不知道该怎么做，不敢强求。</p>\n<h4 id=\"20190505-09-36-PM-update\"><a href=\"#20190505-09-36-PM-update\" class=\"headerlink\" title=\"20190505 09:36 PM update\"></a>20190505 09:36 PM update</h4><p>开发的东西很快就做完了，所以今天一直很闲，然后复习的事也就随便搞了搞，反正也不怎么想搞学习了，然后和队友商量了一下考研的事，他们建议不要冲动读医，说是时间可能耽误不起，不太清楚，感觉涉及到他们的利益问题了，所以谁都说不清楚。然后下午到现在都在杂七杂八的看，配了配博客，看了看latex，看了看vim，学了学haskell，反而是感觉啥都没干，其实我还挺怕这种感觉的，挺怕时间真的将我们冲淡了，很奇怪的是，我今天很平静，异常平静，没有难受也没有开心，我不知道这是不是变淡的原因，反正时间真的在一点点冲淡吧，然后后天有考试，索性把明天的假也给请了，明天好好休息一下，有些东西也确实需要理一理。</p>\n<p>emmmm，但是说自己对医学感兴趣是骗你的，是因为我对你感兴趣罢了，但是我确实是真的耐着性子读了一半的卫生统计学，无论是简单还是难，我都耐着性子读了。在你拒绝我两次之后，那本书就放在角落接灰了。确实提不起兴趣读下去。偶尔想想自己目的性其实也很强的，emmmm，可能是功利性很强，没有用的事情就不做了。暂时还不清楚，可能等着这三周考完试之后会重新捡起来接着读？然后整理整理笔记？然后假装很早之前整理的，然后发给你？然后试图感动你？呵呵，渣男！反正现在暂时是这么想的吧。妈呀，从来没想过为了哄一个女孩子开心，我居然这么有心机，太恐怖了。</p>\n<p>哎，反正这两天想的挺多的，暂时也不知道自己在想啥，很多时候都是没想明白搞得错，反正以后三思而行吧，也不敢太打扰你了，日报今天还是决定接着发，发21天就溜了，能对你造成多少好的坏的影响我也不知道，我也不敢说这一套在你这是否是对的，只求心安罢了。</p>\n<h3 id=\"20190506\"><a href=\"#20190506\" class=\"headerlink\" title=\"20190506\"></a>20190506</h3><h4 id=\"20190506-10-44-AM-update\"><a href=\"#20190506-10-44-AM-update\" class=\"headerlink\" title=\"20190506 10:44 AM update\"></a>20190506 10:44 AM update</h4><p>今天虽然请假了，还是来公司玩了会，刚喝了口水，现在开始码这段文字。</p>\n<p>这几天睡眠质量特别不好，应该是从5.1晚上开始的，可能是担心你身体状态，我应该和你说过，当时第二天我六点就行了，怎么也睡不着，也不敢给你发消息，怕你还在休息，我以为只是这个原因，现在看来不是，已经三天没见你了，但是还是基本六点多就醒了，然后也不怎么睡得着，因为队友还在睡觉也不敢起床，偶尔躺在床上会背背单词，偶尔也会想想你，偶尔也不知道自己在干啥。</p>\n<p>五点钟的票回学校，暂时还没定下来啥时候走，我应该和你说过，我不想赶路，所以一般会有预留，地铁大概是一个小时，所以我打算提前两个小时走，就算走错了，好歹还有挽回的余地。</p>\n<p>哎，其实一个人赶路还挺无聊的，还是两个人在一起比较好玩，旅途寂寞鸭。昨天给你发日报了，你还是没回我，可能是把我拉黑了？不知道，没有别的意思，只是想让你养成一个（我也不知道是好是坏的）习惯罢了。别太敏感啊。</p>\n<h4 id=\"20190506-03-53-PM-update\"><a href=\"#20190506-03-53-PM-update\" class=\"headerlink\" title=\"20190506 03:53 PM update\"></a>20190506 03:53 PM update</h4><p>现在闲下来了，就等高铁了，然后就想了想之前几天发生的事，其实我还是觉得挺玄学的，首先就是失恋博物展的那个球，说好都是脱单呢，怎么就咱两是单身了，不过说的也对，12.23才考完研，今年是不指望脱单了。</p>\n<p>还有就是单车那个事，都10点四十了，还有四十分钟的路程，显然是赶不回去的啊，怎们回事啊，居然还能遇到各种单车，还有就是我为啥骑车那么慢，你真的不知道？怎么可能是因为累了，还不是不像你回学校吗。这样好歹有一晚上的时间，哪怕是纯聊聊天也行啊，你咋回事啊，看不出来？哇，就两三分钟就进不去了，你可真的赶啊，话说我还真不知道你是不懂还是装不懂，可能二者兼有，不清楚啊。但是我宁愿是前者吧。</p>\n<p>230天，我离你又进了一步，但是你退后了多少呢？</p>\n<h4 id=\"20190506-10-05-PM-update\"><a href=\"#20190506-10-05-PM-update\" class=\"headerlink\" title=\"20190506 10:05 PM update\"></a>20190506 10:05 PM update</h4><p>马上就要到学校了，想到了当时去你们学校的时候，当时在你们图书馆歇息的时候，你应该是真的困了，都怪我当时不知道关心，让你受累了。现在想想当时怎么着也得让你休息休息啊。真的是迂腐之极。哇，不行了，想起的细节越多，越觉得自己是真的蠢。</p>\n<p>今天一天都在赶路，所以整个人的状态不是很好。而且也不太喜欢这种放松的感觉，但是还是不想学习。话说现在心态真的是变了好多了，今天我队友还在劝我放弃，我不知道，可能还是当局者迷的缘故，但是还是没和你说，今天还是照旧把日报发给你了，今天是第三天，还剩18天，然后就应该不会给你发消息了，让你安心考研了，考完研有的是时间不是吗？</p>\n<h3 id=\"20190507\"><a href=\"#20190507\" class=\"headerlink\" title=\"20190507\"></a>20190507</h3><h4 id=\"20190507-10-35-AM-update\"><a href=\"#20190507-10-35-AM-update\" class=\"headerlink\" title=\"20190507 10:35 AM update\"></a>20190507 10:35 AM update</h4><p>229天了，今天突然有一种报复心理，我一定要让你后悔。</p>\n<p>突然想到当时和你一起听相声的时候那个哥说了一句“我对于这种人，没有羡慕没有嫉妒，只有恨”，哈哈哈，说实话，这就是传说中的由爱生恨吗？反正我现在挺难受的，突然也想让你难受一下，哈哈哈，开个玩笑。</p>\n<p>最后悔莫过于因为年少无能而放下。我拼命成长不过是为了你回眸一笑。他们说等你以后长大了会遇到不一样的人，不一样的景，而我只想记住每一个不一样的你。</p>\n<h3 id=\"20190508\"><a href=\"#20190508\" class=\"headerlink\" title=\"20190508\"></a>20190508</h3><h4 id=\"20190508-10-38-AM-update\"><a href=\"#20190508-10-38-AM-update\" class=\"headerlink\" title=\"20190508 10:38 AM update\"></a>20190508 10:38 AM update</h4><p>228天。</p>\n<p>昨天晚上的时候，你终于是回复我了，说是怕我考试有影响，这件事怎么说呢，你要是早点回复我的话，我可能还会开心一点。但是还是挺开心的，好歹回复我了。</p>\n<p>昨天晚上聊了一下，应该再不会打扰你了，然后以后真有啥想说的，就更新到这里了，确实不该打扰你的，扰菇凉良久，菇凉莫怪啊。</p>\n<p>昨天你和我说，哎，算了不评价，怎么说呢，大家都在慢慢成长吧。</p>\n<p>不过有句话你说的还是挺对的，等待会让东西变质，或许应该换句话说：时间会让东西变质。没有什么可以敌得过时间。我深知我也不行，但是我觉得200+天还是不难的吧。</p>\n<p>还有就是你说的对，拒绝就应该拒绝到底，你做的很好，但是我还是很难过，毕竟当一个人真正拒绝你的帮助的时候就是真的想和你断了吧。至少没有钓着你的心思，或许我应该开心？</p>\n<p>后来仔细思考了这段时间的经历，感觉确实有些自作多情了，很多时候都是自己一厢情愿罢了。</p>\n<p>emmmm，大概就是这样了，可能真的是告一段落了，也不会找你聊天了，大家都松口气，如果真的是有缘，再见吧。</p>\n<p>当我码下这段文字，无悲无喜，甚至有一种完成任务的感觉，轻松？算不上吧。只是觉得暂时放下了一些东西，可以安心前行了。</p>\n<p>可能也和我老大说的对，他说我纯粹是大学时候没干什么，然后大学快结束了想干点什么，我不知道，当然也可能是自己飘了，觉得世界尽在掌握中，所以开始有恃无恐了。还好，你让我明白，自己还有很多的努力方向，还是不够优秀啊。所以继续努力吧。</p>\n<p>现在也不敢随便立flag了，但是还是想说一下，如果你真的准备二战的话，我就准备考研了，和你一起，哪怕你不理我，我也要强求一把。当然如果你真的考上了的话，我也要准备跳槽了，反正能近一点就近一点吧。真的是怕了。</p>\n<h4 id=\"20190508-12-55-PM-update\"><a href=\"#20190508-12-55-PM-update\" class=\"headerlink\" title=\"20190508 12:55 PM update\"></a>20190508 12:55 PM update</h4><p>刚刚吃饭聊了一下，反正我感觉我还好啊，没有你说的那种腼腆的感觉，可能很多时候在想事情所以没怎么说话，或者说是很多话不太好意思说，或者是感觉说出来不好，可能你觉得我在欲言又止？或者说是“腼腆”。不太清楚，哇，第一天我可是嗓子都说哑了，你居然会觉得我腼腆。不过说真的，刚见到你的一瞬间真的是有好多话想说但是真的是，虽有千万肺腑之言，却又无语凌噎。emmmm，刚见到你的时候是在瓷房子门口，当时还挺想抱你一下的，但是当时咱们前面有一个围栏，不知道你注意了没有，然后就放弃了。哎，还是太怂了。</p>\n<p>昨天你给我发消息之后真的是好晚才睡着，本来12点钟就放下手机啦，硬是拉着舍友聊天，聊我和你，硬拉这聊到了一点半。哎，回想这几天发生的事，还是有些地方没有做好。还是有很多事挺后悔的，用我队友的话来说就是我太怂了。很多时候都过于胆怯。</p>\n<p>我脑子里突然蹦出一个词来——自卑，其实仔细回想一下，很多时候我大概都是自卑心作祟。你也说了，你觉得我很优秀，其实我一直不这么觉得，反正每次觉得自己还行的时候总能遇到一些吊人，然后看看他们的经历，然后就觉得自己还有很多地方需要努力。</p>\n<p>还有就是你觉得我把你美化了，这个不好评价，自古有云：情人眼里出西施。我不知道是不是因为某些奇奇怪怪的原因导致的。所以暂不做评价。但是真的是觉得你是个挺好的菇凉啊，一直觉得你值得世间上最美好的东西。有时候，看着你皱眉头真的是还略有难受？反正感觉你要是真能无忧无虑的生活还是挺好的。这段时间你应该是为我烦了，我也就暂时不打扰你了，等你安心考完研吧。反正这个事不急，咱们还年轻，有大把时间可以挥霍。哈哈哈哈哈。</p>\n<p>还有就是这段时间准备开始锻炼了，主要是当时第一天我们都走累了，我想了一下，要不要公主抱你，后来估计了一下自己的身体状态，还是觉得太虚了，所以这段时间准备好好锻炼一下。还有就是学习的事，这段时间我考试实在是太多了，工作时间也压得很紧，所以暂时不考虑接着读卫统了，先把考试糊弄过去再说，之前看过的一半也没有整理笔记，题目也是杂七杂八做了，没有系统的整理，还是准备从头开始读，然后顺便整理整理笔记，题目也暂时不做了。先读完再说。感觉东西不是很难，所以希望你不要着急，慢慢复习就行。现在时间虽说不多了，但是也不用太着急，估计你这几天都没有在12点之前睡过觉，还是要早些歇息为好。</p>\n<p>对了，你画的那幅画，我暂时还没有挂起来，因为房间里的那幅画是竖的，你画的是横的，不太好弄，所以准备抽时间去买个钉子，重新钉一下，然后再挂起来，不过你也别担心会弄坏了，我保存的老好了。偶尔学习累了会看看那幅画，你画的真好看，当然，你也好看。</p>\n<p>还有就是那天我真的没有占你便宜啊，我说的都是心里话，你不是也没反驳吗？我就当你默许了。反正等你考完研我就非要缠着你，和你一起准备复试。至于我考研？暂时还没定，等省赛结束之后再说吧。看省赛情况，其实吧，我还挺想省赛打的不太好的，这样就能安心学习了。感觉比赛真的已经没有了当年的激情了。</p>\n<p>还有就是舍友昨天晚上和我聊了关于感情会随着时间的延长而降低。他说如果你真是我对象，可能两个月我就没有了现在的感觉了。我不知道，但是你看你，就做的很好啊，直接拒绝了我，让我有时间去思考和解释这件事，等我想的差不多了，咱们就在一起了？</p>\n<p>说到底还是得抽时间想一想这件事，下周就省赛了，省赛结束应该会有时间思考这个问题，就这样。</p>\n<h4 id=\"20190508-06-22-PM-update\"><a href=\"#20190508-06-22-PM-update\" class=\"headerlink\" title=\"20190508 06:22 PM update\"></a>20190508 06:22 PM update</h4><p>今天活干完了，现在算是比较闲了，不知道干啥了。</p>\n<p>所以就过来bb两句。这两天的状态不是很好，一部分是舟车劳顿的缘故，另外一部分原因就是突然有了迷茫的感觉：突然不知道了自己真正想要的是什么。是工作？是考研？是恋爱？我不知道，一直以来都很讨厌这种感觉，不知道自己想要什么可能是一种病态的迷茫，也很容易变成空洞的人。其实我还挺羡慕你的目的性的，能知道自己想要什么真的是一种很好的状态。它会至少让你有个目标，然后剩下要做的就很简单了，细化目标，完成目标。</p>\n<p>好像说这些在这里不合适，说一点和你有关的。</p>\n<p>你说我很多时候能一眼看穿你，emmm，这件事怎么说呢，我的解释是，咱两有天然的默契，这种默契与生俱来，不用培养，不用磨合。我最爱的就是这种状态。我一直以为这种情况是天作之合，很少有人能这样默契吧？这辈子能遇到一个真的很不容易，或许没了这份默契就不那么喜欢你了？我不知道，但是我是真的喜欢这种默契，你也知道，我情商很低，说明咱两都没耍心眼，所以这种与生俱来的默契难道不值得被珍惜吗？反正我是不打算就这么错过了。他们说这种默契，一个人一辈子会遇到很多，我不信，真的不信。反正这一次，我一定要抓住。</p>\n<h4 id=\"20190508-7-24-PM-update\"><a href=\"#20190508-7-24-PM-update\" class=\"headerlink\" title=\"20190508 7:24 PM update\"></a>20190508 7:24 PM update</h4><p>他们说的其实挺对的，人啊一旦忙起来什么都忘了，所以当时他们劝我忙起来就好了，这几天确实渐渐忙起来了。但是偶尔还是做事做到一半被打断，然后就神游太虚了。。。当然也可能是还不够忙。就是偶尔闲下来连个聊天的人都没有，还是挺难受的，之前还能和你聊聊天，现在都不敢给你发消息了。就这样吧。真有啥想说的，我就写这里了。</p>\n<p>其实我一直都没想好 自己到底为啥要写这个东西，或者说写这个东西的目的是什么，虽然不怎么花时间，一天大概也就半小时，但是确实不明白写这个的目的是啥，写给50年后的自己看？那也太矫情了。还是写给228天后的你看？那也太无耻了。暂时没想好，只是单纯的觉得，能遇见你还是一件挺幸运的事，挺值得怀恋和回忆的事，所以就这样记录下来了，就算以后真的不能在一起了，想到以前喜欢过这么可爱一个菇凉，也是一件随时回忆起来都能让人开心的事吧？</p>\n<h4 id=\"20190508-11-30-PM-update\"><a href=\"#20190508-11-30-PM-update\" class=\"headerlink\" title=\"20190508 11:30 PM update\"></a>20190508 11:30 PM update</h4><p>还好当时没有公主抱你，突然感觉自己好虚啊，不行了，接下来一段时间准备好好锻炼一下了，等下一次见面给你一个惊喜，到时候抱你没跑。</p>\n<h3 id=\"20190509\"><a href=\"#20190509\" class=\"headerlink\" title=\"20190509\"></a>20190509</h3><h4 id=\"20190509-09-19-AM-update\"><a href=\"#20190509-09-19-AM-update\" class=\"headerlink\" title=\"20190509 09:19 AM update\"></a>20190509 09:19 AM update</h4><p>今天早起了，背了会单词，然后就来公司学习了，复习时间就剩下今天和明天了。</p>\n<p>早上的时候看到公交车让了一个老人过马路，不禁想起了我从天津回来的时候，当时晚上11点多了，我其实还挺累的，当时我后面是一对夫妻，带着两个孩子，两个孩子都睡着了，当时因为你拒绝我，我真的挺难受的，犹豫了一段时间还是让他们排在我前面，当时我想了好长时间，我都这么惨了，为啥还要对世界抱有善意？再后来，也就是上周考完试了，我回北京的时候，当时我身上还有一点现金，北京地铁现在好像还不让用微信？反正一个人在那干着急，想了想还是帮助了一下。我真的不清楚，为啥自己还要对陌生人抱有善意，真的是，自己过的就已经够惨了。后来想想还是为自己积福吧。所以我就想啊，我都以德报怨了，你总不能拒绝一个商量的小男孩吧。</p>\n<p>今天北京天气很好，早上八点钟就已经有了太阳，真的很想出去逛逛，后来想想一个人还是挺无聊的。突然想到了当时给你打伞的日子，哈哈，我记得当时有一段时间，当时人流拥挤，你头都不回就往前冲，哇，当时还是太怂了，当时就应该拉住你，让你等等我的，后来好像因为打伞不及时被你吐槽了？哈哈，感觉你当时委屈的抱怨的时候的样子真的很可爱。哎，当时太直男了。</p>\n<h4 id=\"20190509-07-22-PM-update\"><a href=\"#20190509-07-22-PM-update\" class=\"headerlink\" title=\"20190509 07:22 PM update\"></a>20190509 07:22 PM update</h4><p>今天和一个考研的神仙聊了一下，他说我不该五一的时候去找你玩的，他说这个时候大家都开始准备考研了，我这样做，非但没有帮你解决问题，反而是抛给你一个问题，让你困惑更多，尤其是我那些若有若无的帮助更是显得愚蠢至极。我其实觉得他说的挺有道理的，我并不知道考研原来压力那么大，我其实一直觉得考研和期末考试没啥区别，看来是我年轻了，很多时候都把事情想简单了，尤其是想得到你的回应这件事上，真的是蠢了。</p>\n<p>仔细想了想确实不该这个时候去打扰你的，我还天真以为这对你不会有啥影响，今天才明白过来确实是副作用更大一下。但是我还是希望你压力不要那么大，还是要放轻松一些的，这段时间感觉你睡觉都挺晚的，一点钟还没睡觉，感觉这样还是对身体不太好，建议你每天早睡一点，毕竟晚睡了早上精神会不好，你们又都是需要背书的课，晚睡学习不如早起学习。</p>\n<p>其实每天都有好多有意思的事情分享给你，但是实在是不忍心打扰你，很多东西又不太好记在这里，所以很多都写成了日记，等你有机会了，到时候咱两可以一起读读？</p>\n<p>还有就是，我其实不怎么想告诉别人咱两之间的事，没有别的意思，一是咱两毕竟还没成不是，还有就是很多人问起来给我一种听故事的感觉，不像是帮我分析问题的样子，让我有一种”我有这种经历，我是不是很厉害“的炫耀的感觉，这种感觉让我很反感，不知道为啥，这种感觉会让我觉得，这份感情变得不那么纯粹了，就像一个小孩在炫耀自己的经历一样，幼稚而无趣。</p>\n<h4 id=\"20190509-07-57-PM-update\"><a href=\"#20190509-07-57-PM-update\" class=\"headerlink\" title=\"20190509 07:57 PM update\"></a>20190509 07:57 PM update</h4><p>刚刚吃完饭，突然想到一件事，突然就难过起来了。</p>\n<p>就是五一期间的时候我们吃饭都特别早，所以刚回北京的时候我六点钟就饿了，但是这才六天过去了，我的作息又和公司一样了，可能这就是人们常说的时间会磨平一切？慢慢的，你给我造成的影响会渐渐的淡化？真的还是挺难受的，就像你留给我的东西，被别人抢走了一样。偏偏我还不知道能做什么才能留下你留给我的东西。真的很怕，有一天再听到你的名字，没有了现在这种心慌或者说是心动，反倒是无悲也无喜。</p>\n<h3 id=\"20190510\"><a href=\"#20190510\" class=\"headerlink\" title=\"20190510\"></a>20190510</h3><h4 id=\"20190510-08-45-AM-update\"><a href=\"#20190510-08-45-AM-update\" class=\"headerlink\" title=\"20190510 08:45 AM update\"></a>20190510 08:45 AM update</h4><p>今天还是这个点起床了，昨天锻炼有点过猛了，现在浑身酸痛。。。。早上六点多醒了一次，一度怀疑自己手断了。现在就像被人揍了一顿一样。。。。</p>\n<p>早上刚醒的时候仔细思考了一下，目前知道的人有：我两个现任队友，一个前队友，父母。果然是每个人注意点都是自己的利益问题，现队友给的意见是，别浪费时间，不值得。前队友给的意见比较中肯，让我想好，想好了就别放弃了。父母啥都没说，他们也没说啥，就是怕我想不开。同样的道理，我也听取了对自己有利的方向而忽视了现队友的意见。</p>\n<p>还记得我和你说的吗？一旦有些东西涉及到了利益问题，就会少很多人情味，尤其是工作以后，感觉大家看待问题的方向都很不一样了。昨天前队友和我聊了一下，他的意思是，他从来没有为自己而活过，都是按照别人的想法来做事。然后我就发现，我还是挺幸福的，我一直以来都是啥开心做啥，暂时还没人约束过我。以前觉得读书有意思就好好读书，不怎么玩。大学觉得比赛有意思就不怎么学习，学习很差。真的想不到，自己有一天会需要顾及方方面面而变得畏畏缩缩的时候，该是何种可怕模样。</p>\n<h4 id=\"20190510-05-31-PM-update\"><a href=\"#20190510-05-31-PM-update\" class=\"headerlink\" title=\"20190510 05:31 PM update\"></a>20190510 05:31 PM update</h4><p>突然发现，说我变腼腆了，好像不止你说过，虽然我很不想承认这一点，但是好像很多之前的同学都这么说，让我不得不思考这个问题，可能这几年过的过于漫长了，让我已经不记得我高中时候的样子了。或者说我高中的时候很膨胀？记不清了，可能是自己的感受，自己的成长，自己的变化反而自己不太了解吧。话说我高中的时候确实很膨胀，感觉一切都在自己手中。可能是大学时候认识了太多神仙了，就已经不敢过于高调了，很多时候反而是低调再低调。感觉自己还有很多不会的东西，所以一直在努力学习吧。</p>\n<p>还有就是我把你画的画拍成了照片挂在公司内部聊天软件的头像上，他们都说挺好看的，那是，不看是谁画的。。。。其实准备换成qq或者微信头像的，想想还是算了，你能看到，不想影响你的心绪了。给你时间吧。</p>\n<p>还有关于你说我说话风格很像山东人，这件事怎么说呢，感觉与其说是山东对我的影响很大，不如说是山东学长对我的影响很大，因为很多时候都是待在实验室，待在实验室的时间应该不少于在宿舍的时间，这还是算上睡觉的时间的情况下，所以我说话的风格应该是更偏向于实验室学长的风格。至于这点滴的潜移默化的变化，我还真感觉不出来。反正感觉自己一直都是这样。</p>\n<h4 id=\"20190510-10-02-PM-update\"><a href=\"#20190510-10-02-PM-update\" class=\"headerlink\" title=\"20190510 10:02 PM update\"></a>20190510 10:02 PM update</h4><p>明天就溜了，要回学校打省赛了，希望好运吧，还记得去年的时候省赛冠军，当时老膨胀了，总感觉世界在我手上，没有我搞不定的事，后来就慢慢放弃了这个无知的想法。突然想到了我之前和老大说的一句话，有异曲同工之妙–”世间上任何问题都可以转化成数学问题”。直到你拒绝了我好多次，我才渐渐明白过来，很多东西并不是那么简单的问题，不是我能掌控的，也不能转换成数学问题，他没有固定的公式，更没有通用的解法。因人而定，因事而转。</p>\n<p>嘿，说真的，我一直以为，我会悲伤好长时间，但是不知道为啥，我就这么快想开了，突然就不难过了？反正这几天还是挺开心的，偶尔搞搞问题，偶尔和组里人开开玩笑，但是偶尔沉寂下来的时候才会感到悲伤。这可能就是我喜欢晚上而非闹市的原因？“黑夜给了所有人黑色的眼睛，他们用来寻找光明，而我用来寻找你的美”。现在唯一感到遗憾的就是当时你画画的时候没有偷拍你。让我只能在回忆里寻找你。</p>\n<p>226天，此去经年，应是良辰好景虚设。</p>\n<h3 id=\"20190512\"><a href=\"#20190512\" class=\"headerlink\" title=\"20190512\"></a>20190512</h3><h4 id=\"20190512-11-14-PM-update\"><a href=\"#20190512-11-14-PM-update\" class=\"headerlink\" title=\"20190512 11:14 PM update\"></a>20190512 11:14 PM update</h4><p>今天是母亲节，刚打完省赛，刚到学校，估计老妈已经睡了，不敢打扰，就偷偷来更新一点。</p>\n<p>今年省赛，果然还是没有打冠军，最后第五了，不行了，老了老了，精力不敌当年了。说到底还是缺少一点锐气，很多时候还是考虑太多，或者说是顾虑太多了。不过也从侧面说明了一件事，世界不是掌握在我手中，很多东西暂时还是不能掌控的。然后认真考虑了一下关于考研的事，这件事听的意见有点多了，反而自己没有搞清楚，然后你说想上中山大学医学院，然后了解了一下，感觉中山大学计算机学院还是挺强的，现在唯一的难点就是初试了，感觉只要初试过了，复试不是问题。大多数时候还是感觉自己很菜，但是好像是在一个不怎么激烈的范围里面，好像有点安逸了。温水煮青蛙，最坏莫过如此。说到底还是很多东西没有勇气舍弃罢了，工作也好，比赛也好，搞钱也好，很多东西让我迷醉了，尤其是在一个自我感觉良好的氛围里，感觉好多时候甚至不想努力了。还是很危险的。</p>\n<p>感觉还是要安心下来正儿八经搞件事，这学期算是废了，肯定是要搞到正式offer的。然后就差不多到了暑假了，然后看情况暑假是回学校比赛还是安心准备考研了。主要是还没想清楚，自己读研到底是为了学知识，还是为了接近你？感觉这个事情还是需要想明白，不然很多时候感觉可能会努力错了方向。反正学习这种事来说，感觉还是欠缺很多，很多东西都没有系统的学好，现在想捡起来又感觉时间不太够，感觉还是自制力不够，是像我说你的一样：执行力不足。当时我和你说的是真的，没有人的执行力很强，执行力强的人都遇不到，说到底人还是一个很懒的动物。毕竟懒是第一生产力嘛。</p>\n<p>224天，一念起，万水千山。</p>\n<h3 id=\"20190513\"><a href=\"#20190513\" class=\"headerlink\" title=\"20190513\"></a>20190513</h3><h4 id=\"20190513-07-54-PM-update\"><a href=\"#20190513-07-54-PM-update\" class=\"headerlink\" title=\"20190513 07:54 PM update\"></a>20190513 07:54 PM update</h4><p>今天早晨起床，差点没反应过来，恍如隔世的感觉，真的有那种黄粱一梦的感觉，感觉一切都是假的，去北京市假的，去找你也是假的，只是做了一个很真实又很虚妄的梦。</p>\n<p> 其实大多数时候应该是，觉得自己实力还行，但是没有得到预期的结果的一种心有不甘吧。尤其是大家都是优秀的人，都觉得自己是掌控世界的一群人，如果真的违背预期的话，总会有点失落或者不甘心的感觉吧。只是这种期望长时间得不到满足的话，往往只有两种结果？对心爱之人的刻意美化或者恶意丑化？哇，不行了，感觉可以抽时间拜读一下弗洛伊德的巨作了，总感觉会受到启发。</p>\n<p>总感觉这几天心太浮躁了，对事也好，对你也好。总感觉不够冷静和理智，容易冲动。不太清楚是不是这两周堆的事情太多的缘故。其实仔细想想，自己还挺自私的，很多事情自己都没有想清楚，然后就说了，总感觉是不吐不快，但是很多时候都是自己爽完了，然后就不管了，总感觉自己能收拾好自己处理的烂摊子，但是想想到现在都还是总用事情很多这种破借口，没有时间理清这件事。不知道是怕想清楚之后拿到了自己不想要的结果的不甘心，因此一直在逃避结果，还是自己真的很忙，所以找不到时间。可能前者居多？</p>\n<p>溜了溜了，这两天身心俱疲，不想多说了。就这样，希望远方的你遇事不急，早睡早起。</p>\n<p>223天，世间有两苦，一是得不到之苦，二是钟情之苦。</p>\n<h3 id=\"20190515\"><a href=\"#20190515\" class=\"headerlink\" title=\"20190515\"></a>20190515</h3><h4 id=\"20190515-00-20-AM-update\"><a href=\"#20190515-00-20-AM-update\" class=\"headerlink\" title=\"20190515 00:20 AM update\"></a>20190515 00:20 AM update</h4><p>已经是第二天了，晚上11点多的时候才陪舍友吃完饭。</p>\n<p>昨天这个时候和我妈妈聊了一下，我妈妈对你还是挺满意的，我就和她说，你对别人菇凉满意没用啊，别人菇凉不中意你儿子啊。不过说真的，我妈妈好像真对你挺感兴趣的，你要不考虑一下今年过年和我一起回家？</p>\n<p>然后今天晚上准备给你电话的，然后尝试给你发了个消息，大不了你再拒绝我，我明天就以喝多了为借口呗。但是你好像直接没鸟我了。。。emmmmm，想说的话就被憋回去了。其实也没有啥大不了的事，就是这段时间很多问题没有想清楚，所以想问问你的意见，但是你好像不怎么给面子啊。不知道，估计以你的个性，明天可能也不会回我？其实有时候感觉你还是挺好的，至少没有掉着我啊。</p>\n<p>然后我妈妈好像还是挺激动的，反正一直催我去撩你，说什么，有时间就关心关心人家，给人家尽可能的帮助啥的，反正给我的感觉就是，你要是来了，你就真是她闺女了，但是我是不是真儿子，那可不一定。然后我爸爸的话，不用考虑，我们家里人都挺好说话的，再说了，有我罩着你呢。不对，按照我妈妈这个态度，应该是你罩着我才对，哈哈哈哈哈。</p>\n<p>突然想到我的耳机到了，但是明天才能用到，然后今天去网易云音乐上去看了一下，《空空如也》这首歌，不知不觉已经听了500多遍了，还是略恐怖的。人生寂寞如雪啊。</p>\n<p>对了，今天不想学习主要是有一个比较奇怪的原因。从我读大学到现在，我一共有三件事让我可以奋不顾身，宁愿抛弃一切都要做，第一就是我想做一个特效爆炸的游戏，不好玩也无所谓。这个想法是大二的时候，真的是让我魂牵梦绕，让我想了好长时间，第二就是想去见你，那是来了北京之后的想法，让我很多时候都不能集中精力搞正事，直到五一，我和你说的都是真的，我是真的觉得一切都值得。无论是你想做什么，我都愿意陪着你。然后今天突然有了第三件事，我想来一次说走就走的旅行，今天看了一天地图，一直在想去哪去哪，但是具体的旅行地点还没定下来，不过抱歉的事是：这个计划没有你，本来想完之后说要不要计划加上你，后来想想太矫情了。这个计划没有你，我只想一个人看最美的景，当然如果那个时候你能在我身边的话，我会更开心。计划还没计划好，估计应该是12月份左右开始执行，应该是11月之前会规划好，到时候做两份计划吧，看你愿不愿意。</p>\n<h4 id=\"20190515-07-53-PM-update\"><a href=\"#20190515-07-53-PM-update\" class=\"headerlink\" title=\"20190515 07:53 PM update\"></a>20190515 07:53 PM update</h4><p>上午就是纯赶路了。大概中午到宿舍，洗了个澡就去公司了。今天一整天都不是很舒服。</p>\n<p>昨天晚上的时候，我和你说过了，我陪舍友吃饭了，当时喝了点酒，当然没醉，尝试着给你发了个消息，但是你没回复我，今天早上你说你是睡着了。其实吧，昨天没有啥别的意思，就是想问你点事，让你给个意见而已，但是你好像兴趣不高，所以就没打扰你了。其实就是想问问你，觉得我到底是考研好，还是找工作好，还是打比赛好，自己现在没什么主见，问了问老妈，好像也没改出啥建设性意见，所以准备问问你，但是你好像是睡了。就算了。估计你八成是想我读研，所以想问问你读研的话啥时候开始准备比较好，因为目前一段时间还是比较忙，暂时是没时间开始准备，舍友的意见是不急，暑假开始准备就行了，反正他们对我的信心比他们对自己的信心都足，不知道是为啥。</p>\n<p>还有就是今天发工资了，准备换个手机了，但是还有点舍不得，微信暂时没有不同设备登录，聊天记录同步的功能（还是说我没找到？），所以换了手机之后可能聊天记录都没了？所以我今天翻完了我们所有的聊天记录，然后截图了，看今天晚上拷贝一下，感觉还是一个挺美好的回忆的。然后觉得比较过分的就是为啥聊天记录都是我一个人在发言呢？反正基本都是一片绿，然后见着一点白。哇，难受。可能是我手速比较快的缘故，感觉不见得，你好像挺不想和我分享每天发生了啥一样。我这个人就这样，闲不下来，反正只要是有趣的事都喜欢分享给你，但是你很多时候好像是不感兴趣，所以没怎么回复我，假装你是忙吧。也只能这样安慰自己了。</p>\n<p>221天，万物皆有其时，耐心等待。</p>\n<h3 id=\"20190516\"><a href=\"#20190516\" class=\"headerlink\" title=\"20190516\"></a>20190516</h3><h4 id=\"20190516-10-00-PM-update\"><a href=\"#20190516-10-00-PM-update\" class=\"headerlink\" title=\"20190516 10:00 PM update\"></a>20190516 10:00 PM update</h4><p>今天头疼了一天，应该还是没有休息好的缘故。</p>\n<p>昨天开始渐渐开始给你发消息了，不然我是真的怕有一天把你忘了。说心里话，我不知道我到底是需要一个倾诉的对象还是对象。可能是前者居多？因为我很少主动开启一个话题，所以不怎么喜欢找人聊天，所以很多时候有些事都不知道找谁说，所以个人觉得还是更缺少一个倾诉的对象？不过我觉得现在的状态挺好的，每天和你分享一点或开心或难过的事，也不算太打扰你？但是还是和以前一样吧，都是我输出较多，你还是很少回我，但是我还是很开心啊啊啊啊啊，真的很怕你不理我了。</p>\n<p>今天看了一下，如果你决定读研读中山的话，我就准备考虑华南理工了，感觉考上不是很难，而且看了一下知乎，都说华南理工的就业氛围很好，所以可以考虑读一下，然后我们组的一个人说，读中山啊，中山妹子多，可以给你压力，哈哈哈哈哈，不知道啊，问了一下舍友，他们说这两个学校的考试难度几乎相当，所以暂时还没决定，应该是今年暑假就开始准备了，暑假感觉可以回一波家，感觉还是更倾向于考研吧，暂时还是不知道队友之间的态度，感觉大概率会玩完，所以更倾向于读研。今天和组里人聊了一下搞钱的事，他们都说读研好，搞钱不急，而且前几年基本是搞不了多少钱，就算搞到钱了也存不下来，所以暂时不考虑这个，但是如果能转正的话，不是不可以考虑一波，但是看老大对我的态度，大概率不会成功，所以暂时更倾向于考研，但是还没定下来，这周六感觉可以考虑一下具体的想法。或者这周二考完试，下午的时候好好想想。</p>\n<p>这周开始就继续锻炼了，对了，看了一下前两天你的体测报告，感觉很厉害啊，不行了，我也要好好锻炼了，话说5.1那段时间去玩的时候我脚上磨了一个泡，前两天才消下去，太虚了。还是缺乏锻炼了，还是因为怎么吃都不胖的缘故，这段时间就疯狂的偷懒，感觉最近越来越虚了。反正现在要好好锻炼了，怎么说也得公主抱吧，不能太虚了。下学期应该是回学校了，有时间锻炼，但是我健身教练的舍友好像要全身心考研了，感觉不会带我，到时候看情况是拉队友过去，还是自己锻炼，其实我觉得吧，做事这种东西，一个人做永远是最无聊的，虽然多个人效率不一定高，但是一定是不容易累的，老话怎么说来着？男女搭配，干活不累。说真的，五一那几天我是真的不累，3号的时候其实就是想故意气气你，我生气了，哈哈哈哈哈。你都看出来了还不哄哄我，难受，居然还让我去买水？居然想支开我，你也太坏了。</p>\n<p>还有就是那天晚饭的时候，我一直叫你“小老弟”，你好像挺反感的，没有别的意思，只是觉得这个称呼很有意思而已，而且那个时候感觉叫你啥都不好啊。总不能继续叫你“小姐姐”吧？</p>\n<p>220天，既然不好意思说晚安，那就祝你晚不安，最好今夜有梦，梦里有我。</p>\n<h3 id=\"20190517\"><a href=\"#20190517\" class=\"headerlink\" title=\"20190517\"></a>20190517</h3><h4 id=\"20190517-10-30-AM-update\"><a href=\"#20190517-10-30-AM-update\" class=\"headerlink\" title=\"20190517 10:30 AM update\"></a>20190517 10:30 AM update</h4><p>刚刚去水了一发日记，感觉还是挺惭愧的，日记是真的一天不落全都有，但是这个故事还断了几天，看了一下，大概是省赛少了，还有就是那天准备复习和陪舍友喝酒少了。现在日记被彻底拆成了三部分：工作日报，这个故事，生活琐事。等离职之后可能工作日报和生活琐事并一下，但是这个故事还是单独成为一个故事吧，以为觉得这个是真正值得回忆的事，而不是记流水账。</p>\n<p>其实这两天仔细考虑了一下，你其实应该不是没有看懂暗示，而是假装没看懂暗示。更多的时候你应该是不想看懂，假装看不懂，然后就可以搪塞我?还是说你觉得我脸皮不够厚，不敢瞎说话？可能让你失算了，我最后还是捅开了，但是好像努力错了方向，最后搞得大家都不怎么愉快了。emmmm，其实我觉得这样还挺好的，至少比你看破不说破好一点，这样大家长痛不如短痛啊。我也没有一下乱七八糟的小心思，你也可以安心考研了。就这样独自安好了。</p>\n<h4 id=\"20190517-07-52-PM-update\"><a href=\"#20190517-07-52-PM-update\" class=\"headerlink\" title=\"20190517 07:52 PM update\"></a>20190517 07:52 PM update</h4><p>不行了，今天晚上实在忍不住了，想和你商量一下关于明年的安排。emmm，用自己不知道未来的想法去寻求你的帮助应该不算过分吧。感觉还是不甘心在作祟。还是想挣扎一下？因为这两天实在是太忙了，所以今天想早点走了，因为明天就放假了。所以现在开始动心思准备出去玩了。明天看情况出去逛逛。</p>\n<p>这段时间渐渐忙起来了，主要是因为现在考试也告一段落，剩下的时间比较多，以前的时候有时间就摸鱼，现在不怎么想摸鱼了，一来是感谢老大的栽培，二来是想让自己忙一点，别天天去想一些乱七八糟的东西。你看，现在随着时间的推移，我对你忘得越来越多了不是？很多东西都想不起来了。还是说不想想起来？</p>\n<p>话说第一天的时候，当时逛瓷房子的时候我还是挺不开心的，这种时候难道不是应该两个人找一个幽静的咖啡厅，然后一起老朋友叙叙旧吗？说真的，当时逛的时候直接把我准备好的好多话憋回去了。。。。本来想找个地方聊会天的。。。。然后以为中午有机会，结果你也知道了，中午的时候不止两个人，说真的吃饭那个地方环境还挺好的，多适合说心里话啊。不过我当时想啊，我有的是时间不是吗？所以不急。结果不急不急就真的没机会急了。</p>\n<p>219天，愿你贪吃不胖，愿你懒惰不丑。愿我的深情不被辜负，愿我的余生都有你陪。</p>\n<h3 id=\"20190518\"><a href=\"#20190518\" class=\"headerlink\" title=\"20190518\"></a>20190518</h3><h4 id=\"20190518-04-49-PM-update\"><a href=\"#20190518-04-49-PM-update\" class=\"headerlink\" title=\"20190518 04:49 PM update\"></a>20190518 04:49 PM update</h4><p>昨天晚上给你打了个电话，咨询了一下关于下半年到底是考研，工作还是打比赛的问题。但是你好像兴致不高，其实吧，你要是明确给出一个意见，我一定会去做吧。我是真的不知道到底怎么选，不是故意找个由头和你打电话的。你最后好像也只是帮我干掉了一个选择：就是不要去工作。然后你好像是更倾向于比赛，其实你这样说我反而是更倾向于考研了。如果你中山大学定下来的话，我就可以着手准备考西南理工大学。然后就问了你一下中山定下来了没有，但是你好像还是在动摇，所以这件事就暂一搁浅了。</p>\n<p>我还是那句话，感觉很多事情还是早早定下来比较好，我这段时间就因为思考各种利弊关系搞得我很焦虑，很多时候甚至不能安心思考了。但是我现在应该没有资格去给你出主意了，毕竟我自己都没有想好到底选什么，甚至去你那里问想法了。</p>\n<p>今天又刷了一遍大鱼海棠，我以为我会有啥感同身受的感觉呢，结果还是那样，别人的故事毕竟是别人的故事吧。不过有句话还是挺打动我的：</p>\n<p>“生命是一场旅程。我们等了多少个轮回，才有机会去享受这一次旅程。短短的一生，我们最终都会失去，你不妨大胆一些，爱一个人，攀一座山，追一个梦。”</p>\n<p>这种事怎么说呢，其实大多数人是没机会追寻自己的梦的，很多时候还是不得不屈服于现实不是吗？更多的时候是人力不可抗的因素，就像你现在不喜欢我一样，可能越努力越反感了？或许现在唯一能做的就是偶尔找你聊聊天，听听你最近一段时间的吐槽，给你出一两个狗头军师的意见。但是你好像不怎么有兴趣找我聊天，一般都是我主动的多。可能还是对我戒心比较大？</p>\n<p>218天，命里有时终须有，命里无时莫强求。</p>\n<h3 id=\"20190519\"><a href=\"#20190519\" class=\"headerlink\" title=\"20190519\"></a>20190519</h3><h4 id=\"20190519-09-33-PM-update\"><a href=\"#20190519-09-33-PM-update\" class=\"headerlink\" title=\"20190519 09:33 PM update\"></a>20190519 09:33 PM update</h4><p>今天和你聊了一下关于晚睡的问题，其实一直以来都想说，你好像睡觉一直挺不规律的，我是真的觉得作息不规律对身体很不好，虽然我也没有每天早睡，但是基本都是12点之前睡觉了，太晚睡真的是对身体不好，不仅是休息不好的缘故，反正整个人的精力都不好了，一天都会没有精神。还有就是这个年龄段，尤其是在学校的日子，没有什么事是值得你为之熬夜的。至少我目前还没发现什么事是非要我晚上之前搞定的，第二天干就会出问题了？</p>\n<p>还有就是你说你在学校发现了一个地方写有你的名字，我居然没有吃醋鸭，只是觉得挺有趣的，因为有一个人暗恋着你，还不敢偷偷告诉你，还居然是舍友先发现的，这就太尴尬了，当然不排除有个男生写了告诉你舍友了。然后试探试探你的态度，但是我是真的觉得很有意思，反而没有吃醋的感觉，可能是对自己有足够的自信？当然还是挺羡慕你的，其实有一个人在背后默默祝福你的感觉真的挺好的。</p>\n<p>然后你就开玩笑说下次去青岛给我写满，我是真的当真了，就像我说的，虽然下一次不知道是什么时候，但是只要有下一次，多久都值得不是吗？到时候你可别赖账啊，不写满不准你离开我了。</p>\n<p>217天，我们都足够成熟，也足够理智，没有人愿意用自己的感情和青春去赌个不确定的未来。但因为那个人是你，所以我愿意。</p>\n<h3 id=\"20190520\"><a href=\"#20190520\" class=\"headerlink\" title=\"20190520\"></a>20190520</h3><h4 id=\"20190520-10-40-AM-update\"><a href=\"#20190520-10-40-AM-update\" class=\"headerlink\" title=\"20190520 10:40 AM update\"></a>20190520 10:40 AM update</h4><p>今天出门的时候，阳光正好，微风不热，一切正如刚见你时候的样子，真的很美。我刚去的时候，我是真的有说不完的话想和你说，但是啊，你真的是没有怎么回应我，导致我阻塞了。所以啊，想念这种东西，还真不能是单向的，不然啊，就像负重前行，总该是会累的吧。</p>\n<h4 id=\"20190520-11-05-PM-update\"><a href=\"#20190520-11-05-PM-update\" class=\"headerlink\" title=\"20190520 11:05 PM update\"></a>20190520 11:05 PM update</h4><p>明天考试，我还没开始复习，但是我还是更想和你说话，不想复习。</p>\n<p>今天是520鸭，真的很想和你说话啊，但是又怕你戒心太重了，就没怎么和你说话，就是吐槽了一下今天网易云给我推荐了一堆情歌，评论全是别人的甜美爱情故事。你好像只是单纯的同情我，哇，这个时候不应该是咱们偷偷做一天情侣吗？你要是真的这样说，我说不定真的会把票退了不考试了，直接去找你玩，算了，还是自己想想就好了，别想多了。这段时间咋回事啊，天天做白日梦啊。不过真的想和你谈恋爱啊啊啊，哪怕一天也好啊。你想做什么都行，我都可以陪着你，想到只要可以静静看着你，就很开心了。</p>\n<p>还有就是那天画画的时候，我不是觉得无聊了，而是我困了，那天睡的挺晚的，没睡好，但是又不好意思睡觉，早上又很早就醒了，然后睡不着，一直在想前一天晚饭的事，所以下午的时候很困了，真的不是无聊了。哇，我当时累的不行了，就想休息一下，但是还是想和你说话，结果你居然让我去买水。当时真的是被你蠢哭了。但是莫名觉得你还挺可爱的？这段时间没见你了，也没有理由找你要照片，所以更多的时间就去看那幅画，不管怎么说，也是你几个小时的战果啊。最后我还是没给他挂起来，我怕弄坏了，万一不小心刮花了我心都会碎的。</p>\n<p>216天，深深的话要浅浅的说，长长的路要挥霍的走，大大的世界要率真的感受。</p>\n<h3 id=\"20190522\"><a href=\"#20190522\" class=\"headerlink\" title=\"20190522\"></a>20190522</h3><h4 id=\"20190522-10-48-AM-update\"><a href=\"#20190522-10-48-AM-update\" class=\"headerlink\" title=\"20190522 10:48 AM update\"></a>20190522 10:48 AM update</h4><p>昨天和前天都找你聊了会天还挺满足的？今天好像是我妈生日？感觉今天该打个电话回去了。</p>\n<p>214天，网易云里面的评论有999+，我也不敢打出你的名字。</p>\n<h3 id=\"20190523\"><a href=\"#20190523\" class=\"headerlink\" title=\"20190523\"></a>20190523</h3><h4 id=\"20190523-12-30-PM-update\"><a href=\"#20190523-12-30-PM-update\" class=\"headerlink\" title=\"20190523 12:30 PM update\"></a>20190523 12:30 PM update</h4><p>今天突然听到了《好久不见》，感觉真的好久不见了，甚是想念，现在学校的事情算是终于搞定了，现在可以安心搞其他的事了。这段时间算是真正忙起来了，每天都是干不完的活。</p>\n<p>对了，关于上次你说高考考完数学后我对你说了什么话，我是真的忘了，你说的对，只有自己会记得自己说过什么，我去问了李思慧一下，她也不记得了，看来这彻底成了你一个人的秘密了。我这几天都在努力的回忆，如果有这件事的话，我大概想起来了一部分，当时我们是在一中考试的？而非孟宗，然后我们都是从小学那个门口出来的，然后你是在那个上坡的时候哭了？然后我无非就是可能说了两种话：要么是嘲讽你了，要么是安慰你了，以我高中的尿性，应该是带了嘲讽的安慰，多半是会说：没事我考的比你还差，我都没哭，你怕啥啊？类似的话。因为我记得我语文考的更差，所以可能说了一句我作文都跑题了，你怂啥啊。应该就是类似的话吧。反正感觉顶多是用让你很不爽的话怼你了，让你暂时忘却了考的不好的悲痛？其实回头来看，你都比我考的好多了。</p>\n<p>而且你看，当初我们拼命挣扎，痛的撕心裂肺的事现在看来还不是淡然了吗？你现在回忆起来还是有意思居多吧？反正我觉得吧，考试这种东西，努力了就好啊，别太心急。</p>\n<p>然后就是这段时间考研的事了。我舍友这段时间又吵架了，反正我不在就闹腾起来了。其实在我看来九成九是因为考研的事，我才渐渐知道，考研的人压力是真的大，所以这段时间我都只敢和你分享有意思的事，看出你有心情不好的时候就安慰你一下。</p>\n<p>还有就是关于你刷微博的事，你说你是喜欢做一个倾听者，实际上我觉得是因为你已经是个消费者，而懒得去做生产者，以至于很多时候你甚至不能好好的表达自己，但是没时间去改正，所以你现在都是喜欢听别人的故事。所以啊，我得配合你啊，我就老老实实给你说我发生了啥啊，至少这样我们两个人之间没那么无聊啊。</p>\n<p>213天，这一生，我会遇到一切比你都好的，但我已经没有精力，不顾一切去再爱一次了。</p>\n<h3 id=\"20190524\"><a href=\"#20190524\" class=\"headerlink\" title=\"20190524\"></a>20190524</h3><h4 id=\"20190524-10-19-AM-update\"><a href=\"#20190524-10-19-AM-update\" class=\"headerlink\" title=\"20190524 10:19 AM update\"></a>20190524 10:19 AM update</h4><p>今天早上奇哥和我说他失恋了，这次是真的，这让我不得不开始思考一个问题，我是不是恋爱绝缘体啊。为啥我周围的人都失恋了呢？巨难受。其实我想的更多的是他失恋的原因：他对象想要结婚了，但是他现在处于上升期，至少是两年之内不可能结婚的。说到底就是我给不了你想要的，所以不如就此别过了。当他说完这个事实的时候，我也跟着挺难受的，让我想起了我初恋，当时是同样的情况，我给不了她想要的，所以大家就此别过了。现在回头来看，只能说是挺可惜的。</p>\n<p>其实，当时犹豫了很久才去见你是同样的问题，就是怕自己没有放弃一些东西的勇气，所以一直不敢见你，当我下定决心了之后，还是被你拒绝了，其实，无论是比赛还是考研还是找工作，我都拿得起，为你我也确信自己放得下，但是你都没有给我机会去证明这一点，还是有点难受的。他们说：这辈子最后悔的一件事就是，在错的时间遇上了对的人，但是却没有能力或者说没有勇气去抓住。我们应该就是这种情况，说到底我其实还是没有准备好吧。自认为自己掌控着一切，可以随便牺牲，在哪个方向都能做到很出色，但是实际上却不是这样，很多时候还是太怂了，很多东西不是说放下就能放下的。</p>\n<p>我后来才渐渐明白，我身上承载的不仅有我的梦，还有很多人的期许。虽然说我做不到背叛全世界，但是我真的愿意去争取听从你的意见，所以大多数时候我还是挺想听听你的意见的，但是从上次就可以看出来，你不怎么想给我意见。其实我还挺倾向于考研的，但是队友失恋了，很可能就能安心打比赛了，所以又陷入了一个个不确定中。就这样了，上次说过了，这种问题得不到答案的时候，反复思索只会陷入焦虑。今天和队友聊一下，倒时候再决定吧。</p>\n<h4 id=\"20190524-04-51-PM-update\"><a href=\"#20190524-04-51-PM-update\" class=\"headerlink\" title=\"20190524 04:51 PM update\"></a>20190524 04:51 PM update</h4><p>刚刚和你聊了一下，关于谈恋爱和结婚的事，我们好像持有一部分不同的观点，可能是我经历稍多一点的缘故吧。</p>\n<p>不过让我真正感兴趣的事是你发给我的表情包，哇，真的想不到，你会用这种表情包，简直人设崩塌啊，是真的，哇，你可是小仙女啊，怎么能用哪种表情包呢？然后就奶了你一句，然后就赶紧跑了，哇，说真的，现在突然有了一种恋爱的感觉，彻底不想干活了，翻来覆去看了两三遍记录才平静下来。啧啧啧，不得了不得了。</p>\n<h4 id=\"20190524-05-24-PM-update\"><a href=\"#20190524-05-24-PM-update\" class=\"headerlink\" title=\"20190524 05:24 PM update\"></a>20190524 05:24 PM update</h4><p>不过话说回来，恋爱这件事对于20出头的年轻人来说真的是一件很奢靡的事，但是对于女生来说是一件不得不考虑的事，现在回想起来还是挺残酷的。但是我还是没办法给你承诺不是吗？毕竟我自己对自己都没有多大的把握，谁知道未来会发生什么呢？可能真正让我着迷的是那一瞬间的欢乐？但是你知道这种欢乐是不能过一辈子的不是吗？我觉得如果不考虑清楚自己喜欢的到底是什么就草草的说喜欢，草草的给承诺会显得很可笑。</p>\n<p>其实吧，让你和自己谈恋爱，何尝不是我自私了呢？何尝不是为了怕你有一天累了，却没有找到我，被别人乘虚而入了，所以让你自己一个人罢了。哇，太有心急了。但是我是真的想：当你想恋爱的时候，想到的是我。</p>\n<p>212天，“归属感”是你强烈地想和他在一起。 “安全感”是你觉得他强烈地想和你在一起。 “幸福感”是彼此都强烈的想在一起而最终走在了一起。</p>\n<p>我想要“幸福感”呢，对，和你！</p>\n<h3 id=\"20190526\"><a href=\"#20190526\" class=\"headerlink\" title=\"20190526\"></a>20190526</h3><h4 id=\"20190526-10-15-PM-update\"><a href=\"#20190526-10-15-PM-update\" class=\"headerlink\" title=\"20190526 10:15 PM update\"></a>20190526 10:15 PM update</h4><p>好吧，昨天看来是太累了，又没有更新。我还挺怕我现在的状态和写日记一样，马上就没有动力了，甚至是没有感觉了。你看，我现在开始都为自己找借口不写这个玩意了。你说再过两百天，我回头看这个东西实际上只更新了十来天，会不会嘲笑自己当初的想法呢？我不知道。</p>\n<p>对了，在偷偷懒了好几天之后，我今天终于下定决心去健身了，但是我真的是太虚了，跑了大概五公里就不行了，啊啊啊啊，好难受啊，说好到时候见你的时候一定要公主抱你，感觉离目标还有好远啊啊啊啊。不行了，以后每周我要保证运动量了。</p>\n<p>对了，我想起来了上周的时候，我舍友和我说，让我这段时间学一个技能，为了你学个技能，无论什么都好，最好是乐器什么之类的，说到时候表白的时候一定会用到，我想了想不是不可以整一个，到时候看一下，感觉可以安排一下，然后突然就想到了吉他，这段时间考虑整一个了，手机什么的去他妈，暂时没时间想了，然后，你不是说你学过一段时间放弃了吗？我感觉我学会了也可以教你啊，但是不知道时间成本如何，因为毕竟还是拿不出来整块的时间，尤其是拿不出正常时间的整块时间，毕竟我不能10点下班，11点洗完澡之后开始学，你说是吧？早上的话实在是太懒了，感觉后续可以利用一下。</p>\n<p>还有就是，当初买耳机说是为了早上背单词，不吵舍友，结果后来就忘了，感觉还是自控力不够啊。而且这几个月接触的东西有点多了，感觉心有点杂了。还有就是上次说的端午节的事，当时的想法是端午节回一次家，就是湖北，但是看了一下路线，时间点都不是很好，然后票价也不是很便宜，所以暂时不考虑回家了，但是显然是不能找你玩了，所以暂时还不知道干啥。看情况约一下呗，然后现在在北京的四小只应该除了我都可能回家，所以暂时还没有安排那几天干啥。</p>\n<p>从下周开始应该就是独立干活了，可能还要自己去和pm吵架，所以可能会更加焦头烂额，不知道会不会以此为借口不更新了。感觉这段时间工作还是挺煎熬的，每天都不知道自己干啥，反正只想搞一些自己感兴趣的东西。哎，必然是没有和你一起玩开心啊。</p>\n<p><del>然后这两天回想了一下，好像当时和你一起出去玩的时候，你好像并不开心，还是说你在学校都是这个样子？不怎么爱笑？感觉都是我一个人在那里傻开心。</del>哎，还是太矫情了，可能以后我看到这段会删掉吧，暂时先加个删除线。好了，没啥想说的了。就这样，晚安。</p>\n<p>今天又听了一遍《风花雪月》，自己写了一段。</p>\n<p>风是你的头发抚摸我的脸庞的痒，花是我初见你时惊为天人的笑靥，雪是我进不去的你洁白无瑕的心，月是不曾一起走过的世间的美景。</p>\n<p>210天，风花雪月，就是我想和你谈个恋爱。</p>\n<h3 id=\"20190527\"><a href=\"#20190527\" class=\"headerlink\" title=\"20190527\"></a>20190527</h3><h4 id=\"20190527-05-30-PM-update\"><a href=\"#20190527-05-30-PM-update\" class=\"headerlink\" title=\"20190527 05:30 PM update\"></a>20190527 05:30 PM update</h4><p>今天看到了一句话，我不知道说的对不对：当一个女孩拒绝一个男孩后，通常男孩会更加难以放弃，不为别的，只是单纯的不甘心。</p>\n<p>嘿，别说，我感觉我还是不甘心作祟多一点。我是真的很喜欢你吗？是真的那种寻死觅活的喜欢吗？没有吧。所以说到底应该是不甘心作祟多一点喽。</p>\n<p>209天，愿你有高跟鞋也有跑鞋，喝茶也喝酒。愿你有勇敢的朋友，牛逼的对手。愿你对过往的一切情深意重，但从不回头。愿你特别美丽，特别平静，特别凶狠，也特别温柔。</p>\n<h3 id=\"20190528\"><a href=\"#20190528\" class=\"headerlink\" title=\"20190528\"></a>20190528</h3><h4 id=\"20190528-10-04-AM-update\"><a href=\"#20190528-10-04-AM-update\" class=\"headerlink\" title=\"20190528 10:04 AM update\"></a>20190528 10:04 AM update</h4><p>不行了，这几天实在是太忙了，忙的我甚至都没时间写日记了。</p>\n<p>今天看到一句话，人难免天生有自怜的情绪。大部分人看似的努力，不过是愚蠢导致的。</p>\n<p>觉得这句话说的挺对的，然后就仔细思考了一下，这段时间确实漂了。甚至都觉得自己还行了，可怕啊。</p>\n<p>208天，我嫉妒你身边每一个无关紧要的人，能够轻而易举的见到我朝思暮想的你。</p>\n<h3 id=\"20190530\"><a href=\"#20190530\" class=\"headerlink\" title=\"20190530\"></a>20190530</h3><h4 id=\"20190530-06-56-PM-update\"><a href=\"#20190530-06-56-PM-update\" class=\"headerlink\" title=\"20190530 06:56 PM update\"></a>20190530 06:56 PM update</h4><p>昨天让你把网易云ID发给我，但是你拒绝了。然后我就想到了，当分享歌曲的时候后缀有一个uid=xxxxxxxxxx，然后在好奇心之下我把这个后缀删掉了，但是还是能打开，而且是同一个网页，我瞬间就明白了，这个是userID，既然userID会暴露出来，那么显然是可以利用的，然后就用浏览器打开了个人网页，后缀上就是uid=xxxxxxxxxx，然后随便换了一个uid，果然能打开别人的个人主页。然后自然就是用打赌来刺激你让你分享一首歌给我喽。哈哈哈哈哈，我好坏啊。</p>\n<p>开始的时候我还以为你不会吃我这一套，没想到你居然还真的分享了，哈哈哈哈，你居然还不信。你刚刚发我的时候我还在开会，当时真的是好久都没有感受过那种心砰砰砰跳的感觉了。哇，当时真的是激动的不行，会都不想开了，直接开始瞎搞了，然后就自然搜到了你的个人主页了。哈哈哈。哇，不行了，我现在还平静不了。真的是，好久都没这么爽过了，怎么说呢，就像小孩子耍赖皮拿到了自己心爱的玩具，这种感觉你知道吧。真的是好爽啊啊啊啊啊。</p>\n<h4 id=\"20190530-09-19-PM-update\"><a href=\"#20190530-09-19-PM-update\" class=\"headerlink\" title=\"20190530 09:19 PM update\"></a>20190530 09:19 PM update</h4><p>我就猜准了你会来问我怎么几分钟搞出来你的账号的。本来想告诉你的，忍住了。然后就调侃你，让我端午节去找你玩，必然会被你拒绝啊，就是随便调侃一下。</p>\n<p>突然想起来你上次提到，为啥我每次都是很了解你的样子，其实我想说的是，如果你想了解一个人，总是有各种各样的方式去了解他（她），你说是吧？无非就是把拿来想自己事情的时间拿来想另外一个人而已，然后站在一个旁观者的角度，总能看清楚很多事情不是吗？但是很多时候还是不够冷静，所以大多数时候都是猜错罢了。其实，哪存在一个人把一个人猜准这种情况呢？可不都是我想了解你，然后尝试去接触你罢了。如果对你不感兴趣的话 ，又怎么会去想了解你呢？</p>\n<p>哇，当你发给我“哼”的时候，真的是整个人都化了。哇，我都能想象到你假装生气的样子，真的是想当面哄你一下啊啊啊啊。算了算了，自己还是太怂了，如果真的下一次见到你的话，真的是不想分开了。一定要黏着你。哇，不行了，真的想坐最后一趟火车过去了，我查一下。</p>\n<p>206天，嘻嘻，有没有觉得我敲级好？让我们一起牵手走完整个宇宙吧~~</p>\n<h2 id=\"201906\"><a href=\"#201906\" class=\"headerlink\" title=\"201906\"></a>201906</h2><h3 id=\"20190608\"><a href=\"#20190608\" class=\"headerlink\" title=\"20190608\"></a>20190608</h3><h4 id=\"20190608-05-37-PM-update\"><a href=\"#20190608-05-37-PM-update\" class=\"headerlink\" title=\"20190608 05:37 PM update\"></a>20190608 05:37 PM update</h4><p>昨天你突然和我说了，高考结束的事，也就是考完数学的时候，我和你说的话，还是蛮意外的。emmmmm，说实话是无心之言，不知道对你造成成了何种影响。而且但是是真的没有别的意思，也不是习惯你想和你有什么关系之类的。只是单纯的询问。可能是觉得好看的小姐姐不能那么难过是吧。</p>\n<p>其实当你昨天和我说完这件事的时候，我就有一种预感，你好像看到这篇算不上日记的东西？不太清楚是否是这样，可能就是一种单纯的直觉吧。就像上次。</p>\n<p>197天，你是一场无关风月的红尘， 成全了我一厢情愿的认真。</p>\n<h2 id=\"201907\"><a href=\"#201907\" class=\"headerlink\" title=\"201907\"></a>201907</h2><h3 id=\"20190717\"><a href=\"#20190717\" class=\"headerlink\" title=\"20190717\"></a>20190717</h3><h4 id=\"20190717-10-37-AM-update\"><a href=\"#20190717-10-37-AM-update\" class=\"headerlink\" title=\"20190717 10:37 AM update\"></a>20190717 10:37 AM update</h4><p>昨天晚上做梦梦到你了，梦到你来找我玩，你不排斥我了，我们一起压马路，然后你说饿了，我们就去吃东西，开心到冒泡。点完餐，你在那安安静静的做着，我看着你，你问我“看啥”（傲娇脸）， 然后我就笑了。再后来，我去取餐，让你在这乖乖等我，等我回来的时候，看到一个小哥在搭讪你，我就很气，然后，然后，然后就和那个小哥打起来了。然后我就醒了。气死我了，都怪那个小哥，不然好歹我能看你吃碗面不是？</p>\n<h2 id=\"201910\"><a href=\"#201910\" class=\"headerlink\" title=\"201910\"></a>201910</h2><h3 id=\"20191029\"><a href=\"#20191029\" class=\"headerlink\" title=\"20191029\"></a>20191029</h3><h4 id=\"20191029-2-34-PM-update\"><a href=\"#20191029-2-34-PM-update\" class=\"headerlink\" title=\"20191029 2:34 PM update\"></a>20191029 2:34 PM update</h4><p>表达爱意最好的时机是，三年前到现在的陪伴，其次是现在。</p>\n<h1 id=\"Her\"><a href=\"#Her\" class=\"headerlink\" title=\"Her\"></a>Her</h1><p>199808062050 </p>\n<p><img src=\"/img/something.jpg\" alt=\"\"></p>\n<p>另外一部分原因是，我想和你报考一个学校，在你考完的那个时候，能第一时间看到你。</p>\n","site":{"data":{}},"excerpt":"<p>我爱你，像蚁溃洪堤，一泻千里。</p>","more":"<h2 id=\"201905\"><a href=\"#201905\" class=\"headerlink\" title=\"201905\"></a>201905</h2><h3 id=\"20190501\"><a href=\"#20190501\" class=\"headerlink\" title=\"20190501\"></a>20190501</h3><h4 id=\"20190501-09-00-AM-update\"><a href=\"#20190501-09-00-AM-update\" class=\"headerlink\" title=\"20190501 09:00 AM update\"></a>20190501 09:00 AM update</h4><p>今天开始我想记录下和她的所有故事。</p>\n<h4 id=\"20190501-06-15-PM-update\"><a href=\"#20190501-06-15-PM-update\" class=\"headerlink\" title=\"20190501 06:15 PM update\"></a>20190501 06:15 PM update</h4><p>今天终于见到了心仪的小姐姐了，然后在天津逛了一大圈，刚下高铁，吃了个饭，然后逛了会街，然后就去听相声，然后逛了逛他们学校，在图书馆坐了一会就这样，哈哈哈哈哈哈哈，巨开心</p>\n<h4 id=\"20190501-11-52-PM-update\"><a href=\"#20190501-11-52-PM-update\" class=\"headerlink\" title=\"20190501 11:52 PM update\"></a>20190501 11:52 PM update</h4><p>下午的时候和她一起去吃了个饭。然后我回宾馆把东西放下后就拉着她各种溜达，但是感觉她兴致不高。可能是她要考研的缘故。确实，感觉拉着一个想考研的人也挺罪恶的。但是我是真的很开心，哇，真的是只要想到和她一起，真的是压马路都巨开心<em>^_^</em> </p>\n<h3 id=\"20190502\"><a href=\"#20190502\" class=\"headerlink\" title=\"20190502\"></a>20190502</h3><h4 id=\"20190502-00-31-AM-update\"><a href=\"#20190502-00-31-AM-update\" class=\"headerlink\" title=\"20190502 00:31 AM update\"></a>20190502 00:31 AM update</h4><p>君子爱玉如将帅熬鹰，我不急，对你我有无限的耐心。</p>\n<h4 id=\"20190502-09-56-AM-update\"><a href=\"#20190502-09-56-AM-update\" class=\"headerlink\" title=\"20190502 09:56 AM update\"></a>20190502 09:56 AM update</h4><p>看来你昨天是真的累了，以至于你现在才醒，我倒是挺担心的，7点半就醒了，然后给你发消息没回，就知道你是累着了。哎，心疼。准备去找你的，被你拒绝了。非说你来找我，也行吧。</p>\n<p>有时候我还挺惶恐的，万一就是南柯一梦就尴尬了，不过我现在是真的开心呀呀呀呀呀呀。</p>\n<h4 id=\"20190502-11-26-PM-update\"><a href=\"#20190502-11-26-PM-update\" class=\"headerlink\" title=\"20190502 11:26 PM update\"></a>20190502 11:26 PM update</h4><p>晚上约你吃晚饭，然后顺其自然的表白了？说实话是准备留到明天说的，但是一不小心漏嘴了，天真以为会挺顺利的。自认为还是不错的？但是好像有点出乎意料？巨难受？ </p>\n<h3 id=\"20190503\"><a href=\"#20190503\" class=\"headerlink\" title=\"20190503\"></a>20190503</h3><h4 id=\"20190503-00-42-AM-update\"><a href=\"#20190503-00-42-AM-update\" class=\"headerlink\" title=\"20190503 00:42 AM update\"></a>20190503 00:42 AM update</h4><p>还是没想明白到底是哪个环节出问题了？而且我都明说了不逼你？我可以等234天啊啊啊啊啊啊啊啊啊啊，难受！</p>\n<h4 id=\"20190503-10-04-AM-update\"><a href=\"#20190503-10-04-AM-update\" class=\"headerlink\" title=\"20190503 10:04 AM update\"></a>20190503 10:04 AM update</h4><p>混进了你们学校，然后又混进了你们图书馆，哈哈哈哈，当时门卫看了我一眼我都有一种做贼的感觉，真刺激。坐在图书馆写下这一段文字，还是略难受？反正还没缓过来？其实吧，你之前拒绝我的时候我都安慰自己，我还不够优秀啊，我要更优秀一点，所以我之前一直很怂啊，这段时间才敢和你说话，但是好像啊，你还是这样啊，说明啊，我还得努力啊，冲鸭。</p>\n<h4 id=\"20190503-10-26-AM-update\"><a href=\"#20190503-10-26-AM-update\" class=\"headerlink\" title=\"20190503 10:26 AM update\"></a>20190503 10:26 AM update</h4><p>还记得昨天去失恋博物展，记得当时我两感受都相同，别人的故事始终是别人的故事，打动不了自己，现在想来就是这种感受，一直都是我的一厢情愿，还奢望你的回应，说到底还是自己感动了自己，却没有感动你。</p>\n<h4 id=\"20190503-06-52-PM-update\"><a href=\"#20190503-06-52-PM-update\" class=\"headerlink\" title=\"20190503 06:52 PM update\"></a>20190503 06:52 PM update</h4><p>你去上厕所去了，我偷偷码一点。</p>\n<p>每每想到你连一点妄想都不给我就巨难受，看着你画了一下午的画，你认真画画的样子真的很美。但是我还是不知道你到底是啥意思，还是单纯的难过。</p>\n<h4 id=\"20190503-09-08-PM-update\"><a href=\"#20190503-09-08-PM-update\" class=\"headerlink\" title=\"20190503 09:08 PM update\"></a>20190503 09:08 PM update</h4><p>09:05开的高铁，我们8:55还没看到车站，我估计是赶不上了，当时我们两一起在大马路上跑，我真的有一种私奔的感觉。当时过安检的时候，我真的好难受，感觉自己像失去了你一样，但是都没有得到过何谈失去呢？</p>\n<p>我当时就想啊，如果我还能赶上车，那就是老天真的不帮我了，如果赶不上我就赖上你了，但是好死不活晚点了？真的是气哭了。看来还是我心急了，贼老天都不帮我了，所以爱情这东西啊，还得时间沉淀，所以啊，我不急啊，所以啊，我可以等啊，所以啊，我唯一怕的就是你不见了啊。</p>\n<p>就这样吧，再见了。</p>\n<h3 id=\"20190504\"><a href=\"#20190504\" class=\"headerlink\" title=\"20190504\"></a>20190504</h3><h4 id=\"20190504-00-54-AM-update\"><a href=\"#20190504-00-54-AM-update\" class=\"headerlink\" title=\"20190504 00:54 AM update\"></a>20190504 00:54 AM update</h4><p>估计你睡了，写好的东西最后还是发给你了，也不管你看不看了，反正肺腑之言，不吐不快。</p>\n<p>果然你没睡着，和你说了两句，看你没兴趣我就溜了。</p>\n<h4 id=\"20190504-1-37-AM-update\"><a href=\"#20190504-1-37-AM-update\" class=\"headerlink\" title=\"20190504 1:37 AM update\"></a>20190504 1:37 AM update</h4><p>看了你是真的了，今天就不等了，毕竟我又不是你的谁，劳累你三天了，本来就挺过意不去的，就这样也好，是你说的，好歹还能保存美好的回忆不是？</p>\n<p>让你填志愿和考完研和我说一声，不知道你会不会说，232天，会有多少变数呢？谁都不知道，我现在唯一能做的就是更努力吧。</p>\n<h4 id=\"20190504-01-00-PM-update\"><a href=\"#20190504-01-00-PM-update\" class=\"headerlink\" title=\"20190504 01:00 PM update\"></a>20190504 01:00 PM update</h4><p>队友看我实在是太难受了，拉着我去打球了，打了一个小时，我实在是不想动了。就拉着他回公司了，码下这一段了，你猜我想开需要多久？估计你不敢和我打赌了？</p>\n<h4 id=\"20190504-05-44-PM-update\"><a href=\"#20190504-05-44-PM-update\" class=\"headerlink\" title=\"20190504 05:44 PM update\"></a>20190504 05:44 PM update</h4><p>我现在突然挺后悔当时没有定三晚上酒店，那样的话，我们至少还能多待一起一天不是吗？虽然可能没那么开心，但是至少还能看到你不是吗？我现在真的是啥都不想干了。</p>\n<h4 id=\"20190504-10-45-PM-update\"><a href=\"#20190504-10-45-PM-update\" class=\"headerlink\" title=\"20190504 10:45 PM update\"></a>20190504 10:45 PM update</h4><p>我现在挺想和你打个赌的，你猜232天能否冲淡我对你的想法呢？我赌不会。如果真的淡了，我也不知道该说好还是不好，ok，我现在就数日子等我赢，刚刚给你发了日报，没有别的意思，只是希望你每天能整理整理，希望你好，（可能也有不甘心作祟？），不知道啦，我也很茫然的好伐。</p>\n<h3 id=\"20190505\"><a href=\"#20190505\" class=\"headerlink\" title=\"20190505\"></a>20190505</h3><h4 id=\"20190505-10-24-AM-update\"><a href=\"#20190505-10-24-AM-update\" class=\"headerlink\" title=\"20190505 10:24 AM update\"></a>20190505 10:24 AM update</h4><p>劝自己暂时放下，安心搬砖，好好学习。唯一能让我安慰的就是我们组另外一个人表白也被拒绝了，但是我还是很难受，我果然是个loser，连同组的人都和我一样惨，哭了。</p>\n<h4 id=\"20190505-12-13-AM-update\"><a href=\"#20190505-12-13-AM-update\" class=\"headerlink\" title=\"20190505 12:13 AM update\"></a>20190505 12:13 AM update</h4><p>emmmm,前几天，天天中午吃饭很早，以至于我现在饿了，但是还有半个小时才吃饭，饿得不行。哇，我还想和你一起吃饭。231天，我要是约饭，你不来，打你呦。</p>\n<h4 id=\"20190505-12-57-AM-update\"><a href=\"#20190505-12-57-AM-update\" class=\"headerlink\" title=\"20190505 12:57 AM update\"></a>20190505 12:57 AM update</h4><p>刚刚和老大他们聊了一下，他们的意思都是劝我放弃，说我还年轻，不值得，同样的人还会遇到很多，但是我目前还不这样想，有时间确实需要好好整理一下，并不知道自己到底想要的是什么，这不像我，我一直以为自己想要的东西很明确，但是这件事上，确实还有疑惑的地方。让我想到了以前看到的一句话：</p>\n<p>“无论是朋友，工作还是恋爱，如果你感到与对方特别契合，沟通愉悦甚至时时让你灵光乍现，你知道这说明什么吗？</p>\n<p>99%的可能是你遇到了阅历智商情商都在你之上的人，而且对方因为什么目的在向下兼容而已，只要TA愿意，TA可以和每个跟你一样级别的人，打到这种心有灵犀，</p>\n<p>剩下的1%就是你遇到了SOULMATE。”</p>\n<p>我并不知道我遇到的到底是什么，按照你前几天的意思是：我对你了解太多了，所以你的意思是我是你的99%？可能吧，可能只有我觉得我们是那1%，我一直以为我们不需要言语的交流是默契，现在看来可能不是？可能只是大家见的多了，就明白了，懂得察言观色？我并不知道，但是我很习惯这种感觉。</p>\n<p>他们都说，人这个东西啊，很奇怪，可能你现在看到的人，喜欢的人，愿意放弃一切为了的人，可能过几年再看就不过如此了。我不知道，但是我现在确实很放不下。我一直觉得，这种人，可能十年都遇不到一个，放弃太难了。我想过几次，到底是为啥，你会拒绝，我暂时的理解是，我还不够优秀，所以我还要努力。他们说，等你变的优秀了，你就会明白，什么才是你想要的人。说真的，我不懂，不知道谁说的是对的。所以我选择让时间筛选，没有什么是时间搞不定的。231天后，一切都会有答案，如果你真的讨厌我，我就离开了，就当做是一场年少无知的梦。</p>\n<h4 id=\"20190505-04-47-PM-update\"><a href=\"#20190505-04-47-PM-update\" class=\"headerlink\" title=\"20190505 04:47 PM update\"></a>20190505 04:47 PM update</h4><p>他们说让我忙起来，忙起来就不会想你了，但是我现在好闲啊，也不想忙起来，今天有比赛，但是已经没心情打了，怪只怪自己太年轻了，以前居然会觉得比赛比你有意思。老大说，错过了就是错过了，有些时候不能强求，我不知道，不知道该怎么做，不敢强求。</p>\n<h4 id=\"20190505-09-36-PM-update\"><a href=\"#20190505-09-36-PM-update\" class=\"headerlink\" title=\"20190505 09:36 PM update\"></a>20190505 09:36 PM update</h4><p>开发的东西很快就做完了，所以今天一直很闲，然后复习的事也就随便搞了搞，反正也不怎么想搞学习了，然后和队友商量了一下考研的事，他们建议不要冲动读医，说是时间可能耽误不起，不太清楚，感觉涉及到他们的利益问题了，所以谁都说不清楚。然后下午到现在都在杂七杂八的看，配了配博客，看了看latex，看了看vim，学了学haskell，反而是感觉啥都没干，其实我还挺怕这种感觉的，挺怕时间真的将我们冲淡了，很奇怪的是，我今天很平静，异常平静，没有难受也没有开心，我不知道这是不是变淡的原因，反正时间真的在一点点冲淡吧，然后后天有考试，索性把明天的假也给请了，明天好好休息一下，有些东西也确实需要理一理。</p>\n<p>emmmm，但是说自己对医学感兴趣是骗你的，是因为我对你感兴趣罢了，但是我确实是真的耐着性子读了一半的卫生统计学，无论是简单还是难，我都耐着性子读了。在你拒绝我两次之后，那本书就放在角落接灰了。确实提不起兴趣读下去。偶尔想想自己目的性其实也很强的，emmmm，可能是功利性很强，没有用的事情就不做了。暂时还不清楚，可能等着这三周考完试之后会重新捡起来接着读？然后整理整理笔记？然后假装很早之前整理的，然后发给你？然后试图感动你？呵呵，渣男！反正现在暂时是这么想的吧。妈呀，从来没想过为了哄一个女孩子开心，我居然这么有心机，太恐怖了。</p>\n<p>哎，反正这两天想的挺多的，暂时也不知道自己在想啥，很多时候都是没想明白搞得错，反正以后三思而行吧，也不敢太打扰你了，日报今天还是决定接着发，发21天就溜了，能对你造成多少好的坏的影响我也不知道，我也不敢说这一套在你这是否是对的，只求心安罢了。</p>\n<h3 id=\"20190506\"><a href=\"#20190506\" class=\"headerlink\" title=\"20190506\"></a>20190506</h3><h4 id=\"20190506-10-44-AM-update\"><a href=\"#20190506-10-44-AM-update\" class=\"headerlink\" title=\"20190506 10:44 AM update\"></a>20190506 10:44 AM update</h4><p>今天虽然请假了，还是来公司玩了会，刚喝了口水，现在开始码这段文字。</p>\n<p>这几天睡眠质量特别不好，应该是从5.1晚上开始的，可能是担心你身体状态，我应该和你说过，当时第二天我六点就行了，怎么也睡不着，也不敢给你发消息，怕你还在休息，我以为只是这个原因，现在看来不是，已经三天没见你了，但是还是基本六点多就醒了，然后也不怎么睡得着，因为队友还在睡觉也不敢起床，偶尔躺在床上会背背单词，偶尔也会想想你，偶尔也不知道自己在干啥。</p>\n<p>五点钟的票回学校，暂时还没定下来啥时候走，我应该和你说过，我不想赶路，所以一般会有预留，地铁大概是一个小时，所以我打算提前两个小时走，就算走错了，好歹还有挽回的余地。</p>\n<p>哎，其实一个人赶路还挺无聊的，还是两个人在一起比较好玩，旅途寂寞鸭。昨天给你发日报了，你还是没回我，可能是把我拉黑了？不知道，没有别的意思，只是想让你养成一个（我也不知道是好是坏的）习惯罢了。别太敏感啊。</p>\n<h4 id=\"20190506-03-53-PM-update\"><a href=\"#20190506-03-53-PM-update\" class=\"headerlink\" title=\"20190506 03:53 PM update\"></a>20190506 03:53 PM update</h4><p>现在闲下来了，就等高铁了，然后就想了想之前几天发生的事，其实我还是觉得挺玄学的，首先就是失恋博物展的那个球，说好都是脱单呢，怎么就咱两是单身了，不过说的也对，12.23才考完研，今年是不指望脱单了。</p>\n<p>还有就是单车那个事，都10点四十了，还有四十分钟的路程，显然是赶不回去的啊，怎们回事啊，居然还能遇到各种单车，还有就是我为啥骑车那么慢，你真的不知道？怎么可能是因为累了，还不是不像你回学校吗。这样好歹有一晚上的时间，哪怕是纯聊聊天也行啊，你咋回事啊，看不出来？哇，就两三分钟就进不去了，你可真的赶啊，话说我还真不知道你是不懂还是装不懂，可能二者兼有，不清楚啊。但是我宁愿是前者吧。</p>\n<p>230天，我离你又进了一步，但是你退后了多少呢？</p>\n<h4 id=\"20190506-10-05-PM-update\"><a href=\"#20190506-10-05-PM-update\" class=\"headerlink\" title=\"20190506 10:05 PM update\"></a>20190506 10:05 PM update</h4><p>马上就要到学校了，想到了当时去你们学校的时候，当时在你们图书馆歇息的时候，你应该是真的困了，都怪我当时不知道关心，让你受累了。现在想想当时怎么着也得让你休息休息啊。真的是迂腐之极。哇，不行了，想起的细节越多，越觉得自己是真的蠢。</p>\n<p>今天一天都在赶路，所以整个人的状态不是很好。而且也不太喜欢这种放松的感觉，但是还是不想学习。话说现在心态真的是变了好多了，今天我队友还在劝我放弃，我不知道，可能还是当局者迷的缘故，但是还是没和你说，今天还是照旧把日报发给你了，今天是第三天，还剩18天，然后就应该不会给你发消息了，让你安心考研了，考完研有的是时间不是吗？</p>\n<h3 id=\"20190507\"><a href=\"#20190507\" class=\"headerlink\" title=\"20190507\"></a>20190507</h3><h4 id=\"20190507-10-35-AM-update\"><a href=\"#20190507-10-35-AM-update\" class=\"headerlink\" title=\"20190507 10:35 AM update\"></a>20190507 10:35 AM update</h4><p>229天了，今天突然有一种报复心理，我一定要让你后悔。</p>\n<p>突然想到当时和你一起听相声的时候那个哥说了一句“我对于这种人，没有羡慕没有嫉妒，只有恨”，哈哈哈，说实话，这就是传说中的由爱生恨吗？反正我现在挺难受的，突然也想让你难受一下，哈哈哈，开个玩笑。</p>\n<p>最后悔莫过于因为年少无能而放下。我拼命成长不过是为了你回眸一笑。他们说等你以后长大了会遇到不一样的人，不一样的景，而我只想记住每一个不一样的你。</p>\n<h3 id=\"20190508\"><a href=\"#20190508\" class=\"headerlink\" title=\"20190508\"></a>20190508</h3><h4 id=\"20190508-10-38-AM-update\"><a href=\"#20190508-10-38-AM-update\" class=\"headerlink\" title=\"20190508 10:38 AM update\"></a>20190508 10:38 AM update</h4><p>228天。</p>\n<p>昨天晚上的时候，你终于是回复我了，说是怕我考试有影响，这件事怎么说呢，你要是早点回复我的话，我可能还会开心一点。但是还是挺开心的，好歹回复我了。</p>\n<p>昨天晚上聊了一下，应该再不会打扰你了，然后以后真有啥想说的，就更新到这里了，确实不该打扰你的，扰菇凉良久，菇凉莫怪啊。</p>\n<p>昨天你和我说，哎，算了不评价，怎么说呢，大家都在慢慢成长吧。</p>\n<p>不过有句话你说的还是挺对的，等待会让东西变质，或许应该换句话说：时间会让东西变质。没有什么可以敌得过时间。我深知我也不行，但是我觉得200+天还是不难的吧。</p>\n<p>还有就是你说的对，拒绝就应该拒绝到底，你做的很好，但是我还是很难过，毕竟当一个人真正拒绝你的帮助的时候就是真的想和你断了吧。至少没有钓着你的心思，或许我应该开心？</p>\n<p>后来仔细思考了这段时间的经历，感觉确实有些自作多情了，很多时候都是自己一厢情愿罢了。</p>\n<p>emmmm，大概就是这样了，可能真的是告一段落了，也不会找你聊天了，大家都松口气，如果真的是有缘，再见吧。</p>\n<p>当我码下这段文字，无悲无喜，甚至有一种完成任务的感觉，轻松？算不上吧。只是觉得暂时放下了一些东西，可以安心前行了。</p>\n<p>可能也和我老大说的对，他说我纯粹是大学时候没干什么，然后大学快结束了想干点什么，我不知道，当然也可能是自己飘了，觉得世界尽在掌握中，所以开始有恃无恐了。还好，你让我明白，自己还有很多的努力方向，还是不够优秀啊。所以继续努力吧。</p>\n<p>现在也不敢随便立flag了，但是还是想说一下，如果你真的准备二战的话，我就准备考研了，和你一起，哪怕你不理我，我也要强求一把。当然如果你真的考上了的话，我也要准备跳槽了，反正能近一点就近一点吧。真的是怕了。</p>\n<h4 id=\"20190508-12-55-PM-update\"><a href=\"#20190508-12-55-PM-update\" class=\"headerlink\" title=\"20190508 12:55 PM update\"></a>20190508 12:55 PM update</h4><p>刚刚吃饭聊了一下，反正我感觉我还好啊，没有你说的那种腼腆的感觉，可能很多时候在想事情所以没怎么说话，或者说是很多话不太好意思说，或者是感觉说出来不好，可能你觉得我在欲言又止？或者说是“腼腆”。不太清楚，哇，第一天我可是嗓子都说哑了，你居然会觉得我腼腆。不过说真的，刚见到你的一瞬间真的是有好多话想说但是真的是，虽有千万肺腑之言，却又无语凌噎。emmmm，刚见到你的时候是在瓷房子门口，当时还挺想抱你一下的，但是当时咱们前面有一个围栏，不知道你注意了没有，然后就放弃了。哎，还是太怂了。</p>\n<p>昨天你给我发消息之后真的是好晚才睡着，本来12点钟就放下手机啦，硬是拉着舍友聊天，聊我和你，硬拉这聊到了一点半。哎，回想这几天发生的事，还是有些地方没有做好。还是有很多事挺后悔的，用我队友的话来说就是我太怂了。很多时候都过于胆怯。</p>\n<p>我脑子里突然蹦出一个词来——自卑，其实仔细回想一下，很多时候我大概都是自卑心作祟。你也说了，你觉得我很优秀，其实我一直不这么觉得，反正每次觉得自己还行的时候总能遇到一些吊人，然后看看他们的经历，然后就觉得自己还有很多地方需要努力。</p>\n<p>还有就是你觉得我把你美化了，这个不好评价，自古有云：情人眼里出西施。我不知道是不是因为某些奇奇怪怪的原因导致的。所以暂不做评价。但是真的是觉得你是个挺好的菇凉啊，一直觉得你值得世间上最美好的东西。有时候，看着你皱眉头真的是还略有难受？反正感觉你要是真能无忧无虑的生活还是挺好的。这段时间你应该是为我烦了，我也就暂时不打扰你了，等你安心考完研吧。反正这个事不急，咱们还年轻，有大把时间可以挥霍。哈哈哈哈哈。</p>\n<p>还有就是这段时间准备开始锻炼了，主要是当时第一天我们都走累了，我想了一下，要不要公主抱你，后来估计了一下自己的身体状态，还是觉得太虚了，所以这段时间准备好好锻炼一下。还有就是学习的事，这段时间我考试实在是太多了，工作时间也压得很紧，所以暂时不考虑接着读卫统了，先把考试糊弄过去再说，之前看过的一半也没有整理笔记，题目也是杂七杂八做了，没有系统的整理，还是准备从头开始读，然后顺便整理整理笔记，题目也暂时不做了。先读完再说。感觉东西不是很难，所以希望你不要着急，慢慢复习就行。现在时间虽说不多了，但是也不用太着急，估计你这几天都没有在12点之前睡过觉，还是要早些歇息为好。</p>\n<p>对了，你画的那幅画，我暂时还没有挂起来，因为房间里的那幅画是竖的，你画的是横的，不太好弄，所以准备抽时间去买个钉子，重新钉一下，然后再挂起来，不过你也别担心会弄坏了，我保存的老好了。偶尔学习累了会看看那幅画，你画的真好看，当然，你也好看。</p>\n<p>还有就是那天我真的没有占你便宜啊，我说的都是心里话，你不是也没反驳吗？我就当你默许了。反正等你考完研我就非要缠着你，和你一起准备复试。至于我考研？暂时还没定，等省赛结束之后再说吧。看省赛情况，其实吧，我还挺想省赛打的不太好的，这样就能安心学习了。感觉比赛真的已经没有了当年的激情了。</p>\n<p>还有就是舍友昨天晚上和我聊了关于感情会随着时间的延长而降低。他说如果你真是我对象，可能两个月我就没有了现在的感觉了。我不知道，但是你看你，就做的很好啊，直接拒绝了我，让我有时间去思考和解释这件事，等我想的差不多了，咱们就在一起了？</p>\n<p>说到底还是得抽时间想一想这件事，下周就省赛了，省赛结束应该会有时间思考这个问题，就这样。</p>\n<h4 id=\"20190508-06-22-PM-update\"><a href=\"#20190508-06-22-PM-update\" class=\"headerlink\" title=\"20190508 06:22 PM update\"></a>20190508 06:22 PM update</h4><p>今天活干完了，现在算是比较闲了，不知道干啥了。</p>\n<p>所以就过来bb两句。这两天的状态不是很好，一部分是舟车劳顿的缘故，另外一部分原因就是突然有了迷茫的感觉：突然不知道了自己真正想要的是什么。是工作？是考研？是恋爱？我不知道，一直以来都很讨厌这种感觉，不知道自己想要什么可能是一种病态的迷茫，也很容易变成空洞的人。其实我还挺羡慕你的目的性的，能知道自己想要什么真的是一种很好的状态。它会至少让你有个目标，然后剩下要做的就很简单了，细化目标，完成目标。</p>\n<p>好像说这些在这里不合适，说一点和你有关的。</p>\n<p>你说我很多时候能一眼看穿你，emmm，这件事怎么说呢，我的解释是，咱两有天然的默契，这种默契与生俱来，不用培养，不用磨合。我最爱的就是这种状态。我一直以为这种情况是天作之合，很少有人能这样默契吧？这辈子能遇到一个真的很不容易，或许没了这份默契就不那么喜欢你了？我不知道，但是我是真的喜欢这种默契，你也知道，我情商很低，说明咱两都没耍心眼，所以这种与生俱来的默契难道不值得被珍惜吗？反正我是不打算就这么错过了。他们说这种默契，一个人一辈子会遇到很多，我不信，真的不信。反正这一次，我一定要抓住。</p>\n<h4 id=\"20190508-7-24-PM-update\"><a href=\"#20190508-7-24-PM-update\" class=\"headerlink\" title=\"20190508 7:24 PM update\"></a>20190508 7:24 PM update</h4><p>他们说的其实挺对的，人啊一旦忙起来什么都忘了，所以当时他们劝我忙起来就好了，这几天确实渐渐忙起来了。但是偶尔还是做事做到一半被打断，然后就神游太虚了。。。当然也可能是还不够忙。就是偶尔闲下来连个聊天的人都没有，还是挺难受的，之前还能和你聊聊天，现在都不敢给你发消息了。就这样吧。真有啥想说的，我就写这里了。</p>\n<p>其实我一直都没想好 自己到底为啥要写这个东西，或者说写这个东西的目的是什么，虽然不怎么花时间，一天大概也就半小时，但是确实不明白写这个的目的是啥，写给50年后的自己看？那也太矫情了。还是写给228天后的你看？那也太无耻了。暂时没想好，只是单纯的觉得，能遇见你还是一件挺幸运的事，挺值得怀恋和回忆的事，所以就这样记录下来了，就算以后真的不能在一起了，想到以前喜欢过这么可爱一个菇凉，也是一件随时回忆起来都能让人开心的事吧？</p>\n<h4 id=\"20190508-11-30-PM-update\"><a href=\"#20190508-11-30-PM-update\" class=\"headerlink\" title=\"20190508 11:30 PM update\"></a>20190508 11:30 PM update</h4><p>还好当时没有公主抱你，突然感觉自己好虚啊，不行了，接下来一段时间准备好好锻炼一下了，等下一次见面给你一个惊喜，到时候抱你没跑。</p>\n<h3 id=\"20190509\"><a href=\"#20190509\" class=\"headerlink\" title=\"20190509\"></a>20190509</h3><h4 id=\"20190509-09-19-AM-update\"><a href=\"#20190509-09-19-AM-update\" class=\"headerlink\" title=\"20190509 09:19 AM update\"></a>20190509 09:19 AM update</h4><p>今天早起了，背了会单词，然后就来公司学习了，复习时间就剩下今天和明天了。</p>\n<p>早上的时候看到公交车让了一个老人过马路，不禁想起了我从天津回来的时候，当时晚上11点多了，我其实还挺累的，当时我后面是一对夫妻，带着两个孩子，两个孩子都睡着了，当时因为你拒绝我，我真的挺难受的，犹豫了一段时间还是让他们排在我前面，当时我想了好长时间，我都这么惨了，为啥还要对世界抱有善意？再后来，也就是上周考完试了，我回北京的时候，当时我身上还有一点现金，北京地铁现在好像还不让用微信？反正一个人在那干着急，想了想还是帮助了一下。我真的不清楚，为啥自己还要对陌生人抱有善意，真的是，自己过的就已经够惨了。后来想想还是为自己积福吧。所以我就想啊，我都以德报怨了，你总不能拒绝一个商量的小男孩吧。</p>\n<p>今天北京天气很好，早上八点钟就已经有了太阳，真的很想出去逛逛，后来想想一个人还是挺无聊的。突然想到了当时给你打伞的日子，哈哈，我记得当时有一段时间，当时人流拥挤，你头都不回就往前冲，哇，当时还是太怂了，当时就应该拉住你，让你等等我的，后来好像因为打伞不及时被你吐槽了？哈哈，感觉你当时委屈的抱怨的时候的样子真的很可爱。哎，当时太直男了。</p>\n<h4 id=\"20190509-07-22-PM-update\"><a href=\"#20190509-07-22-PM-update\" class=\"headerlink\" title=\"20190509 07:22 PM update\"></a>20190509 07:22 PM update</h4><p>今天和一个考研的神仙聊了一下，他说我不该五一的时候去找你玩的，他说这个时候大家都开始准备考研了，我这样做，非但没有帮你解决问题，反而是抛给你一个问题，让你困惑更多，尤其是我那些若有若无的帮助更是显得愚蠢至极。我其实觉得他说的挺有道理的，我并不知道考研原来压力那么大，我其实一直觉得考研和期末考试没啥区别，看来是我年轻了，很多时候都把事情想简单了，尤其是想得到你的回应这件事上，真的是蠢了。</p>\n<p>仔细想了想确实不该这个时候去打扰你的，我还天真以为这对你不会有啥影响，今天才明白过来确实是副作用更大一下。但是我还是希望你压力不要那么大，还是要放轻松一些的，这段时间感觉你睡觉都挺晚的，一点钟还没睡觉，感觉这样还是对身体不太好，建议你每天早睡一点，毕竟晚睡了早上精神会不好，你们又都是需要背书的课，晚睡学习不如早起学习。</p>\n<p>其实每天都有好多有意思的事情分享给你，但是实在是不忍心打扰你，很多东西又不太好记在这里，所以很多都写成了日记，等你有机会了，到时候咱两可以一起读读？</p>\n<p>还有就是，我其实不怎么想告诉别人咱两之间的事，没有别的意思，一是咱两毕竟还没成不是，还有就是很多人问起来给我一种听故事的感觉，不像是帮我分析问题的样子，让我有一种”我有这种经历，我是不是很厉害“的炫耀的感觉，这种感觉让我很反感，不知道为啥，这种感觉会让我觉得，这份感情变得不那么纯粹了，就像一个小孩在炫耀自己的经历一样，幼稚而无趣。</p>\n<h4 id=\"20190509-07-57-PM-update\"><a href=\"#20190509-07-57-PM-update\" class=\"headerlink\" title=\"20190509 07:57 PM update\"></a>20190509 07:57 PM update</h4><p>刚刚吃完饭，突然想到一件事，突然就难过起来了。</p>\n<p>就是五一期间的时候我们吃饭都特别早，所以刚回北京的时候我六点钟就饿了，但是这才六天过去了，我的作息又和公司一样了，可能这就是人们常说的时间会磨平一切？慢慢的，你给我造成的影响会渐渐的淡化？真的还是挺难受的，就像你留给我的东西，被别人抢走了一样。偏偏我还不知道能做什么才能留下你留给我的东西。真的很怕，有一天再听到你的名字，没有了现在这种心慌或者说是心动，反倒是无悲也无喜。</p>\n<h3 id=\"20190510\"><a href=\"#20190510\" class=\"headerlink\" title=\"20190510\"></a>20190510</h3><h4 id=\"20190510-08-45-AM-update\"><a href=\"#20190510-08-45-AM-update\" class=\"headerlink\" title=\"20190510 08:45 AM update\"></a>20190510 08:45 AM update</h4><p>今天还是这个点起床了，昨天锻炼有点过猛了，现在浑身酸痛。。。。早上六点多醒了一次，一度怀疑自己手断了。现在就像被人揍了一顿一样。。。。</p>\n<p>早上刚醒的时候仔细思考了一下，目前知道的人有：我两个现任队友，一个前队友，父母。果然是每个人注意点都是自己的利益问题，现队友给的意见是，别浪费时间，不值得。前队友给的意见比较中肯，让我想好，想好了就别放弃了。父母啥都没说，他们也没说啥，就是怕我想不开。同样的道理，我也听取了对自己有利的方向而忽视了现队友的意见。</p>\n<p>还记得我和你说的吗？一旦有些东西涉及到了利益问题，就会少很多人情味，尤其是工作以后，感觉大家看待问题的方向都很不一样了。昨天前队友和我聊了一下，他的意思是，他从来没有为自己而活过，都是按照别人的想法来做事。然后我就发现，我还是挺幸福的，我一直以来都是啥开心做啥，暂时还没人约束过我。以前觉得读书有意思就好好读书，不怎么玩。大学觉得比赛有意思就不怎么学习，学习很差。真的想不到，自己有一天会需要顾及方方面面而变得畏畏缩缩的时候，该是何种可怕模样。</p>\n<h4 id=\"20190510-05-31-PM-update\"><a href=\"#20190510-05-31-PM-update\" class=\"headerlink\" title=\"20190510 05:31 PM update\"></a>20190510 05:31 PM update</h4><p>突然发现，说我变腼腆了，好像不止你说过，虽然我很不想承认这一点，但是好像很多之前的同学都这么说，让我不得不思考这个问题，可能这几年过的过于漫长了，让我已经不记得我高中时候的样子了。或者说我高中的时候很膨胀？记不清了，可能是自己的感受，自己的成长，自己的变化反而自己不太了解吧。话说我高中的时候确实很膨胀，感觉一切都在自己手中。可能是大学时候认识了太多神仙了，就已经不敢过于高调了，很多时候反而是低调再低调。感觉自己还有很多不会的东西，所以一直在努力学习吧。</p>\n<p>还有就是我把你画的画拍成了照片挂在公司内部聊天软件的头像上，他们都说挺好看的，那是，不看是谁画的。。。。其实准备换成qq或者微信头像的，想想还是算了，你能看到，不想影响你的心绪了。给你时间吧。</p>\n<p>还有关于你说我说话风格很像山东人，这件事怎么说呢，感觉与其说是山东对我的影响很大，不如说是山东学长对我的影响很大，因为很多时候都是待在实验室，待在实验室的时间应该不少于在宿舍的时间，这还是算上睡觉的时间的情况下，所以我说话的风格应该是更偏向于实验室学长的风格。至于这点滴的潜移默化的变化，我还真感觉不出来。反正感觉自己一直都是这样。</p>\n<h4 id=\"20190510-10-02-PM-update\"><a href=\"#20190510-10-02-PM-update\" class=\"headerlink\" title=\"20190510 10:02 PM update\"></a>20190510 10:02 PM update</h4><p>明天就溜了，要回学校打省赛了，希望好运吧，还记得去年的时候省赛冠军，当时老膨胀了，总感觉世界在我手上，没有我搞不定的事，后来就慢慢放弃了这个无知的想法。突然想到了我之前和老大说的一句话，有异曲同工之妙–”世间上任何问题都可以转化成数学问题”。直到你拒绝了我好多次，我才渐渐明白过来，很多东西并不是那么简单的问题，不是我能掌控的，也不能转换成数学问题，他没有固定的公式，更没有通用的解法。因人而定，因事而转。</p>\n<p>嘿，说真的，我一直以为，我会悲伤好长时间，但是不知道为啥，我就这么快想开了，突然就不难过了？反正这几天还是挺开心的，偶尔搞搞问题，偶尔和组里人开开玩笑，但是偶尔沉寂下来的时候才会感到悲伤。这可能就是我喜欢晚上而非闹市的原因？“黑夜给了所有人黑色的眼睛，他们用来寻找光明，而我用来寻找你的美”。现在唯一感到遗憾的就是当时你画画的时候没有偷拍你。让我只能在回忆里寻找你。</p>\n<p>226天，此去经年，应是良辰好景虚设。</p>\n<h3 id=\"20190512\"><a href=\"#20190512\" class=\"headerlink\" title=\"20190512\"></a>20190512</h3><h4 id=\"20190512-11-14-PM-update\"><a href=\"#20190512-11-14-PM-update\" class=\"headerlink\" title=\"20190512 11:14 PM update\"></a>20190512 11:14 PM update</h4><p>今天是母亲节，刚打完省赛，刚到学校，估计老妈已经睡了，不敢打扰，就偷偷来更新一点。</p>\n<p>今年省赛，果然还是没有打冠军，最后第五了，不行了，老了老了，精力不敌当年了。说到底还是缺少一点锐气，很多时候还是考虑太多，或者说是顾虑太多了。不过也从侧面说明了一件事，世界不是掌握在我手中，很多东西暂时还是不能掌控的。然后认真考虑了一下关于考研的事，这件事听的意见有点多了，反而自己没有搞清楚，然后你说想上中山大学医学院，然后了解了一下，感觉中山大学计算机学院还是挺强的，现在唯一的难点就是初试了，感觉只要初试过了，复试不是问题。大多数时候还是感觉自己很菜，但是好像是在一个不怎么激烈的范围里面，好像有点安逸了。温水煮青蛙，最坏莫过如此。说到底还是很多东西没有勇气舍弃罢了，工作也好，比赛也好，搞钱也好，很多东西让我迷醉了，尤其是在一个自我感觉良好的氛围里，感觉好多时候甚至不想努力了。还是很危险的。</p>\n<p>感觉还是要安心下来正儿八经搞件事，这学期算是废了，肯定是要搞到正式offer的。然后就差不多到了暑假了，然后看情况暑假是回学校比赛还是安心准备考研了。主要是还没想清楚，自己读研到底是为了学知识，还是为了接近你？感觉这个事情还是需要想明白，不然很多时候感觉可能会努力错了方向。反正学习这种事来说，感觉还是欠缺很多，很多东西都没有系统的学好，现在想捡起来又感觉时间不太够，感觉还是自制力不够，是像我说你的一样：执行力不足。当时我和你说的是真的，没有人的执行力很强，执行力强的人都遇不到，说到底人还是一个很懒的动物。毕竟懒是第一生产力嘛。</p>\n<p>224天，一念起，万水千山。</p>\n<h3 id=\"20190513\"><a href=\"#20190513\" class=\"headerlink\" title=\"20190513\"></a>20190513</h3><h4 id=\"20190513-07-54-PM-update\"><a href=\"#20190513-07-54-PM-update\" class=\"headerlink\" title=\"20190513 07:54 PM update\"></a>20190513 07:54 PM update</h4><p>今天早晨起床，差点没反应过来，恍如隔世的感觉，真的有那种黄粱一梦的感觉，感觉一切都是假的，去北京市假的，去找你也是假的，只是做了一个很真实又很虚妄的梦。</p>\n<p> 其实大多数时候应该是，觉得自己实力还行，但是没有得到预期的结果的一种心有不甘吧。尤其是大家都是优秀的人，都觉得自己是掌控世界的一群人，如果真的违背预期的话，总会有点失落或者不甘心的感觉吧。只是这种期望长时间得不到满足的话，往往只有两种结果？对心爱之人的刻意美化或者恶意丑化？哇，不行了，感觉可以抽时间拜读一下弗洛伊德的巨作了，总感觉会受到启发。</p>\n<p>总感觉这几天心太浮躁了，对事也好，对你也好。总感觉不够冷静和理智，容易冲动。不太清楚是不是这两周堆的事情太多的缘故。其实仔细想想，自己还挺自私的，很多事情自己都没有想清楚，然后就说了，总感觉是不吐不快，但是很多时候都是自己爽完了，然后就不管了，总感觉自己能收拾好自己处理的烂摊子，但是想想到现在都还是总用事情很多这种破借口，没有时间理清这件事。不知道是怕想清楚之后拿到了自己不想要的结果的不甘心，因此一直在逃避结果，还是自己真的很忙，所以找不到时间。可能前者居多？</p>\n<p>溜了溜了，这两天身心俱疲，不想多说了。就这样，希望远方的你遇事不急，早睡早起。</p>\n<p>223天，世间有两苦，一是得不到之苦，二是钟情之苦。</p>\n<h3 id=\"20190515\"><a href=\"#20190515\" class=\"headerlink\" title=\"20190515\"></a>20190515</h3><h4 id=\"20190515-00-20-AM-update\"><a href=\"#20190515-00-20-AM-update\" class=\"headerlink\" title=\"20190515 00:20 AM update\"></a>20190515 00:20 AM update</h4><p>已经是第二天了，晚上11点多的时候才陪舍友吃完饭。</p>\n<p>昨天这个时候和我妈妈聊了一下，我妈妈对你还是挺满意的，我就和她说，你对别人菇凉满意没用啊，别人菇凉不中意你儿子啊。不过说真的，我妈妈好像真对你挺感兴趣的，你要不考虑一下今年过年和我一起回家？</p>\n<p>然后今天晚上准备给你电话的，然后尝试给你发了个消息，大不了你再拒绝我，我明天就以喝多了为借口呗。但是你好像直接没鸟我了。。。emmmmm，想说的话就被憋回去了。其实也没有啥大不了的事，就是这段时间很多问题没有想清楚，所以想问问你的意见，但是你好像不怎么给面子啊。不知道，估计以你的个性，明天可能也不会回我？其实有时候感觉你还是挺好的，至少没有掉着我啊。</p>\n<p>然后我妈妈好像还是挺激动的，反正一直催我去撩你，说什么，有时间就关心关心人家，给人家尽可能的帮助啥的，反正给我的感觉就是，你要是来了，你就真是她闺女了，但是我是不是真儿子，那可不一定。然后我爸爸的话，不用考虑，我们家里人都挺好说话的，再说了，有我罩着你呢。不对，按照我妈妈这个态度，应该是你罩着我才对，哈哈哈哈哈。</p>\n<p>突然想到我的耳机到了，但是明天才能用到，然后今天去网易云音乐上去看了一下，《空空如也》这首歌，不知不觉已经听了500多遍了，还是略恐怖的。人生寂寞如雪啊。</p>\n<p>对了，今天不想学习主要是有一个比较奇怪的原因。从我读大学到现在，我一共有三件事让我可以奋不顾身，宁愿抛弃一切都要做，第一就是我想做一个特效爆炸的游戏，不好玩也无所谓。这个想法是大二的时候，真的是让我魂牵梦绕，让我想了好长时间，第二就是想去见你，那是来了北京之后的想法，让我很多时候都不能集中精力搞正事，直到五一，我和你说的都是真的，我是真的觉得一切都值得。无论是你想做什么，我都愿意陪着你。然后今天突然有了第三件事，我想来一次说走就走的旅行，今天看了一天地图，一直在想去哪去哪，但是具体的旅行地点还没定下来，不过抱歉的事是：这个计划没有你，本来想完之后说要不要计划加上你，后来想想太矫情了。这个计划没有你，我只想一个人看最美的景，当然如果那个时候你能在我身边的话，我会更开心。计划还没计划好，估计应该是12月份左右开始执行，应该是11月之前会规划好，到时候做两份计划吧，看你愿不愿意。</p>\n<h4 id=\"20190515-07-53-PM-update\"><a href=\"#20190515-07-53-PM-update\" class=\"headerlink\" title=\"20190515 07:53 PM update\"></a>20190515 07:53 PM update</h4><p>上午就是纯赶路了。大概中午到宿舍，洗了个澡就去公司了。今天一整天都不是很舒服。</p>\n<p>昨天晚上的时候，我和你说过了，我陪舍友吃饭了，当时喝了点酒，当然没醉，尝试着给你发了个消息，但是你没回复我，今天早上你说你是睡着了。其实吧，昨天没有啥别的意思，就是想问你点事，让你给个意见而已，但是你好像兴趣不高，所以就没打扰你了。其实就是想问问你，觉得我到底是考研好，还是找工作好，还是打比赛好，自己现在没什么主见，问了问老妈，好像也没改出啥建设性意见，所以准备问问你，但是你好像是睡了。就算了。估计你八成是想我读研，所以想问问你读研的话啥时候开始准备比较好，因为目前一段时间还是比较忙，暂时是没时间开始准备，舍友的意见是不急，暑假开始准备就行了，反正他们对我的信心比他们对自己的信心都足，不知道是为啥。</p>\n<p>还有就是今天发工资了，准备换个手机了，但是还有点舍不得，微信暂时没有不同设备登录，聊天记录同步的功能（还是说我没找到？），所以换了手机之后可能聊天记录都没了？所以我今天翻完了我们所有的聊天记录，然后截图了，看今天晚上拷贝一下，感觉还是一个挺美好的回忆的。然后觉得比较过分的就是为啥聊天记录都是我一个人在发言呢？反正基本都是一片绿，然后见着一点白。哇，难受。可能是我手速比较快的缘故，感觉不见得，你好像挺不想和我分享每天发生了啥一样。我这个人就这样，闲不下来，反正只要是有趣的事都喜欢分享给你，但是你很多时候好像是不感兴趣，所以没怎么回复我，假装你是忙吧。也只能这样安慰自己了。</p>\n<p>221天，万物皆有其时，耐心等待。</p>\n<h3 id=\"20190516\"><a href=\"#20190516\" class=\"headerlink\" title=\"20190516\"></a>20190516</h3><h4 id=\"20190516-10-00-PM-update\"><a href=\"#20190516-10-00-PM-update\" class=\"headerlink\" title=\"20190516 10:00 PM update\"></a>20190516 10:00 PM update</h4><p>今天头疼了一天，应该还是没有休息好的缘故。</p>\n<p>昨天开始渐渐开始给你发消息了，不然我是真的怕有一天把你忘了。说心里话，我不知道我到底是需要一个倾诉的对象还是对象。可能是前者居多？因为我很少主动开启一个话题，所以不怎么喜欢找人聊天，所以很多时候有些事都不知道找谁说，所以个人觉得还是更缺少一个倾诉的对象？不过我觉得现在的状态挺好的，每天和你分享一点或开心或难过的事，也不算太打扰你？但是还是和以前一样吧，都是我输出较多，你还是很少回我，但是我还是很开心啊啊啊啊啊，真的很怕你不理我了。</p>\n<p>今天看了一下，如果你决定读研读中山的话，我就准备考虑华南理工了，感觉考上不是很难，而且看了一下知乎，都说华南理工的就业氛围很好，所以可以考虑读一下，然后我们组的一个人说，读中山啊，中山妹子多，可以给你压力，哈哈哈哈哈，不知道啊，问了一下舍友，他们说这两个学校的考试难度几乎相当，所以暂时还没决定，应该是今年暑假就开始准备了，暑假感觉可以回一波家，感觉还是更倾向于考研吧，暂时还是不知道队友之间的态度，感觉大概率会玩完，所以更倾向于读研。今天和组里人聊了一下搞钱的事，他们都说读研好，搞钱不急，而且前几年基本是搞不了多少钱，就算搞到钱了也存不下来，所以暂时不考虑这个，但是如果能转正的话，不是不可以考虑一波，但是看老大对我的态度，大概率不会成功，所以暂时更倾向于考研，但是还没定下来，这周六感觉可以考虑一下具体的想法。或者这周二考完试，下午的时候好好想想。</p>\n<p>这周开始就继续锻炼了，对了，看了一下前两天你的体测报告，感觉很厉害啊，不行了，我也要好好锻炼了，话说5.1那段时间去玩的时候我脚上磨了一个泡，前两天才消下去，太虚了。还是缺乏锻炼了，还是因为怎么吃都不胖的缘故，这段时间就疯狂的偷懒，感觉最近越来越虚了。反正现在要好好锻炼了，怎么说也得公主抱吧，不能太虚了。下学期应该是回学校了，有时间锻炼，但是我健身教练的舍友好像要全身心考研了，感觉不会带我，到时候看情况是拉队友过去，还是自己锻炼，其实我觉得吧，做事这种东西，一个人做永远是最无聊的，虽然多个人效率不一定高，但是一定是不容易累的，老话怎么说来着？男女搭配，干活不累。说真的，五一那几天我是真的不累，3号的时候其实就是想故意气气你，我生气了，哈哈哈哈哈。你都看出来了还不哄哄我，难受，居然还让我去买水？居然想支开我，你也太坏了。</p>\n<p>还有就是那天晚饭的时候，我一直叫你“小老弟”，你好像挺反感的，没有别的意思，只是觉得这个称呼很有意思而已，而且那个时候感觉叫你啥都不好啊。总不能继续叫你“小姐姐”吧？</p>\n<p>220天，既然不好意思说晚安，那就祝你晚不安，最好今夜有梦，梦里有我。</p>\n<h3 id=\"20190517\"><a href=\"#20190517\" class=\"headerlink\" title=\"20190517\"></a>20190517</h3><h4 id=\"20190517-10-30-AM-update\"><a href=\"#20190517-10-30-AM-update\" class=\"headerlink\" title=\"20190517 10:30 AM update\"></a>20190517 10:30 AM update</h4><p>刚刚去水了一发日记，感觉还是挺惭愧的，日记是真的一天不落全都有，但是这个故事还断了几天，看了一下，大概是省赛少了，还有就是那天准备复习和陪舍友喝酒少了。现在日记被彻底拆成了三部分：工作日报，这个故事，生活琐事。等离职之后可能工作日报和生活琐事并一下，但是这个故事还是单独成为一个故事吧，以为觉得这个是真正值得回忆的事，而不是记流水账。</p>\n<p>其实这两天仔细考虑了一下，你其实应该不是没有看懂暗示，而是假装没看懂暗示。更多的时候你应该是不想看懂，假装看不懂，然后就可以搪塞我?还是说你觉得我脸皮不够厚，不敢瞎说话？可能让你失算了，我最后还是捅开了，但是好像努力错了方向，最后搞得大家都不怎么愉快了。emmmm，其实我觉得这样还挺好的，至少比你看破不说破好一点，这样大家长痛不如短痛啊。我也没有一下乱七八糟的小心思，你也可以安心考研了。就这样独自安好了。</p>\n<h4 id=\"20190517-07-52-PM-update\"><a href=\"#20190517-07-52-PM-update\" class=\"headerlink\" title=\"20190517 07:52 PM update\"></a>20190517 07:52 PM update</h4><p>不行了，今天晚上实在忍不住了，想和你商量一下关于明年的安排。emmm，用自己不知道未来的想法去寻求你的帮助应该不算过分吧。感觉还是不甘心在作祟。还是想挣扎一下？因为这两天实在是太忙了，所以今天想早点走了，因为明天就放假了。所以现在开始动心思准备出去玩了。明天看情况出去逛逛。</p>\n<p>这段时间渐渐忙起来了，主要是因为现在考试也告一段落，剩下的时间比较多，以前的时候有时间就摸鱼，现在不怎么想摸鱼了，一来是感谢老大的栽培，二来是想让自己忙一点，别天天去想一些乱七八糟的东西。你看，现在随着时间的推移，我对你忘得越来越多了不是？很多东西都想不起来了。还是说不想想起来？</p>\n<p>话说第一天的时候，当时逛瓷房子的时候我还是挺不开心的，这种时候难道不是应该两个人找一个幽静的咖啡厅，然后一起老朋友叙叙旧吗？说真的，当时逛的时候直接把我准备好的好多话憋回去了。。。。本来想找个地方聊会天的。。。。然后以为中午有机会，结果你也知道了，中午的时候不止两个人，说真的吃饭那个地方环境还挺好的，多适合说心里话啊。不过我当时想啊，我有的是时间不是吗？所以不急。结果不急不急就真的没机会急了。</p>\n<p>219天，愿你贪吃不胖，愿你懒惰不丑。愿我的深情不被辜负，愿我的余生都有你陪。</p>\n<h3 id=\"20190518\"><a href=\"#20190518\" class=\"headerlink\" title=\"20190518\"></a>20190518</h3><h4 id=\"20190518-04-49-PM-update\"><a href=\"#20190518-04-49-PM-update\" class=\"headerlink\" title=\"20190518 04:49 PM update\"></a>20190518 04:49 PM update</h4><p>昨天晚上给你打了个电话，咨询了一下关于下半年到底是考研，工作还是打比赛的问题。但是你好像兴致不高，其实吧，你要是明确给出一个意见，我一定会去做吧。我是真的不知道到底怎么选，不是故意找个由头和你打电话的。你最后好像也只是帮我干掉了一个选择：就是不要去工作。然后你好像是更倾向于比赛，其实你这样说我反而是更倾向于考研了。如果你中山大学定下来的话，我就可以着手准备考西南理工大学。然后就问了你一下中山定下来了没有，但是你好像还是在动摇，所以这件事就暂一搁浅了。</p>\n<p>我还是那句话，感觉很多事情还是早早定下来比较好，我这段时间就因为思考各种利弊关系搞得我很焦虑，很多时候甚至不能安心思考了。但是我现在应该没有资格去给你出主意了，毕竟我自己都没有想好到底选什么，甚至去你那里问想法了。</p>\n<p>今天又刷了一遍大鱼海棠，我以为我会有啥感同身受的感觉呢，结果还是那样，别人的故事毕竟是别人的故事吧。不过有句话还是挺打动我的：</p>\n<p>“生命是一场旅程。我们等了多少个轮回，才有机会去享受这一次旅程。短短的一生，我们最终都会失去，你不妨大胆一些，爱一个人，攀一座山，追一个梦。”</p>\n<p>这种事怎么说呢，其实大多数人是没机会追寻自己的梦的，很多时候还是不得不屈服于现实不是吗？更多的时候是人力不可抗的因素，就像你现在不喜欢我一样，可能越努力越反感了？或许现在唯一能做的就是偶尔找你聊聊天，听听你最近一段时间的吐槽，给你出一两个狗头军师的意见。但是你好像不怎么有兴趣找我聊天，一般都是我主动的多。可能还是对我戒心比较大？</p>\n<p>218天，命里有时终须有，命里无时莫强求。</p>\n<h3 id=\"20190519\"><a href=\"#20190519\" class=\"headerlink\" title=\"20190519\"></a>20190519</h3><h4 id=\"20190519-09-33-PM-update\"><a href=\"#20190519-09-33-PM-update\" class=\"headerlink\" title=\"20190519 09:33 PM update\"></a>20190519 09:33 PM update</h4><p>今天和你聊了一下关于晚睡的问题，其实一直以来都想说，你好像睡觉一直挺不规律的，我是真的觉得作息不规律对身体很不好，虽然我也没有每天早睡，但是基本都是12点之前睡觉了，太晚睡真的是对身体不好，不仅是休息不好的缘故，反正整个人的精力都不好了，一天都会没有精神。还有就是这个年龄段，尤其是在学校的日子，没有什么事是值得你为之熬夜的。至少我目前还没发现什么事是非要我晚上之前搞定的，第二天干就会出问题了？</p>\n<p>还有就是你说你在学校发现了一个地方写有你的名字，我居然没有吃醋鸭，只是觉得挺有趣的，因为有一个人暗恋着你，还不敢偷偷告诉你，还居然是舍友先发现的，这就太尴尬了，当然不排除有个男生写了告诉你舍友了。然后试探试探你的态度，但是我是真的觉得很有意思，反而没有吃醋的感觉，可能是对自己有足够的自信？当然还是挺羡慕你的，其实有一个人在背后默默祝福你的感觉真的挺好的。</p>\n<p>然后你就开玩笑说下次去青岛给我写满，我是真的当真了，就像我说的，虽然下一次不知道是什么时候，但是只要有下一次，多久都值得不是吗？到时候你可别赖账啊，不写满不准你离开我了。</p>\n<p>217天，我们都足够成熟，也足够理智，没有人愿意用自己的感情和青春去赌个不确定的未来。但因为那个人是你，所以我愿意。</p>\n<h3 id=\"20190520\"><a href=\"#20190520\" class=\"headerlink\" title=\"20190520\"></a>20190520</h3><h4 id=\"20190520-10-40-AM-update\"><a href=\"#20190520-10-40-AM-update\" class=\"headerlink\" title=\"20190520 10:40 AM update\"></a>20190520 10:40 AM update</h4><p>今天出门的时候，阳光正好，微风不热，一切正如刚见你时候的样子，真的很美。我刚去的时候，我是真的有说不完的话想和你说，但是啊，你真的是没有怎么回应我，导致我阻塞了。所以啊，想念这种东西，还真不能是单向的，不然啊，就像负重前行，总该是会累的吧。</p>\n<h4 id=\"20190520-11-05-PM-update\"><a href=\"#20190520-11-05-PM-update\" class=\"headerlink\" title=\"20190520 11:05 PM update\"></a>20190520 11:05 PM update</h4><p>明天考试，我还没开始复习，但是我还是更想和你说话，不想复习。</p>\n<p>今天是520鸭，真的很想和你说话啊，但是又怕你戒心太重了，就没怎么和你说话，就是吐槽了一下今天网易云给我推荐了一堆情歌，评论全是别人的甜美爱情故事。你好像只是单纯的同情我，哇，这个时候不应该是咱们偷偷做一天情侣吗？你要是真的这样说，我说不定真的会把票退了不考试了，直接去找你玩，算了，还是自己想想就好了，别想多了。这段时间咋回事啊，天天做白日梦啊。不过真的想和你谈恋爱啊啊啊，哪怕一天也好啊。你想做什么都行，我都可以陪着你，想到只要可以静静看着你，就很开心了。</p>\n<p>还有就是那天画画的时候，我不是觉得无聊了，而是我困了，那天睡的挺晚的，没睡好，但是又不好意思睡觉，早上又很早就醒了，然后睡不着，一直在想前一天晚饭的事，所以下午的时候很困了，真的不是无聊了。哇，我当时累的不行了，就想休息一下，但是还是想和你说话，结果你居然让我去买水。当时真的是被你蠢哭了。但是莫名觉得你还挺可爱的？这段时间没见你了，也没有理由找你要照片，所以更多的时间就去看那幅画，不管怎么说，也是你几个小时的战果啊。最后我还是没给他挂起来，我怕弄坏了，万一不小心刮花了我心都会碎的。</p>\n<p>216天，深深的话要浅浅的说，长长的路要挥霍的走，大大的世界要率真的感受。</p>\n<h3 id=\"20190522\"><a href=\"#20190522\" class=\"headerlink\" title=\"20190522\"></a>20190522</h3><h4 id=\"20190522-10-48-AM-update\"><a href=\"#20190522-10-48-AM-update\" class=\"headerlink\" title=\"20190522 10:48 AM update\"></a>20190522 10:48 AM update</h4><p>昨天和前天都找你聊了会天还挺满足的？今天好像是我妈生日？感觉今天该打个电话回去了。</p>\n<p>214天，网易云里面的评论有999+，我也不敢打出你的名字。</p>\n<h3 id=\"20190523\"><a href=\"#20190523\" class=\"headerlink\" title=\"20190523\"></a>20190523</h3><h4 id=\"20190523-12-30-PM-update\"><a href=\"#20190523-12-30-PM-update\" class=\"headerlink\" title=\"20190523 12:30 PM update\"></a>20190523 12:30 PM update</h4><p>今天突然听到了《好久不见》，感觉真的好久不见了，甚是想念，现在学校的事情算是终于搞定了，现在可以安心搞其他的事了。这段时间算是真正忙起来了，每天都是干不完的活。</p>\n<p>对了，关于上次你说高考考完数学后我对你说了什么话，我是真的忘了，你说的对，只有自己会记得自己说过什么，我去问了李思慧一下，她也不记得了，看来这彻底成了你一个人的秘密了。我这几天都在努力的回忆，如果有这件事的话，我大概想起来了一部分，当时我们是在一中考试的？而非孟宗，然后我们都是从小学那个门口出来的，然后你是在那个上坡的时候哭了？然后我无非就是可能说了两种话：要么是嘲讽你了，要么是安慰你了，以我高中的尿性，应该是带了嘲讽的安慰，多半是会说：没事我考的比你还差，我都没哭，你怕啥啊？类似的话。因为我记得我语文考的更差，所以可能说了一句我作文都跑题了，你怂啥啊。应该就是类似的话吧。反正感觉顶多是用让你很不爽的话怼你了，让你暂时忘却了考的不好的悲痛？其实回头来看，你都比我考的好多了。</p>\n<p>而且你看，当初我们拼命挣扎，痛的撕心裂肺的事现在看来还不是淡然了吗？你现在回忆起来还是有意思居多吧？反正我觉得吧，考试这种东西，努力了就好啊，别太心急。</p>\n<p>然后就是这段时间考研的事了。我舍友这段时间又吵架了，反正我不在就闹腾起来了。其实在我看来九成九是因为考研的事，我才渐渐知道，考研的人压力是真的大，所以这段时间我都只敢和你分享有意思的事，看出你有心情不好的时候就安慰你一下。</p>\n<p>还有就是关于你刷微博的事，你说你是喜欢做一个倾听者，实际上我觉得是因为你已经是个消费者，而懒得去做生产者，以至于很多时候你甚至不能好好的表达自己，但是没时间去改正，所以你现在都是喜欢听别人的故事。所以啊，我得配合你啊，我就老老实实给你说我发生了啥啊，至少这样我们两个人之间没那么无聊啊。</p>\n<p>213天，这一生，我会遇到一切比你都好的，但我已经没有精力，不顾一切去再爱一次了。</p>\n<h3 id=\"20190524\"><a href=\"#20190524\" class=\"headerlink\" title=\"20190524\"></a>20190524</h3><h4 id=\"20190524-10-19-AM-update\"><a href=\"#20190524-10-19-AM-update\" class=\"headerlink\" title=\"20190524 10:19 AM update\"></a>20190524 10:19 AM update</h4><p>今天早上奇哥和我说他失恋了，这次是真的，这让我不得不开始思考一个问题，我是不是恋爱绝缘体啊。为啥我周围的人都失恋了呢？巨难受。其实我想的更多的是他失恋的原因：他对象想要结婚了，但是他现在处于上升期，至少是两年之内不可能结婚的。说到底就是我给不了你想要的，所以不如就此别过了。当他说完这个事实的时候，我也跟着挺难受的，让我想起了我初恋，当时是同样的情况，我给不了她想要的，所以大家就此别过了。现在回头来看，只能说是挺可惜的。</p>\n<p>其实，当时犹豫了很久才去见你是同样的问题，就是怕自己没有放弃一些东西的勇气，所以一直不敢见你，当我下定决心了之后，还是被你拒绝了，其实，无论是比赛还是考研还是找工作，我都拿得起，为你我也确信自己放得下，但是你都没有给我机会去证明这一点，还是有点难受的。他们说：这辈子最后悔的一件事就是，在错的时间遇上了对的人，但是却没有能力或者说没有勇气去抓住。我们应该就是这种情况，说到底我其实还是没有准备好吧。自认为自己掌控着一切，可以随便牺牲，在哪个方向都能做到很出色，但是实际上却不是这样，很多时候还是太怂了，很多东西不是说放下就能放下的。</p>\n<p>我后来才渐渐明白，我身上承载的不仅有我的梦，还有很多人的期许。虽然说我做不到背叛全世界，但是我真的愿意去争取听从你的意见，所以大多数时候我还是挺想听听你的意见的，但是从上次就可以看出来，你不怎么想给我意见。其实我还挺倾向于考研的，但是队友失恋了，很可能就能安心打比赛了，所以又陷入了一个个不确定中。就这样了，上次说过了，这种问题得不到答案的时候，反复思索只会陷入焦虑。今天和队友聊一下，倒时候再决定吧。</p>\n<h4 id=\"20190524-04-51-PM-update\"><a href=\"#20190524-04-51-PM-update\" class=\"headerlink\" title=\"20190524 04:51 PM update\"></a>20190524 04:51 PM update</h4><p>刚刚和你聊了一下，关于谈恋爱和结婚的事，我们好像持有一部分不同的观点，可能是我经历稍多一点的缘故吧。</p>\n<p>不过让我真正感兴趣的事是你发给我的表情包，哇，真的想不到，你会用这种表情包，简直人设崩塌啊，是真的，哇，你可是小仙女啊，怎么能用哪种表情包呢？然后就奶了你一句，然后就赶紧跑了，哇，说真的，现在突然有了一种恋爱的感觉，彻底不想干活了，翻来覆去看了两三遍记录才平静下来。啧啧啧，不得了不得了。</p>\n<h4 id=\"20190524-05-24-PM-update\"><a href=\"#20190524-05-24-PM-update\" class=\"headerlink\" title=\"20190524 05:24 PM update\"></a>20190524 05:24 PM update</h4><p>不过话说回来，恋爱这件事对于20出头的年轻人来说真的是一件很奢靡的事，但是对于女生来说是一件不得不考虑的事，现在回想起来还是挺残酷的。但是我还是没办法给你承诺不是吗？毕竟我自己对自己都没有多大的把握，谁知道未来会发生什么呢？可能真正让我着迷的是那一瞬间的欢乐？但是你知道这种欢乐是不能过一辈子的不是吗？我觉得如果不考虑清楚自己喜欢的到底是什么就草草的说喜欢，草草的给承诺会显得很可笑。</p>\n<p>其实吧，让你和自己谈恋爱，何尝不是我自私了呢？何尝不是为了怕你有一天累了，却没有找到我，被别人乘虚而入了，所以让你自己一个人罢了。哇，太有心急了。但是我是真的想：当你想恋爱的时候，想到的是我。</p>\n<p>212天，“归属感”是你强烈地想和他在一起。 “安全感”是你觉得他强烈地想和你在一起。 “幸福感”是彼此都强烈的想在一起而最终走在了一起。</p>\n<p>我想要“幸福感”呢，对，和你！</p>\n<h3 id=\"20190526\"><a href=\"#20190526\" class=\"headerlink\" title=\"20190526\"></a>20190526</h3><h4 id=\"20190526-10-15-PM-update\"><a href=\"#20190526-10-15-PM-update\" class=\"headerlink\" title=\"20190526 10:15 PM update\"></a>20190526 10:15 PM update</h4><p>好吧，昨天看来是太累了，又没有更新。我还挺怕我现在的状态和写日记一样，马上就没有动力了，甚至是没有感觉了。你看，我现在开始都为自己找借口不写这个玩意了。你说再过两百天，我回头看这个东西实际上只更新了十来天，会不会嘲笑自己当初的想法呢？我不知道。</p>\n<p>对了，在偷偷懒了好几天之后，我今天终于下定决心去健身了，但是我真的是太虚了，跑了大概五公里就不行了，啊啊啊啊，好难受啊，说好到时候见你的时候一定要公主抱你，感觉离目标还有好远啊啊啊啊。不行了，以后每周我要保证运动量了。</p>\n<p>对了，我想起来了上周的时候，我舍友和我说，让我这段时间学一个技能，为了你学个技能，无论什么都好，最好是乐器什么之类的，说到时候表白的时候一定会用到，我想了想不是不可以整一个，到时候看一下，感觉可以安排一下，然后突然就想到了吉他，这段时间考虑整一个了，手机什么的去他妈，暂时没时间想了，然后，你不是说你学过一段时间放弃了吗？我感觉我学会了也可以教你啊，但是不知道时间成本如何，因为毕竟还是拿不出来整块的时间，尤其是拿不出正常时间的整块时间，毕竟我不能10点下班，11点洗完澡之后开始学，你说是吧？早上的话实在是太懒了，感觉后续可以利用一下。</p>\n<p>还有就是，当初买耳机说是为了早上背单词，不吵舍友，结果后来就忘了，感觉还是自控力不够啊。而且这几个月接触的东西有点多了，感觉心有点杂了。还有就是上次说的端午节的事，当时的想法是端午节回一次家，就是湖北，但是看了一下路线，时间点都不是很好，然后票价也不是很便宜，所以暂时不考虑回家了，但是显然是不能找你玩了，所以暂时还不知道干啥。看情况约一下呗，然后现在在北京的四小只应该除了我都可能回家，所以暂时还没有安排那几天干啥。</p>\n<p>从下周开始应该就是独立干活了，可能还要自己去和pm吵架，所以可能会更加焦头烂额，不知道会不会以此为借口不更新了。感觉这段时间工作还是挺煎熬的，每天都不知道自己干啥，反正只想搞一些自己感兴趣的东西。哎，必然是没有和你一起玩开心啊。</p>\n<p><del>然后这两天回想了一下，好像当时和你一起出去玩的时候，你好像并不开心，还是说你在学校都是这个样子？不怎么爱笑？感觉都是我一个人在那里傻开心。</del>哎，还是太矫情了，可能以后我看到这段会删掉吧，暂时先加个删除线。好了，没啥想说的了。就这样，晚安。</p>\n<p>今天又听了一遍《风花雪月》，自己写了一段。</p>\n<p>风是你的头发抚摸我的脸庞的痒，花是我初见你时惊为天人的笑靥，雪是我进不去的你洁白无瑕的心，月是不曾一起走过的世间的美景。</p>\n<p>210天，风花雪月，就是我想和你谈个恋爱。</p>\n<h3 id=\"20190527\"><a href=\"#20190527\" class=\"headerlink\" title=\"20190527\"></a>20190527</h3><h4 id=\"20190527-05-30-PM-update\"><a href=\"#20190527-05-30-PM-update\" class=\"headerlink\" title=\"20190527 05:30 PM update\"></a>20190527 05:30 PM update</h4><p>今天看到了一句话，我不知道说的对不对：当一个女孩拒绝一个男孩后，通常男孩会更加难以放弃，不为别的，只是单纯的不甘心。</p>\n<p>嘿，别说，我感觉我还是不甘心作祟多一点。我是真的很喜欢你吗？是真的那种寻死觅活的喜欢吗？没有吧。所以说到底应该是不甘心作祟多一点喽。</p>\n<p>209天，愿你有高跟鞋也有跑鞋，喝茶也喝酒。愿你有勇敢的朋友，牛逼的对手。愿你对过往的一切情深意重，但从不回头。愿你特别美丽，特别平静，特别凶狠，也特别温柔。</p>\n<h3 id=\"20190528\"><a href=\"#20190528\" class=\"headerlink\" title=\"20190528\"></a>20190528</h3><h4 id=\"20190528-10-04-AM-update\"><a href=\"#20190528-10-04-AM-update\" class=\"headerlink\" title=\"20190528 10:04 AM update\"></a>20190528 10:04 AM update</h4><p>不行了，这几天实在是太忙了，忙的我甚至都没时间写日记了。</p>\n<p>今天看到一句话，人难免天生有自怜的情绪。大部分人看似的努力，不过是愚蠢导致的。</p>\n<p>觉得这句话说的挺对的，然后就仔细思考了一下，这段时间确实漂了。甚至都觉得自己还行了，可怕啊。</p>\n<p>208天，我嫉妒你身边每一个无关紧要的人，能够轻而易举的见到我朝思暮想的你。</p>\n<h3 id=\"20190530\"><a href=\"#20190530\" class=\"headerlink\" title=\"20190530\"></a>20190530</h3><h4 id=\"20190530-06-56-PM-update\"><a href=\"#20190530-06-56-PM-update\" class=\"headerlink\" title=\"20190530 06:56 PM update\"></a>20190530 06:56 PM update</h4><p>昨天让你把网易云ID发给我，但是你拒绝了。然后我就想到了，当分享歌曲的时候后缀有一个uid=xxxxxxxxxx，然后在好奇心之下我把这个后缀删掉了，但是还是能打开，而且是同一个网页，我瞬间就明白了，这个是userID，既然userID会暴露出来，那么显然是可以利用的，然后就用浏览器打开了个人网页，后缀上就是uid=xxxxxxxxxx，然后随便换了一个uid，果然能打开别人的个人主页。然后自然就是用打赌来刺激你让你分享一首歌给我喽。哈哈哈哈哈，我好坏啊。</p>\n<p>开始的时候我还以为你不会吃我这一套，没想到你居然还真的分享了，哈哈哈哈，你居然还不信。你刚刚发我的时候我还在开会，当时真的是好久都没有感受过那种心砰砰砰跳的感觉了。哇，当时真的是激动的不行，会都不想开了，直接开始瞎搞了，然后就自然搜到了你的个人主页了。哈哈哈。哇，不行了，我现在还平静不了。真的是，好久都没这么爽过了，怎么说呢，就像小孩子耍赖皮拿到了自己心爱的玩具，这种感觉你知道吧。真的是好爽啊啊啊啊啊。</p>\n<h4 id=\"20190530-09-19-PM-update\"><a href=\"#20190530-09-19-PM-update\" class=\"headerlink\" title=\"20190530 09:19 PM update\"></a>20190530 09:19 PM update</h4><p>我就猜准了你会来问我怎么几分钟搞出来你的账号的。本来想告诉你的，忍住了。然后就调侃你，让我端午节去找你玩，必然会被你拒绝啊，就是随便调侃一下。</p>\n<p>突然想起来你上次提到，为啥我每次都是很了解你的样子，其实我想说的是，如果你想了解一个人，总是有各种各样的方式去了解他（她），你说是吧？无非就是把拿来想自己事情的时间拿来想另外一个人而已，然后站在一个旁观者的角度，总能看清楚很多事情不是吗？但是很多时候还是不够冷静，所以大多数时候都是猜错罢了。其实，哪存在一个人把一个人猜准这种情况呢？可不都是我想了解你，然后尝试去接触你罢了。如果对你不感兴趣的话 ，又怎么会去想了解你呢？</p>\n<p>哇，当你发给我“哼”的时候，真的是整个人都化了。哇，我都能想象到你假装生气的样子，真的是想当面哄你一下啊啊啊啊。算了算了，自己还是太怂了，如果真的下一次见到你的话，真的是不想分开了。一定要黏着你。哇，不行了，真的想坐最后一趟火车过去了，我查一下。</p>\n<p>206天，嘻嘻，有没有觉得我敲级好？让我们一起牵手走完整个宇宙吧~~</p>\n<h2 id=\"201906\"><a href=\"#201906\" class=\"headerlink\" title=\"201906\"></a>201906</h2><h3 id=\"20190608\"><a href=\"#20190608\" class=\"headerlink\" title=\"20190608\"></a>20190608</h3><h4 id=\"20190608-05-37-PM-update\"><a href=\"#20190608-05-37-PM-update\" class=\"headerlink\" title=\"20190608 05:37 PM update\"></a>20190608 05:37 PM update</h4><p>昨天你突然和我说了，高考结束的事，也就是考完数学的时候，我和你说的话，还是蛮意外的。emmmmm，说实话是无心之言，不知道对你造成成了何种影响。而且但是是真的没有别的意思，也不是习惯你想和你有什么关系之类的。只是单纯的询问。可能是觉得好看的小姐姐不能那么难过是吧。</p>\n<p>其实当你昨天和我说完这件事的时候，我就有一种预感，你好像看到这篇算不上日记的东西？不太清楚是否是这样，可能就是一种单纯的直觉吧。就像上次。</p>\n<p>197天，你是一场无关风月的红尘， 成全了我一厢情愿的认真。</p>\n<h2 id=\"201907\"><a href=\"#201907\" class=\"headerlink\" title=\"201907\"></a>201907</h2><h3 id=\"20190717\"><a href=\"#20190717\" class=\"headerlink\" title=\"20190717\"></a>20190717</h3><h4 id=\"20190717-10-37-AM-update\"><a href=\"#20190717-10-37-AM-update\" class=\"headerlink\" title=\"20190717 10:37 AM update\"></a>20190717 10:37 AM update</h4><p>昨天晚上做梦梦到你了，梦到你来找我玩，你不排斥我了，我们一起压马路，然后你说饿了，我们就去吃东西，开心到冒泡。点完餐，你在那安安静静的做着，我看着你，你问我“看啥”（傲娇脸）， 然后我就笑了。再后来，我去取餐，让你在这乖乖等我，等我回来的时候，看到一个小哥在搭讪你，我就很气，然后，然后，然后就和那个小哥打起来了。然后我就醒了。气死我了，都怪那个小哥，不然好歹我能看你吃碗面不是？</p>\n<h2 id=\"201910\"><a href=\"#201910\" class=\"headerlink\" title=\"201910\"></a>201910</h2><h3 id=\"20191029\"><a href=\"#20191029\" class=\"headerlink\" title=\"20191029\"></a>20191029</h3><h4 id=\"20191029-2-34-PM-update\"><a href=\"#20191029-2-34-PM-update\" class=\"headerlink\" title=\"20191029 2:34 PM update\"></a>20191029 2:34 PM update</h4><p>表达爱意最好的时机是，三年前到现在的陪伴，其次是现在。</p>\n<h1 id=\"Her\"><a href=\"#Her\" class=\"headerlink\" title=\"Her\"></a>Her</h1><p>199808062050 </p>\n<p><img src=\"/img/something.jpg\" alt=\"\"></p>\n<p>另外一部分原因是，我想和你报考一个学校，在你考完的那个时候，能第一时间看到你。</p>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ck3iqj1am0001a6130bvvbspl","tag_id":"ck3iqj1ar0002a613g1medo2s","_id":"ck3iqj1at0003a6139jbw2o6h"},{"post_id":"ck3iqj1g3000ca613gvqbppxr","tag_id":"ck3iqj1g2000aa6131mb4om9u","_id":"ck3iqj1g5000fa613qetm4yvv"},{"post_id":"ck3iqj1g00008a613sn8t4051","tag_id":"ck3iqj1g2000aa6131mb4om9u","_id":"ck3iqj1g9000ka6138nu6stkr"},{"post_id":"ck3iqj1g00008a613sn8t4051","tag_id":"ck3iqj1g5000ea613wzzxllwf","_id":"ck3iqj1gc000ma613xtpa3doh"},{"post_id":"ck3iqj1g6000ha613t46xg75d","tag_id":"ck3iqj1g2000aa6131mb4om9u","_id":"ck3iqj1gi000pa613uklkjw9a"},{"post_id":"ck3iqj1g6000ha613t46xg75d","tag_id":"ck3iqj1g5000ea613wzzxllwf","_id":"ck3iqj1gi000ra613stg0zz8w"},{"post_id":"ck3iqj1g9000ja6136exrrwkq","tag_id":"ck3iqj1g2000aa6131mb4om9u","_id":"ck3iqj1gj000ua61312p8udxi"},{"post_id":"ck3iqj1g9000ja6136exrrwkq","tag_id":"ck3iqj1g5000ea613wzzxllwf","_id":"ck3iqj1gk000wa613e0lwxg9e"},{"post_id":"ck3iqj1ga000la613o8y8yu0h","tag_id":"ck3iqj1g2000aa6131mb4om9u","_id":"ck3iqj1gl000za613n98f9ztn"},{"post_id":"ck3iqj1ga000la613o8y8yu0h","tag_id":"ck3iqj1g5000ea613wzzxllwf","_id":"ck3iqj1gl0011a613r3sxqkr8"},{"post_id":"ck3iqj1gh000oa6133icjmhiy","tag_id":"ck3iqj1g2000aa6131mb4om9u","_id":"ck3iqj1gm0014a613aenr3uac"},{"post_id":"ck3iqj1gh000oa6133icjmhiy","tag_id":"ck3iqj1g5000ea613wzzxllwf","_id":"ck3iqj1gn0016a613216fcgkt"},{"post_id":"ck3iqj1g20009a613fvaprcbr","tag_id":"ck3iqj1g2000aa6131mb4om9u","_id":"ck3iqj1go0019a613pa5ze7tk"},{"post_id":"ck3iqj1g20009a613fvaprcbr","tag_id":"ck3iqj1g5000ea613wzzxllwf","_id":"ck3iqj1go001aa6137mjietbq"},{"post_id":"ck3iqj1g2000ba6132tm9ak5n","tag_id":"ck3iqj1gi000sa613dl7toa93","_id":"ck3iqj1gp001ca613pxn3pzcq"},{"post_id":"ck3iqj1g2000ba6132tm9ak5n","tag_id":"ck3iqj1g5000ea613wzzxllwf","_id":"ck3iqj1gp001da61375totviv"},{"post_id":"ck3iqj1g4000da613895x5r3e","tag_id":"ck3iqj1g2000aa6131mb4om9u","_id":"ck3iqj1gp001fa613yqndcq7a"},{"post_id":"ck3iqj1g4000da613895x5r3e","tag_id":"ck3iqj1g5000ea613wzzxllwf","_id":"ck3iqj1gq001ga613hk8rycfz"},{"post_id":"ck3iqj1go0018a613uco73qrx","tag_id":"ck3iqj1g2000aa6131mb4om9u","_id":"ck3iqj1gq001ia613lee7g8u5"},{"post_id":"ck3iqj1go0018a613uco73qrx","tag_id":"ck3iqj1g5000ea613wzzxllwf","_id":"ck3iqj1gq001ja613vu3mngzl"},{"post_id":"ck3iqj1g6000ga613gjr2ok12","tag_id":"ck3iqj1gn0017a6136fmlf6fo","_id":"ck3iqj1gr001la6131e9w42n2"},{"post_id":"ck3iqj1g6000ga613gjr2ok12","tag_id":"ck3iqj1g5000ea613wzzxllwf","_id":"ck3iqj1gr001ma61364w376cz"},{"post_id":"ck3iqj1gi000qa613bg8swpk8","tag_id":"ck3iqj1gp001ba6139rb1euq2","_id":"ck3iqj1gr001oa613f48j6wi1"},{"post_id":"ck3iqj1gj000ta613qb00ng88","tag_id":"ck3iqj1gp001ba6139rb1euq2","_id":"ck3iqj1gs001pa613jbd9kw0e"},{"post_id":"ck3iqj1gj000va6137nko1hva","tag_id":"ck3iqj1gp001ba6139rb1euq2","_id":"ck3iqj1gs001ra613eoq0gbiq"},{"post_id":"ck3iqj1gk000ya613qlfbac45","tag_id":"ck3iqj1gp001ba6139rb1euq2","_id":"ck3iqj1gs001sa613hg4gzkh2"},{"post_id":"ck3iqj1gl0010a613fjzjuwve","tag_id":"ck3iqj1gp001ba6139rb1euq2","_id":"ck3iqj1gs001ua6131bm19f9x"},{"post_id":"ck3iqj1gm0013a6135opqhqvg","tag_id":"ck3iqj1gp001ba6139rb1euq2","_id":"ck3iqj1gs001va6135gnif9u1"},{"post_id":"ck3iqj1gn0015a613jfwgdbxv","tag_id":"ck3iqj1gp001ba6139rb1euq2","_id":"ck3iqj1gt001wa613230syc50"},{"post_id":"ck3iqj1hr001xa613wwh05uzt","tag_id":"ck3iqj1gp001ba6139rb1euq2","_id":"ck3iqj1ht001za613qadaoutu"},{"post_id":"ck3iqj1hs001ya613jz4mnte1","tag_id":"ck3iqj1hu0021a613dd75w4a0","_id":"ck3iqj1hw0026a613e6nxpwmg"},{"post_id":"ck3iqj1hv0024a613f14xek54","tag_id":"ck3iqj1g2000aa6131mb4om9u","_id":"ck3iqj1hx0028a613r37ngs17"},{"post_id":"ck3iqj1ht0020a6136niv4yz7","tag_id":"ck3iqj1hu0021a613dd75w4a0","_id":"ck3iqj1hy002ba613u31vjq7l"},{"post_id":"ck3iqj1hu0022a613a5d375im","tag_id":"ck3iqj1hy002aa613rap09qsz","_id":"ck3iqj1i0002ga6139kpfqi08"},{"post_id":"ck3iqj1hv0023a6136m4mtfko","tag_id":"ck3iqj1hy002aa613rap09qsz","_id":"ck3iqj1i4002ka6135gacyt6r"},{"post_id":"ck3iqj1hw0027a613bsyo41ba","tag_id":"ck3iqj1i4002ia6138qrej06g","_id":"ck3iqj1i5002na6131x4yrps6"},{"post_id":"ck3iqj1hx0029a613py4j8lu5","tag_id":"ck3iqj1i5002ma613xk4hxy7h","_id":"ck3iqj1i6002pa613wgroqg92"},{"post_id":"ck3iqj1hy002ca613tbouzw3x","tag_id":"ck3iqj1i6002oa613j8kax5df","_id":"ck3iqj1i6002ra613kqvsb4ts"},{"post_id":"ck3iqj1hz002da613p75bdtro","tag_id":"ck3iqj1i6002qa613sccmbodg","_id":"ck3iqj1i6002ta6139ye0xo40"},{"post_id":"ck3iqj1i0002fa613mj1vp7gb","tag_id":"ck3iqj1i6002sa6136j2eu42g","_id":"ck3iqj1i7002va613vqg3ryid"},{"post_id":"ck3iqj1i0002ha613965mdjzs","tag_id":"ck3iqj1i7002ua613ni3l11hs","_id":"ck3iqj1i7002xa6132519kp9k"},{"post_id":"ck3iqj1i4002ja6137ef38w5z","tag_id":"ck3iqj1i7002wa613kdmfu24t","_id":"ck3iqj1i8002za613n0f9nmuk"},{"post_id":"ck3iqj1i5002la6131oxwomql","tag_id":"ck3iqj1i7002ya613felwuut1","_id":"ck3iqj1i80030a6133jjwmlay"},{"post_id":"ck3iqj1j80031a6135181v0c2","tag_id":"ck3iqj1gp001ba6139rb1euq2","_id":"ck3iqj1ja0032a6130g4yg7t0"},{"post_id":"ck3iqj1jn0037a613wot4c47i","tag_id":"ck3iqj1jm0035a613pkk4k3nj","_id":"ck3iqj1jo003aa613e0jklel2"},{"post_id":"ck3iqj1jl0033a613mtm7cv8b","tag_id":"ck3iqj1jm0035a613pkk4k3nj","_id":"ck3iqj1jq003ca613zs3124x7"},{"post_id":"ck3iqj1jo0038a613lbpkgyaw","tag_id":"ck3iqj1jm0035a613pkk4k3nj","_id":"ck3iqj1jr003fa61341zjvjv6"},{"post_id":"ck3iqj1jo003ba613mt2yzzus","tag_id":"ck3iqj1jm0035a613pkk4k3nj","_id":"ck3iqj1js003ha613xtk3t5uj"},{"post_id":"ck3iqj1jm0034a613k0t082gg","tag_id":"ck3iqj1jm0035a613pkk4k3nj","_id":"ck3iqj1js003ja613d8n4ma7z"},{"post_id":"ck3iqj1jq003da613szthj57d","tag_id":"ck3iqj1jm0035a613pkk4k3nj","_id":"ck3iqj1jt003la6135feuvroq"},{"post_id":"ck3iqj1jr003ga613b1lgb8e6","tag_id":"ck3iqj1jm0035a613pkk4k3nj","_id":"ck3iqj1jt003na6137u89asap"},{"post_id":"ck3iqj1jn0036a613iehbf77f","tag_id":"ck3iqj1jm0035a613pkk4k3nj","_id":"ck3iqj1ju003pa613hf35b47q"},{"post_id":"ck3iqj1js003ia6132phxqm4u","tag_id":"ck3iqj1jm0035a613pkk4k3nj","_id":"ck3iqj1jv003ra6135p2yq0v4"},{"post_id":"ck3iqj1js003ka61383r1tnjh","tag_id":"ck3iqj1jm0035a613pkk4k3nj","_id":"ck3iqj1jy003ta6132az9nikp"},{"post_id":"ck3iqj1jt003ma613ezcvqpck","tag_id":"ck3iqj1jm0035a613pkk4k3nj","_id":"ck3iqj1jz003wa613s80g4x64"},{"post_id":"ck3iqj1jt003oa613r2ia61nz","tag_id":"ck3iqj1jm0035a613pkk4k3nj","_id":"ck3iqj1k0003ya613bpgfl6xt"},{"post_id":"ck3iqj1ju003qa613rsrj46jr","tag_id":"ck3iqj1jm0035a613pkk4k3nj","_id":"ck3iqj1k00040a613h8ch0ojr"},{"post_id":"ck3iqj1jy003ua613ji3ub9ab","tag_id":"ck3iqj1jm0035a613pkk4k3nj","_id":"ck3iqj1k10043a613hxt2amms"},{"post_id":"ck3iqj1jz003xa613tqqygxin","tag_id":"ck3iqj1jm0035a613pkk4k3nj","_id":"ck3iqj1k20045a613tbn7geyp"},{"post_id":"ck3iqj1jv003sa613nnc020h1","tag_id":"ck3iqj1jz003va613lnnccglb","_id":"ck3iqj1k30047a6139chwgdef"},{"post_id":"ck3iqj1k00041a61393kdtq3n","tag_id":"ck3iqj1jm0035a613pkk4k3nj","_id":"ck3iqj1k3004aa613jh77ao0h"},{"post_id":"ck3iqj1k10044a613a3pue7ua","tag_id":"ck3iqj1jm0035a613pkk4k3nj","_id":"ck3iqj1k4004ca613rbgt8drp"},{"post_id":"ck3iqj1k0003za613e013l8qq","tag_id":"ck3iqj1k10042a6136hcyh2q0","_id":"ck3iqj1k4004ea613zht6euak"},{"post_id":"ck3iqj1k30048a613ve4ikfcv","tag_id":"ck3iqj1jm0035a613pkk4k3nj","_id":"ck3iqj1k4004fa613t9bvb2p9"},{"post_id":"ck3iqj1k3004ba6137j5k8aw3","tag_id":"ck3iqj1jm0035a613pkk4k3nj","_id":"ck3iqj1k4004ga613ejuyld71"},{"post_id":"ck3iqj1k4004da613f4roedx8","tag_id":"ck3iqj1jm0035a613pkk4k3nj","_id":"ck3iqj1k4004ha613s90pggyv"},{"post_id":"ck3iqj1k20046a613m4zggr3y","tag_id":"ck3iqj1k30049a613hf1vnv6d","_id":"ck3iqj1k5004ia613nup2ygmh"},{"post_id":"ck3iqj1k9004ja613s5l8ma7y","tag_id":"ck3iqj1ka004ka613z2y1bc1d","_id":"ck3iqj1ka004la6136fh2d07i"}],"Tag":[{"name":"factorio","_id":"ck3iqj1ar0002a613g1medo2s"},{"name":"数学","_id":"ck3iqj1g2000aa6131mb4om9u"},{"name":"PE","_id":"ck3iqj1g5000ea613wzzxllwf"},{"name":"DP","_id":"ck3iqj1gi000sa613dl7toa93"},{"name":"搜索","_id":"ck3iqj1gn0017a6136fmlf6fo"},{"name":"CF","_id":"ck3iqj1gp001ba6139rb1euq2"},{"name":"模板","_id":"ck3iqj1hu0021a613dd75w4a0"},{"name":"IC","_id":"ck3iqj1hy002aa613rap09qsz"},{"name":"live","_id":"ck3iqj1i4002ia6138qrej06g"},{"name":"树形DP","_id":"ck3iqj1i5002ma613xk4hxy7h"},{"name":"word","_id":"ck3iqj1i6002oa613j8kax5df"},{"name":"Mathematical Analysis","_id":"ck3iqj1i6002qa613sccmbodg"},{"name":"找规律","_id":"ck3iqj1i6002sa6136j2eu42g"},{"name":"状压DP","_id":"ck3iqj1i7002ua613ni3l11hs"},{"name":"面试","_id":"ck3iqj1i7002wa613kdmfu24t"},{"name":"体验优化","_id":"ck3iqj1i7002ya613felwuut1"},{"name":"日常吐槽","_id":"ck3iqj1jm0035a613pkk4k3nj"},{"name":"个人总结","_id":"ck3iqj1jz003va613lnnccglb"},{"name":"HER","_id":"ck3iqj1k10042a6136hcyh2q0"},{"name":"summary","_id":"ck3iqj1k30049a613hf1vnv6d"},{"name":"story","_id":"ck3iqj1ka004ka613z2y1bc1d"}]}}